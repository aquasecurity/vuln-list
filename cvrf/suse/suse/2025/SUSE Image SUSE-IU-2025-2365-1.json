{
  "Title": "SUSE-IU-2025:2365-1",
  "Tracking": {
    "ID": "SUSE Image SUSE-IU-2025:2365-1",
    "Status": "Interim",
    "Version": "1",
    "InitialReleaseDate": "2025-08-23T01:00:00Z",
    "CurrentReleaseDate": "2025-08-23T01:00:00Z",
    "RevisionHistory": [
      {
        "Number": "1",
        "Date": "2025-10-16T15:47:10Z",
        "Description": "current"
      }
    ]
  },
  "Notes": [
    {
      "Text": "Image update for SUSE-IU-2025:2365-1 / google/sle-micro-6-1-byos-v20250823-x86-64",
      "Title": "Topic",
      "Type": "Summary"
    },
    {
      "Text": "This image update for google/sle-micro-6-1-byos-v20250823-x86-64 contains the following changes:\nPackage cloud-netconfig:gce was updated:\n\n- Update to version 1.15  + Add support for creating IPv6 default route in GCE (bsc#1240869)\n  + Minor fix when looking up IPv6 default route\n\n- Update to version 1.14\n  + Use '-s' instead of '--no-progress-meter' for curl (bsc#1221757)\n\nPackage cloud-regionsrv-client was updated:\n\n- Update version to 10.5.1  + Fix issue with picking up configured server names from the\n    regionsrv config file. Previously only IP addresses were collected\n  + Update scriptlet for package uninstall to avoid issues in the\n    build service\n\n- Update version to 10.5.0\n  + Use region server IP addresses to determine Internet access rather\n    than a generic address. Region server IP addresses may not be blocked\n    in the network construct. (bsc#1245305)\n\n- Update version to 10.4.0\n  + Remove repositories when the package is being removed\n    We do not want to leave repositories behind refering to the plugin that\n    is being removed when the package gets removed (bsc#1240310, bsc#1240311)\n  + Turn docker into an optional setup (jsc#PCT-560)\n    Change the Requires into a Recommends and adapt the code accordingly\n  + Support flexible licenses in GCE (jsc#PCT-531)\n  + Drop the azure-addon package it is geting replaced by the\n    license-watcher package which has a generic implementation of the\n    same functionality.\n  + Handle cache inconsistencies (bsc#1218345)\n  + Properly handle the zypper root target argument (bsc#1240997)\n\nPackage containerd was updated:\n\n- Update to containerd v1.7.27. Upstream release notes:  \u0026lt;https://github.com/containerd/containerd/releases/tag/v1.7.27\u0026gt;\n  bsc#1239749 CVE-2024-40635\n- Rebase patches:\n  * 0001-BUILD-SLE12-revert-btrfs-depend-on-kernel-UAPI-inste.patch\n\n- Update to containerd v1.7.26. Upstream release notes:\n  \u0026lt;https://github.com/containerd/containerd/releases/tag/v1.7.26\u0026gt;\n- Rebase patches:\n  * 0001-BUILD-SLE12-revert-btrfs-depend-on-kernel-UAPI-inste.patch\n\n- Update to containerd v1.7.25. Upstream release notes:\n  \u0026lt;https://github.com/containerd/containerd/releases/tag/v1.7.25\u0026gt;\n  \u0026lt;https://github.com/containerd/containerd/releases/tag/v1.7.24\u0026gt;\n- Rebase patches:\n  * 0001-BUILD-SLE12-revert-btrfs-depend-on-kernel-UAPI-inste.patch\n\n- Update to containerd v1.7.23. Upstream release notes:\n  \u0026lt;https://github.com/containerd/containerd/releases/tag/v1.7.23\u0026gt;\n- Rebase patches:\n  * 0001-BUILD-SLE12-revert-btrfs-depend-on-kernel-UAPI-inste.patch\n\n- Update to containerd v1.7.22. Upstream release notes:\n  \u0026lt;https://github.com/containerd/containerd/releases/tag/v1.7.22\u0026gt;\n- Bump minimum Go version to 1.22.\n- Rebase patches:\n  * 0001-BUILD-SLE12-revert-btrfs-depend-on-kernel-UAPI-inste.patch\n\nPackage docker was updated:\n\n- Update to Go 1.24 for builds, to match upstream.\n- Update to Docker 28.3.2-ce. See upstream changelog online at\n  \u0026lt;https://docs.docker.com/engine/release-notes/28/#2832\u0026gt;\n\n- Update to Docker 28.3.1-ce. See upstream changelog online at\n  \u0026lt;https://docs.docker.com/engine/release-notes/28/#2831\u0026gt;\n\n- Update to Docker 28.3.0-ce. See upstream changelog online at\n  \u0026lt;https://docs.docker.com/engine/release-notes/28/#2830\u0026gt;\n  bsc#1246556\n- Rebase patches:\n  * 0001-SECRETS-SUSE-always-clear-our-internal-secrets.patch\n  * 0002-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  * 0003-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  * 0004-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  * 0005-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  * 0006-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n\n[ This update is a no-op, only needed to work around unfortunate automated\n  packaging script behaviour on SLES. ]\n- The following patches were removed in openSUSE in the Docker 28.1.1-ce\n  update, but the patch names were later renamed in a SLES-only update before\n  Docker 28.1.1-ce was submitted to SLES.\n  This causes the SLES build scripts to refuse the update because the patches\n  are not referenced in the changelog. There is no obvious place to put the\n  patch removals (the 28.1.1-ce update removing the patches chronologically\n  predates their renaming in SLES), so they are included here a dummy changelog\n  entry to work around the issue.\n  - 0007-CVE-2025-22868-vendor-jws-split-token-into-fixed-num.patch\n  - 0008-CVE-2025-22869-vendor-ssh-limit-the-size-of-the-inte.patch\n\n- Update to docker-buildx v0.25.0. Upstream changelog:\n  \u0026lt;https://github.com/docker/buildx/releases/tag/v0.25.0\u0026gt;\n\n- Do not try to inject SUSEConnect secrets when in Rootless Docker mode, as\n  Docker does not have permission to access the host zypper credentials in this\n  mode (and unprivileged users cannot disable the feature using\n  /etc/docker/suse-secrets-enable.) bsc#1240150\n  * 0003-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n- Rebase patches:\n  * 0001-SECRETS-SUSE-always-clear-our-internal-secrets.patch\n  * 0002-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  * 0004-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  * 0005-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  * 0006-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n\n- Always clear SUSEConnect suse_* secrets when starting containers regardless\n  of whether the daemon was built with SUSEConnect support. Not doing this\n  causes containers from SUSEConnect-enabled daemons to fail to start when\n  running with SUSEConnect-disabled (i.e. upstream) daemons.\n  This was a long-standing issue with our secrets support but until recently\n  this would've required migrating from SLE packages to openSUSE packages\n  (which wasn't supported). However, as SLE Micro 6.x and SLES 16 will move\n  away from in-built SUSEConnect support, this is now a practical issue users\n  will run into. bsc#1244035\n  + 0001-SECRETS-SUSE-always-clear-our-internal-secrets.patch\n- Rearrange patches:\n  - 0001-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  + 0002-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  - 0002-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  + 0003-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  - 0003-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  + 0004-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  - 0004-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  + 0005-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  - 0005-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n  + 0006-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n\n[NOTE: This update was only ever released in SLES and Leap.]\n- Always clear SUSEConnect suse_* secrets when starting containers regardless\n  of whether the daemon was built with SUSEConnect support. Not doing this\n  causes containers from SUSEConnect-enabled daemons to fail to start when\n  running with SUSEConnect-disabled (i.e. upstream) daemons.\n  This was a long-standing issue with our secrets support but until recently\n  this would've required migrating from SLE packages to openSUSE packages\n  (which wasn't supported). However, as SLE Micro 6.x and SLES 16 will move\n  away from in-built SUSEConnect support, this is now a practical issue users\n  will run into. bsc#1244035\n  + 0001-SECRETS-SUSE-always-clear-our-internal-secrets.patch\n- Rearrange patches:\n  - 0001-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  + 0002-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  - 0002-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  + 0003-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  - 0003-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  + 0004-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  - 0004-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  + 0005-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  - 0005-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n  + 0006-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n  - 0006-CVE-2025-22868-vendor-jws-split-token-into-fixed-num.patch\n  + 0007-CVE-2025-22868-vendor-jws-split-token-into-fixed-num.patch\n  - 0007-CVE-2025-22869-vendor-ssh-limit-the-size-of-the-inte.patch\n  + 0008-CVE-2025-22869-vendor-ssh-limit-the-size-of-the-inte.patch\n\n- Update to Docker 28.2.2-ce. See upstream changelog online at\n  \u0026lt;https://docs.docker.com/engine/release-notes/28/#2822\u0026gt;\n- Rebase patches:\n  * 0001-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  * 0002-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  * 0003-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  * 0004-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  * 0005-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n\n- Update to Docker 28.2.1-ce. See upstream changelog online at\n  \u0026lt;https://docs.docker.com/engine/release-notes/28/#2820\u0026gt; bsc#1243833\n  \u0026lt;https://github.com/moby/moby/releases/tag/v28.2.1\u0026gt;\n- Rebase patches:\n  * 0001-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  * 0002-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  * 0003-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  * 0004-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  * 0005-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n\n- Update to docker-buildx v0.24.0. Upstream changelog:\n  \u0026lt;https://github.com/docker/buildx/releases/tag/v0.24.0\u0026gt;\n\n- Update to Docker 28.1.1-ce. See upstream changelog online at\n  \u0026lt;https://docs.docker.com/engine/release-notes/28/#2811\u0026gt; bsc#1242114\n  Includes upstream fixes:\n  - CVE-2025-22872 bsc#1241830\n- Remove long-outdated build handling for deprecated and unsupported\n  devicemapper and AUFS storage drivers. AUFS was removed in v24, and\n  devicemapper was removed in v25.\n  \u0026lt;https://docs.docker.com/engine/deprecated/#aufs-storage-driver\u0026gt;\n- Rebase patches:\n  * 0001-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  * 0002-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  * 0003-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  * 0004-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  * 0005-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n- Remove upstreamed patches:\n  - 0006-CVE-2025-22868-vendor-jws-split-token-into-fixed-num.patch\n  - 0007-CVE-2025-22869-vendor-ssh-limit-the-size-of-the-inte.patch\n  - cli-0001-docs-include-required-tools-in-source-tree.patch\n\n- Update to docker-buildx v0.23.0. Upstream changelog:\n  \u0026lt;https://github.com/docker/buildx/releases/tag/v0.23.0\u0026gt;\n\n- Update to docker-buildx v0.22.0. Upstream changelog:\n  \u0026lt;https://github.com/docker/buildx/releases/tag/v0.22.0\u0026gt;\n  * Includes fixes for CVE-2025-0495. bsc#1239765\n\n- Disable transparent SUSEConnect support for SLE-16. PED-12534\n  When this patchset was first added in 2013 (and rewritten over the years),\n  there was no upstream way to easily provide SLE customers with a way to build\n  container images based on SLE using the host subscription. However, with\n  docker-buildx you can now define secrets for builds (this is not entirely\n  transparent, but we can easily document this new requirement for SLE-16).\n  Users should use\n    RUN --mount=type=secret,id=SCCcredentials zypper -n ...\n  in their Dockerfiles, and\n    docker buildx build --secret id=SCCcredentials,src=/etc/zypp/credentials.d/SCCcredentials,type=file .\n  when doing their builds.\n- Now that the only blocker for docker-buildx support was removed for SLE-16,\n  enable docker-buildx for SLE-16 as well. PED-8905\n\n- Don't use the new container-selinux conditional requires on SLE-12, as the\n  RPM version there doesn't support it. Arguably the change itself is a bit\n  suspect but we can fix that later. bsc#1237367\n\n- Add backport for golang.org/x/oauth2 CVE-2025-22868 fix. bsc#1239185\n  + 0006-CVE-2025-22868-vendor-jws-split-token-into-fixed-num.patch\n- Add backport for golang.org/x/crypto CVE-2025-22869 fix. bsc#1239322\n  + 0007-CVE-2025-22869-vendor-ssh-limit-the-size-of-the-inte.patch\n- Refresh patches:\n  * 0001-SECRETS-daemon-allow-directory-creation-in-run-secre.patch\n  * 0002-SECRETS-SUSE-implement-SUSE-container-secrets.patch\n  * 0003-BUILD-SLE12-revert-graphdriver-btrfs-use-kernel-UAPI.patch\n  * 0004-bsc1073877-apparmor-clobber-docker-default-profile-o.patch\n  * 0005-SLE12-revert-apparmor-remove-version-conditionals-fr.patch\n\n- Make container-selinux requirement conditional on selinux-policy\n  (bsc#1237367)\n\nPackage python-kiwi was updated:\n\n- Bump version: 10.2.28 â 10.2.29\n- Fix return from repart stage\n  If we return from the repart stage it's important to wait\n  for the root device to appear. This is because the device\n  setup from udev might still be held back due to a former\n  lock on the device. This means if we return fast after\n  locking for example when check_repart_possible() quickly\n  finds out that it's not possible, then udev has not yet\n  got the time to create the device nodes.\n  This Fixes #2863\n\n- Bump version: 10.2.27 â 10.2.28\n\n- Fix dracut code to be POSIX compliant\n  The redirect type \u0026quot;\u0026lt; \u0026lt;(...)\u0026quot; is not POSIX complians and leads\n  to a syntax error in dracut which calls bash as \u0026quot;sh\u0026quot; leading\n  it to be restricted to POSIX only\n\n- Extend test-image-lvm integration test\n  For testing a bit more complex resize procedure, update\n  the lvm integration test to run more resize actions\n  with required device locking\n\n- Apply proper udev locking\n  Several commands during repart, resize and other actions\n  require a proper lock to be set for udev such that other\n  events knows about the locked state of a device and do\n  not mess with it until the command for which the lock\n  persists has completed. This commit applies proper udev\n  locks to all commands that requires it. In addition\n  incorrect code that was expected to prevent such race\n  conditions got dropped from the implementation.\n  This is related to bsc#1242987\n\n- relocate GPT at the end of disk using sfdisk\n  Using sfdisk for relocation and verification makes this\n  part more consistent. We also want to move away from gdisk.\n  This is related to #2851\n\n- Do not strictly require config.partids in repart\n  The kiwi-repart implementation requires a metadata file\n  named config.partids which holds information about\n  partition ids and more stored at the time the image was\n  built. Depending on the complexity of the image and the\n  resize request some of the information can be rebuilt\n  in case the metadata file is missing. This commit adds\n  the rebuild of the minimum required information to run\n  a standard resize and therefore allows the kiwi-repart\n  dracut module to work also without config.partids to be\n  present in the system\n\n- Do not drop /config.partids\n  The partition id metadata file is used in the kiwi-repart\n  module. If a user wants to use the kiwi repart module\n  permanently, this metadata file needs to stay in the system.\n  Therefore it should not be automatically deleted by the\n  cleanup. A disk.sh hook script can be used to force the\n  deletion of the file though. This is related #2851\n\n- Fix centos/test-image-live-disk-v10\n  There is no package named iprutils\n\n- Fix centos/test-image-live-disk-v10\n  Update package names\n\n- Added centos/test-image-live-disk-v10 build test\n\n- Fix tumbleweed/test-image-gce integration test\n  Drop obsolete growpart\n\n- Followup fix to support older apt versions for bootstrap\n  There are apt versions that do not create missing state files.\n  Make sure the intermediate bootstrap state file is created in\n  any case. This Fixes #2857\n\n- Fixed integration test builds\n  Next round of fixes for integration tests. Missing\n  or wrong service activations\n\n- Fix arm/tumbleweed/test-image-rpi\n  Fix snapper setup for this integration test\n\n- Fixed test-image-live-disk\n  Added missing openssh-server package\n\n- Fixed test-image-azure\n  Add missing python-azure-agent-config-default package\n\n- Fixed debian integration test builds\n  secure shell service is named ssh and not sshd there\n\n- Fixed integration test builds\n  Second round of fixes for integration tests. Again errors\n  now became visible due to the refactoring of the script code\n\n- Fixed integration test builds\n  Errors from scripts were no longer ignored due to the last\n  cleanup of the integration test script code. This commit\n  fixes the now exposed build errors\n\n- Fix check_target_dir_on_unsupported_filesystem\n  Find the first existing path in the target path and\n  check the filesystem capabilities for this path.\n  This Fixes #2858\n\n- Cleanup integration tests config.sh script code\n  Add script code to shellcheck and fix all reported issues.\n  Get rid of suseXX and baseXX methods as much as possible.\n  Add set -ex for all script code. Do not allow any script\n  code to fail.\n\n- defaults: Add patterns for shim/grub2 on riscv64\n  A recent commit changed the way these are looked up and\n  accidentally broke image building on riscv64, with\n  KiwiBootLoaderGrubSecureBootError: Signed grub2 efi loader not found\n  now being raised for kiwi recipes that worked just fine\n  before that moment.\n  Fixes: 197572378cf4f25103934beac2ceca4fbbcfcbc0\n  Thanks: David Abdurachmanov \u0026lt;davidlt@rivosinc.com\u0026gt;\n  Thanks: Marcus SchÃ¤fer \u0026lt;marcus.schaefer@gmail.com\u0026gt;\n  Signed-off-by: Andrea Bolognani \u0026lt;abologna@redhat.com\u0026gt;\n\n- Add SLFO test-image-disk-simple integration test\n  Add simple disk test and allow for testing the new\n  transparent container idea for the aws toolchain. also\n  add SLFO builds to the helper script\n\n- Fixed check for unallocated space on disk\n  So far the check for unallocated space was only working for GPT\n  and there it was also not really stable. The check was based on\n  verifying if the backup GPT table is really at the end of the\n  disk. Depending on which tool was used to dump the image on the\n  target this \u0026quot;mistake\u0026quot; often got corrected by the tools that\n  dumped the image. In this case the check no longer worked.\n  This commit improves the check by another test which looks\n  for the real free bytes on disk compared to the current\n  partition geometry.\n\n- Move to neutral directory for calling osc\n  When calling the helper/build_status.sh script to get an\n  overview about the results of the integration tests, there\n  is a stupid new behavior from the osc tool that it assumes\n  a package name according to the name of the directory you\n  are in probably connected to the fact that the data in this\n  directory is a git checkout or some other strange assumption.\n  This commit moves to a neutral directory where none of the\n  osc internal assumptions applies and it just does what it\n  should do... showing results of the given project.\n\n- Bump version: 10.2.26 â 10.2.27\n\n- Fix regression in get_partition_node_name\n  backwards compat for lsblk before 2.38\n  if START column not supported, fall back to default sort\n\n- Add global option --setenv\n  Allow to set environment variables in the caller environment\n  via the commandline, e.g --setenv SOURCE_DATE_EPOCH=42\n\n- Seed filesystem UUIDs with SOURCE_DATE_EPOCH\n  For reproducible builds the calculation of the filesystem UUID\n  should be persistent with each rebuild of the image. To achieve\n  this the UUID is calculated using the SOURCE_DATE_EPOCH from\n  the environment plus a char-number representation of the filesystem\n  label name as random seed. In kiwi every filesystem is created\n  with a label, thus only in case there is no SOURCE_DATE_EPOCH\n  available we continue to create the UUID as random data.\n  This Fixes #2761\n\n- Add label attribute for \u0026lt;partition\u0026gt; section\n  Allow to specify a filesystem label as part of a \u0026lt;partition\u0026gt;\n  definition. So far the label was set by the name of the\n  partition. With the new label attribute, a filesystem label\n  different from the partition name can be set. This commit\n  also updates/fixes the documentation in this regard.\n\n- Improve log message in SystemIdentifier\n  Add some scope information such that we know from where\n  this log information originates from.\n\n- Add rd.kiwi.install.devicepersistency\n  Allow to specify which type of persistent device name should\n  be used to build up the list of installation disk devices.\n  For example rd.kiwi.install.devicepersistency=by-path would\n  use the by-path representations for the available disk\n  devices. The default (by-id) stays untouched. In case an\n  invalid or not present device representation is selected, kiwi\n  falls back to the non persistent unix node names.\n\n- Update test-image-disk\n  Add NetworkManager for better remote debugging capabilities\n\n- Make mbr-id deterministic\n  Log the value of SDE so it is available to review,\n  even if the build system does not tell about it.\n  Update the tests to cover the new code-path.\n  Co-Authored-By: Marcus SchÃ¤fer \u0026lt;marcus.schaefer@gmail.com\u0026gt;\n\n- Ensure dracut initrd is reproducible\n  This helps a bit with issue #2358\n  Add reproducible flag for UKI too\n  Update tests accordingly\n  Co-Authored-By: Marcus SchÃ¤fer \u0026lt;marcus.schaefer@gmail.com\u0026gt;\n\n- Bump version: 10.2.25 â 10.2.26\n\n- Add kernel parameter support for dm-verity options\n  Implement rd.kiwi.verity_options= parameter to allow runtime customization of veritysetup options\n  Closes #2837\n\n- Fix shim lookup for arm on SUSE\n  Add missing search path for shim binary on arm based SUSE\n  systems. Also update the tumbleweed/test-image-live-disk\n  integration test for arm to build with secure boot enabled\n  to actually test a secure boot enabled ISO build.\n  This Fixes #2842\n\n- Add container_import template test\n\n- Bump version: 10.2.24 â 10.2.25\n\n- Fixed get_partition_node_name\n  The function get_partition_node_name takes the disk device\n  and the partition index as arguments to match against the\n  respective device node for this partition index. The partition\n  index is the position of the partition in the partition table\n  according to their start offset. For the code to function\n  properly it is required that the list of partitions provided\n  by lsblk is ordered according to the start address of the\n  partitions in the table. The way lsblk was called did not\n  enforce this ordering. This commit enforces the order to\n  be done against the start offset and fixes bsc#1245190\n\n- Add support for container-snap as a container-image engine\n  With this commit, we can now pre-load images using container-snap directly\n  during the kiwi image build\n\n- Update test-image-MicroOS for local build\n  Fix bootstrap setup such that micro-os patterns can resolve\n\n- Fix logging of stderr data in command calls\n  The stderr data was presented as one blob without line\n  breaks. Hard to read and smells like a bug. This commit\n  fixes the output to become readable\n\n- Update test-image-MicroOS/disk.sh\n  Add a findmnt for / to check if there is a proper root\n  device reference\n\n- Fix mount system for root_is_snapper_snapshot\n  If root is a snapper snapshot we have to tell the\n  chroot a proper root mount point which can be achieved\n  by a bind mount pointing to itself. This Fixes\n  bsc#1244668\n\n- There is no shim for aarch64 on SUSE\n  Fix integration test for standard EFI (no secure boot)\n  setup on arm\n\n- Add driver configuration support for dracut initrd\n  Add driver configuration support for dracut initrd\n  Add support for specifying kernel drivers to be included or omitted\n  in the dracut initrd configuration. This extends the existing dracut\n  configuration capabilities like in the following example\n  \u0026lt;initrd action=\u0026quot;add\u0026quot;\u0026gt;\n  \u0026lt;dracut driver=\u0026quot;erofs\u0026quot;/\u0026gt;\n  \u0026lt;/initrd\u0026gt;\n\n- Fixed rootfs size calculation with spare part\n  In case a spare_part setup is combined with the root_clone feature,\n  the size calculation for the rootfs did not take the cloning into\n  account and lead to the wrong value. In addition when requesting\n  the spare part to be last and no size information was given, the\n  partition was not created at all. This commit fixes both defects\n  and Fixes #2831\n\n- Add dependency for isomd5sum for iso images and set in kiwi-settings\n  This ensures that isomd5sum is pulled into the environment for ISO image\n  builds, and the updated settings makes it so that kiwi boxes will use it.\n\n- Allow /boot to be a btrfs subvolume\n  In a btrfs based design, allow to put /boot as subvolume.\n  This required a small fix in the mount order in a way that\n  boot/efi gets mounted after the subvolume mounts are done.\n  The respective integration test has been updated to test\n  this functionality. This Fixes #2824\n\n- Use f-strings where feasible\n  This is a slightly shorter and easier to read syntax\n\n- Allow multiple EFI arch binaries/modules\n  Allow to lookup and included EFI binaries/modules for\n  multiple architectures. For testing the integration\n  test in rawhide/test-image-live-disk has been adapted\n  accordingly to install 32bit and 64bit EFI binaries.\n  This Fixes #2822\n\n- Log warning message for disabled runtime checks\n  Complete type hints for RuntimeConfig class and log\n  a warning message for each disabled runtime check\n\n- Fix static type argument int vs. str\n\n- Move it inside the context that actually uses it\n  also rename it to \u0026quot;supported\u0026quot; as that seems to closer match\n  what it resembles\n\n- Add overlayfs as supporting xattr/ACLs as well\n\n- Fix disk_type validation for zipl loader\n  If the targettype is set to GPT in combination with plain\n  zipl as loader, the code to validate the targettype against\n  the targetgeometry was not effective and zipl failed.\n  This Fixes #2821\n\n- Fixup overlay unit enablement\n\n- Fixup overlay mount dependencies\n\n- Update test-image-overlayroot integration test\n  Use proper systemd mount units to setup the custom overlay.\n  The handling of fstab entries by systemd is limited and\n  should be better handled by self managed mount units\n\n- Use proper mount units for overlay setup\n  Instead of manual mounting create a proper systemd mount\n  unit. This allows to manage mount dependencies and the order\n  of nested mounts in a clean way\n\n- Bump version: 10.2.23 â 10.2.24\n\n- Cleanup build metadata\n  Make sure the final image rootfs does not contain unneeded\n  metadata files used during build time. The respective cleanup\n  call is performed after the root sync and after all initrd/boot\n  processing has been done. This is because up to that point it's\n  still possible that the information is required. This means\n  when building images with a read-only rootfs, it might not be\n  possible that the metadata can be deleted due to a chicken\u0026amp;egg\n  situation. Furthermore the cleanup is applied to the disk\n  builder only as other builders do not really suffer from\n  this data and for the container builder the metadata can\n  also be used for the stackbuild feature when building images\n  derived from containers. This Fixes #2668\n\n- Update overlay integration test for partial write\n  Update the sdboot_uki_verity_erofs profile of the\n  test-image-overlayroot integration test with a custom\n  fstab example to overlay only parts of the system\n  for writing. This Fixes #2815\n\n- bootloader setup without overlay write partition\n  If overlayroot_write_partition=\u0026quot;false\u0026quot; is set, no system\n  indicator was stored. This cause the bootloader setup to\n  be skipped completely which is not required for e.g.\n  systemd-boot.\n\n- Make sure to create overlay directories\n  Create overlay directories even if rd.root.overlay.readonly\n  is set. This allows individual fstab overlays mounts to be\n  performed\n\n- Fixed rd.root.overlay.readonly overlay mode\n  When booting an overlayroot image with rd.root.overlay.readonly\n  set, the system will boot with only the read-only root mounted.\n  There was a bug in the dracut code which prevented this mount\n  from succeeding when the read-only rootfs is different from\n  squashfs. This commit changes the mount to be a simple bind\n  mount, independent of the origin filesystem. This works because\n  the read-only mount is performed in the dracut overlay code\n  anyway. This is related to Issue #2815\n\n- The way we build debs requires setuptools\n  debbuild doesn't work when setuptools is not there\n\n- Drop use of setuptools\n  Since we moved to poetry and no code using setuptools anymore,\n  this requirement can be dropped. The commit also updates the\n  plugin documentation which was still based on setup.py\n\n- Update live boot remote boot features\n  Like the upstream module also support the root=live:http://...\n  remote boot options. The kiwi-live dracut module is scheduled\n  to become obsolete, but it's still in use and should support\n  remote boot not only for AoE. As we got more issue reports than\n  working AoE remote boot success, this commit also updates the\n  documentation and switches to the capabilities of this PR.\n\n- Add UKI support for the grub bootloader\n  In addition to systemd_boot also add support for UKI creation\n  when grub is used. This includes the creation of a UKI image\n  via dracut in the same way as it's done for systemd_boot.\n  In addition an earlyboot grub script chainloads the UKI and\n  bypasses any written grub configuration. In Theory this should\n  also allow to use the shim loader for chainloading an UKI.\n  However I haven't done testing in this direction and I also\n  expect security issues with this approach because loading\n  any non signed data by shim is not expected to work. A new\n  profile named grub_uki_verity_erofs has been added to the\n  integration test that experiments with UKIs\n\n- Bump version: 10.2.22 â 10.2.23\n\n- Add support for \u0026lt;initrd\u0026gt; section as part of \u0026lt;type\u0026gt;\n  Extend scope and content of the \u0026lt;initrd\u0026gt; section to be allowed\n  as part of the \u0026lt;type\u0026gt; section. This allows to specify custom\n  call options and modules for the dracut tool. In particular\n  this commit implementes support for passing the uefi option\n  to dracut to enable building an UKI EFI binary as follows:\n  \u0026lt;initrd action=\u0026quot;setup\u0026quot;\u0026gt;\n  \u0026lt;dracut uefi=\u0026quot;true\u0026quot;/\u0026gt;\n  \u0026lt;/initrd\u0026gt;\n  This Fixes #2809 and Fixes #2408\n\n- Fix systemd-boot loader setup\n  To make sure only loader entries from /boot/efi/loader/entries\n  kiwi deleted eventually existing entry files from /boot/loader.\n  However that is a problem for read-only systems and should actually\n  also not performed by kiwi. This Fixes #2805\n\n- Bump version: 10.2.21 â 10.2.22\n\n- Apply security context on writable root only\n  Make sure to perform setfiles only on a writable target. In case\n  of a read-only root it is expected that the security context set\n  by kiwi in an earlier stage is complete. As there is no way to\n  modify data when root is read-only, there is also no way to change\n  the security context of any file such that we skip setfiles\n  in this case. Should there be a read-only system that has writable\n  partitions such as /boot and their content changes while the rest\n  of the root system is read-only it is in the responsibility of\n  the author of the image description to call setfiles only on\n  the affected and still writable files via a custom disk.sh\n  script. Along with the fix the respective integration test was\n  modified to enable selinux such that this change is actually\n  integration tested. This Fixes #2805\n\n- Docs: fix typo in users.rst\n\n- Docs: minor punctuation and grammar fixes\n\n- Give test-image-overlayroot enough space\n\n- Allow ext2/ext3 as valid build target\n  stat reports the value 'ext2/ext3' which is a valid target\n\n- Added check_target_dir_on_unsupported_filesystem\n  Add runtime check to make sure the selected target directory\n  for the image and/or the image rootfs lives on a filesystem\n  that provides all required features like extended permissions,\n  ACLs or xattrs.\n\n- Fix rd.kiwi.oem.luks.reencrypt_randompass workflow\n  When requesting a new random key prior reencryption, make\n  sure that this new key is referenced in the current in\n  memory initrd crypttab such that all subsequent\n  tasks e.g. luks resize have permissions to complete while\n  inside of this initrd instance\n\n- Add support for new tarball-based WSL format\n  With the new image=\u0026quot;wsl\u0026quot; type one can build a WSL container\n  image that uses the new tarball format. This Fixes #2678\n\n- Update SL-Micro build test\n  For details see: https://build.opensuse.org/request/show/1272418\n\n- Required read-only-root-fs for SL-Micro test build\n  Changes from the SL-Micro team requires adaptions to the\n  integration test description\n\n- Delete fstab.script from SL-Micro test build\n  This was only needed when /var was an extra partition, but\n  it's a volume with copy-on-write disabled for some time\n\n- Add systemd-resolved to TW integration tests\n  For some reason it's not longer part of the systemd standard\n  installation\n\n- Bump version: 10.2.20 â 10.2.21\n\n- Add dkms to test-image-embedded integration test\n\n- Fixed access issue to etc/kernel for sdboot\n  In case of an overlayroot setup we have to make sure\n  that etc/kernel is writable. This is done by a bind\n  mount of the ESP\n\n- Update test-image-overlayroot\n  Add another build using grub instead of systemd-boot and use\n  btrfs as write partition instead of xfs. Please note this test\n  requires a boot partition because grub cannot read from erofs\n  and unlike systemd-boot grub does not read all boot data from\n  the ESP.\n\n- Fixed get_volume_management\n  If a volume capable filesystem like btrfs is requested, there\n  must also be a volume definition available to report that\n  the volume management is actively used. Just the request of\n  the filesystem can also mean it's being used without volumes\n  like it could be the case for an overlayroot setup that\n  requests btrfs as write partition.\n\n- Update test-image-overlayroot\n  Move to systemd-boot as bootloader, activate secure boot\n  and drop the extra boot partition. Use XFS for the write\n  space\n\n- Allow initrd updates on read-only devices\n  Move initrd to ESP for boot loaders that reads data\n  from there\n\n- Fix ordering issue for device assignment\n  wrong assignment of a boot partition in overlayroot setup\n  without boot partition\n\n- Add kiwi-settings package for TW\n  de-blacklist erofs to allow building integration tests\n  with this filesystem\n\n- Switch to dracut-kiwi-verity\n  So far no luck with the systemd verity generator. This\n  commit adds the parsing of /etc/veritytab in the existing\n  kiwi-verity dracut module and uses it in the overlayroot\n  integration test.\n\n- Update test-image-overlayroot integration test\n  Switch to erofs for overlay testing. Additionally split the build\n  into two profiles. The first one just builds a simple overlayroot\n  oem disk based on erofs. The second one adds a veritysetup layer\n  and configures the systemd-veritysetup-generator for use in dracut.\n  This Fixes #2799\n\n- Add documentation for new attribute\n  Add details how to use the new overlayroot_readonly_filesystem attribute\n\n- Add support for selecting the overlay read-only fs\n  Add new overlayroot_readonly_filesystem attribute which allows\n  to select for either squashfs or erofs as the read-only filesystem\n  in an OEM overlay disk setup.\n\n- Fixed root setup for verity overlay disk\n  When building an image with overlayroot set to true and\n  activated verity data, the root= parameter must be\n  set to root=overlay:MAPPER=verityroot instead of the standard\n  overlay:PARTUUID mapping.\n\n- Make sure the verity record has a superblock\n\n- Drop distro specific runtime check\n  The check_efi_mode_for_disk_overlay_correctly_setup exists because\n  shim-install does not work on read-only devices. However, shim-install\n  is a SUSE only tool that runs a SUSE specific secure boot setup.\n  For other secure boot processes this runtime check is not useful.\n  As runtime checks aims to be generally useful, this one gets\n  dropped.\n\n- Fix root clone size setup\n  If the root_clone attribute is specified without providing a\n  fixed size for the system, kiwi estimates the size needed for\n  the root part and assigns the rest to the clone. This leads to\n  different partition sizes for the root clones. As per definition\n  of a clone the expectation is that the size is the same, this\n  commit changes the behavior such that the calculated size for\n  the system is applied to the origin root and all its clones.\n  As a consequence this can leave unpartitioned space free in\n  the image. This Fixes #2463\n\n- Bump version: 10.2.19 â 10.2.20\n\n- Fix reencryption master key passphrase\n  Make sure to use the correct passphrase for the master\n  key such that it can be decrypted with the same credentials\n  as before. The credentials reset is a subsequent task\n  after reencryption.\n\n- Bump version: 10.2.18 â 10.2.19\n\n- Fixed targettype setup in zipl.conf\n  The special targettype set to GPT still indicates SCSI for\n  the zipl.conf but tells kiwi to create a GPT disk layout\n\n- Fixed s390 integration test\n  targettype attribute in wrong section\n\n- Add support for GPT targettype on s390\n  Allow to build s390 images using GPT instead of the old DOS\n  partition table. zipl has added support to read from GPT.\n  This Fixes #2694\n\n- Add --no-compress option to bundler\n  Allow to skip the compression for bundle files marked\n  to become compressed. This Fixes #2736\n\n- Rawhide (F43) has removed basesystem package\n  The basesystem package was retired with rawhide (F43).\n  https://src.fedoraproject.org/rpms/filesystem/pull-request/20\n\n- rawhide install shadow-utils for usermod\n  Using `kiwi-ng` version 10.2.18 (EL9)\n  Currently with:\n  ```\n  sudo kiwi-ng system build \\\n  - -description kiwi/build-tests/x86/fedora/test-image-docker\n  - -set-repo http://ftp.fau.de/fedora/linux/development/rawhide/Everything/x86_64/os/ \\\n  - -target-dir /tmp/myimage1\n  ```\n  This fails with:\n  ```\n  [ INFO    ]: 09:46:38 | Setting up user root\n  [ INFO    ]: 09:46:38 | --\u0026gt; Modifying user: root\n  [ INFO    ]: 09:46:38 | --\u0026gt; Primary group for user root: root\n  [ ERROR   ]: 09:46:38 | KiwiCommandError: chroot: stderr: /sbin/chroot: failed to run command âusermodâ: No such file or directory\n  ```\n  Install the package `shadow-utils` to provide `usermod`.\n\n- Fixed default bls value setup\n  Fixed get_build_type_bootloader_bls behavior in case the bls\n  attribute is not set. In this case get_bls() returns a None value\n  which was returned. However in this case the attribute value\n  should not be taken into account and the method defined default\n  value for bls should be returned. This Fixes #2542\n\n- Bump version: 10.2.17 â 10.2.18\n\n- Fix setup of use_disk_password for random secret\n  When using luks=\u0026quot;random\u0026quot; in combination with use_disk_password=\u0026quot;true\u0026quot;\n  the resulting cryptomount call in grub is wrong. This commit fixes it\n\n- Drop copying GRUB2 modules to /boot with Secure Boot UEFI images\n  Copying the modules creates a situation where future updates\n  applied to a running system can cause GRUB to crash due to mixed\n  modules and GRUB EFI binaries.\n  It is not needed anyway since GRUB EFI binaries for Secure Boot have\n  all modules compiled into the binaries.\n  Fixes: https://github.com/OSInside/kiwi/issues/2790\n\n- Make sure editbootinstall runs offline\n  editbootinstall expects the system to be umounted\n\n- Make sure post sync actions are in scope\n\n- Follow up fix for overlayroot builds for EFI path\n  Only perform the boot overlay if there is an extra boot partition\n\n- Only remove entries from exclude list if present\n\n- Fix overlayroot builds for EFI path\n  make sure to keep boot/efi mountpoint directories\n  in the read-only area as they can't be created later\n\n- doc: overview: Add list of supported Linux distributions\n  These are the Linux distributions that are developed and actively\n  tested for with the latest kiwi releases.\n  This should offer greater clarity about what we're able to support\n  as an upstream project.\n\n- Fixed mount of image system for volume managers\n  The ImageSystem.mount() method implemented its own handling\n  for mounting the volumes of a volume manager based system.\n  First and foremost this duplicates code that already exists\n  in the respective VolumeManager implementation and second\n  the code behaved wrong in case of btrfs when there is no\n  default subvolume configured\n\n- Handle grub fix functions less strict\n  If called on full read-only systems, log the information\n  that the files can't be modified but do not fail. On\n  such systems the expectation is that no fix code must\n  be applied and as such the fix function can be considered\n  an optional step.\n\n- Fixed root setup for encrypted overlay disk\n  When building an image with overlayroot set to true and\n  activated luks encryption, the root= parameter must be\n  set to root=overlay:MAPPER=luks instead of the standard\n  overlay:PARTUUID mapping. This Fixes #2776\n\n- Change suffix for package manager config files\n  Use .config instead of .conf for the temporary package\n  manager config files. Reason for this change is a bug in\n  dracut which reads and executes all /*.conf files from\n  the system. This Fixes #2780\n\n- Set security context after root sync\n  On selinux enabled image builds we call setfiles initially\n  after the root tree is complete and after each script invocation\n  that might change the system. However the security context\n  also applies to mount points e.g volumes which only exists\n  at the time when the root tree gets synced to the actual image\n  binary. Thus this commit also calls setfiles on the mounted\n  root tree after data sync. This Fixes rh#2333743\n\n- Fix broken doc link\n  Rephrase chapter pointing to a documentation side at VMware.\n  They are constantly changing their documentation URLs that\n  I'm tired of fixing this. This Fixes #2782\n\n- Bump version: 10.2.16 â 10.2.17\n\n- Fix key slot selection for luks reencrypt\n  Depending on the type setup for a luks encrypted image, there\n  might be one or two key slots available. When kiwi is requested\n  to perform the reencryption process at least one key-slot and\n  the proper keyfile/passphrase must be provided. This commit\n  stores the information about the key-slot number for which\n  a decryption information exists in the initrd. In addition to\n  the code change also the corresponding integration test image\n  was updated.\n\n- Fixed test-image-gce integration test\n  python3-gcemetadata was renamed to python-gcemetadata\n\n- Fixed integration test builds for TW\n  Request dracut explicitly when needed\n\n- Add support for filtering out files from the ESP image for GRUB\n  Prior to this change, KIWI blindly synced the ESP directory into the\n  embedded ESP image. Depending on the distribution and packages included\n  for the created image, this can have undesirable side-effects.\n  For image builds that need some more fine-grained control over the\n  creation of the embedded ESP image (particularly for ISO images),\n  this change introduces the ability to inject an exclusion list\n  similar to what is used to filter out files for the root filesystem.\n  Fixes: https://github.com/OSInside/kiwi/issues/2008\n  Fixes: https://github.com/OSInside/kiwi/issues/2777\n\n- Fix bundle extension for container types\n  When building result files that use container types like oci or docker,\n  kiwi creates them as archive tarballs with an extension prefix to\n  indicate the special nature of the archive. However, the bundler\n  code does not retain the prefix, which results in the wrong file\n  extension for these archives.\n  This change adds exceptions for these types and refactors the\n  exception handling to unify it with the Vagrant image filename\n  handling, which operates similarly.\n  Fixes: https://github.com/OSInside/kiwi/issues/2628\n\n- Update LOADER_TYPE setup for grub\n  If the bootloader attribute: bls is set to true, make sure\n  the LOADER_TYPE changes to grub2-bls. This is related to\n  Issue #2773\n\n- Fix Agama PXE build\n  A bootloader setup is needed to create config.bootoptions\n  Even though a ramdisk deployment does not require a bootloader\n  setup we need it because part of the setup is the root device\n  reference which is still needed to pivot root into the\n  system\n\n- Fix firmware setting for Agama PXE image\n\n- Added obs BUILD_FLAVOR for agama\n  Required for multibuild (multiple profiles) build\n\n- Update Agama integration test\n  Split the build into two profiles ISO and PXE to differentiate\n  the build results into a small Agama for remote installations\n  and a standard Agama for iso based installations\n\n- Prevent loading unused data in oem deployment\n  In case rd.kiwi.ramdisk is used as part of a remote deployment\n  setup, it's not needed to load the system kernel and initrd\n  because it's not used as kexec is not called with the system\n  deployed into memory. For ramdisk deployments the system is\n  booted using the currently active kernel and initrd and as\n  such we can avoid loading an extra kernel and initrd for\n  booting the system via kexec.\n\n- Update Agama integration test\n  Make use of \u0026lt;oem-ramdisk-size\u0026gt; in the Agama integration test\n\n- Added \u0026lt;oem-ramdisk-size\u0026gt; element\n  So far it was only possible to specify the size of the ramdisk\n  via the kernel commandline option: ramdisk_size. In a remote\n  deployment it was therefore required to carry this size as a\n  mandatory information to the deployment server. With this commit\n  we allow to specify the size for the ramdisk to be configured as\n  part of the image configuration which makes this information\n  also available inside of the initrd. If provided the ramdisk_size\n  kernel commandline option still takes precedence over the\n  \u0026lt;oem-ramdisk-size\u0026gt; setting to avoid any behavior change and to\n  still allow dynamic overrides of the ramdisk size.\n\n- reinstall bootstrap packs in image phase for apt\n  Due to the special bootstrap process, the packages unpacked\n  during bootstrap are not properly listed in the apt index.\n  Therefore the bootstrap packages are added to the install\n  phase which causes an install of this packages again to\n  fix the apt index and provide a consistent system from\n  an apt perspective. This Fixes #2768\n\n- Fixed restore of keyfile after reencryption\n  When kiwi runs the reencryption it also restores an eventual\n  existing keyfile. However if the option rd.kiwi.oem.luks.reencrypt_randompass\n  is specified no former keyfile should be restored. The purpose\n  of reencrypt_randompass is to make sure only this in memory\n  passphrase can access the luks pool such that tooling at boot\n  time gets the opportunity to work with the luks pool for e.g.\n  setting up a TPM key or set a passphrase only known to the user.\n\n- Update dracut kiwi-lib module setup\n  Make sure all tools used in code are requested for inclusion\n\n- keep /usr/bin/sha256sum\n  dropping md5sum was okay, but now we need\n  the current tool to verify the checksum\n\n- Restrict keyfile permissions\n  For reencrypt in combination with rd.kiwi.oem.luks.reencrypt_randompass\n  make sure that the temporary random pass keyfile has 0400 root\n  owned access permissions set\n\n- package: Add kiwi-image:oci Provides to -systemdeps-containers\n  This allows the Open Build Service to correctly resolve dependencies\n  when building OCI images.\n\n- Better logging which kiwi file is read\n  Improve the log message that tells about reading the\n  kiwi config file to actually show the file path that\n  is read in. This is especially an issue if more than\n  one kiwi file is read in during the build process.\n\n- also keep the ts binary, might be needed to provide timestamped logfiles\n\n- Update documentation\n  Add information about new apk (Alpine) support\n\n- Add support for Alpine\n  Add apk repository and package manager support and provide\n  an integration test build for the Alpine distribution\n\n- Fix F824 flake check for global assignments\n\n- Use metalink repos for local test builds\n\n- schema: Allow C as a valid locale\n  It should be permitted to set the \u0026quot;C.UTF-8\u0026quot; locale for minimal images\n  that are not preloaded with locales. The \u0026quot;C.UTF-8\u0026quot; locale has been\n  supported in Linux distributions for many years.\n\n- Bump version: 10.2.15 â 10.2.16\n\n- Support sourcetype setting on the commandline\n  Allow to specifiy the sourcetype(metalink|baseurl|mirrorlist)\n  also on the commandline via --set-repo/--add-repo options. So\n  far this was only possible as part of the kiwi description file\n\n- Bump version: 10.2.14 â 10.2.15\n\n- Fix gh-pages deployment\n  poetry install was not called, thus sphinx was not present\n\n- Bump version: 10.2.13 â 10.2.14\n\n- Drop use of travis-sphinx\n  According to the documentation of peaceiris/actions-gh-pages\n  the sphinx-build output can be directly consumed to publish\n  to github pages\n\n- Allow stderr data in CommandProcess\n  Enhance poll_show_progress() method to allow polling on\n  stderr data too. The new parameter with_stderr is used\n  together with the dnf5 package manager. dnf5 has changed\n  in a way that a lot of useful information during the\n  install of packages is printed to stderr. From my perspective\n  a clear regression to former behavior but we can fix this\n  in kiwi to poll on both channels. This Fixes #2748\n\n- Support arch attribute for \u0026lt;users\u0026gt; section\n  Allow to setup users per arch. This Fixes #2737\n\n- Add Debian_12_update repo for testing with typer\n  Even though we will add support for the typer Cli with kiwi-11\n  I want our integration test images to be able to build with the\n  open PR #2751. Debian 12 is the only target in the support matrix\n  which uses a too old veryion of typer. Therefore to be able to\n  test this target I built a newer version of typer in an update\n  repo for Debian 12 and added it to the integration test\n  description\n\n- Fixed python3_sitelib for debbuild in OBS\n\n- Fixed test-image-agama\n  Service setup-systemd-proxy-env.path no longer exists\n\n- Explicitly request shadow-utils\n  Make sure shadow-utils gets installed for rawhide\n  integration tests\n\n- Drop test-image-suse-on-dnf test\n  This was just a \u0026quot;can this work\u0026quot; test but has no real\n  relevance for users since nobody would use dnf to build\n  a suse image, there is also no help when it does not\n  work. So let's drop this test build\n\n- distutils sysconfig is deprecated\n  Move to sysconfig module\n\n- Make integration tests to build outside of OBS\n  Update and extend all integration tests such that they also\n  build outside of the Open Build Service. Along with the changes\n  on the descriptions a simple build-tests.sh script was added\n  to drive the build process. The build is based on the kiwi\n  boxbuild plugin in container mode to build the tests\n  from a given build-tests directory. A new chapter to document\n  how to Build the Build Tests is also provided and referenced\n  on the github main page.\n\n- Add rd.kiwi.oem.luks.reencrypt_randompass\n  For OEM LUKS2 encrypted disk images in combination\n  with rd.kiwi.oem.luks.reencrypt. Reset insecure built time\n  passphrase with a random onetime passphrase\n\n- Bump version: 10.2.12 â 10.2.13\n\n- Lookup CHRP loader instead of using a static name\n  On ppc the CHRP loader name can vary between distributions.\n  This commit adds a search method to lookup different ELF\n  loader names. In addition an integration test image for\n  Fedora was added. This Fixes #2741\n\nPackage glib2 was updated:\n\n- Add glib2-CVE-2025-4373.patch: carefully handle gssize parameters  (bsc#1242844 CVE-2025-4373 glgo#GNOME/glib#3677).\n\n- Add glib2-CVE-2025-3360.patch:\n  Backport 8d60d7dc from upstream, Fix integer overflow when\n  parsing very long ISO8601 inputs. This will only happen with\n  invalid (or maliciously invalid) potential ISO8601 strings,\n  but `g_date_time_new_from_iso8601()` needs to be robust against\n  that.\n  (CVE-2025-3360, bsc#1240897)\n\n- Have the glib2-tools postun trigger exit normally if\n  glib2-compile-schemas can't be run. Fixes error when uninstalling\n  if libgio is uninstalled first (bsc#1231463).\n\nPackage glibc was updated:\n\n- static-setuid-ld-library-path.patch: elf: Ignore LD_LIBRARY_PATH and  debug env var for setuid for static (CVE-2025-4802, bsc#1243317)\n\n- pthread-wakeup.patch: pthreads NPTL: lost wakeup fix 2 (bsc#1234128, BZ\n  [#25847])\n\n- Mark functions in libc_nonshared.a as hidden (bsc#1239883)\n\nPackage google-dracut-config was updated:\n\nPackage gpg2 was updated:\n\n- Security fix: [bsc#1236931, bsc#1239119, CVE-2025-30258]  * gpg: Fix regression for the recent malicious subkey DoS fix.\n  * gpg: Fix another regression due to the T7547 fix.\n  * gpg: Allow the use of an ADSK subkey as ADSK subkey.\n  * Add patches:\n  - gnupg-gpg-Fix-regression-for-the-recent-malicious-subkey-D.patch\n  - gnupg-gpg-Fix-another-regression-due-to-the-T7547-fix.patch\n  - gnupg-gpg-Allow-the-use-of-an-ADSK-subkey-as-ADSK-subkey.patch\n\n- Don't install expired sks certificate [bsc#1243069]\n  * Add patch gnupg-dirmngr-Don-t-install-expired-sks-certificate.patch\n\n- Fix a verification DoS due to a malicious subkey in the keyring: [bsc#1239119]\n  * Add patch gnupg-gpg-Fix-a-verification-DoS-due-to-a-malicious-subkey-in-the-keyring.patch\n\nPackage gptfdisk was updated:\n\n- fix boot failure with qcow and vmdk images (bsc#1242987)  * 0001-Do-not-check-for-writable-device-if-we-don-t-need-it.patch\n\nPackage iputils was updated:\n\n- Security fix [bsc#1243772, CVE-2025-48964]  * Fix  integer overflow in ping statistics via zero timestamp\n  * Add iputils-CVE-2025-48964_01.patch\n  * Add iputils-CVE-2025-48964_02.patch\n  * Add iputils-CVE-2025-48964_03.patch\n  * Add iputils-CVE-2025-48964_regression.patch\n\n- Fix bsc#1243284 - ping on s390x prints invalid ttl\n  * Add iputils-invalid-ttl-s390x.patch\n  * Fix ipv4 ttl value when using SOCK_DGRAM on big endian systems\n\n- Security fix [bsc#1242300, CVE-2025-47268]\n  * integer overflow in RTT calculation can lead to undefined behavior\n  * Add iputils-CVE-2025-47268.patch\n\nPackage kernel-source:kernel-default was updated:\n\n- r8152: add vendor/device ID pair for Dell Alienware AW1022z  (git-fixes).\n- commit 9bd4e20\n\n- rtc: cmos: use spin_lock_irqsave in cmos_interrupt (git-fixes).\n- commit d8e756f\n\n- add bug reference to existing hv_storvsc change (bsc#1245455).\n- net: mana: Record doorbell physical address in PF mode (bsc#1244229).\n- commit 1c553b0\n\n- nfsd: nfsd4_spo_must_allow() must check this is a v4 compound\n  request (git-fixes).\n- commit 784f61d\n\n- mm/hugetlb: fix huge_pmd_unshare() vs GUP-fast race\n  (bsc#1245431).\n- commit dd145d5\n\n- netlink: specs: dpll: replace underscores with dashes in names\n  (git-fixes).\n- bnxt: properly flush XDP redirect lists (git-fixes).\n- e1000e: set fixed clock frequency indication for Nahum 11 and\n  Nahum 13 (git-fixes).\n- net: ice: Perform accurate aRFS flow match (git-fixes).\n- net/mlx5e: Fix leak of Geneve TLV option object (git-fixes).\n- net/mlx5: Fix return value when searching for existing flow\n  group (git-fixes).\n- net/mlx5: Fix ECVF vports unload on shutdown flow (git-fixes).\n- net/mlx5: Ensure fw pages are always allocated on same NUMA\n  (git-fixes).\n- i40e: retry VFLR handling if there is ongoing VF reset\n  (git-fixes).\n- i40e: return false from i40e_reset_vf if reset is in progress\n  (git-fixes).\n- gve: add missing NULL check for gve_alloc_pending_packet()\n  in TX DQO (git-fixes).\n- ice: fix rebuilding the Tx scheduler tree for large queue counts\n  (git-fixes).\n- ice: create new Tx scheduler nodes for new queues only\n  (git-fixes).\n- ice: fix Tx scheduler error handling in XDP callback\n  (git-fixes).\n- net/mlx4_en: Prevent potential integer overflow calculating Hz\n  (git-fixes).\n- gve: Fix RX_BUFFERS_POSTED stat to report per-queue fill_cnt\n  (git-fixes).\n- net/mlx5: Add error handling in mlx5_query_nic_vport_node_guid()\n  (git-fixes).\n- net/mlx5_core: Add error handling\n  inmlx5_query_nic_vport_qkey_viol_cntr() (git-fixes).\n- idpf: fix null-ptr-deref in idpf_features_check (CVE-2025-38053\n  bsc#1244746).\n- ice: Fix LACP bonds without SRIOV environment (git-fixes).\n- ice: fix vf-\u0026gt;num_mac count with port representors (git-fixes).\n- devlink: fix port dump cmd type (git-fixes).\n- devlink: Fix referring to hw_addr attribute during state\n  validation (git-fixes).\n- netlink: fix potential sleeping issue in mqueue_flush_file\n  (git-fixes).\n- commit 6dccf5f\n\n- mm/hugetlb: unshare page tables during VMA split, not before\n  (bsc#1245431).\n- commit bf8eb79\n\n- staging: rtl8723bs: Avoid memset() in aes_cipher() and\n  aes_decipher() (git-fixes).\n- serial: imx: Restore original RXTL for console to fix data loss\n  (git-fixes).\n- commit 652de47\n\n- drm/amdgpu: csa unmap use uninterruptible lock (CVE-2025-38011\n  bsc#1244729).\n- commit d370e7c\n\n- i2c: tiny-usb: disable zero-length read messages (git-fixes).\n- i2c: robotfuzz-osif: disable zero-length read messages\n  (git-fixes).\n- drm/i915: fix build error some more (git-fixes).\n- ALSA: hda/realtek: Fix built-in mic on ASUS VivoBook X507UAR\n  (git-fixes).\n- ALSA: usb-audio: Fix out-of-bounds read in\n  snd_usb_get_audioformat_uac3() (git-fixes).\n- ALSA: hda/realtek: enable headset mic on Latitude 5420 Rugged\n  (stable-fixes).\n- ALSA: usb-audio: Rename ALSA kcontrol PCM and PCM1 for the\n  KTMicro sound card (stable-fixes).\n- ALSA: hda/intel: Add Thinkpad E15 to PM deny list\n  (stable-fixes).\n- ata: pata_via: Force PIO for ATAPI devices on VT6415/VT6330\n  (stable-fixes).\n- drivers/rapidio/rio_cm.c: prevent possible heap overwrite\n  (stable-fixes).\n- watchdog: da9052_wdt: respect TWDMIN (stable-fixes).\n- watchdog: fix watchdog may detect false positive of softlockup\n  (stable-fixes).\n- fbcon: Make sure modelist not set on unregistered console\n  (stable-fixes).\n- bus: fsl-mc: increase MC_CMD_COMPLETION_TIMEOUT_MS value\n  (stable-fixes).\n- i2c: designware: Invoke runtime suspend on quick slave\n  re-registration (stable-fixes).\n- i2c: npcm: Add clock toggle recovery (stable-fixes).\n- pinctrl: armada-37xx: propagate error from\n  armada_37xx_pmx_set_by_name() (stable-fixes).\n- pinctrl: armada-37xx: propagate error from\n  armada_37xx_gpio_get_direction() (stable-fixes).\n- pinctrl: armada-37xx: propagate error from\n  armada_37xx_pmx_gpio_set_direction() (stable-fixes).\n- pinctrl: armada-37xx: propagate error from\n  armada_37xx_gpio_get() (stable-fixes).\n- pinctrl: mcp23s08: Reset all pins to input at probe\n  (stable-fixes).\n- software node: Correct a OOB check in\n  software_node_get_reference_args() (stable-fixes).\n- wifi: mt76: mt7996: drop fragments with multicast or broadcast\n  RA (stable-fixes).\n- wifi: mt76: mt7921: add 160 MHz AP for mt7922 device\n  (stable-fixes).\n- wifi: mt76: mt76x2: Add support for LiteOn WN4516R,WN4519R\n  (stable-fixes).\n- wifi: ath12k: fix macro definition HAL_RX_MSDU_PKT_LENGTH_GET\n  (stable-fixes).\n- wifi: ath12k: fix a possible dead lock caused by ab-\u0026gt;base_lock\n  (stable-fixes).\n- wifi: ath11k: Fix QMI memory reuse logic (stable-fixes).\n- wifi: rtw89: leave idle mode when setting WEP encryption for\n  AP mode (stable-fixes).\n- wifi: mac80211: do not offer a mesh path if forwarding is\n  disabled (stable-fixes).\n- wifi: iwlwifi: pcie: make sure to lock rxq-\u0026gt;read (stable-fixes).\n- wifi: mac80211_hwsim: Prevent tsf from setting if beacon is\n  disabled (stable-fixes).\n- wifi: ath12k: fix failed to set mhi state error during reboot\n  with hardware grouping (stable-fixes).\n- wifi: ath12k: fix link valid field initialization in the\n  monitor Rx (stable-fixes).\n- wifi: ath12k: fix incorrect CE addresses (stable-fixes).\n- wifi: ath12k: Pass correct values of center freq1 and center\n  freq2 for 160 MHz (stable-fixes).\n- wifi: mac80211: VLAN traffic in multicast path (stable-fixes).\n- wifi: iwlwifi: Add missing MODULE_FIRMWARE for Qu-c0-jf-b0\n  (stable-fixes).\n- usbnet: asix AX88772: leave the carrier control to phylink\n  (stable-fixes).\n- PM: runtime: fix denying of auto suspend in\n  pm_suspend_timer_fn() (stable-fixes).\n- ACPI: battery: negate current when discharging (stable-fixes).\n- ACPICA: Avoid sequence overread in call to strncmp()\n  (stable-fixes).\n- ACPICA: utilities: Fix overflow check in vsnprintf()\n  (stable-fixes).\n- ACPICA: fix acpi parse and parseext cache leaks (stable-fixes).\n- ACPICA: fix acpi operand cache leak in dswstate.c\n  (stable-fixes).\n- ACPI: bus: Bail out if acpi_kobj registration fails\n  (stable-fixes).\n- mmc: Add quirk to disable DDR50 tuning (stable-fixes).\n- power: supply: bq27xxx: Retrieve again when busy (stable-fixes).\n- power: supply: collie: Fix wakeup source leaks on device unbind\n  (stable-fixes).\n- ASoC: amd: yc: Add quirk for Lenovo Yoga Pro 7 14ASP9\n  (stable-fixes).\n- ASoC: tegra210_ahub: Add check to of_device_get_match_data()\n  (stable-fixes).\n- ASoC: tas2770: Power cycle amp on ISENSE/VSENSE change\n  (stable-fixes).\n- Input: sparcspkr - avoid unannotated fall-through\n  (stable-fixes).\n- commit 0dc7dde\n\n- Update\n  patches.suse/HID-uclogic-Add-NULL-check-in-uclogic_input_configur.patch\n  (git-fixes CVE-2025-38007 bsc#1244938).\n- Update\n  patches.suse/RDMA-core-Fix-KASAN-slab-use-after-free-Read-in-ib_r.patch\n  (git-fixes CVE-2025-38022 bsc#1245003).\n- Update\n  patches.suse/RDMA-rxe-Fix-slab-use-after-free-Read-in-rxe_queue_c.patch\n  (git-fixes CVE-2025-38024 bsc#1245025).\n- Update\n  patches.suse/btrfs-avoid-NULL-pointer-dereference-if-no-valid-csu.patch\n  (bsc#1243342 CVE-2025-38059 bsc#1244759).\n- Update\n  patches.suse/btrfs-avoid-NULL-pointer-dereference-if-no-valid-ext.patch\n  (bsc#1236208 CVE-2025-21658).\n- Update\n  patches.suse/can-bcm-add-locking-for-bcm_op-runtime-updates.patch\n  (git-fixes CVE-2025-38004 bsc#1244274).\n- Update\n  patches.suse/can-bcm-add-missing-rcu-read-protection-for-procfs-c.patch\n  (git-fixes CVE-2025-38003 bsc#1244275).\n- Update\n  patches.suse/crypto-algif_hash-fix-double-free-in-hash_accept.patch\n  (git-fixes CVE-2025-38079 bsc#1245217).\n- Update\n  patches.suse/crypto-lzo-Fix-compression-buffer-overrun.patch\n  (stable-fixes CVE-2025-38068 bsc#1245210).\n- Update\n  patches.suse/dmaengine-idxd-Refactor-remove-call-with-idxd_cleanu.patch\n  (git-fixes CVE-2025-38014 bsc#1244732).\n- Update\n  patches.suse/dmaengine-idxd-fix-memory-leak-in-error-handling-pat-46a5cca.patch\n  (git-fixes CVE-2025-38015 bsc#1244789).\n- Update\n  patches.suse/dmaengine-ti-k3-udma-Add-missing-locking.patch\n  (git-fixes CVE-2025-38005 bsc#1244727).\n- Update\n  patches.suse/drm-amd-display-Increase-block_sequence-array-size.patch\n  (stable-fixes CVE-2025-38080 bsc#1244738).\n- Update\n  patches.suse/ext4-goto-right-label-out_mmap_sem-in-ext4_setattr.patch\n  (bsc#1242556 CVE-2025-22120 bsc#1241592).\n- Update\n  patches.suse/firmware-arm_ffa-Set-dma_mask-for-ffa-devices.patch\n  (stable-fixes CVE-2025-38043 bsc#1245081).\n- Update patches.suse/media-cx231xx-set-device_caps-for-417.patch\n  (stable-fixes CVE-2025-38044 bsc#1245082).\n- Update\n  patches.suse/net-handshake-Fix-handshake_req_destroy_test1.patch\n  (git-fixes CVE-2024-26831 bsc#1223008).\n- Update\n  patches.suse/net-mlx5e-Disable-MACsec-offload-for-uplink-represen.patch\n  (git-fixes CVE-2025-38020 bsc#1245001).\n- Update patches.suse/net_sched-prio-fix-a-race-in-prio_tune.patch\n  (git-fixes CVE-2025-38083 bsc#1245183).\n- Update\n  patches.suse/nfs-handle-failure-of-nfs_get_lock_context-in-unlock-path.patch\n  (git-fixes CVE-2025-38023 bsc#1245004).\n- Update patches.suse/orangefs-Do-not-truncate-file-size.patch\n  (git-fixes CVE-2025-38065 bsc#1244906).\n- Update\n  patches.suse/padata-do-not-leak-refcount-in-reorder_work.patch\n  (git-fixes CVE-2025-38031 bsc#1245046).\n- Update\n  patches.suse/phy-tegra-xusb-Use-a-bitmask-for-UTMI-pad-power-stat.patch\n  (git-fixes CVE-2025-38010 bsc#1244996).\n- Update\n  patches.suse/platform-x86-dell-wmi-sysman-Avoid-buffer-overflow-i.patch\n  (git-fixes CVE-2025-38077 bsc#1244736).\n- Update\n  patches.suse/regulator-max20086-fix-invalid-memory-access.patch\n  (git-fixes CVE-2025-38027 bsc#1245042).\n- Update\n  patches.suse/s390-pci-Fix-duplicate-pci_dev_put-in-disable_slot-w.patch\n  (git-fixes bsc#1244145 CVE-2025-37946 bsc#1243506).\n- Update\n  patches.suse/s390-pci-fix-potential-double-remove-of-hotplug-slot.patch\n  (bsc#1244145 CVE-2024-56699 bsc#1235490).\n- Update\n  patches.suse/sched-numa-fix-memory-leak-due-to-the-overwritten-vma-numab_state.patch\n  (git fixes (sched/numa) CVE-2024-56613 bsc#1244176).\n- Update\n  patches.suse/serial-mctrl_gpio-split-disable_ms-into-sync-and-no_.patch\n  (git-fixes CVE-2025-38040 bsc#1245078).\n- Update\n  patches.suse/spi-rockchip-Fix-register-out-of-bounds-access.patch\n  (stable-fixes CVE-2025-38081 bsc#1244739).\n- Update\n  patches.suse/usb-typec-ucsi-displayport-Fix-NULL-pointer-access.patch\n  (git-fixes CVE-2025-37994 bsc#1243823).\n- Update\n  patches.suse/vhost-scsi-Fix-handling-of-multiple-calls-to-vhost_s.patch\n  (git-fixes CVE-2025-22083 bsc#1241414).\n- Update\n  patches.suse/wifi-cfg80211-fix-out-of-bounds-access-during-multi-.patch\n  (git-fixes CVE-2025-37973 bsc#1244172).\n- Update patches.suse/wifi-iwlwifi-fix-debug-actions-order.patch\n  (stable-fixes CVE-2025-38045 bsc#1245083).\n- Update\n  patches.suse/wifi-mac80211-Set-n_channels-after-allocating-struct.patch\n  (git-fixes CVE-2025-38013 bsc#1244731).\n- Update\n  patches.suse/wifi-mt76-disable-napi-on-driver-removal.patch\n  (git-fixes CVE-2025-38009 bsc#1244995).\n- commit fee1c31\n\n- HID: lenovo: Restrict F7/9/11 mode to compact keyboards only\n  (git-fixes).\n- HID: wacom: fix kobject reference count leak (git-fixes).\n- HID: wacom: fix memory leak on sysfs attribute creation failure\n  (git-fixes).\n- HID: wacom: fix memory leak on kobject creation failure\n  (git-fixes).\n- wifi: mac80211: fix beacon interval calculation overflow\n  (git-fixes).\n- commit 8d2d6ad\n\n- scsi: storvsc: Increase the timeouts to storvsc_timeout (git-fixes).\n- net: mana: Add support for Multi Vports on Bare metal (bsc#1244229).\n- scsi: storvsc: Don't report the host packet status as the hv status (git-fixes).\n- commit cde971c\n\n- btrfs: fix fsync of files with no hard links not persisting\n  deletion (git-fixes).\n- btrfs: remove end_no_trans label from btrfs_log_inode_parent()\n  (git-fixes).\n- btrfs: simplify condition for logging new dentries at\n  btrfs_log_inode_parent() (git-fixes).\n- commit 9370aa3\n\n- btrfs: fix wrong start offset for delalloc space release during\n  mmap write (git-fixes).\n- commit 59b0f84\n\n- btrfs: fix invalid data space release when truncating block\n  in NOCOW mode (git-fixes).\n- commit b11e8b5\n\n- btrfs: fix qgroup reservation leak on failure to allocate\n  ordered extent (git-fixes).\n- commit e13d6e0\n\n- ntp: Remove invalid cast in time offset math (git-fixes)\n- commit 92649f3\n\n- timekeeping: Fix bogus clock_was_set() invocation in (git-fixes)\n- commit 17fecee\n\n- ntp: Safeguard against time_constant overflow (git-fixes)\n- commit fb90573\n\n- ntp: Clamp maxerror and esterror to operating range (git-fixes)\n- commit 947fc29\n\n- clocksource: Fix brown-bag boolean thinko in (git-fixes)\n- commit f65bb99\n\n- clocksource: Make watchdog and suspend-timing multiplication (git-fixes)\n- commit a87f573\n\n- timekeeping: Fix cross-timestamp interpolation for non-x86 (git-fixes)\n- commit 1a57489\n\n- timekeeping: Fix cross-timestamp interpolation corner case (git-fixes)\n- commit dc250ae\n\n- timekeeping: Fix cross-timestamp interpolation on counter (git-fixes)\n- commit 4e863aa\n\n- Refresh\n  patches.kabi/kabi-restore-layout-of-struct-mem_control.patch.\n- commit 5049495\n\n- kabi: restore layout of struct cgroup_subsys (bsc#1241166).\n- commit 2014732\n\n- cgroup/cpuset: Fix race between newly created partition and\n  dying one (bsc#1241166).\n- commit 36dffbc\n\n- fgraph: Still initialize idle shadow stacks when starting\n  (git-fixes).\n- commit 1697414\n\n- tracing/eprobe: Fix to release eprobe when failed to add\n  dyn_event (git-fixes).\n- commit a8fd69f\n\n- tracing: Fix cmp_entries_dup() to respect sort() comparison\n  rules (git-fixes).\n- commit f73056c\n\n- tracing: Use atomic64_inc_return() in trace_clock_counter()\n  (git-fixes).\n- commit 23262fc\n\n- trace/trace_event_perf: remove duplicate samples on the first\n  tracepoint event (git-fixes).\n- commit b4e63e6\n\n- bpf: Force uprobe bpf program to always return 0 (git-fixes).\n- commit 90effed\n\n- uprobes: Use kzalloc to allocate xol area (git-fixes).\n- Refresh\n  patches.suse/uprobes-introduce-the-global-struct-vm_special_mapping-xol_mapping.patch.\n- commit 30d8536\n\n- bpf: abort verification if env-\u0026gt;cur_state-\u0026gt;loop_entry != NULL\n  (CVE-2025-38060 bsc#1245155).\n- Refresh patches.kabi/bpf-verifier-kABI-workarounds.patch.\n- commit c80eca0\n\n- selftests/bpf: check states pruning for deeply nested iterator\n  (CVE-2025-38060 bsc#1245155).\n- bpf: don't do clean_live_states when state-\u0026gt;loop_entry-\u0026gt;branches\n  \u0026gt; 0 (CVE-2025-38060 bsc#1245155).\n- commit f0d9333\n\n- vmxnet3: support higher link speeds from vmxnet3 v9\n  (bsc#1244626).\n- commit 0aa445e\n\n- vmxnet3: correctly report gso type for UDP tunnels\n  (bsc#1244626).\n- commit 44584be\n\n- vmxnet3: update MTU after device quiesce (bsc#1244626).\n- commit 14400a7\n\n- scsi: elx: efct: Fix memory leak in efct_hw_parse_filter()\n  (git-fixes).\n- commit 11611ac\n\n- tracing: Fix compilation warning on arm32 (bsc#1243551).\n- commit bc2f48d\n\n- tracing: Fix oob write in trace_seq_to_buffer() (CVE-2025-37923\n  bsc#1243551).\n- commit ff6a777\n\n- ata: libata-eh: Do not use ATAPI DMA for a device limited to\n  PIO mode (stable-fixes).\n- commit 07065f3\n\n- bpf: copy_verifier_state() should copy 'loop_entry' field\n  (CVE-2025-38060 bsc#1245155).\n- Refresh patches.kabi/bpf-verifier-kABI-workarounds.patch.\n- commit 815fadf\n\n- selftests/bpf: test correct loop_entry update in\n  copy_verifier_state (CVE-2025-38060 bsc#1245155).\n- commit b2e3449\n\n- tracing: Fix use-after-free in print_graph_function_flags\n  during tracer switching (CVE-2025-22035 bsc#1241544).\n- commit b6d43f4\n\n- bpf: Fix deadlock between rcu_tasks_trace and event_mutex\n  (CVE-2025-37884 bsc#1243060).\n- commit 7f690ab\n\n- truct dwc3 hide new member wakeup_pending_funcs (git-fixes).\n- commit 84579a6\n\n- kabi: restore layout of struct page_counter (jsc#PED-12551).\n- commit ef34a22\n\n- usb: dwc3: gadget: Make gadget_wakeup asynchronous (git-fixes).\n- commit 39cb14b\n\n- ucsi_debugfs_entry: hide signedness change (git-fixes).\n- commit 154816e\n\n- usb: typec: ucsi: fix Clang -Wsign-conversion warning\n  (git-fixes).\n- Refresh patches.suse/paddings-add-paddings-to-TypeC-stuff.patch.\n- commit 40f2bc3\n\n- hwmon: corsair-psu: add USB id of HX1200i Series 2023 psu\n  (git-fixes).\n- commit b5678d7\n\n- net: phy: move phy_link_change() prior to mdio_bus_phy_may_suspend() (bsc#1243538)\n- commit 416e192\n\n- hwmon: (peci/dimmtemp) Do not provide fake thresholds data\n  (git-fixes).\n- hwmon: (nct6775): Actually make use of the HWMON_NCT6775 symbol\n  namespace (git-fixes).\n- commit 53b0cf2\n\n- Update reference for patches.suse/net_sched-sch_sfq-use-a-temporary-work-area-for-vali.patch (bsc#1242504)\n- commit 8730da1\n\n- s390/tty: Fix a potential memory leak bug (git-fixes\n  bsc#1245228).\n- commit e4f3ff4\n\n- s390/pci: Fix __pcilg_mio_inuser() inline assembly (git-fixes\n  bsc#1245226).\n- commit 7cf700b\n\n- ceph: fix memory leaks in __ceph_sync_read() (git-fixes).\n- Refresh\n  patches.suse/ceph-improve-error-handling-and-short-overflow-read-.patch.\n- commit 04880f5\n\n- ceph: allocate sparse_ext map only for sparse reads (git-fixes).\n- commit e7c7fa7\n\n- ceph: Fix incorrect flush end position calculation (git-fixes).\n- commit 626f897\n\n- KVM: s390: rename PROT_NONE to PROT_TYPE_DUMMY (git-fixes\n  bsc#1245225).\n- commit 7cc3455\n\n- iommu/amd: Fix potential buffer overflow in  parse_ivrs_acpihid\n  (CVE-2025-37927 bsc#1243620).\n- commit 4916f47\n\n- nvme-fc: do not reference lsrsp after failure (bsc#1245193).\n- nvmet-fcloop: don't wait for lport cleanup (bsc#1245193).\n- nvmet-fcloop: add missing fcloop_callback_host_done\n  (bsc#1245193).\n- nvmet-fc: take tgtport refs for portentry (bsc#1245193).\n- nvmet-fc: free pending reqs on tgtport unregister (bsc#1245193).\n- nvmet-fcloop: drop response if targetport is gone (bsc#1245193).\n- nvmet-fcloop: allocate/free fcloop_lsreq directly (bsc#1245193).\n- nvmet-fcloop: prevent double port deletion (bsc#1245193).\n- nvmet-fcloop: access fcpreq only when holding reqlock\n  (bsc#1245193).\n- nvmet-fcloop: update refs on tfcp_req (bsc#1245193).\n- nvmet-fcloop: refactor fcloop_delete_local_port (bsc#1245193).\n- nvmet-fcloop: refactor fcloop_nport_alloc and track lport\n  (bsc#1245193).\n- nvmet-fcloop: remove nport from list on last user (bsc#1245193).\n- nvmet-fcloop: track ref counts for nports (bsc#1245193).\n- commit 20104c4\n\n- Remove host-memcpy-hack.h\n  This might have been usefult at some point but we have more things that\n  depend on specific library versions today.\n- commit 0396c23\n\n- Remove compress-vmlinux.sh\n  /usr/lib/rpm/brp-suse.d/brp-99-compress-vmlinux was added in\n  pesign-obs-integration during SLE12 RC. This workaround can be removed.\n- commit 19caac0\n\n- Remove try-disable-staging-driver\n  The config for linux-next is autogenerated from master config, and\n  defaults filled for missing options. This is unlikely to enable any\n  staging driver in the first place.\n- commit a6f21ed\n\n- nvme: always punt polled uring_cmd end_io work to task_work\n  (git-fixes).\n- nvme: fix implicit bool to flags conversion (git-fixes).\n- commit 36de06b\n\n- net/tls: fix kernel panic when alloc_page failed (CVE-2025-38018\n  bsc#1244999).\n- commit 1124110\n\n- espintcp: fix skb leaks (CVE-2025-38057 bsc#1244862).\n- commit dffbfd5\n\n- nvme: fix command limits status code (git-fixes).\n- nvme-pci: add NVME_QUIRK_NO_DEEPEST_PS quirk for SOLIDIGM P44\n  Pro (git-fixes).\n- nvme-pci: add quirks for WDC Blue SN550 15b7:5009 (git-fixes).\n- nvme-pci: add quirks for device 126f:1001 (git-fixes).\n- commit 990928c\n\n- sunrpc: handle SVC_GARBAGE during svc auth processing as auth\n  error (git-fixes).\n- commit afe6d07\n\n- x86/microcode/AMD: Add get_patch_level() (git-fixes).\n- commit 73bb23d\n\n- x86/microcode/AMD: Get rid of the _load_microcode_amd() forward  declaration (git-fixes).\n- commit c818693\n\n- x86/microcode/AMD: Merge early_apply_microcode() into its single  callsite (git-fixes).\n- commit 761df14\n\n- x86/microcode/AMD: Remove ugly linebreak in __verify_patch_section()  signature (git-fixes).\n- commit d6c2d35\n\n- x86/microcode: Consolidate the loader enablement checking (git-fixes).\n- commit d0fff01\n\n- scsi: iscsi: Fix incorrect error path labels for flashnode\n  operations (git-fixes).\n- md/raid1,raid10: don't handle IO error for REQ_RAHEAD and\n  REQ_NOWAIT (git-fixes).\n- commit cbd3a76\n\n- PCI/PM: Set up runtime PM even for devices without PCI PM\n  (git-fixes).\n- commit 871b129\n\n- gpio: mlxbf3: only get IRQ for device instance 0 (git-fixes).\n- ALSA: hda/realtek: Fix built-in mic on ASUS VivoBook X513EA\n  (git-fixes).\n- drm/etnaviv: Protect the scheduler's pending list with its lock\n  (git-fixes).\n- drm/nouveau/bl: increase buffer size to avoid truncate warning\n  (git-fixes).\n- drm/ssd130x: fix ssd132x_clear_screen() columns (git-fixes).\n- drm/amdgpu: switch job hw_fence to amdgpu_fence (git-fixes).\n- drm/i915/pmu: Fix build error with GCOV and AutoFDO enabled\n  (git-fixes).\n- drm/msm/dsi/dsi_phy_10nm: Fix missing initial VCO rate\n  (git-fixes).\n- drm/msm/disp: Correct porch timing for SDM845 (git-fixes).\n- commit 3df7edd\n\n- libnvdimm/labels: Fix divide error in nd_label_data_init()\n  (bsc#1244743, CVE-2025-38072).\n- commit 42a394c\n\n- kabi: restore layout of struct mem_control (jsc#PED-12551).\n- commit e948e2e\n\n- mm, memcg: cg2 memory{.swap,}.peak write handlers\n  (jsc#PED-12551).\n- mm/memcontrol: export memcg.swap watermark via sysfs for v2\n  memcg (jsc#PED-12551).\n- commit 97c4d37\n\n- can: tcan4x5x: fix power regulator retrieval during probe\n  (git-fixes).\n- commit 5798451\n\n- wifi: carl9170: do not ping device which has failed to load\n  firmware (git-fixes).\n- NFC: nci: uart: Set tty-\u0026gt;disc_data only in success path\n  (git-fixes).\n- hwmon: (occ) fix unaligned accesses (git-fixes).\n- hwmon: (occ) Rework attribute registration for stack usage\n  (git-fixes).\n- hwmon: (ftsteutates) Fix TOCTOU race in fts_read() (git-fixes).\n- wifi: ath11k: move some firmware stats related functions\n  outside of debugfs (git-fixes).\n- wifi: ath11k: don't wait when there is no vdev started\n  (git-fixes).\n- wifi: ath11k: don't use static variables in\n  ath11k_debugfs_fw_stats_process() (git-fixes).\n- wifi: ath11k: avoid burning CPU in\n  ath11k_debugfs_fw_stats_request() (git-fixes).\n- USB: serial: pl2303: add new chip PL2303GC-Q20 and PL2303GT-2AB\n  (stable-fixes).\n- usb: storage: Ignore UAS driver for SanDisk 3.2 Gen2 storage\n  device (stable-fixes).\n- usb: quirks: Add NO_LPM quirk for SanDisk Extreme 55AE\n  (stable-fixes).\n- thunderbolt: Do not double dequeue a configuration request\n  (stable-fixes).\n- rtc: Make rtc_time64_to_tm() support dates before 1970\n  (stable-fixes).\n- firmware: SDEI: Allow sdei initialization without ACPI_APEI_GHES\n  (git-fixes).\n- Bluetooth: MGMT: Remove unused mgmt_pending_find_data\n  (stable-fixes).\n- serial: sh-sci: Move runtime PM enable to sci_probe_single()\n  (stable-fixes).\n- wifi: ath11k: convert timeouts to secs_to_jiffies()\n  (stable-fixes).\n- wifi: ath11k: fix soc_dp_stats debugfs file permission\n  (stable-fixes).\n- commit d77b71f\n\n- Update patches.suse/ALSA-pcm-Fix-race-of-buffer-access-at-PCM-OSS-layer.patch\n  (CVE-2025-38078 bsc#1244737).\n- commit 9ad878b\n\n- calipso: Fix null-ptr-deref in calipso_req_{set,del}attr()\n  (git-fixes).\n- commit 1a53756\n\n- net/sched: fix use-after-free in taprio_dev_notifier\n  (git-fixes).\n- commit bd7e23e\n\n- net_sched: ets: fix a race in ets_qdisc_change() (git-fixes).\n- commit c8863c2\n\n- net_sched: tbf: fix a race in tbf_change() (git-fixes).\n- commit 8dd49d3\n\n- net_sched: red: fix a race in __red_change() (git-fixes).\n- commit eb63704\n\n- net_sched: prio: fix a race in prio_tune() (git-fixes).\n- commit 2898595\n\n- net_sched: sch_sfq: reject invalid perturb period (git-fixes).\n- commit 11af7b7\n\n- net: Fix TOCTOU issue in sk_is_readable() (git-fixes).\n- commit 9bf44e9\n\n- Update patches.suse/dlm-mask-sk_shutdown-value.patch\n  (bsc#1241278).\n- Update patches.suse/dlm-use-SHUT_RDWR-for-SCTP-shutdown.patch\n  (bsc#1241278).\n  Original bsc number was wrong. Fix it.\n- commit 37c9443\n\n- net_sched: hfsc: Address reentrant enqueue adding class to\n  eltree twice (CVE-2025-38001 bsc#1244234).\n- commit 6a31481\n\n- packaging: Add support for suse-kabi-tools\n  The current workflow to check kABI stability during the RPM build of SUSE\n  kernels consists of the following steps:\n  * The downstream script rpm/modversions unpacks the consolidated kABI\n  symtypes reference data from kabi/\u0026lt;arch\u0026gt;/symtypes-\u0026lt;flavor\u0026gt; and creates\n  individual symref files.\n  * The build performs a regular kernel make. During this operation, genksyms\n  is invoked for each source file. The tool determines type signatures of\n  all exports within the file, reports any differences compared to the\n  associated symref reference, calculates symbol CRCs from the signatures\n  and writes new type data into a symtypes file.\n  * The script rpm/modversions is invoked again, this time it packs all new\n  symtypes files to a consolidated kABI file.\n  * The downstream script rpm/kabi.pl checks symbol CRCs in the new build and\n  compares them to a reference from kabi/\u0026lt;arch\u0026gt;/symvers-\u0026lt;flavor\u0026gt;, taking\n  kabi/severities into account.\n  suse-kabi-tools is a new set of tools to improve the kABI checking process.\n  The suite includes two tools, ksymtypes and ksymvers, which replace the\n  existing scripts rpm/modversions and rpm/kabi.pl, as well as the comparison\n  functionality previously provided by genksyms. The tools have their own\n  source repository and package.\n  The tools provide faster operation and more detailed, unified output. In\n  addition, they allow the use of the new upstream tool gendwarfksyms, which\n  lacks any built-in comparison functionality.\n  The updated workflow is as follows:\n  * The build performs a regular kernel make. During this operation, genksyms\n  (gendwarfksyms) is invoked as usual, determinining signatures and CRCs of\n  all exports and writing the type data to symtypes files. However,\n  genksyms no longer performs any comparison.\n  * 'ksymtypes consolidate' packs all new symtypes files to a consolidated\n  kABI file.\n  * 'ksymvers compare' checks symbol CRCs in the new build and compares them\n  to a reference from kabi/\u0026lt;arch\u0026gt;/symvers-\u0026lt;flavor\u0026gt;, taking kabi/severities\n  into account. The tool writes its result in a human-readable form on\n  standard output and also writes a list of all changed exports (not\n  ignored by kabi/severities) to the changed-exports file.\n  * 'ksymtypes compare' takes the changed-exports file, the consolidated kABI\n  symtypes reference data from kabi/\u0026lt;arch\u0026gt;/symtypes-\u0026lt;flavor\u0026gt; and the new\n  consolidated data. Based on this data, it produces a detailed report\n  explaining why the symbols changed.\n  The patch enables the use of suse-kabi-tools via rpm/config.sh, providing\n  explicit control to each branch. To enable the support, set\n  USE_SUSE_KABI_TOOLS=Yes in the config file.\n- commit a2c6f89\n\n- rpm/kernel-source.changes.old: Drop bogus bugzilla reference (bsc#1244725)\n- commit 5432961\n\n- platform/x86: ideapad-laptop: use usleep_range() for EC polling\n  (git-fixes).\n- commit 1373cac\n\n- platform/x86: dell_rbu: Stop overwriting data buffer\n  (git-fixes).\n- platform/x86: dell_rbu: Fix list usage (git-fixes).\n- platform/x86/amd: pmc: Clear metrics table at start of cycle\n  (git-fixes).\n- platform/x86/intel-uncore-freq: Fail module load when plat_info\n  is NULL (git-fixes).\n- commit 4eb007c\n\n- Bluetooth: hci_sync: Fix UAF in hci_acl_create_conn_sync\n  (git-fixes).\n- Bluetooth: hci_sync: Fix UAF on hci_abort_conn_sync (git-fixes).\n- Bluetooth: hci_conn: Fix UAF Write in\n  __hci_acl_create_connection_sync (git-fixes).\n- commit cc24dff\n\n- Bluetooth: hci_event: Fix not using key encryption size when\n  its known (git-fixes).\n- Bluetooth: Remove pending ACL connection attempts\n  (stable-fixes).\n- Bluetooth: hci_conn: Only do ACL connections sequentially\n  (stable-fixes).\n- commit 45b89a8\n\n- kernel-source: Remove log.sh from sources\n- commit 96bd779\n\n- powerpc/eeh: Fix missing PE bridge reconfiguration during VFIO\n  EEH recovery (bsc#1215199).\n- commit 8ae69e3\n\n- ima: Suspend PCR extends and log appends when rebooting\n  (bsc#1210025 ltc#196650).\n- commit 25c308f\n\n- ACPI: CPPC: Fix NULL pointer dereference when nosmp is used\n  (git-fixes).\n- regulator: max20086: Fix refcount leak in\n  max20086_parse_regulators_dt() (git-fixes).\n- commit 5b8c5a3\n\n- scsi: dc395x: Remove leftover if statement in reselect()\n  (git-fixes).\n- commit c259874\n\n- loop: add file_start_write() and file_end_write() (git-fixes).\n- scsi: dc395x: Remove DEBUG conditional compilation (git-fixes).\n- scsi: hisi_sas: Call I_T_nexus after soft reset for SATA disk\n  (git-fixes).\n- scsi: qedf: Use designated initializer for struct\n  qed_fcoe_cb_ops (git-fixes).\n- scsi: sd_zbc: block: Respect bio vector limits for REPORT\n  ZONES buffer (git-fixes).\n- scsi: mpi3mr: Add level check to control event logging\n  (git-fixes).\n- scsi: st: Tighten the page format heuristics with MODE SELECT\n  (git-fixes).\n- scsi: st: ERASE does not change tape location (git-fixes).\n- scsi: mpt3sas: Send a diag reset if target reset fails\n  (git-fixes).\n- scsi: st: Restore some drive settings after reset (git-fixes).\n- commit 6dba36f\n\n- x86/mm/init: Handle the special case of device private\n  pages in add_pages(), to not increase max_pfn and trigger\n  dma_addressing_limited() bounce buffers (git-fixes).\n- commit d67c7bf\n\n- PCI/MSI: Size device MSI domain with the maximum number of\n  vectors (git-fixes).\n- PCI: dw-rockchip: Remove PCIE_L0S_ENTRY check from\n  rockchip_pcie_link_up() (git-fixes).\n- PCI: apple: Set only available ports up (git-fixes).\n- PCI: dwc: ep: Correct PBA offset in .set_msix() callback\n  (git-fixes).\n- PCI: endpoint: Retain fixed-size BAR size as well as aligned\n  size (git-fixes).\n- kABI: PCI: endpoint: Retain fixed-size BAR size as well as\n  aligned size (git-fixes).\n- PCI/DPC: Log Error Source ID only when valid (git-fixes).\n- serial: mctrl_gpio: split disable_ms into sync and no_sync APIs\n  (git-fixes).\n- kABI: serial: mctrl_gpio: split disable_ms into sync and\n  no_sync APIs (git-fixes).\n- x86/kaslr: Reduce KASLR entropy on most x86 systems (git-fixes).\n- PCI/DPC: Use defines with DPC reason fields (git-fixes).\n- commit 67e24e5\n\n- Bluetooth: MGMT: Fix sparse errors (git-fixes).\n- commit bcd5c33\n\n- wifi: ath11k: validate ath11k_crypto_mode on top of\n  ath11k_core_qmi_firmware_ready (git-fixes).\n- ath10k: snoc: fix unbalanced IRQ enable in crash recovery\n  (git-fixes).\n- Bluetooth: hci_sync: Fix broadcast/PA when using an existing\n  instance (git-fixes).\n- Bluetooth: Fix NULL pointer deference on eir_get_service_data\n  (git-fixes).\n- net/mdiobus: Fix potential out-of-bounds clause 45 read/write\n  access (git-fixes).\n- net/mdiobus: Fix potential out-of-bounds read/write access\n  (git-fixes).\n- Bluetooth: MGMT: Fix UAF on mgmt_remove_adv_monitor_complete\n  (git-fixes).\n- Bluetooth: hci_core: fix list_for_each_entry_rcu usage\n  (git-fixes).\n- ptp: remove ptp-\u0026gt;n_vclocks check logic in ptp_vclock_in_use()\n  (git-fixes).\n- pinctrl: st: Drop unused st_gpio_bank() function (git-fixes).\n- pinctrl: qcom: pinctrl-qcm2290: Add missing pins (git-fixes).\n- commit d9ecc09\n\n- sch_hfsc: Fix qlen accounting bug when using peek in\n  hfsc_enqueue() (CVE-2025-38000 bsc#1244277).\n- commit ffb9ab4\n\n- net_sched: sch_fifo: implement lockless __fifo_dump() (bsc#1237312)\n- commit 8196566\n\n- Revert \u0026quot;ipv6: save dontfrag in cork (git-fixes).\u0026quot;\n  This reverts commit d3fe600164867bd0529ed1049fbd53ca9fce2eaf.\n  See https://lore.kernel.org/all/aElivdUXqd1OqgMY@karahi.gladserv.com/\n  and https://bugzilla.suse.com/show_bug.cgi?id=1244313.\n- commit b9e7a4e\n\n- Revert \u0026quot;kABI: ipv6: save dontfrag in cork (git-fixes).\u0026quot;\n  This reverts commit cbc81e238815721048ac709726467c90981753c9.\n  See https://lore.kernel.org/all/aElivdUXqd1OqgMY@karahi.gladserv.com/\n  and https://bugzilla.suse.com/show_bug.cgi?id=1244313.\n- commit 38d0091\n\n- kABI fix for net: Remove RTNL dance for SIOCBRADDIF and\n  SIOCBRDELIF (CVE-2025-22111 bsc#1241572).\n- commit edfd43c\n\n- page_pool: avoid infinite loop to schedule delayed worker\n  (CVE-2025-37859 bsc#1243051).\n- commit b8f1dfd\n\n- tipc: fix memory leak in tipc_link_xmit (CVE-2025-37757 bsc#1242521)\n- commit 48e0415\n\n- struct usci: hide additional member (git-fixes).\n- commit 1b8456a\n\n- net_sched: Flush gso_skb list too during -\u0026gt;change()\n  (CVE-2025-37992 bsc#1243698).\n- netfilter: ipset: fix region locking in hash types\n  (CVE-2025-37997 bsc#1243832).\n- ipvs: fix uninit-value for saddr in do_output_route4\n  (CVE-2025-37961 bsc#1243523).\n- net: dsa: free routing table on probe failure (CVE-2025-37786\n  bsc#1242725).\n- net: tls: explicitly disallow disconnect (CVE-2025-37756\n  bsc#1242515).\n- net: Remove RTNL dance for SIOCBRADDIF and SIOCBRDELIF\n  (CVE-2025-22111 bsc#1241572).\n- vlan: enforce underlying device type (CVE-2025-21920\n  bsc#1240686).\n- xfrm: delete intermediate secpath entry in packet offload mode\n  (CVE-2025-21720 bsc#1238859).\n- xfrm: state: fix out-of-bounds read during lookup\n  (CVE-2024-57982 bsc#1237913).\n- rxrpc: Fix handling of received connection abort (CVE-2024-58053\n  bsc#1238982).\n- commit d3e755f\n\n- isolcpus: fix bug in returning number of allocated cpumask (bsc#1243774).\n  Return the correct upper limit of the allocated cpumask.\n  modified:\n  - patches.suse/lib-group_cpus-honor-housekeeping-config-when-grouping.patch\n  - patches.suse/lib-group_cpus-let-group_cpu_evenly-return-number.patch\n- commit 092bf4a\n\n- xen/arm: call uaccess_ttbr0_enable for dm_op hypercall (git-fixes)\n- commit 24d5250\n\n- arm64: dts: marvell: uDPU: define pinctrl state for alarm LEDs (git-fixes)\n- commit 28d162e\n\n- Revert \u0026quot;arm64: dts: allwinner: h6: Use RSB for AXP805 PMIC (git-fixes)\n- commit 9dd3301\n\n- xen/x86: fix initial memory balloon target (git-fixes).\n- commit 7e938b1\n\n- ALSA: usb-audio: Add a quirk for Lenovo Thinkpad Thunderbolt\n  3 dock (stable-fixes).\n- ALSA: usb-audio: Fix NULL pointer deref in\n  snd_usb_power_domain_set() (git-fixes).\n- commit 9d209cd\n\n- ALSA: usb-audio: Rename Pioneer mixer channel controls\n  (git-fixes).\n- ALSA: usb-audio: Add Pioneer DJ DJM-V10 support (stable-fixes).\n- ALSA: usb-audio: Fix duplicated name in MIDI substream names\n  (stable-fixes).\n- ALSA: usb-audio: mixer: Remove temporary string use in\n  parse_clock_source_unit (stable-fixes).\n- commit e8737ac\n\n- ALSA: usb-audio: Set MIDI1 flag appropriately for GTB MIDI\n  1.0 entry (stable-fixes).\n- ALSA: usb-audio: Accept multiple protocols in GTBs\n  (stable-fixes).\n- ALSA: usb-audio: Add name for HP Engage Go dock (stable-fixes).\n- commit 498a796\n\n- Revert \u0026quot;ALSA: usb-audio: Skip setting clock selector for single\n  connections\u0026quot; (stable-fixes).\n- Refresh\n  patches.suse/ALSA-usb-audio-Ignore-clock-selector-errors-for-sing.patch.\n- Refresh\n  patches.suse/ALSA-usb-audio-Support-multiple-control-interfaces.patch.\n- commit d0138e9\n\n- ALSA: usb-audio: Support read-only clock selector control\n  (stable-fixes).\n- Refresh\n  patches.suse/ALSA-usb-audio-Ignore-clock-selector-errors-for-sing.patch.\n- Refresh\n  patches.suse/ALSA-usb-audio-Support-multiple-control-interfaces.patch.\n- commit ee97bec\n\n- ALSA: usb-audio: Skip setting clock selector for single\n  connections (stable-fixes).\n- Refresh\n  patches.suse/ALSA-usb-audio-Ignore-clock-selector-errors-for-sing.patch.\n- Refresh\n  patches.suse/ALSA-usb-audio-Support-multiple-control-interfaces.patch.\n- commit 7326e0b\n\n- ALSA: usb-audio: Add implicit feedback quirk for RODE AI-1\n  (stable-fixes).\n- ALSA: usb-audio: enable support for Presonus Studio 1824c\n  within 1810c file (stable-fixes).\n- ALSA: usb-audio: Support multiple control interfaces\n  (stable-fixes).\n- ALSA: usb-audio: Check shutdown at endpoint_set_interface()\n  (stable-fixes).\n- commit d4a0ce3\n\n- wifi: ath11k: update channel list in worker when wait flag is\n  set (bsc#1243847).\n- commit 4cfebaa\n\n- net: lan743x: Fix memleak issue when GSO enabled (CVE-2025-37909\n  bsc#1243467).\n- vxlan: vnifilter: Fix unlocked deletion of default FDB entry\n  (CVE-2025-37921 bsc#1243480).\n- commit 788c92a\n\n- watchdog: mediatek: Add support for MT6735 TOPRGU/WDT\n  (git-fixes).\n- commit 4df631e\n\n- watchdog: it87_wdt: add PWRGD enable quirk for Qotom QCML04\n  (git-fixes).\n- commit ba2db88\n\n- module: ensure that kobject_put() is safe for module type kobjects (CVE-2025-37995 bsc#1243827)\n- commit 6979c9a\n\n- mkspec: Exclude rt flavor from kernel-syms dependencies (bsc#1244337).\n- commit 7c95ae0\n\n- x86/xen: fix balloon target initialization for PVH dom0\n  (git-fixes).\n- commit ad18aba\n\n- powerpc/vas: Return -EINVAL if the offset is non-zero in mmap()\n  (bsc#1244309 ltc#213790).\n- powerpc/powernv/memtrace: Fix out of bounds issue in memtrace\n  mmap (bsc#1244309 ltc#213790).\n- commit 2d4ad48\n\n- tracing: Verify event formats that have \u0026quot;%*p..\u0026quot; (CVE-2025-37938\n  bsc#1243544).\n- tracing: Add __print_dynamic_array() helper (bsc#1243544).\n- tracing: Add __string_len() example (bsc#1243544).\n- commit c705d1d\n\n- fbdev/efifb: Remove PM for parent device (bsc#1244261).\n- Refresh\n  patches.suse/fbdev-efifb-Register-sysfs-groups-through-driver-cor.patch.\n- commit 0c56458\n\n- RDMA/uverbs: Propagate errors from rdma_lookup_get_uobject() (git-fixes)\n- commit 7d2ce51\n\n- RDMA/core: Fix best page size finding when it can cross SG entries (git-fixes)\n- commit bfdc372\n\n- MyBS: Do not build kernel-obs-qa with limit_packages\n  Fixes: 58e3f8c34b2b (\u0026quot;bs-upload-kernel: Pass limit_packages also on multibuild\u0026quot;)\n- commit f4c6047\n\n- MyBS: Simplify qa_expr generation\n  Start with a 0 which makes the expression valid even if there are no QA\n  repositories (currently does not happen). Then separator is always\n  needed.\n- commit e4c2851\n\n- MyBS: Correctly generate build flags for non-multibuild package limit\n  (bsc# 1244241)\n  Fixes: 0999112774fc (\u0026quot;MyBS: Use buildflags to set which package to build\u0026quot;)\n- commit 27588c9\n\n- bs-upload-kernel: Pass limit_packages also on multibuild\n  Fixes: 0999112774fc (\u0026quot;MyBS: Use buildflags to set which package to build\u0026quot;)\n  Fixes: 747f601d4156 (\u0026quot;bs-upload-kernel, MyBS, Buildresults: Support multibuild (JSC-SLE#5501, boo#1211226, bsc#1218184)\u0026quot;)\n- commit 8ef486c\n\n- ftrace: Avoid potential division by zero in function_stat_show()\n  (CVE-2025-21898 bsc#1240610).\n- commit d476f96\n\n- tracing: Fix bad hist from corrupting named_triggers list\n  (CVE-2025-21899 bsc#1240577).\n- commit 60219e4\n\n- iommu: Skip PASID validation for devices without PASID capability (bsc#1244100)\n- commit 647b2f4\n\n- iommu: Validate the PASID in iommu_attach_device_pasid() (bsc#1244100)\n- commit ca42766\n\n- nfsd: Initialize ssc before laundromat_work to prevent NULL\n  dereference (git-fixes).\n- commit 153c2a2\n\n- nfsd: validate the nfsd_serv pointer before calling svc_wake_up\n  (git-fixes).\n- commit af8b93e\n\n- NFSD: Insulate nfsd4_encode_read_plus() from page boundaries\n  in the encode buffer (git-fixes).\n- commit 91b6192\n\n- jffs2: check jffs2_prealloc_raw_node_refs() result in few\n  other places (git-fixes).\n- commit 254a145\n\n- jffs2: check that raw node were preallocated before writing\n  summary (git-fixes).\n- commit 4a6701a\n\n- x86/microcode/AMD: Have __apply_microcode_amd() return bool (git-fixes).\n- commit ae818bc\n\n- x86/microcode/AMD: Make __verify_patch_size() return bool (git-fixes).\n- commit dcdd8b6\n\n- x86/microcode/AMD: Return bool from find_blobs_in_containers() (git-fixes).\n- commit 65dff7c\n\n- x86/microcode/AMD: Do not return error when microcode update is not necessary (git-fixes).\n- commit 662ffcd\n\n- x86/idle: Remove MFENCEs for X86_BUG_CLFLUSH_MONITOR in mwait_idle_with_hints() and prefer_mwait_c1_over_halt() (git-fixes).\n- commit 15bb5b3\n\n- blacklist.conf: Disable fineibt part of ITS mitigation\n- Refresh\n  patches.suse/x86-its-Enumerate-Indirect-Target-Selection-ITS-bug.patch.\n- commit cedb857\n\n- xsk: fix an integer overflow in xp_create_and_assign_umem()\n  (bsc#1240823 CVE-2025-21997).\n- commit 931fc27\n\n- dlm: use SHUT_RDWR for SCTP shutdown (bsc#1228854).\n- dlm: mask sk_shutdown value (bsc#1228854).\n- commit 730d8cf\n\n- ASoC: Intel: avs: Verify content returned by parse_int_array()\n  (git-fixes).\n- ASoC: Intel: avs: Fix deadlock when the failing IPC is SET_D0IX\n  (git-fixes).\n- ASoC: codecs: hda: Fix RPM usage count underflow (git-fixes).\n- commit 7d227ae\n\n- spi: bcm63xx-hsspi: fix shared reset (git-fixes).\n- spi: bcm63xx-spi: fix shared reset (git-fixes).\n- regulator: max14577: Add error check for max14577_read_reg()\n  (git-fixes).\n- usb: usbtmc: Fix timeout value in get_stb (git-fixes).\n- usb: usbtmc: Fix read_stb function and get_stb ioctl\n  (git-fixes).\n- usb: cdnsp: Fix issue with detecting command completion event\n  (git-fixes).\n- usb: cdnsp: Fix issue with detecting USB 3.2 speed (git-fixes).\n- usb: Flush altsetting 0 endpoints before reinitializating them\n  after reset (git-fixes).\n- usb: typec: tcpm/tcpci_maxim: Fix bounds check in process_rx()\n  (git-fixes).\n- thunderbolt: Fix a logic error in wake on connect (git-fixes).\n- usb: renesas_usbhs: Reorder clock handling and power management\n  in probe (git-fixes).\n- vt: remove VT_RESIZE and VT_RESIZEX from vt_compat_ioctl()\n  (git-fixes).\n- serial: Fix potential null-ptr-deref in mlb_usio_probe()\n  (git-fixes).\n- staging: iio: ad5933: Correct settling cycles encoding per\n  datasheet (git-fixes).\n- iio: adc: ad7124: Fix 3dB filter frequency reading (git-fixes).\n- iio: filter: admv8818: Support frequencies \u0026gt;= 2^32 (git-fixes).\n- iio: filter: admv8818: fix range calculation (git-fixes).\n- iio: filter: admv8818: fix integer overflow (git-fixes).\n- iio: filter: admv8818: fix band 4, state 15 (git-fixes).\n- VMCI: fix race between vmci_host_setup_notify and\n  vmci_ctx_unset_notify (git-fixes).\n- iio: accel: fxls8962af: Fix temperature scan element sign\n  (git-fixes).\n- iio: imu: inv_icm42600: Fix temperature calculation (git-fixes).\n- iio: adc: ad7606_spi: fix reg write value mask (git-fixes).\n- bus: mhi: host: Fix conflict between power_up and SYSERR\n  (git-fixes).\n- drm/amd/display: Add null pointer check for\n  get_first_active_display() (git-fixes).\n- drm/i915/gem: Allow EXEC_CAPTURE on recoverable contexts on DG1\n  (git-fixes).\n- commit def2214\n\n- s390/pci: Serialize device addition and removal (bsc#1244145).\n- commit f1ae730\n\n- s390/pci: Allow re-add of a reserved but not yet removed device\n  (bsc#1244145).\n- commit a73fcdb\n\n- s390/pci: Prevent self deletion in disable_slot() (bsc#1244145).\n- commit 136fe4f\n\n- s390/pci: Remove redundant bus removal and disable from\n  zpci_release_device() (bsc#1244145).\n- commit 9bbc219\n\n- s390/pci: Fix potential double remove of hotplug slot\n  (bsc#1244145).\n- commit 9714d95\n\n- s390/pci: remove hotplug slot when releasing the device\n  (bsc#1244145).\n- commit 1415bb1\n\n- s390/pci: Fix duplicate pci_dev_put() in disable_slot() when\n  PF has child VFs (git-fixes bsc#1244145).\n- commit 3430d11\n\n- s390/pci: introduce lock to synchronize state of zpci_dev's\n  (jsc#PED-10253 bsc#1244145).\n- Refresh\n  patches.suse/s390-pci-Fix-leak-of-struct-zpci_dev-when-zpci_add_device-fails.patch.\n- Refresh\n  patches.suse/s390-pci-Sort-PCI-functions-prior-to-creating-virtual-busses.patch.\n- commit 2644b79\n\n- s390/pci: rename lock member in struct zpci_dev (jsc#PED-10253\n  bsc#1244145).\n- Refresh\n  patches.suse/s390-pci-Fix-leak-of-struct-zpci_dev-when-zpci_add_device-fails.patch.\n- Refresh\n  patches.suse/s390-pci-Sort-PCI-functions-prior-to-creating-virtual-busses.patch.\n- Refresh\n  patches.suse/s390-pci-Use-topology-ID-for-multi-function-devices.patch.\n- commit 9223df0\n\n- media: mediatek: vcodec: Only free buffer VA that is not NULL\n  (CVE-2023-52888 bsc#1228557).\n- commit 0299171\n\n- net: fix udp gso skb_segment after pull from frag_list\n  (git-fixes).\n- commit 8353437\n\n- page_pool: Fix use-after-free in page_pool_recycle_in_ring\n  (git-fixes).\n- commit 69ccdcd\n\n- net: Implement missing getsockopt(SO_TIMESTAMPING_NEW)\n  (git-fixes).\n- commit d107edf\n\n- net: sched: em_text: fix possible memory leak in\n  em_text_destroy() (git-fixes).\n- commit 71395f7\n\n- neighbour: Don't let neigh_forced_gc() disable preemption for\n  long (git-fixes).\n- commit fea49bb\n\n- net: sched: cls_u32: Fix allocation size in u32_init()\n  (git-fixes).\n- commit eea3eab\n\n- Move upstreamed patches into sorted section\n- commit c9465fb\n\n- kernel-source: Do not use multiple -r in sed parameters\n  This usage is enabled in commit b18d64d\n  (sed: allow multiple (non-conflicting) -E/-r parameters, 2016-07-31)\n  only available since sed 4.3\n  Fixes: dc2037cd8f94 (\u0026quot;kernel-source: Also replace bin/env\u0026quot;\n- commit 91ad98e\n\n- Drop AMDGPU patch that may cause regressions (bsc#1243782)\n  Deleted:\n  patches.suse/drm-amd-display-more-liberal-vmin-vmax-update-for-fr.patch\n- commit c23b99f\n\n- wifi: ath12k: Avoid memory leak while enabling statistics\n  (CVE-2025-37743 bsc#1242163).\n- commit f493528\n\n- PM: sleep: Fix power.is_suspended cleanup for direct-complete\n  devices (git-fixes).\n- net: wwan: t7xx: Fix napi rx poll issue (git-fixes).\n- Bluetooth: L2CAP: Fix not responding with L2CAP_CR_LE_ENCRYPTION\n  (git-fixes).\n- Bluetooth: hci_qca: move the SoC type check to the right place\n  (git-fixes).\n- rtc: Fix offset calculation for .start_secs \u0026lt; 0 (git-fixes).\n- rtc: stm32: drop unused module alias (git-fixes).\n- rtc: s3c: drop unused module alias (git-fixes).\n- rtc: pm8xxx: drop unused module alias (git-fixes).\n- rtc: jz4740: drop unused module alias (git-fixes).\n- rtc: da9063: drop unused module alias (git-fixes).\n- rtc: cpcap: drop unused module alias (git-fixes).\n- rtc: at91rm9200: drop unused module alias (git-fixes).\n- rtc: sh: assign correct interrupts with DT (git-fixes).\n- dmaengine: ti: Add NULL check in udma_probe() (git-fixes).\n- phy: qcom-qmp-usb: Fix an NULL vs IS_ERR() bug (git-fixes).\n- commit ec23ee6\n\n- net: usb: aqc111: debug info before sanitation (git-fixes).\n- commit fc18979\n\n- openvswitch: Fix unsafe attribute parsing in output_userspace() (CVE-2025-37998 bsc#1243836)\n- commit 51afd13\n\n- octeon_ep: Fix host hang issue during device reboot (CVE-2025-37933 bsc#1243628)\n- commit 44230dd\n\n- kABI: ipv6: save dontfrag in cork (git-fixes).\n  Patch-up the kABI change with an #ifdef __GENKSYMS__. This change is\n  safe (as detailed in the patch commit message) due to the struct\n  having a 6-byte hole at the end we can use.\n- commit cbc81e2\n\n- ipv6: save dontfrag in cork (git-fixes).\n- commit d3fe600\n\n- tcp: bring back NUMA dispersion in inet_ehash_locks_alloc()\n  (git-fixes).\n- commit 756fa72\n\n- netpoll: hold rcu read lock in __netpoll_send_skb() (git-fixes).\n- commit e02eac4\n\n- ipvs: Always clear ipvs_property flag in skb_scrub_packet()\n  (git-fixes).\n- commit d943643\n\n- tcp/dccp: allow a connection when sk_max_ack_backlog is zero\n  (git-fixes).\n- commit 09561a1\n\n- xsk: always clear DMA mapping information when unmapping the\n  pool (git-fixes).\n- commit 9908bc6\n\n- net: sched: fix erspan_opt settings in cls_flower (git-fixes).\n- commit fc52734\n\n- spi: spi-imx: Add check for spi_imx_setupxfer() (CVE-2025-37801 bsc#1242850)\n- commit f3955e7\n\n- ipmr: fix tables suspicious RCU usage (git-fixes).\n- commit d029f0f\n\n- ip6mr: fix tables suspicious RCU usage (git-fixes).\n- commit 79bb134\n\n- netpoll: Use rcu_access_pointer() in __netpoll_setup\n  (git-fixes).\n- commit f180c62\n\n- netdev-genl: Hold rcu_read_lock in napi_get (git-fixes).\n- commit 895e121\n\n- net/neighbor: clear error in case strict check is not set\n  (git-fixes).\n- commit 9eb711a\n\n- ipv4: Convert ip_route_input() to dscp_t (git-fixes).\n- commit 401defe\n\n- net: sched: consistently use rcu_replace_pointer() in\n  taprio_change() (git-fixes).\n- commit a6910eb\n\n- udp: fix receiving fraglist GSO packets (git-fixes).\n- commit 5b87500\n\n- net: linkwatch: use system_unbound_wq (git-fixes).\n- commit 34d590e\n\n- net: page_pool: fix warning code (git-fixes).\n- commit 0d77245\n\n- net: give more chances to rcu in netdev_wait_allrefs_any()\n  (git-fixes).\n- commit a1b1859\n\n- tcp/dccp: complete lockless accesses to sk-\u0026gt;sk_max_ack_backlog\n  (git-fixes).\n- commit b96b4a8\n\n- tcp/dccp: bypass empty buckets in inet_twsk_purge() (git-fixes).\n- commit afdb9bb\n\n- udp: preserve the connected status if only UDP cmsg (git-fixes).\n- commit 8714e3a\n\n- udp: fix incorrect parameter validation in the\n  udp_lib_getsockopt() function (git-fixes).\n- commit 34a2994\n\n- ipmr: fix incorrect parameter validation in the\n  ip_mroute_getsockopt() function (git-fixes).\n- commit f23f4c9\n\n- ip_tunnel: annotate data-races around t-\u0026gt;parms.link (git-fixes).\n- commit 765e083\n\n- net: add rcu safety to rtnl_prop_list_size() (git-fixes).\n- commit 1e0fceb\n\n- net: ipv4: fix a memleak in ip_setup_cork (git-fixes).\n- commit 935ac41\n\n- udp: annotate data-races around up-\u0026gt;pending (git-fixes).\n- commit 72fda93\n\n- ipv4: Correct/silence an endian warning in __ip_do_redirect\n  (git-fixes).\n- commit 011b9c9\n\n- driver core: fix potential NULL pointer dereference in\n  dev_uevent() (CVE-2025-37800 bsc#1242849).\n- driver core: introduce device_set_driver() helper\n  (CVE-2025-37800 bsc#1242849).\n- commit 3aecdc2\n\n- soc: qcom: smp2p: Fix fallback to qcom,ipc parse (git-fixes).\n- commit a145886\n\n- wifi: mt76: mt7996: fix RX buffer size of MCU event (git-fixes).\n- wifi: mt76: mt7996: set EHT max ampdu length capability\n  (git-fixes).\n- wifi: mt76: mt7925: ensure all MCU commands wait for response\n  (git-fixes).\n- wifi: mt76: mt7925: refine the sniffer commnad (git-fixes).\n- wifi: mt76: mt7925: prevent multiple scan commands (git-fixes).\n- wifi: mt76: mt7915: Fix null-ptr-deref in mt7915_mmio_wed_init()\n  (git-fixes).\n- wifi: mt76: mt7925: fix host interrupt register initialization\n  (git-fixes).\n- Revert \u0026quot;wifi: mt76: mt7996: fill txd by host driver\u0026quot;\n  (stable-fixes).\n- wifi: ath9k_htc: Abort software beacon handling if disabled\n  (git-fixes).\n- wifi: ath12k: fix ring-buffer corruption (git-fixes).\n- wifi: ath11k: fix rx completion meta data corruption\n  (git-fixes).\n- wifi: ath11k: fix ring-buffer corruption (git-fixes).\n- wifi: p54: prevent buffer-overflow in p54_rx_eeprom_readback()\n  (git-fixes).\n- wifi: rtw88: fix the 'para' buffer size to avoid reading out\n  of bounds (git-fixes).\n- wifi: rtw88: usb: Reduce control message timeout to 500 ms\n  (git-fixes).\n- wifi: rtw89: pci: enlarge retry times of RX tag to 1000\n  (git-fixes).\n- wifi: rtlwifi: disable ASPM for RTL8723BE with subsystem ID\n  11ad:1723 (git-fixes).\n- wifi: rtw88: do not ignore hardware read error during DPK\n  (git-fixes).\n- wifi: rtw88: sdio: call rtw_sdio_indicate_tx_status\n  unconditionally (git-fixes).\n- wifi: rtw88: sdio: map mgmt frames to queue TX_DESC_QSEL_MGMT\n  (git-fixes).\n- wifi: iwlfiwi: mvm: Fix the rate reporting (git-fixes).\n- wifi: ath12k: fix node corruption in ar-\u0026gt;arvifs list\n  (git-fixes).\n- wifi: ath12k: Fix the QoS control field offset to build QoS\n  header (git-fixes).\n- commit 3f5d0e4\n\n- wifi: mt76: only mark tx-status-failed frames as ACKed on\n  mt76x0/2 (stable-fixes).\n- commit 0de0b80\n\n- wifi: ath12k: Add MSDU length validation for TKIP MIC error\n  (git-fixes).\n- wifi: ath12k: fix invalid access to memory (git-fixes).\n- wifi: ath12k: Fix WMI tag for EHT rate in peer assoc\n  (git-fixes).\n- wifi: ath12k: fix cleanup path after mhi init (git-fixes).\n- wifi: ath12k: Fix invalid memory access while forming 802.11\n  header (git-fixes).\n- wifi: ath12k: Fix memory leak during vdev_id mismatch\n  (git-fixes).\n- wifi: ath11k: fix node corruption in ar-\u0026gt;arvifs list\n  (git-fixes).\n- watchdog: exar: Shorten identity name to fit correctly\n  (git-fixes).\n- wifi: iwlwifi: add support for Killer on MTL (stable-fixes).\n- wifi: mt76: mt7996: revise TXS size (stable-fixes).\n- wifi: rtw88: Fix rtw_init_vht_cap() for RTL8814AU\n  (stable-fixes).\n- wifi: rtw88: Fix rtw_init_ht_cap() for RTL8814AU (stable-fixes).\n- wifi: rtw88: Fix rtw_desc_to_mcsrate() to handle MCS16-31\n  (stable-fixes).\n- wifi: rtw89: fw: propagate error code from rtw89_h2c_tx()\n  (stable-fixes).\n- wifi: iwlwifi: fix debug actions order (stable-fixes).\n- wifi: ath12k: Report proper tx completion status to mac80211\n  (stable-fixes).\n- wifi: ath12k: Improve BSS discovery with hidden SSID in 6 GHz\n  band (stable-fixes).\n- wifi: ath12k: Avoid napi_sync() before napi_enable()\n  (stable-fixes).\n- wifi: ath12k: fix ath12k_hal_tx_cmd_ext_desc_setup() info1\n  override (stable-fixes).\n- wifi: ath9k: return by of_get_mac_address (stable-fixes).\n- wifi: ath12k: Fix end offset bit definition in monitor ring\n  descriptor (stable-fixes).\n- wifi: rtw88: Fix download_firmware_validate() for RTL8814AU\n  (stable-fixes).\n- wifi: rtw88: Fix __rtw_download_firmware() for RTL8814AU\n  (stable-fixes).\n- wifi: rtw88: Don't use static local variable in\n  rtw8822b_set_tx_power_index_by_rate (stable-fixes).\n- wifi: rtw89: add wiphy_lock() to work that isn't held\n  wiphy_lock() yet (stable-fixes).\n- wifi: mac80211: don't unconditionally call drv_mgd_complete_tx()\n  (stable-fixes).\n- wifi: mac80211: remove misplaced drv_mgd_complete_tx() call\n  (stable-fixes).\n- commit 9963350\n\n- vgacon: Add check for vc_origin address range in vgacon_scroll()\n  (git-fixes).\n- soc: aspeed: Add NULL check in aspeed_lpc_enable_snoop()\n  (git-fixes).\n- soc: aspeed: lpc: Fix impossible judgment condition (git-fixes).\n- spi: sh-msiof: Fix maximum DMA transfer size (git-fixes).\n- spi: tegra210-quad: modify chip select (CS) deactivation\n  (git-fixes).\n- spi: tegra210-quad: remove redundant error handling code\n  (git-fixes).\n- spi: tegra210-quad: Fix X1_X2_X4 encoding and support x4\n  transfers (git-fixes).\n- spi: spi-sun4i: fix early activation (stable-fixes).\n- spi-rockchip: Fix register out of bounds access (stable-fixes).\n- thunderbolt: Do not add non-active NVM if NVM upgrade is\n  disabled for retimer (stable-fixes).\n- usb: xhci: Don't change the status of stalled TDs on failed\n  Stop EP (stable-fixes).\n- serial: sh-sci: Save and restore more registers (git-fixes).\n- serial: sh-sci: Update the suspend/resume support\n  (stable-fixes).\n- thermal/drivers/qoriq: Power down TMU on system suspend\n  (stable-fixes).\n- soundwire: amd: change the soundwire wake enable/disable\n  sequence (stable-fixes).\n- soc: ti: k3-socinfo: Do not use syscon helper to build regmap\n  (stable-fixes).\n- spi: zynqmp-gqspi: Always acknowledge interrupts (stable-fixes).\n- commit 38d0a8f\n\n- PM: sleep: Print PM debug messages during hibernation\n  (git-fixes).\n- commit 96179c7\n\n- PCI: dw-rockchip: Fix PHY function call sequence in\n  rockchip_pcie_phy_deinit() (git-fixes).\n- PCI: cadence: Fix runtime atomic count underflow (git-fixes).\n- PCI: apple: Use gpiod_set_value_cansleep in probe flow\n  (git-fixes).\n- PCI: cadence-ep: Correct PBA offset in .set_msix() callback\n  (git-fixes).\n- PCI: Fix lock symmetry in pci_slot_unlock() (git-fixes).\n- PCI: Explicitly put devices into D0 when initializing\n  (git-fixes).\n- PCI/DPC: Initialize aer_err_info before using it (git-fixes).\n- selftests/mm: restore default nr_hugepages value during cleanup\n  in hugetlb_reparenting_test.sh (git-fixes).\n- pinctrl: armada-37xx: set GPIO output value before setting\n  direction (git-fixes).\n- pinctrl: armada-37xx: use correct OUTPUT_VAL register for\n  GPIOs \u0026gt; 31 (git-fixes).\n- pinctrl: at91: Fix possible out-of-boundary access (git-fixes).\n- selftests/bpf: Fix bpf_nf selftest failure (git-fixes).\n- selftests/seccomp: fix syscall_restart test for arm compat\n  (git-fixes).\n- PM: wakeup: Delete space in the end of string shown by\n  pm_show_wakelocks() (git-fixes).\n- power: reset: at91-reset: Optimize at91_reset() (git-fixes).\n- regulator: max20086: Change enable gpio to optional (git-fixes).\n- regulator: max20086: Fix MAX200086 chip id (git-fixes).\n- platform/x86: thinkpad_acpi: Ignore battery threshold change\n  event notification (stable-fixes).\n- platform/x86: fujitsu-laptop: Support Lifebook S2110 hotkeys\n  (stable-fixes).\n- phy: renesas: rcar-gen3-usb2: Assert PLL reset on PHY power off\n  (git-fixes).\n- phy: renesas: rcar-gen3-usb2: Lock around hardware registers\n  and driver data (git-fixes).\n- phy: renesas: rcar-gen3-usb2: Move IRQ request in probe\n  (stable-fixes).\n- platform/x86: thinkpad_acpi: Support also NEC Lavie X1475JAS\n  (stable-fixes).\n- pinctrl: meson: define the pull up/down resistor value as 60\n  kOhm (stable-fixes).\n- rtc: rv3032: fix EERD location (stable-fixes).\n- rtc: ds1307: stop disabling alarms on probe (stable-fixes).\n- phy: core: don't require set_mode() callback for phy_get_mode()\n  to work (stable-fixes).\n- pinctrl: tegra: Fix off by one in tegra_pinctrl_get_group()\n  (git-fixes).\n- pinctrl-tegra: Restore SFSEL bit when freeing pins\n  (stable-fixes).\n- pinctrl: bcm281xx: Use \u0026quot;unsigned int\u0026quot; instead of bare \u0026quot;unsigned\u0026quot;\n  (stable-fixes).\n- pinctrl: devicetree: do not goto err when probing hogs in\n  pinctrl_dt_to_map (stable-fixes).\n- PCI: dwc: ep: Ensure proper iteration over outbound map windows\n  (stable-fixes).\n- PCI: brcmstb: Expand inbound window size up to 64GB\n  (stable-fixes).\n- PCI: brcmstb: Add a softdep to MIP MSI-X driver (stable-fixes).\n- PCI: Fix old_size lower bound in calculate_iosize() too\n  (stable-fixes).\n- selftests/net: have `gro.sh -t` return a correct exit code\n  (stable-fixes).\n- regulator: ad5398: Add device tree support (stable-fixes).\n- PCI: vmd: Disable MSI remapping bypass under Xen (stable-fixes).\n- phy: renesas: rcar-gen3-usb2: Add support to initialize the bus\n  (stable-fixes).\n- commit 32a9142\n\n- tcp_metrics: optimize tcp_metrics_flush_all() (git-fixes).\n- commit 2a9c7bb\n\n- mtd: rawnand: sunxi: Add randomizer configuration in\n  sunxi_nfc_hw_ecc_write_chunk (git-fixes).\n- mtd: nand: sunxi: Add randomizer configuration before randomizer\n  enable (git-fixes).\n- mtd: nand: ecc-mxic: Fix use of uninitialized variable ret\n  (git-fixes).\n- net: phy: mscc: Stop clearing the the UDPv4 checksum for L2\n  frames (git-fixes).\n- net: phy: mscc: Fix memory leak when using one step timestamping\n  (git-fixes).\n- net: phy: clear phydev-\u0026gt;devlink when the link is deleted\n  (git-fixes).\n- net: phy: fix up const issues in to_mdio_device() and\n  to_phy_device() (git-fixes).\n- net: usb: aqc111: fix error handling of usbnet read calls\n  (git-fixes).\n- mmc: host: Wait for Vdd to settle on card power off\n  (stable-fixes).\n- mmc: dw_mmc: add exynos7870 DW MMC support (stable-fixes).\n- commit eedda90\n\n- mfd: stmpe-spi: Correct the name used in MODULE_DEVICE_TABLE\n  (git-fixes).\n- mfd: exynos-lpass: Avoid calling exynos_lpass_disable() twice\n  in exynos_lpass_remove() (git-fixes).\n- media: uvcvideo: Fix deferred probing error (git-fixes).\n- media: uvcvideo: Return the number of processed controls\n  (git-fixes).\n- media: omap3isp: use sgtable-based scatterlist wrappers\n  (git-fixes).\n- media: videobuf2: use sgtable-based scatterlist wrappers\n  (git-fixes).\n- media: v4l2-dev: fix error handling in __video_register_device()\n  (git-fixes).\n- media: ov8856: suppress probe deferral errors (git-fixes).\n- media: ov5675: suppress probe deferral errors (git-fixes).\n- media: nxp: imx8-isi: better handle the m2m usage_count\n  (git-fixes).\n- media: gspca: Add error handling for stv06xx_read_sensor()\n  (git-fixes).\n- media: davinci: vpif: Fix memory leak in probe error path\n  (git-fixes).\n- media: vivid: Change the siize of the composing (git-fixes).\n- media: cxusb: no longer judge rbuf when the write fails\n  (git-fixes).\n- media: vidtv: Terminating the subsequent process of\n  initialization failure (git-fixes).\n- media: ccs-pll: Correct the upper limit of maximum\n  op_pre_pll_clk_div (git-fixes).\n- media: ccs-pll: Check for too high VT PLL multiplier in dual\n  PLL case (git-fixes).\n- media: ccs-pll: Start VT pre-PLL multiplier search from correct\n  value (git-fixes).\n- media: ccs-pll: Start OP pre-PLL multiplier search from correct\n  value (git-fixes).\n- media: imx-jpeg: Cleanup after an allocation error (git-fixes).\n- media: imx-jpeg: Reset slot data pointers when freed\n  (git-fixes).\n- media: imx-jpeg: Move mxc_jpeg_free_slot_data() ahead\n  (git-fixes).\n- media: imx-jpeg: Drop the first error frames (git-fixes).\n- media: venus: Fix probe error handling (git-fixes).\n- media: rkvdec: Fix frame size enumeration (git-fixes).\n- mfd: tps65219: Remove TPS65219_REG_TI_DEV_ID check\n  (stable-fixes).\n- media: c8sectpfe: Call of_node_put(i2c_bus) only once in\n  c8sectpfe_probe() (stable-fixes).\n- media: cx231xx: set device_caps for 417 (stable-fixes).\n- media: uvcvideo: Add sanity check to uvc_ioctl_xu_ctrl_map\n  (stable-fixes).\n- media: uvcvideo: Handle uvc menu translation inside\n  uvc_get_le_value (stable-fixes).\n- media: adv7180: Disable test-pattern control on adv7180\n  (stable-fixes).\n- media: tc358746: improve calculation of the D-PHY timing\n  registers (stable-fixes).\n- media: test-drivers: vivid: don't call schedule in loop\n  (stable-fixes).\n- media: i2c: imx219: Correct the minimum vblanking value\n  (stable-fixes).\n- media: v4l: Memset argument to 0 before calling get_mbus_config\n  pad op (stable-fixes).\n- media: qcom: camss: csid: Only add TPG v4l2 ctrl if TPG hardware\n  is available (stable-fixes).\n- mmc: sdhci: Disable SD card clock before changing parameters\n  (stable-fixes).\n- commit de6c9a2\n\n- Input: gpio-keys - fix possible concurrent access in\n  gpio_keys_irq_timer() (git-fixes).\n- commit e29f865\n\n- hwmon: (asus-ec-sensors) check sensor index in read_string()\n  (git-fixes).\n- Input: ims-pcu - check record size in ims_pcu_flash_firmware()\n  (git-fixes).\n- firmware: psci: Fix refcount leak in psci_dt_init (git-fixes).\n- gpiolib: Revert \u0026quot;Don't WARN on gpiod_put() for optional GPIO\u0026quot;\n  (stable-fixes).\n- Input: xpad - add more controllers (stable-fixes).\n- gpio: pca953x: fix IRQ storm on system wake up (git-fixes).\n- HID: quirks: Add ADATA XPG alpha wireless mouse support\n  (stable-fixes).\n- intel_th: avoid using deprecated page-\u0026gt;mapping, index fields\n  (stable-fixes).\n- ima: process_measurement() needlessly takes inode_lock()\n  on MAY_READ (stable-fixes).\n- i3c: master: svc: Fix implicit fallthrough in\n  svc_i3c_master_ibi_work() (git-fixes).\n- i3c: master: svc: Fix missing STOP for master request\n  (stable-fixes).\n- i3c: master: svc: Flush FIFO before sending Dynamic Address\n  Assignment(DAA) (stable-fixes).\n- i2c: qup: Vote for interconnect bandwidth to DRAM\n  (stable-fixes).\n- i2c: pxa: fix call balance of i2c-\u0026gt;clk handling routines\n  (stable-fixes).\n- fpga: altera-cvp: Increase credit timeout (stable-fixes).\n- mailbox: use error ret code of of_parse_phandle_with_args()\n  (stable-fixes).\n- leds: pwm-multicolor: Add check for fwnode_property_read_u32\n  (stable-fixes).\n- firmware: arm_ffa: Set dma_mask for ffa devices (stable-fixes).\n- firmware: arm_ffa: Reject higher major version as incompatible\n  (stable-fixes).\n- ieee802154: ca8210: Use proper setters and getters for bitwise\n  types (stable-fixes).\n- HID: usbkbd: Fix the bit shift number for LED_KANA\n  (stable-fixes).\n- hwmon: (dell-smm) Increment the number of fans (stable-fixes).\n- hwmon: (gpio-fan) Add missing mutex locks (stable-fixes).\n- hwmon: (xgene-hwmon) use appropriate type for the latency value\n  (stable-fixes).\n- gpio: pca953x: Simplify code with cleanup helpers\n  (stable-fixes).\n- gpio: pca953x: Split pca953x_restore_context() and\n  pca953x_save_context() (stable-fixes).\n- commit 50f84af\n\n- fbdev: Fix fb_set_var to prevent null-ptr-deref in\n  fb_videomode_to_var (git-fixes).\n- fbdev: Fix do_register_framebuffer to prevent null-ptr-deref\n  in fb_videomode_to_var (git-fixes).\n- fbdev: core: fbcvt: avoid division by 0 in fb_cvt_hperiod()\n  (git-fixes).\n- drm/msm/gpu: Fix crash when throttling GPU immediately during\n  boot (git-fixes).\n- drm/mediatek: mtk_drm_drv: Unbind secondary mmsys components\n  on err (git-fixes).\n- drm/mediatek: Fix kobject put for component sub-drivers\n  (git-fixes).\n- drm/mediatek: mtk_drm_drv: Fix kobject put for mtk_mutex device\n  ptr (git-fixes).\n- Revert \u0026quot;drm/amdgpu: don't allow userspace to create a doorbell\n  BO\u0026quot; (stable-fixes).\n- drm/amd/pp: Fix potential NULL pointer dereference in\n  atomctrl_initialize_mc_reg_table (git-fixes).\n- drm/tegra: Fix a possible null pointer dereference (git-fixes).\n- drm/tegra: rgb: Fix the unbound reference count (git-fixes).\n- drm/tegra: Assign plane type before registration (git-fixes).\n- drm/vkms: Adjust vkms_state-\u0026gt;active_planes allocation type\n  (git-fixes).\n- drm: rcar-du: Fix memory leak in rcar_du_vsps_init()\n  (git-fixes).\n- drm/bridge: lt9611uxc: Fix an error handling path in\n  lt9611uxc_probe() (git-fixes).\n- drm/panel: samsung-sofef00: Drop s6e3fc2x01 support (git-fixes).\n- drm/ast: Fix comment on modeset lock (git-fixes).\n- drm/vc4: tests: Use return instead of assert (git-fixes).\n- drm/bridge: cdns-dsi: Wait for Clk and Data Lanes to be ready\n  (git-fixes).\n- drm/bridge: cdns-dsi: Check return value when getting default\n  PHY config (git-fixes).\n- drm/bridge: cdns-dsi: Fix the clock variable for mode_valid()\n  (git-fixes).\n- drm/bridge: cdns-dsi: Fix phy de-init and flag it so\n  (git-fixes).\n- drm/bridge: cdns-dsi: Fix connecting to next bridge (git-fixes).\n- drm/udl: Unregister device before cleaning up on disconnect\n  (git-fixes).\n- drm/vmwgfx: Add seqno waiter for sync_files (git-fixes).\n- Documentation/rtla: Fix typo in common_timerlat_description.rst\n  (git-fixes).\n- Documentation/rtla: Fix typo in rtla-timerlat.rst (git-fixes).\n- drm/amd/display: fix link_set_dpms_off multi-display MST corner\n  case (stable-fixes).\n- drm/amd/display: Guard against setting dispclk low for dcn31x\n  (stable-fixes).\n- drm/amdgpu: Update SRIOV video codec caps (stable-fixes).\n- drm/amd/display: remove minimum Dispclk and apply oem panel\n  timing (stable-fixes).\n- drm/amd/display: Fix incorrect DPCD configs while Replay/PSR\n  switch (stable-fixes).\n- drm/mediatek: mtk_dpi: Add checks for reg_h_fre_con existence\n  (stable-fixes).\n- drm/amdkfd: Set per-process flags only once cik/vi\n  (stable-fixes).\n- drm/amdgpu: Do not program AGP BAR regs under SRIOV in\n  gfxhub_v1_0.c (stable-fixes).\n- drm/amd/display: Skip checking FRL_MODE bit for PCON BW\n  determination (stable-fixes).\n- drm/amdkfd: KFD release_work possible circular locking\n  (stable-fixes).\n- drm/rockchip: vop2: Add uv swap for cluster window\n  (stable-fixes).\n- drm/amdgpu: Set snoop bit for SDMA for MI series (stable-fixes).\n- drm/amd/display: Don't try AUX transactions on disconnected link\n  (stable-fixes).\n- drm/amdgpu: reset psp-\u0026gt;cmd to NULL after releasing the buffer\n  (stable-fixes).\n- drm/amd/display: Update CR AUX RD interval interpretation\n  (stable-fixes).\n- drm/amd/display: Initial psr_version with correct setting\n  (stable-fixes).\n- drm/amd/display: Increase block_sequence array size\n  (stable-fixes).\n- drm/amdgpu: enlarge the VBIOS binary size limit (stable-fixes).\n- drm/amd/display/dm: drop hw_support check in\n  amdgpu_dm_i2c_xfer() (stable-fixes).\n- drm/v3d: Add clock handling (stable-fixes).\n- drm/ast: Find VBIOS mode from regular display size\n  (stable-fixes).\n- drm: bridge: adv7511: fill stream capabilities (stable-fixes).\n- drm/atomic: clarify the rules around\n  drm_atomic_state-\u0026gt;allow_modeset (stable-fixes).\n- drm/panel-edp: Add Starry 116KHD024006 (stable-fixes).\n- drm: Add valid clones check (stable-fixes).\n- fbdev: fsl-diu-fb: add missing device_remove_file()\n  (stable-fixes).\n- fbcon: Use correct erase colour for clearing in fbcon\n  (stable-fixes).\n- fbdev: core: tileblit: Implement missing margin clearing for\n  tileblit (stable-fixes).\n- firmware: arm_scmi: Relax duplicate name constraint across\n  protocol ids (stable-fixes).\n- commit 0574d41\n\n- Documentation/rtla: Fix duplicate text about timerlat tracer\n  (git-fixes).\n- crypto: marvell/cesa - Do not chain submitted requests\n  (git-fixes).\n- crypto: sun8i-ce - move fallback ahash_request to the end of\n  the struct (git-fixes).\n- crypto: xts - Only add ecb if it is not already there\n  (git-fixes).\n- crypto: lrw - Only add ecb if it is not already there\n  (git-fixes).\n- crypto: marvell/cesa - Avoid empty transfer descriptor\n  (git-fixes).\n- crypto: marvell/cesa - Handle zero-length skcipher requests\n  (git-fixes).\n- crypto: sun8i-ss - do not use sg_dma_len before calling DMA\n  functions (git-fixes).\n- Documentation: fix typo in root= kernel parameter description\n  (git-fixes).\n- dmaengine: idxd: cdev: Fix uninitialized use of sva in\n  idxd_cdev_open (stable-fixes).\n- commit 8e41cce\n\n- backlight: pm8941: Add NULL check in wled_configure()\n  (git-fixes).\n- bus: fsl-mc: fix GET/SET_TAILDROP command ids (git-fixes).\n- bus: fsl-mc: do not add a device-link for the UAPI used DPMCP\n  device (git-fixes).\n- bus: fsl-mc: fix double-free on mc_dev (git-fixes).\n- Revert \u0026quot;bus: ti-sysc: Probe for l4_wkup and l4_cfg interconnect\n  devices first\u0026quot; (stable-fixes).\n- Bluetooth: MGMT: iterate over mesh commands in\n  mgmt_mesh_foreach() (git-fixes).\n- ASoC: qcom: sdm845: Add error handling in\n  sdm845_slim_snd_hw_params() (git-fixes).\n- ASoC: apple: mca: Constrain channels according to TDM mask\n  (git-fixes).\n- ASoC: SOF: ipc4-pcm: Adjust pipeline_list-\u0026gt;pipelines allocation\n  type (git-fixes).\n- crypto: sun8i-ce-cipher - fix error handling in\n  sun8i_ce_cipher_prepare() (git-fixes).\n- crypto: qat - add shutdown handler to qat_420xx (git-fixes).\n- crypto: qat - add shutdown handler to qat_4xxx (git-fixes).\n- crypto: octeontx2 - suppress auth failure screaming due to\n  negative tests (stable-fixes).\n- crypto: lzo - Fix compression buffer overrun (stable-fixes).\n- crypto: skcipher - Zap type in crypto_alloc_sync_skcipher\n  (stable-fixes).\n- can: c_can: Use of_property_present() to test existence of DT\n  property (stable-fixes).\n- commit 595e083\n\n- ASoC: meson: meson-card-utils: use of_property_present()\n  for DT parsing (git-fixes).\n- ASoC: tas2764: Enable main IRQs (git-fixes).\n- ASoC: tas2764: Reinit cache on part reset (git-fixes).\n- ASoC: Intel: bytcr_rt5640: Add DMI quirk for Acer Aspire SW3-013\n  (stable-fixes).\n- ASoC: imx-card: Adjust over allocation of memory in\n  imx_card_parse_of() (stable-fixes).\n- ASoC: mediatek: mt6359: Add stub for\n  mt6359_accdet_enable_jack_detect (stable-fixes).\n- ASoC: sun4i-codec: support hp-det-gpios property (stable-fixes).\n- ASoC: qcom: sm8250: explicitly set format in\n  sm8250_be_hw_params_fixup() (stable-fixes).\n- ASoC: mediatek: mt8188: Treat DMIC_GAINx_CUR as non-volatile\n  (stable-fixes).\n- ASoC: mediatek: mt8188: Add reference for dmic clocks\n  (stable-fixes).\n- commit 255f2cb\n\n- ALSA: hda/realtek: Add quirk for Lenovo Yoga Pro 7 14ASP10\n  (stable-fixes).\n- ALSA: pcm: Fix race of buffer access at PCM OSS layer\n  (stable-fixes).\n- ALSA: hda/realtek: Add quirk for HP Spectre x360 15-df1xxx\n  (stable-fixes).\n- ASoC: soc-dai: check return value at snd_soc_dai_set_tdm_slot()\n  (stable-fixes).\n- ASoC: tas2764: Add reg defaults for TAS2764_INT_CLK_CFG\n  (stable-fixes).\n- ASoC: tas2764: Mark SW_RESET as volatile (stable-fixes).\n- ASoC: tas2764: Power up/down amp on mute ops (stable-fixes).\n- ASoC: ops: Enforce platform maximum on initial value\n  (stable-fixes).\n- ASoC: codecs: pcm3168a: Allow for 24-bit in provider mode\n  (stable-fixes).\n- ASoC: rt722-sdca: Add some missing readable registers\n  (stable-fixes).\n- commit ab5fcf6\n\n- kABI workaround for hda_codec.beep_just_power_on flag\n  (git-fixes).\n- commit 11aaa35\n\n- acpi-cpufreq: Fix nominal_freq units to KHz in\n  get_max_boost_ratio() (git-fixes).\n- ACPICA: Utilities: Fix spelling mistake \u0026quot;Incremement\u0026quot; -\u0026gt;\n  \u0026quot;Increment\u0026quot; (git-fixes).\n- ACPICA: exserial: don't forget to handle FFixedHW opregions\n  for reading (git-fixes).\n- ACPI: OSI: Stop advertising support for \u0026quot;3.0 _SCP Extensions\u0026quot;\n  (git-fixes).\n- ACPI: PNP: Add Intel OC Watchdog IDs to non-PNP device list\n  (stable-fixes).\n- accel/qaic: Mask out SR-IOV PCI resources (stable-fixes).\n- ALSA: seq: Improve data consistency at polling (stable-fixes).\n- ALSA: hda/realtek: Enable PC beep passthrough for HP EliteBook\n  855 G7 (stable-fixes).\n- ACPI: HED: Always initialize before evged (stable-fixes).\n- commit 6ebe577\n\n- net: ethernet: mtk-star-emac: fix spinlock recursion issues\n  on rx/tx poll (CVE-2025-37917 bsc#1243475).\n- commit 0f659f2\n\n- usb: typec: ucsi: limit the UCSI_NO_PARTNER_PDOS even further\n  (git-fixes).\n- commit bae0091\n\n- usb: typec: ucsi: allow non-partner GET_PDOS for Qualcomm\n  devices (git-fixes).\n- commit a0506dd\n\n- usb: typec: ucsi: Only enable supported notifications\n  (git-fixes).\n- commit 3a52706\n\n- usb: typec: ucsi: fix UCSI on buggy Qualcomm devices\n  (git-fixes).\n- commit 5ca6578\n\n- platform/x86: fujitsu-laptop: Support Lifebook S2110 hotkeys\n  (git-fixes).\n- commit 1564858\n\n- platform/x86: thinkpad_acpi: Support also NEC Lavie X1475JAS\n  (git-fixes).\n- commit 2bfd2a7\n\n- pstore: Change kmsg_bytes storage size to u32 (git-fixes).\n- commit c964f36\n\n- orangefs: Do not truncate file size (git-fixes).\n- commit 9fbe3ae\n\n- NFSv4: Check for delegation validity in\n  nfs_start_delegation_return_locked() (git-fixes).\n- commit a689f10\n\n- NFS: Don't allow waiting for exiting tasks (git-fixes).\n- Refresh\n  patches.suse/nfs-add-missing-selections-of-CONFIG_CRC32.patch.\n- commit 899f47c\n\n- SUNRPC: Don't allow waiting for exiting tasks (git-fixes).\n- commit 8b942ca\n\n- NFSv4: Treat ENETUNREACH errors as fatal for state recovery\n  (git-fixes).\n- commit 9139fd5\n\n- SUNRPC: rpc_clnt_set_transport() must not change the autobind\n  setting (git-fixes).\n- commit e2112a4\n\n- SUNRPC: rpcbind should never reset the port to the value '0'\n  (git-fixes).\n- commit f49c9db\n\n- pNFS/flexfiles: Report ENETDOWN as a connection error\n  (git-fixes).\n- commit 39e7a29\n\n- iommu: Protect against overflow in iommu_pgsize() (git-fixes).\n- commit 6adbec5\n\n- ext4: define ext4_journal_destroy wrapper (CVE-2025-22113\n  bsc#1241617).\n- commit 8dddf47\n\n- ext4: ignore xattrs past end (bsc#1242846 CVE-2025-37738).\n- commit 2a74454\n\n- ext4: avoid journaling sb update on error if journal is\n  destroying (bsc#1241617 CVE-2025-22113).\n- commit 0445179\n\n- net/smc: check v2_ext_offset/eid_cnt/ism_gid_cnt when receiving\n  proposal msg (CVE-2024-49568 bsc#1235728).\n- commit a7c2f15\n\n- i2c: tegra: check msg length in SMBUS block read (bsc#1242086)\n- commit 625407a\n\n- iio: light: opt3001: fix deadlock due to concurrent flag access (CVE-2025-37968 bsc#1243571)\n- commit 0e5e655\n\n- perf/x86/intel: KVM: Mask PEBS_ENABLE loaded for guest with vCPU's value (CVE-2025-37936 bsc#1243537)\n- commit 2e13950\n\n- net: phy: allow MDIO bus PM ops to start/stop state machine for phylink-controlled PHY (CVE-2025-37945 bsc#1243538)\n- commit efc17f3\n\n- pds_core: Prevent possible adminq overflow/stuck condition (CVE-2025-37987 bsc#1243542)\n- commit ba1ea39\n\n- SUNRPC: Prevent hang on NFS mount with xprtsec=[m]tls\n  (git-fixes).\n- commit dc6e86f\n\n- Refresh\n  patches.suse/nfs-ignore-SB_RDONLY-when-remounting-nfs.patch.\n- commit 359f356\n\n- Refresh\n  patches.suse/nfs-clear-SB_RDONLY-before-getting-superblock.patch.\n- commit 2697e51\n\n- fs/nfs/read: fix double-unlock bug in nfs_return_empty_folio()\n  (git-fixes).\n- commit fcf1703\n\n- powerpc/pseries/msi: Avoid reading PCI device registers in\n  reduced power states (bsc#1215199).\n- KVM: powerpc: Enable commented out BUILD_BUG_ON() assertion\n  (bsc#1215199).\n- commit 2d2709b\n\n- Update patches.suse/nfsd-Fix-race-to-FREE_STATEID-and-cl_revoked.patch\n  (bsc#1012628 CVE-2024-50106 bsc#1232882).\n- commit a87a308\n\n- net: ngbe: fix memory leak in ngbe_probe() error path (CVE-2025-37874 bsc#1242940)\n- commit bc2e64d\n\n- smb: client: fix hang in wait_for_response() for negproto\n  (bsc#1242709).\n- commit 709cb2e\n\n- net: dsa: mv88e6xxx: fix -ENOENT when deleting VLANs and MST is unsupported (CVE-2025-37865 bsc#1242954)\n- commit 885d04c\n\n- HID: pidff: Fix null pointer dereference in pidff_find_fields (CVE-2025-37862 bsc#1242982)\n- commit f9d615e\n\n- usb: chipidea: ci_hdrc_imx: fix usbmisc handling (CVE-2025-37811 bsc#1242907)\n- commit 1f2ed79\n\n- mptcp: fix 'scheduling while atomic' in\n  mptcp_pm_nl_append_new_local_addr (git-fixes CVE-2025-21938\n  bsc#1240723).\n- commit 02ff1ac\n\n- usb: typec: ucsi: displayport: Fix deadlock (bsc#1243572\n  CVE-2025-37967).\n- commit 59ea04d\n\n- kABI workaround for adding an header (CVE-2025-21868\n  bsc#1240180).\n- commit 8687a45\n\n- cifs: avoid NULL pointer dereference in dbg call (CVE-2025-37844 bsc#1242946)\n- commit 031bdce\n\n- Update\n  patches.suse/ALSA-ump-Fix-buffer-overflow-at-UMP-SysEx-message-co.patch\n  (bsc#1242044 CVE-2025-37891 bsc#1243589).\n- Update\n  patches.suse/ASoC-Intel-avs-Fix-null-ptr-deref-in-avs_component_p.patch\n  (git-fixes CVE-2025-37793 bsc#1242584).\n- Update\n  patches.suse/ASoC-imx-card-Add-NULL-check-in-imx_card_probe.patch\n  (git-fixes CVE-2025-22066 bsc#1241340).\n- Update\n  patches.suse/ASoC-ops-Consistently-treat-platform_max-as-control-.patch\n  (git-fixes CVE-2025-37889 bsc#1242945).\n- Update\n  patches.suse/ASoC-qcom-Fix-sc7280-lpass-potential-buffer-overflow.patch\n  (git-fixes CVE-2025-37979 bsc#1243545).\n- Update\n  patches.suse/Bluetooth-btrtl-Prevent-potential-NULL-dereference.patch\n  (git-fixes CVE-2025-37792 bsc#1242591).\n- Update\n  patches.suse/Bluetooth-btusb-avoid-NULL-pointer-dereference-in-sk.patch\n  (git-fixes CVE-2025-37918 bsc#1243476).\n- Update\n  patches.suse/Input-mtk-pmic-keys-fix-possible-null-pointer-derefe.patch\n  (git-fixes CVE-2025-37972 bsc#1243573).\n- Update\n  patches.suse/KVM-arm64-Tear-down-vGIC-on-failed-vCPU-creation.patch\n  (git-fixes CVE-2025-37849 bsc#1243000).\n- Update\n  patches.suse/KVM-x86-Acquire-SRCU-in-KVM_GET_MP_STATE-to-protect-.patch\n  (git-fixes CVE-2025-23141 bsc#1242782).\n- Update\n  patches.suse/PCI-Fix-reference-leak-in-pci_register_host_bridge.patch\n  (git-fixes CVE-2025-37836 bsc#1242957).\n- Update\n  patches.suse/PCI-brcmstb-Fix-error-path-after-a-call-to-regulator.patch\n  (git-fixes CVE-2025-22095 bsc#1241519).\n- Update\n  patches.suse/PCI-vmd-Make-vmd_dev-cfg_lock-a-raw_spinlock_t-type.patch\n  (stable-fixes CVE-2025-23161 bsc#1242792).\n- Update\n  patches.suse/RDMA-cma-Fix-workqueue-crash-in-cma_netevent_work_ha.patch\n  (git-fixes CVE-2025-37772 bsc#1242563).\n- Update\n  patches.suse/RDMA-core-Don-t-expose-hw_counters-outside-of-init-n.patch\n  (git-fixes bsc#1239925 CVE-2025-22089 bsc#1241538).\n- Update\n  patches.suse/RDMA-core-Silence-oversized-kvmalloc-warning.patch\n  (git-fixes CVE-2025-37867 bsc#1242948).\n- Update\n  patches.suse/USB-wdm-close-race-between-wdm_open-and-wdm_wwan_por.patch\n  (git-fixes CVE-2025-37985 bsc#1243529).\n- Update\n  patches.suse/arm64-bpf-Add-BHB-mitigation-to-the-epilogue-for-cBPF-prog.patch\n  (git-fixes CVE-2025-37948 bsc#1243649).\n- Update\n  patches.suse/arm64-bpf-Only-mitigate-cBPF-programs-loaded-by-unprivileg.patch\n  (git-fixes CVE-2025-37963 bsc#1243660).\n- Update\n  patches.suse/arm64-errata-Add-missing-sentinels-to-Spectre-BHB-MIDR-arr.patch\n  (git-fixes CVE-2025-37929 bsc#1243624).\n- Update\n  patches.suse/ata-pata_pxa-Fix-potential-NULL-pointer-dereference-.patch\n  (git-fixes CVE-2025-37758 bsc#1242514).\n- Update\n  patches.suse/backlight-led_bl-Hold-led_access-lock-when-calling-l.patch\n  (git-fixes CVE-2025-23144 bsc#1242568).\n- Update\n  patches.suse/block-fix-resource-leak-in-blk_register_queue-error-path.patch\n  (git-fixes CVE-2025-37980 bsc#1243522).\n- Update\n  patches.suse/block-integrity-Do-not-call-set_page_dirty_lock.patch\n  (git-fixes CVE-2025-37978 bsc#1243516).\n- Update\n  patches.suse/bnxt_en-Fix-out-of-bound-memcpy-during-ethtool-w.patch\n  (git-fixes CVE-2025-37911 bsc#1243469).\n- Update patches.suse/bpf-Scrub-packet-on-bpf_redirect_peer.patch\n  (git-fixes CVE-2025-37959 bsc#1243517).\n- Update\n  patches.suse/bpf-check-changes_pkt_data-property-for-extension-pr.patch\n  (bsc#1241590 CVE-2024-58100 bsc#1242564).\n- Update\n  patches.suse/bpf-consider-that-tail-calls-invalidate-packet-point.patch\n  (bsc#1241590 CVE-2024-58237 bsc#1242574).\n- Update\n  patches.suse/bpf-track-changes_pkt_data-property-for-global-funct.patch\n  (bsc#1241590 CVE-2024-58098 bsc#1242565).\n- Update\n  patches.suse/btrfs-adjust-subpage-bit-start-based-on-sectorsize.patch\n  (bsc#1241492 CVE-2025-37931 bsc#1243626).\n- Update\n  patches.suse/bus-mhi-host-Fix-race-between-unprepare-and-queue_bu.patch\n  (git-fixes CVE-2025-23151 bsc#1242512).\n- Update\n  patches.suse/cxgb4-fix-memory-leak-in-cxgb4_init_ethtool_filters-.patch\n  (git-fixes CVE-2025-37788 bsc#1242766).\n- Update\n  patches.suse/dm-bufio-don-t-schedule-in-atomic-context.patch\n  (git-fixes CVE-2025-37928 bsc#1243621).\n- Update\n  patches.suse/drm-amd-display-Fix-slab-use-after-free-in-hdcp.patch\n  (git-fixes CVE-2025-37903 bsc#1243562).\n- Update\n  patches.suse/drm-amd-pm-Prevent-division-by-zero-4b8c3c0.patch\n  (git-fixes CVE-2025-37770 bsc#1242764).\n- Update\n  patches.suse/drm-amd-pm-Prevent-division-by-zero-4e3d950.patch\n  (git-fixes CVE-2025-37766 bsc#1242785).\n- Update\n  patches.suse/drm-amd-pm-Prevent-division-by-zero-7c246a0.patch\n  (git-fixes CVE-2025-37768 bsc#1242567).\n- Update\n  patches.suse/drm-amd-pm-Prevent-division-by-zero-7d641c2.patch\n  (git-fixes CVE-2025-37771 bsc#1242781).\n- Update patches.suse/drm-amd-pm-Prevent-division-by-zero.patch\n  (git-fixes CVE-2025-37767 bsc#1242501).\n- Update\n  patches.suse/drm-amd-pm-smu11-Prevent-division-by-zero.patch\n  (git-fixes CVE-2025-37769 bsc#1242587).\n- Update\n  patches.suse/drm-amdgpu-Replace-Mutex-with-Spinlock-for-RLCG-regi.patch\n  (git-fixes CVE-2025-38104 bsc#1241635).\n- Update\n  patches.suse/drm-amdgpu-handle-amdgpu_cgs_create_device-errors-in.patch\n  (stable-fixes CVE-2025-37852 bsc#1243074).\n- Update patches.suse/drm-amdkfd-Fix-mode1-reset-crash-issue.patch\n  (stable-fixes CVE-2025-37854 bsc#1243082).\n- Update\n  patches.suse/drm-amdkfd-debugfs-hang_hws-skip-GPU-with-MES.patch\n  (stable-fixes CVE-2025-37853 bsc#1243076).\n- Update\n  patches.suse/drm-i915-huc-Fix-fence-not-released-on-early-probe-e.patch\n  (git-fixes CVE-2025-37754 bsc#1242524).\n- Update\n  patches.suse/drm-mediatek-dp-drm_err-dev_err-in-HPD-path-to-avoid.patch\n  (git-fixes CVE-2025-38240 bsc#1241457).\n- Update\n  patches.suse/drm-nouveau-Fix-WARN_ON-in-nouveau_fence_context_kil.patch\n  (git-fixes CVE-2025-37930 bsc#1243625).\n- Update\n  patches.suse/drm-nouveau-prime-fix-ttm_bo_delayed_delete-oops.patch\n  (git-fixes CVE-2025-37765 bsc#1242761).\n- Update\n  patches.suse/drm-v3d-Add-job-to-pending-list-if-the-reset-was-ski.patch\n  (stable-fixes CVE-2025-37951 bsc#1243659).\n- Update\n  patches.suse/eth-bnxt-fix-missing-ring-index-trim-on-error-path.patch\n  (git-fixes CVE-2025-37873 bsc#1242961).\n- Update patches.suse/fbdev-omapfb-Add-plane-value-check.patch\n  (stable-fixes CVE-2025-37851 bsc#1242977).\n- Update\n  patches.suse/firmware-arm_scmi-Balance-device-refcount-when-destr.patch\n  (git-fixes CVE-2025-37905 bsc#1243456).\n- Update\n  patches.suse/fs-jfs-Prevent-integer-overflow-in-AG-size-calculation.patch\n  (git-fixes CVE-2025-37858 bsc#1243049).\n- Update\n  patches.suse/hfs-hfsplus-fix-slab-out-of-bounds-in-hfs_bnode_read_key.patch\n  (git-fixes CVE-2025-37782 bsc#1242770).\n- Update\n  patches.suse/i2c-cros-ec-tunnel-defer-probe-if-parent-EC-is-not-p.patch\n  (git-fixes CVE-2025-37781 bsc#1242575).\n- Update\n  patches.suse/i3c-Add-NULL-pointer-check-in-i3c_master_queue_ibi.patch\n  (git-fixes CVE-2025-23147 bsc#1242530).\n- Update\n  patches.suse/ice-Check-VF-VSI-Pointer-Value-in-ice_vc_add_fdir_fl.patch\n  (git-fixes CVE-2025-37912 bsc#1243470).\n- Update patches.suse/igc-fix-PTM-cycle-trigger-logic.patch\n  (git-fixes CVE-2025-37875 bsc#1242959).\n- Update\n  patches.suse/iio-imu-st_lsm6dsx-fix-possible-lockup-in-st_lsm6dsx-8114ef8.patch\n  (git-fixes CVE-2025-37969 bsc#1243574).\n- Update\n  patches.suse/iio-imu-st_lsm6dsx-fix-possible-lockup-in-st_lsm6dsx.patch\n  (git-fixes CVE-2025-37970 bsc#1243575).\n- Update\n  patches.suse/iommu-Fix-two-issues-in-iommu_copy_struct_from_user.patch\n  (git-fixes CVE-2025-37900 bsc#1243560).\n- Update\n  patches.suse/ipv6-Fix-memleak-of-nhc_pcpu_rth_output-in-fib_check_nh_v6_gw.patch\n  (git-fixes CVE-2025-22005 bsc#1240866).\n- Update\n  patches.suse/irqchip-gic-v2m-Prevent-use-after-free-of-gicv2m_get.patch\n  (git-fixes CVE-2025-37819 bsc#1242873).\n- Update\n  patches.suse/irqchip-qcom-mpm-Prevent-crash-when-trying-to-handle.patch\n  (git-fixes CVE-2025-37901 bsc#1243559).\n- Update patches.suse/jbd2-remove-wrong-sb-s_sequence-check.patch\n  (bsc#1242343 CVE-2025-37839 bsc#1242990).\n- Update\n  patches.suse/jfs-Fix-uninit-value-access-of-imap-allocated-in-the-diMount-function.patch\n  (git-fixes CVE-2025-37742 bsc#1243011).\n- Update\n  patches.suse/jfs-Prevent-copying-of-nlink-with-value-0-from-disk-inode.patch\n  (git-fixes CVE-2025-37741 bsc#1243015).\n- Update\n  patches.suse/jfs-add-sanity-check-for-agwidth-in-dbMount.patch\n  (git-fixes CVE-2025-37740 bsc#1243006).\n- Update\n  patches.suse/jfs-fix-slab-out-of-bounds-read-in-ea_get.patch\n  (git-fixes CVE-2025-39735 bsc#1241625).\n- Update\n  patches.suse/jfs-reject-on-disk-inodes-of-an-unsupported-type.patch\n  (git-fixes CVE-2025-37925 bsc#1241654).\n- Update\n  patches.suse/md-md-bitmap-fix-wrong-bitmap_limit-for-clustermd-wh.patch\n  (bsc#1238212 CVE-2025-22124 bsc#1241595).\n- Update\n  patches.suse/media-dw2102-Fix-null-ptr-deref-in-dw2102_i2c_transf.patch\n  (git-fixes CVE-2023-53146 bsc#1220112).\n- Update\n  patches.suse/media-venus-hfi-add-a-check-to-handle-OOB-in-sfr-reg.patch\n  (git-fixes CVE-2025-23159 bsc#1242529).\n- Update\n  patches.suse/media-venus-hfi-add-check-to-handle-incorrect-queue-.patch\n  (git-fixes CVE-2025-23158 bsc#1242531).\n- Update\n  patches.suse/media-venus-hfi_parser-add-check-to-avoid-out-of-bou.patch\n  (git-fixes CVE-2025-23157 bsc#1242532).\n- Update\n  patches.suse/media-venus-hfi_parser-refactor-hfi-packet-parsing-l.patch\n  (git-fixes CVE-2025-23156 bsc#1242569).\n- Update\n  patches.suse/mfd-ene-kb3930-Fix-a-potential-NULL-pointer-derefere.patch\n  (git-fixes CVE-2025-23146 bsc#1242559).\n- Update\n  patches.suse/misc-microchip-pci1xxxx-Fix-Kernel-panic-during-IRQ-.patch\n  (git-fixes CVE-2025-37815 bsc#1242871).\n- Update\n  patches.suse/mtd-inftlcore-Add-error-check-for-inftl_read_oob.patch\n  (git-fixes CVE-2025-37892 bsc#1243536).\n- Update\n  patches.suse/mtd-rawnand-brcmnand-fix-PM-resume-warning.patch\n  (git-fixes CVE-2025-37840 bsc#1242953).\n- Update patches.suse/net-phy-leds-fix-memory-leak.patch\n  (git-fixes CVE-2025-37989 bsc#1243511).\n- Update\n  patches.suse/net-reenable-NETIF_F_IPV6_CSUM-offload-for-BIG-TCP-p.patch\n  (git-fixes CVE-2025-21629 bsc#1235968).\n- Update\n  patches.suse/net_sched-drr-Fix-double-list-add-in-class-with-nete.patch\n  (git-fixes CVE-2025-37915 bsc#1243473).\n- Update\n  patches.suse/net_sched-ets-Fix-double-list-add-in-class-with-nete.patch\n  (git-fixes CVE-2025-37914 bsc#1243472).\n- Update\n  patches.suse/net_sched-hfsc-Fix-a-UAF-vulnerability-in-class-with.patch\n  (git-fixes CVE-2025-37890 bsc#1243330).\n- Update\n  patches.suse/net_sched-qfq-Fix-double-list-add-in-class-with-nete.patch\n  (git-fixes CVE-2025-37913 bsc#1243471).\n- Update\n  patches.suse/nfsd-decrease-sc_count-directly-if-fail-to-queue-dl_recall.patch\n  (git-fixes CVE-2025-37871 bsc#1242949).\n- Update\n  patches.suse/objtool-media-dib8000-Prevent-divide-by-zero-in-dib8.patch\n  (git-fixes CVE-2025-37937 bsc#1243540).\n- Update\n  patches.suse/objtool-spi-amd-Fix-out-of-bounds-stack-access-in-am.patch\n  (git-fixes CVE-2025-40014 bsc#1241644).\n- Update\n  patches.suse/perf-Fix-hang-while-freeing-sigtrap-event.patch\n  (bsc#1229491 CVE-2024-43869 CVE-2025-37747 bsc#1242520).\n- Update\n  patches.suse/pm-cpupower-bench-Prevent-NULL-dereference-on-malloc.patch\n  (stable-fixes CVE-2025-37841 bsc#1242974).\n- Update\n  patches.suse/pwm-mediatek-Prevent-divide-by-zero-in-pwm_mediatek_.patch\n  (git-fixes CVE-2025-37850 bsc#1242955).\n- Update patches.suse/qibfs-fix-_another_-leak.patch (git-fixes\n  CVE-2025-37983 bsc#1243567).\n- Update patches.suse/sch_htb-make-htb_deactivate-idempotent.patch\n  (CVE-2025-37798 bsc#1242414 CVE-2025-37953 bsc#1243543).\n- Update\n  patches.suse/sch_htb-make-htb_qlen_notify-idempotent.patch\n  (CVE-2025-37798 bsc#1242414 CVE-2025-37932 bsc#1243627).\n- Update\n  patches.suse/sctp-detect-and-prevent-references-to-a-freed-transp.patch\n  (git-fixes CVE-2025-23142 bsc#1242760).\n- Update\n  patches.suse/soc-samsung-exynos-chipid-Add-NULL-pointer-check-in-.patch\n  (git-fixes CVE-2025-23148 bsc#1242578).\n- Update\n  patches.suse/sound-virtio-Fix-cancel_sync-warnings-on-uninitializ.patch\n  (stable-fixes CVE-2025-37805 bsc#1242930).\n- Update patches.suse/tpm-do-not-start-chip-while-suspended.patch\n  (git-fixes CVE-2025-23149 bsc#1242758).\n- Update\n  patches.suse/usb-cdns3-Fix-deadlock-when-using-NCM-gadget.patch\n  (git-fixes CVE-2025-37812 bsc#1242908).\n- Update\n  patches.suse/usb-dwc3-gadget-check-that-event-count-does-not-exce.patch\n  (git-fixes CVE-2025-37810 bsc#1242906).\n- Update\n  patches.suse/usb-gadget-aspeed-Add-NULL-pointer-check-in-ast_vhub.patch\n  (stable-fixes CVE-2025-37881 bsc#1242973).\n- Update\n  patches.suse/usb-typec-class-Invalidate-USB-device-pointers-on-pa.patch\n  (git-fixes CVE-2025-37986 bsc#1243515).\n- Update\n  patches.suse/vmxnet3-Fix-packet-corruption-in-vmxnet3_xdp_xmit_fr.patch\n  (bsc#1226498 CVE-2024-58099 bsc#1242035).\n- Update\n  patches.suse/wifi-at76c50x-fix-use-after-free-access-in-at76_disc.patch\n  (git-fixes CVE-2025-37796 bsc#1242727).\n- Update\n  patches.suse/wifi-ath12k-Fix-invalid-data-access-in-ath12k_dp_rx_.patch\n  (stable-fixes CVE-2025-37943 bsc#1243509).\n- Update\n  patches.suse/wifi-ath12k-Fix-invalid-entry-fetch-in-ath12k_dp_mon.patch\n  (stable-fixes CVE-2025-37944 bsc#1243530).\n- Update\n  patches.suse/wifi-brcm80211-fmac-Add-error-handling-for-brcmf_usb.patch\n  (git-fixes CVE-2025-37990 bsc#1243528).\n- Update\n  patches.suse/wifi-cfg80211-init-wiphy_work-before-allocating-rfki.patch\n  (git-fixes CVE-2025-22119 bsc#1241576).\n- Update\n  patches.suse/wifi-mac80211-Purge-vif-txq-in-ieee80211_do_stop.patch\n  (git-fixes CVE-2025-37794 bsc#1242566).\n- Update\n  patches.suse/wifi-plfxlc-Remove-erroneous-assert-in-plfxlc_mac_re.patch\n  (git-fixes CVE-2025-37897 bsc#1243534).\n- Update\n  patches.suse/wifi-wl1251-fix-memory-leak-in-wl1251_tx_work.patch\n  (git-fixes CVE-2025-37982 bsc#1243524).\n- commit 4bd69e5\n\n- blacklist.conf: add 75ad02318af2 (\u0026quot;Xen/swiotlb: mark xen_swiotlb_fixup() __init\u0026quot;)\n- Delete patches.suse/Xen-swiotlb-mark-xen_swiotlb_fixup-__init.patch.\n- commit c256f05\n\n- smb: client: Avoid race in open_cached_dir with lease breaks\n  (CVE-2025-37954 bsc#1243664).\n- commit 366c4d0\n\n- smb: client: change return value in open_cached_dir_by_dentry()\n  if !cfids (git-fixes).\n- commit ec272a8\n\n- smb: client: remove unnecessary checks in open_cached_dir()\n  (git-fixes).\n- commit 31b534b\n\n- Delete\n  patches.suse/smb-client-fix-open_cached_dir-retries-with-hard.patch.\n- Delete\n  patches.suse/smb-client-properly-close-cfids-on-umount.patch.\n  [hcarvalho: these were SUSE-only fixes and now we have more suitable\n  fixes upstream for the same issues]\n- commit fb12426\n\n- smb3: fix Open files on server counter going negative\n  (git-fixes).\n- commit 6a0a87a\n\n- memblock: Accept allocated memory before use in\n  memblock_double_array() (CVE-2025-37960 bsc#1243519).\n- commit 7257498\n\n- mm/huge_memory: fix dereferencing invalid pmd migration entry\n  (CVE-2025-37958 bsc#1243539).\n- commit 49bf8b8\n\n- objtool, panic: Disable SMAP in __stack_chk_fail()\n  (bsc#1243963).\n- commit 3d95273\n\n- net: stmmac: Fix accessing freed irq affinity_hint (CVE-2025-23155 bsc#1242573)\n- commit 1bacbdd\n\n- net_sched: sch_sfq: move the limit validation (CVE-2025-37752 bsc#1242504)\n- commit 8b36a9a\n\n- net_sched: sch_sfq: use a temporary work area for validating configuration (bsc#1232504)\n- commit 49233c3\n\n- Refresh\n  patches.kabi/icmp-prevent-possible-NULL-dereferences-from-icmp_bu.patch.\n  It turns out we don't need the kABI workaround for\n  patches.suse/ipv4-icmp-Unmask-upper-DSCP-bits-in-icmp_route_looku.patch,\n  just need to simply refresh the patch context. Thus we take\n  \u0026gt; #include \u0026lt;net/inet_dscp.h\u0026gt;\n  out of the __GENKSYMS__ ifndef.\n- Refresh\n  patches.kabi/icmp-prevent-possible-NULL-dereferences-from-icmp_bu.patch.\n- commit b6ed857\n\n- nvme-pci: acquire cq_poll_lock in nvme_poll_irqdisable\n  (git-fixes bsc#1223096).\n- nvme-pci: make nvme_pci_npages_prp() __always_inline\n  (git-fixes).\n- commit 71f2996\n\n- rpm/check-for-config-changes: add more to IGNORED_CONFIGS_RE\n  Useful when someone tries (needs) to build the kernel with clang.\n- commit 06918e3\n\n- nilfs2: do not propagate ENOENT error from\n  nilfs_btree_propagate() (git-fixes).\n- commit 5591e0d\n\n- nilfs2: add pointer check for nilfs_direct_propagate()\n  (git-fixes).\n- commit eac8f96\n\n- afs: Fix the server_list to unuse a displaced server rather\n  than putting it (git-fixes).\n- commit d3c390a\n\n- afs: Make it possible to find the volumes that are using a\n  server (git-fixes).\n- commit 7d8a054\n\n- Squashfs: check return result of sb_min_blocksize (git-fixes).\n- commit 6d6e8d7\n\n- xenbus: Use kref to track req lifetime (bsc#1243541\n  CVE-2025-37949).\n- commit 0928f39\n\n- 9p/net: fix improper handling of bogus negative read/write\n  replies (bsc#1243077 CVE-2025-37879).\n- commit ac0ef56\n\n- RDMA/rxe: Fix \u0026quot;trying to register non-static key in rxe_qp_do_cleanup\u0026quot; bug (git-fixes)\n- commit 40421b4\n\n- RDMA/cma: Fix hang when cma_netevent_callback fails to queue_work (git-fixes)\n- commit 5748d8f\n\n- RDMA/iwcm: Fix use-after-free of work objects after cm_id destruction (git-fixes)\n- commit 0defb73\n\n- RDMA/mlx5: Fix error flow upon firmware failure for RQ destruction (git-fixes)\n- commit af712e0\n\n- RDMA/hns: Include hnae3.h in hns_roce_hw_v2.h (git-fixes)\n- commit fe91579\n\n- IB/cm: use rwlock for MAD agent lock (git-fixes)\n- commit 7a0e4f4\n\n- loop: don't require -\u0026gt;write_iter for writable files in\n  loop_configure (git-fixes).\n- commit 7e4c4c7\n\n- iommu/mediatek: Fix NULL pointer deference in\n  mtk_iommu_device_group (CVE-2025-37748 bsc#1242523).\n- commit 4d05234\n\n- net: allow small head cache usage with large MAX_SKB_FRAGS\n  values (CVE-2025-21868 bsc#1240180).\n- commit b5e965a\n\n- loop: Add sanity check for read/write_iter (git-fixes).\n- scsi: Improve CDL control (git-fixes).\n- md/raid1: Add check for missing source disk in process_checks()\n  (git-fixes).\n- loop: Add sanity check for read/write_iter (git-fixes).\n- scsi: Improve CDL control (git-fixes).\n- md/raid1: Add check for missing source disk in process_checks()\n  (git-fixes).\n- commit 494aacb\n\n- cpufreq: scpi: Fix null-ptr-deref in scpi_cpufreq_get_rate()\n  (bsc#1242875 CVE-2025-37829).\n- commit e728de0\n\n- cpufreq: scmi: Fix null-ptr-deref in scmi_cpufreq_get_rate()\n  (bsc#1242860 CVE-2025-37830).\n- commit 8f43c34\n\n- loop: aio inherit the ioprio of original request (git-fixes).\n- Refresh\n  patches.suse/loop-stop-using-vfs_iter_-read-write-for-buffered-I-O.patch.\n- commit ff7ab20\n\n- io_uring: always do atomic put from iowq (CVE-2025-37804\n  bsc#1242854).\n- commit 06f910a\n\n- s390/bpf: Store backchain even for leaf progs (git-fixes\n  bsc#1243805).\n- commit ded8083\n\n- cpufreq: apple-soc: Fix null-ptr-deref in\n  apple_soc_cpufreq_get_rate() (bsc#1242861 CVE-2025-37831).\n- commit ce0d3b2\n\n- kabi: fix kABI for ITS (bsc#1242006 CVE-2024-28956).\n- commit 1a3ff17\n\n- mtd: phram: Add the kernel lock down check (bsc#1232649).\n- commit 0294b02\n\n- scsi: megaraid_sas: Block zero-length ATA VPD inquiry\n  (git-fixes).\n- scsi: pm80xx: Set phy_attached to zero when device is gone\n  (git-fixes).\n- scsi: hisi_sas: Fix I/O errors caused by hardware port ID\n  changes (git-fixes).\n- scsi: megaraid_sas: Block zero-length ATA VPD inquiry\n  (git-fixes).\n- scsi: pm80xx: Set phy_attached to zero when device is gone\n  (git-fixes).\n- scsi: hisi_sas: Fix I/O errors caused by hardware port ID\n  changes (git-fixes).\n- commit 2f69ac7\n\n- isofs: Prevent the use of too small fid (CVE-2025-37780 bsc#1242786)\n- commit 2176e55\n\n- ext4: fix off-by-one error in do_split (CVE-2025-23150 bsc#1242513)\n- commit 06dc18f\n\n- net: dsa: mv88e6xxx: avoid unregistering devlink regions which were never registered (CVE-2025-37787 bsc#1242585)\n- commit 91a15e6\n\n- Refresh fixes for cBPF issue (bsc#1242778)\n- Update metadata and put them into the sorted part of the series\n- Refresh\n  patches.suse/x86-bhi-do-not-set-BHI_DIS_S-in-32-bit-mode.patch.\n- Refresh\n  patches.suse/x86-bpf-add-IBHF-call-at-end-of-classic-BPF.patch.\n- Refresh\n  patches.suse/x86-bpf-call-branch-history-clearing-sequence-on-exit.patch.\n- commit d024c0d\n\n- media: mediatek: vcodec: Fix a resource leak related to the scp device in FW initialization (CVE-2025-23160 bsc#1242507)\n- commit ec39280\n\n- net: libwx: handle page_pool_dev_alloc_pages error (CVE-2025-37755 bsc#1242506)\n- commit 218edf9\n\n- virtiofs: add filesystem context source name check (CVE-2025-37773 bsc#1242502)\n- commit c58895d\n\n- remoteproc: core: Clear table_sz when rproc_shutdown (CVE-2025-38152 bsc#1241627)\n- commit a7f4be3\n\n- net_sched: skbprio: Remove overly strict queue assertions (CVE-2025-38637 bsc#1241657)\n- commit 6c0dd03\n\n- fs/9p: fix NULL pointer dereference on mkdir (CVE-2025-22070 bsc#1241305)\n- commit 7cd6fd1\n\n- KVM: VMX: Bury Intel PT virtualization (guest/host mode)\n  behind CONFIG_BROKEN (CVE-2024-53135 bsc#1234154).\n- commit 09b2398\n\n- KVM: x86: Make x2APIC ID 100% readonly (git-fixes).\n- Refresh\n  patches.suse/KVM-x86-Re-split-x2APIC-ICR-into-ICR-ICR2-for-AMD-x2.patch.\n- commit d85d7a2\n\n- net: fix NULL pointer dereference in l3mdev_l3_rcv (CVE-2025-22103 bsc#1241448)\n- commit da134b6\n\n- udmabuf: fix a buf size overflow issue during udmabuf creation (CVE-2025-37803 bsc#1242852)\n- commit 34e7f3d\n\n- add bug reference for an existing hv_netvsc change (bsc#1243737).\n- commit e38784d\n\n- kabi fix for perf/aux: Fix AUX buffer serialization\n  (bsc#1230581, CVE-2024-46713).\n- perf/aux: Fix AUX buffer serialization (bsc#1230581,\n  CVE-2024-46713).\n- commit 1405e0e\n\n- Update\n  patches.suse/NFSv3-only-use-NFS-timeout-for-MOUNT-when-protocols-.patch\n  (bsc#1231016).\n  Remove the reference to CVE-2024-50106 bsc#1232882, this was added\n  automatically by 8258b9d331fb as it matched the Git-commit 8dd91e8d31fe\n  which was erroneously added in 4b11aedcc3c0, and later corrected in\n  a5cceab88022 (which did not also take care of removing the erroneous\n  references).\n- commit 4e82942\n\n- usb: typec: class: Unlocked on error in typec_register_partner()\n  (bsc#1242856 CVE-2025-37809).\n- commit 8ae2608\n\n- struct typec_port: move nre mutex to end (bsc#1242856\n  CVE-2025-37809).\n- commit b5f6426\n\n- usb: typec: class: Fix NULL pointer access (bsc#1242856\n  CVE-2025-37809).\n- Refresh\n  patches.suse/usb-typec-class-Invalidate-USB-device-pointers-on-pa.patch.\n- commit 3add668\n\n- team: better TEAM_OPTION_TYPE_STRING validation (CVE-2025-21787 bsc#1238774)\n- commit bda544d\n\n- scsi: ufs: bsg: Set bsg_queue to NULL after removal (CVE-2024-54458 bsc#1238992)\n- commit 0e36a45\n\n- xen-netfront: handle NULL returned by\n  xdp_convert_buff_to_frame() (bsc#1242866 CVE-2025-37820).\n- commit 39f3e10\n\n- xen: Change xen-acpi-processor dom0 dependency (git-fixes).\n- commit 0babbb9\n\n- xenfs/xensyms: respect hypervisor's \u0026quot;next\u0026quot; indication\n  (git-fixes).\n- commit 911043b\n\n- xen/mcelog: Add __nonstring annotations for unterminated strings\n  (git-fixes).\n- commit 29addb9\n\n- Xen/swiotlb: mark xen_swiotlb_fixup() __init (git-fixes).\n- commit 8db2d18\n\n- x86/xen: move xen_reserve_extra_memory() (git-fixes).\n- commit 46ca212\n\n- virtio_console: fix missing byte order handling for cols and\n  rows (git-fixes).\n- commit 241fde6\n\n- vhost-scsi: Fix handling of multiple calls to\n  vhost_scsi_set_endpoint (git-fixes).\n- commit b42c56f\n\n- KVM: SVM: Update dump_ghcb() to use the GHCB snapshot fields\n  (git-fixes).\n- commit 38764b5\n\n- KVM: SVM: Forcibly leave SMM mode on SHUTDOWN interception\n  (bsc#1243513 CVE-2025-37957).\n- commit d959965\n\n- KVM: x86: Explicitly treat routing entry type changes as changes\n  (git-fixes).\n- commit 3d9ce0f\n\n- dm-integrity: fix a warning on invalid table line (git-fixes).\n- commit d3c6b81\n\n- KVM: SVM: Allocate IR data using atomic allocation (git-fixes).\n- commit b2174da\n\n- KVM: x86: Explicitly zero-initialize on-stack CPUID unions\n  (git-fixes).\n- commit 70f24b1\n\n- KVM: x86: Acquire SRCU in KVM_GET_MP_STATE to protect guest\n  memory accesses (git-fixes).\n- commit 6edee17\n\n- KVM: x86/xen: Use guest's copy of pvclock when starting timer\n  (git-fixes).\n- commit b26e547\n\n- KVM: x86: Don't take kvm-\u0026gt;lock when iterating over vCPUs in\n  suspend notifier (git-fixes).\n- commit c3ff5ce\n\n- pfifo_tail_enqueue: Drop new packet when sch-\u0026gt;limit == 0 (CVE-2025-21702 bsc#1237312)\n- commit 9693f33\n\n- KVM: VMX: Don't modify guest XFD_ERR if CR0.TS=1 (git-fixes).\n- commit 7004205\n\n- KVM: x86: Remove the unreachable case for 0x80000022 leaf in\n  __do_cpuid_func() (git-fixes).\n- commit 61712af\n\n- KVM: nVMX: Allow emulating RDPID on behalf of L2 (git-fixes).\n- commit c1930b5\n\n- KVM: nSVM: Pass next RIP, not current RIP, for nested VM-Exit\n  on emulation (git-fixes).\n- commit 8202eda\n\n- ptp: Ensure info-\u0026gt;enable callback is always set (CVE-2025-21814 bsc#1238473)\n- commit f7aafc6\n\n- KVM: nVMX: Check PAUSE_EXITING, not BUS_LOCK_DETECTION, on\n  PAUSE emulation (git-fixes).\n- commit e0c3862\n\n- KVM: x86: Wake vCPU for PIC interrupt injection iff a valid\n  IRQ was found (git-fixes).\n- commit a4e6b2d\n\n- KVM: x86: Explicitly zero EAX and EBX when PERFMON_V2 isn't\n  supported by KVM (git-fixes).\n- commit 224ac97\n\n- KVM: SVM: Suppress DEBUGCTL.BTF on AMD (git-fixes).\n- commit cbffadd\n\n- KVM: SVM: Drop DEBUGCTL[5:2] from guest's effective value\n  (git-fixes).\n- commit 7de7eaf\n\n- KVM: x86: Reject disabling of MWAIT/HLT interception when not\n  allowed (git-fixes).\n- commit 6f261b9\n\n- KVM: arm64: Tear down vGIC on failed vCPU creation (git-fixes).\n- commit a8fc9b5\n\n- xhci: Add helper to set an interrupters interrupt moderation\n  interval (git-fixes).\n- commit 552ff9a\n\n- xhci: split free interrupter into separate remove and free parts\n  (git-fixes).\n- commit b6b40d2\n\n- KVM: arm64: vgic-v4: Fall back to software irqbypass if LPI\n  not found (git-fixes).\n- commit 30abdad\n\n- KVM: arm64: vgic-v4: Only attempt vLPI mapping for actual MSIs\n  (git-fixes).\n- commit fa068c2\n\n- rcu/tasks-trace: Handle new PF_IDLE semantics (git-fixes)\n- commit 9e674eb\n\n- rcu/tasks: Handle new PF_IDLE semantics (git-fixes)\n- commit dc44560\n\n- rcu: Introduce rcu_cpu_online() (git-fixes)\n- commit 1b93211\n\n- rcu: Break rcu_node_0 --\u0026gt; \u0026amp;rq-\u0026gt;__lock order (git-fixes)\n- commit 37d6fe5\n\n- KVM: arm64: Mark some header functions as inline (git-fixes).\n- commit 1cf34cd\n\n- KVM: arm64: timer: Always evaluate the need for a soft timer\n  (git-fixes).\n- commit 2c68f44\n\n- KVM: arm64: Fix RAS trapping in pKVM for protected VMs\n  (git-fixes).\n- commit 4af64c7\n\n- KVM: s390: Don't use %pK through debug printing (git-fixes\n  bsc#1243657).\n- KVM: s390: Don't use %pK through tracepoints (git-fixes\n  bsc#1243658).\n- commit 784e519\n\n- s390/pci: Fix missing check for zpci_create_device() error\n  return (git-fixes CVE-2025-37974 bsc#1243547).\n- commit fe0123d\n\n- KVM: arm64: Ignore PMCNTENSET_EL0 while checking for overflow\n  status (git-fixes).\n- commit 861b970\n\n- KVM: arm64: vgic-its: Clear ITE when DISCARD frees an ITE\n  (git-fixes).\n- commit cae4119\n\n- KVM: arm64: vgic-its: Clear DTE when MAPD unmaps a device\n  (git-fixes).\n- commit c87dcd2\n\n- KVM: arm64: vgic-its: Add a data length check in vgic_its_save_*\n  (git-fixes).\n- commit fb99ec6\n\n- drm/amd/display: prevent hang on link training fail (bsc#1243056 CVE-2025-37870)\n- commit 368bb8e\n\n- Input: synaptics-rmi - fix crash with unsupported versions of\n  F34 (git-fixes).\n- spi: spi-fsl-dspi: Reset SR flags before sending a new message\n  (git-fixes).\n- spi: spi-fsl-dspi: Halt the module after a new message transfer\n  (git-fixes).\n- spi: spi-fsl-dspi: restrict register range for regmap access\n  (git-fixes).\n- commit b0b7b4d\n\n- Revert \u0026quot;drm/amd: Keep display off while going into S4\u0026quot;\n  (git-fixes).\n- drm/edid: fixed the bug that hdr metadata was not reset\n  (git-fixes).\n- thermal: intel: x86_pkg_temp_thermal: Fix bogus trip temperature\n  (git-fixes).\n- platform/x86: dell-wmi-sysman: Avoid buffer overflow in\n  current_password_store() (git-fixes).\n- commit 2a12a0d\n\n- x86/speculation: Remove the extra #ifdef around CALL_NOSPEC (bsc#1242006 CVE-2024-28956).\n- commit 02d5249\n\n- x86/speculation: Add a conditional CS prefix to CALL_NOSPEC (bsc#1242006 CVE-2024-28956).\n- commit e6e328e\n\n- x86/speculation: Simplify and make CALL_NOSPEC consistent (bsc#1242006 CVE-2024-28956).\n- commit 4f55697\n\n- drm/amd: Add Suspend/Hibernate notification callback support\n  (stable-fixes).\n- Refresh\n  patches.suse/drm-amd-Keep-display-off-while-going-into-S4.patch.\n- commit 8fc5efa\n\n- can: slcan: allow reception of short error messages (git-fixes).\n- can: bcm: add missing rcu read protection for procfs content\n  (git-fixes).\n- can: bcm: add locking for bcm_op runtime updates (git-fixes).\n- Bluetooth: btusb: use skb_pull to avoid unsafe access in QCA\n  dump handling (git-fixes).\n- Bluetooth: L2CAP: Fix not checking l2cap_chan security level\n  (git-fixes).\n- ASoc: SOF: topology: connect DAI to a single DAI link\n  (git-fixes).\n- ASoC: SOF: ipc4-pcm: Delay reporting is only supported for\n  playback direction (git-fixes).\n- ASoC: SOF: ipc4-control: Use SOF_CTRL_CMD_BINARY as numid for\n  bytes_ext (git-fixes).\n- drm/amd/display: Avoid flooding unnecessary info messages\n  (git-fixes).\n- drm/amd/display: Correct the reply value when AUX write\n  incomplete (git-fixes).\n- ALSA: usb-audio: Add sample rate quirk for Microdia JP001 USB\n  Camera (stable-fixes).\n- HID: uclogic: Add NULL check in uclogic_input_configured()\n  (git-fixes).\n- HID: thrustmaster: fix memory leak in thrustmaster_interrupts()\n  (git-fixes).\n- wifi: mt76: disable napi on driver removal (git-fixes).\n- wifi: mac80211: Set n_channels after allocating struct\n  cfg80211_scan_request (git-fixes).\n- Bluetooth: MGMT: Fix MGMT_OP_ADD_DEVICE invalid device flags\n  (git-fixes).\n- drm/amdgpu: fix pm notifier handling (git-fixes).\n- Revert \u0026quot;drm/amd: Stop evicting resources on APUs in suspend\u0026quot;\n  (stable-fixes).\n- drm/amdgpu: Queue KFD reset workitem in VF FED (stable-fixes).\n- drm/amdgpu: trigger flr_work if reading pf2vf data failed\n  (stable-fixes).\n- commit 26616bd\n\n- net/niu: Niu requires MSIX ENTRY_DATA fields touch before\n  entry reads (CVE-2025-37833 bsc#1242868).\n- commit 6ef582b\n\n- smb: client: fix potential race in cifs_put_tcon() (git-fixes).\n- commit 19f09de\n\n- smb: client: don't retry DFS targets on server shutdown\n  (git-fixes).\n- commit 1f292e5\n\n- smb: client: fix return value of parse_dfs_referrals()\n  (git-fixes).\n- commit 4a3af29\n\n- smb: client: parse DNS domain name from domain= option\n  (git-fixes).\n- commit a71bddc\n\n- smb: client: parse av pair type 4 in CHALLENGE_MESSAGE\n  (git-fixes).\n- commit 06ad34c\n\n- smb: client: introduce av_for_each_entry() helper (git-fixes).\n- commit b221e20\n\n- smb: client: get rid of kstrdup() in get_ses_refpath()\n  (git-fixes).\n- commit 820766b\n\n- smb: client: don't trust DFSREF_STORAGE_SERVER bit (git-fixes).\n- commit e375375\n\n- smb: client: get rid of TCP_Server_Info::refpath_lock\n  (git-fixes).\n- commit a1e1a18\n\n- smb: client: optimize referral walk on failed link targets\n  (git-fixes).\n- commit dc0ea15\n\n- smb: client: provide dns_resolve_{unc,name} helpers (git-fixes).\n- commit 823244a\n\n- smb: client: fix DFS mount against old servers with NTLMSSP\n  (git-fixes).\n- commit 9bdc840\n\n- smb: client: don't try following DFS links in\n  cifs_tree_connect() (git-fixes).\n- commit faa5ddf\n\n- btrfs: fix a leaked chunk map issue in read_one_chunk()\n  (git-fixes).\n- btrfs: avoid monopolizing a core when activating a swap file\n  (git-fixes).\n- btrfs: don't loop for nowait writes when checking for cross\n  references (git-fixes).\n- commit 55fbee8\n\n- smb: client: get rid of @nlsc param in cifs_tree_connect()\n  (git-fixes).\n- commit a37d55b\n\n- smb: client: allow more DFS referrals to be cached (git-fixes).\n- commit 0672bc5\n\n- smb: client: Use str_yes_no() helper function (git-fixes).\n- commit 45cd31b\n\n- smb: client: fix DFS interlink failover (git-fixes).\n- commit 0e64ad0\n\n- smb: client: improve purging of cached referrals (git-fixes).\n- commit 91096d5\n\n- smb: client: avoid unnecessary reconnects when refreshing\n  referrals (git-fixes).\n- commit f39d027\n\n- smb: client: refresh referral without acquiring refpath_lock\n  (git-fixes).\n- commit a3174a3\n\n- cifs: change tcon status when need_reconnect is set on it\n  (git-fixes).\n- commit 3ba9ec1\n\n- perf: Fix hang while freeing sigtrap event (bsc#1229491 CVE-2024-43869)\n- commit ea46d36\n\n- perf: Fix event leak upon exec and file release (bsc#1229491 CVE-2024-43869)\n- commit 2306ed7\n\n- task_work: Introduce task_work_cancel() again (bsc#1229491 CVE-2024-43869)\n- commit fcc1a13\n\n- task_work: s/task_work_cancel()/task_work_cancel_func()/ (bsc#1229491 CVE-2024-43869)\n- commit 737f43d\n\n- sched/numa: Fix the potential null pointer dereference in (bsc#1233192 CVE-2024-50223)\n- commit 00ab70f\n\n- arm64: bpf: Only mitigate cBPF programs loaded by unprivileged users (git-fixes)\n- commit 7e8bd78\n\n- arm64: bpf: Add BHB mitigation to the epilogue for cBPF programs (git-fixes)\n- commit 19938ce\n\n- arm64: proton-pack: Add new CPUs 'k' values for branch mitigation (git-fixes)\n- commit 9d5f7df\n\n- arm64: proton-pack: Expose whether the branchy loop k value (git-fixes)\n- commit ae499ae\n\n- arm64: proton-pack: Expose whether the platform is mitigated by (git-fixes)\n- commit 204dc95\n\n- arm64: insn: Add support for encoding DSB (git-fixes)\n- commit 6b6fa36\n\n- crypto: algif_hash - fix double free in hash_accept (git-fixes).\n- padata: do not leak refcount in reorder_work (git-fixes).\n- commit 891cb3d\n\n- btrfs: fix non-empty delayed iputs list on unmount due to\n  compressed write workers (git-fixes).\n- commit f1d5e24\n\n- btrfs: fix discard worker infinite loop after disabling discard\n  (bsc#1242012).\n- commit 37021c3\n\n- exfat: fix potential wrong error return from get_block\n  (git-fixes).\n- commit 7a3ae68\n\n- hv_netvsc: Remove rmsg_pgcnt (git-fixes).\n- hv_netvsc: Preserve contiguous PFN grouping in the page buffer array (git-fixes).\n- hv_netvsc: Use vmbus_sendpacket_mpb_desc() to send VMBus messages (git-fixes).\n- Drivers: hv: Allow vmbus_sendpacket_mpb_desc() to create multiple ranges (git-fixes).\n- commit cc27aab\n\n- Refresh\n  patches.suse/NFSv3-only-use-NFS-timeout-for-MOUNT-when-protocols-.patch.\n- commit a5cceab\n\n- nfsd: add list_head nf_gc to struct nfsd_file (git-fixes).\n- commit 619e51a\n\n- NFSv4: Don't trigger uneccessary scans for return-on-close\n  delegations (git-fixes).\n- commit 7a38fa2\n\n- NFSD: Skip sending CB_RECALL_ANY when the backchannel isn't up\n  (git-fixes).\n- commit ab2a57c\n\n- NFS: O_DIRECT writes must check and adjust the file length\n  (git-fixes).\n- commit f49be34\n\n- btrfs: avoid NULL pointer dereference if no valid csum tree\n  (bsc#1243342).\n- commit 4a016a5\n\n- btrfs: avoid NULL pointer dereference if no valid extent tree\n  (bsc#1236208).\n- commit 3a3390f\n\n- btrfs: adjust subpage bit start based on sectorsize\n  (bsc#1241492).\n- commit b1923a6\n\n- nfs: handle failure of nfs_get_lock_context in unlock path\n  (git-fixes).\n- commit fc76265\n\n- NFSv4/pnfs: Reset the layout state after a layoutreturn\n  (git-fixes).\n- commit bfc4dcb\n\n- Input: xpad - fix Share button on Xbox One controllers\n  (stable-fixes).\n- Input: synaptics - enable InterTouch on Dell Precision M3800\n  (stable-fixes).\n- Input: synaptics - enable InterTouch on TUXEDO InfinityBook\n  Pro 14 v5 (stable-fixes).\n- Input: synaptics - enable InterTouch on Dynabook Portege X30L-G\n  (stable-fixes).\n- Input: synaptics - enable InterTouch on Dynabook Portege X30-D\n  (stable-fixes).\n- Input: synaptics - enable SMBus for HP Elitebook 850 G1\n  (stable-fixes).\n- Input: xpad - add support for 8BitDo Ultimate 2 Wireless\n  Controller (stable-fixes).\n- drm/amd/display: Fix the checking condition in dmub aux handling\n  (stable-fixes).\n- drm/amd/display: more liberal vmin/vmax update for freesync\n  (stable-fixes).\n- drm/v3d: Add job to pending list if the reset was skipped\n  (stable-fixes).\n- commit 9301e6f\n\n- update metatdata\n- Update\n  patches.suse/nvme-fixup-scan-failure-for-non-ANA-multipath-contro.patch\n  (git-fixes bsc#1235149).\n- Update\n  patches.suse/nvme-re-read-ANA-log-page-after-ns-scan-completes.patch\n  (git-fixes bsc#1235149).\n- commit 34602b4\n\n- net/handshake: Fix handshake_req_destroy_test1 (git-fixes).\n- commit 2e22868\n\n- net/mlx5e: Disable MACsec offload for uplink representor profile\n  (git-fixes).\n- net: qede: Initialize qede_ll_ops with designated initializer\n  (git-fixes).\n- igc: fix lock order in igc_ptp_reset (git-fixes).\n- idpf: protect shutdown from reset (git-fixes).\n- idpf: fix potential memory leak on kcalloc() failure\n  (git-fixes).\n- bnxt_en: Fix ethtool -d byte order for 32-bit values\n  (git-fixes).\n- bnxt_en: Fix out-of-bound memcpy() during ethtool -w\n  (git-fixes).\n- bnxt_en: Fix coredump logic to free allocated buffer\n  (git-fixes).\n- bnxt_en: Add missing skb_mark_for_recycle() in bnxt_rx_vlan()\n  (git-fixes).\n- idpf: fix offloads support for encapsulated packets (git-fixes).\n- ice: Check VF VSI Pointer Value in ice_vc_add_fdir_fltr()\n  (git-fixes).\n- net/mlx5: E-switch, Fix error handling for enabling roce\n  (git-fixes).\n- net/mlx5: E-Switch, Initialize MAC Address for Default GID\n  (git-fixes).\n- pds_core: make wait_context part of q_info (CVE-2025-37886\n  bsc#1242944).\n- pds_core: handle unsupported PDS_CORE_CMD_FW_CONTROL result\n  (CVE-2025-37887 bsc#1242962).\n- octeontx2-pf: qos: fix VF root node parent queue index\n  (git-fixes).\n- devlink: fix port new reply cmd type (git-fixes).\n- netlink: annotate data-races around sk-\u0026gt;sk_err (git-fixes).\n- net/handshake: Fix memory leak in __sock_create() and\n  sock_alloc_file() (git-fixes).\n- commit d6dfca7\n\n- net: ppp: Add bound checking for skb data on ppp_sync_txmung (CVE-2025-37749 bsc#1242859)\n- commit be85fb7\n\n- netlabel: Fix NULL pointer exception caused by CALIPSO on IPv4 sockets (CVE-2025-22063 bsc#1241351)\n- commit 9ad0b9d\n\n- rpm: Stop using is_kotd_qa macro\n  This macro is set by bs-upload-kernel, and a conditional in each spec\n  file is used to determine when to build the spec file.\n  This logic should not really be in the spec file. Previously this was\n  done with package links and package meta for the individula links.\n  However, the use of package links is rejected for packages in git based\n  release projects (nothing to do with git actually, new policy). An\n  alternative to package links is multibuild. However, for multibuild\n  packages package meta cannot be used to set which spec file gets built.\n  Use prjcon buildflags instead, and remove this conditional. Depends on\n  bs-upload-kernel adding the build flag.\n- commit 9eb8a6f\n\n- kernel-obs-qa: Use srchash for dependency as well\n- commit 485ae1d\n\n- x86/its: Fix build errors when CONFIG_MODULES=n (git-fixes).\n- commit 2ced030\n\n- ocfs2: fix the issue with discontiguous allocation in the\n  global_bitmap (git-fixes).\n- commit 3a6d567\n\n- dmaengine: mediatek: drop unused variable (git-fixes).\n- dmaengine: idxd: Fix -\u0026gt;poll() return value (git-fixes).\n- phy: tegra: xusb: remove a stray unlock (git-fixes).\n- commit 78d9bf4\n\n- dmaengine: mediatek: Fix a possible deadlock error in\n  mtk_cqdma_tx_status() (git-fixes).\n- dmaengine: idxd: Refactor remove call with idxd_cleanup()\n  helper (git-fixes).\n- dmaengine: idxd: Add missing idxd cleanup to fix memory leak\n  in remove call (git-fixes).\n- dmaengine: idxd: fix memory leak in error handling path of\n  idxd_pci_probe (git-fixes).\n- dmaengine: idxd: fix memory leak in error handling path of\n  idxd_alloc (git-fixes).\n- dmaengine: idxd: Add missing cleanups in cleanup internals\n  (git-fixes).\n- dmaengine: idxd: Add missing cleanup for early error out in\n  idxd_setup_internals (git-fixes).\n- dmaengine: idxd: fix memory leak in error handling path of\n  idxd_setup_groups (git-fixes).\n- dmaengine: idxd: fix memory leak in error handling path of\n  idxd_setup_engines (git-fixes).\n- dmaengine: idxd: fix memory leak in error handling path of\n  idxd_setup_wqs (git-fixes).\n- dmaengine: idxd: Fix allowing write() from different address\n  spaces (git-fixes).\n- dmaengine: ti: k3-udma: Add missing locking (git-fixes).\n- dmaengine: ti: k3-udma: Use cap_mask directly from dma_device\n  structure instead of a local copy (git-fixes).\n- dmaengine: Revert \u0026quot;dmaengine: dmatest: Fix dmatest waiting\n  less when interrupted\u0026quot; (git-fixes).\n- phy: Fix error handling in tegra_xusb_port_init (git-fixes).\n- phy: renesas: rcar-gen3-usb2: Set timing registers only once\n  (git-fixes).\n- phy: renesas: rcar-gen3-usb2: Fix role detection on unbind/bind\n  (git-fixes).\n- phy: tegra: xusb: Use a bitmask for UTMI pad power state\n  tracking (git-fixes).\n- i2c: designware: Fix an error handling path in\n  i2c_dw_pci_probe() (git-fixes).\n- commit d7f3f88\n\n- spi: tegra114: Use value to check for invalid delays\n  (git-fixes).\n- spi: loopback-test: Do not split 1024-byte hexdumps (git-fixes).\n- commit 455317d\n\n- dma-buf: insert memory barrier before updating num_fences\n  (git-fixes).\n- ACPI: PPTT: Fix processor subtable walk (git-fixes).\n- regulator: max20086: fix invalid memory access (git-fixes).\n- ALSA: es1968: Add error handling for\n  snd_pcm_hw_constraint_pow2() (git-fixes).\n- ALSA: sh: SND_AICA should depend on SH_DMA_API (git-fixes).\n- ALSA: usb-audio: Add sample rate quirk for Audioengine D1\n  (git-fixes).\n- ALSA: ump: Fix a typo of snd_ump_stream_msg_device_info\n  (git-fixes).\n- ALSA: seq: Fix delivery of UMP events to group ports\n  (git-fixes).\n- commit 6d9d893\n\n- net_sched: hfsc: Fix a potential UAF in hfsc_dequeue() too\n  (CVE-2025-37823 bsc#1242924).\n- commit 1471c72\n\n- spi: fsl-qspi: Fix double cleanup in probe error path\n  (CVE-2025-37842 bsc#1242951).\n- commit 24f6262\n\n- spi: fsl-qspi: use devm function instead of driver remove\n  (CVE-2025-37842 bsc#1242951).\n- commit d11d0a5\n\n- tipc: fix NULL pointer dereference in tipc_mon_reinit_self()\n  (CVE-2025-37824 bsc#1242867).\n- commit b6204ae\n\n- netfilter: nf_conncount: Fully initialize struct nf_conncount_tuple in\n  insert_tree() (CVE-2025-21959 bsc#1240814).\n- commit 95b2c5e\n\n- RDMA/core: Fix \u0026quot;KASAN: slab-use-after-free Read in ib_register_device\u0026quot; problem (git-fixes)\n- commit cf0fc91\n\n- RDMA/rxe: Fix slab-use-after-free Read in rxe_queue_cleanup bug (git-fixes)\n- commit 2431d70\n\n- qibfs: fix _another_ leak (git-fixes)\n- commit 8fd1fde\n\n- Update\n  patches.suse/md-raid10-wait-barrier-before-returning-discard-request-wi.patch\n  (git-fixes CVE-2025-40325 bsc#1241638).\n  Updated meta-data, adding CVE# and bsc#\n- commit 7913a06\n\n- Update\n  patches.suse/md-fix-mddev-uaf-while-iterating-all_mddevs-list.patch\n  (git-fixes CVE-2025-22126 bsc#1241597).\n  Updated meta-data, adding CVE# and bsc#\n- commit f259b1e\n\n- Update patches.suse/md-raid1-raid10-don-t-ignore-IO-flags.patch\n  (git-fixes CVE-2025-22125 bsc#1241596).\n  Updated meta-data, adding CVE# and bsc#\n- commit e5ab0f8\n\n- Move upstreamed tpm patch into sorted section\n- commit 4c354fe\n\n- misc: pci_endpoint_test: Avoid issue of interrupts remaining\n  after request_irq error (CVE-2025-23140 bsc#1242763).\n- commit 7ef87ac\n\n- Refresh patches.suse/tpm-tis-Double-the-timeout-B-to-4s.patch.\n- commit a661a1f\n\n- Sort ITS patches\n- Refresh\n  patches.suse/Documentation-x86-bugs-its-Add-ITS-documentation.patch.\n- Refresh\n  patches.suse/x86-ibt-Keep-IBT-disabled-during-alternative-patching.patch.\n- Refresh\n  patches.suse/x86-its-Add-support-for-ITS-safe-indirect-thunk.patch.\n- Refresh\n  patches.suse/x86-its-Add-support-for-ITS-safe-return-thunk.patch.\n- Refresh\n  patches.suse/x86-its-Add-support-for-RSB-stuffing-mitigation.patch.\n- Refresh\n  patches.suse/x86-its-Add-vmexit-option-to-skip-mitigation-on-some-CPUs.patch.\n- Refresh\n  patches.suse/x86-its-Align-RETs-in-BHB-clear-sequence-to-avoid-thunking.patch.\n- Refresh\n  patches.suse/x86-its-Enable-Indirect-Target-Selection-mitigation.patch.\n- Refresh\n  patches.suse/x86-its-Enumerate-Indirect-Target-Selection-ITS-bug.patch.\n- Refresh\n  patches.suse/x86-its-Use-dynamic-thunks-for-indirect-branches.patch.\n- commit c6710c7\n\n- arm64: dts: imx8mm-verdin: Link reg_usdhc2_vqmmc to usdhc2 (git-fixes)\n- commit 1edd6ab\n\n- arm64: errata: Add missing sentinels to Spectre-BHB MIDR arrays (git-fixes)\n- commit 182f118\n\n- arm64: cputype: Add QCOM_CPU_PART_KRYO_3XX_GOLD (git-fixes)\n- commit 0b208b9\n\n- netfilter: conntrack: clamp maximum hashtable size to INT_MAX (CVE-2025-21648 bsc#1236142)\n- commit 4d49a39\n\n- smb: client: fix UAF in decryption with multichannel\n  (bsc#1242510, CVE-2025-37750).\n- commit dcd21e8\n\n- cifs: reduce warning log level for server not advertising\n  interfaces (git-fixes).\n- commit d059ffc\n\n- sch_htb: make htb_deactivate() idempotent (CVE-2025-37798\n  bsc#1242414).\n- sch_ets: make est_qlen_notify() idempotent (CVE-2025-37798\n  bsc#1242414).\n- sch_qfq: make qfq_qlen_notify() idempotent (CVE-2025-37798\n  bsc#1242414).\n- sch_hfsc: make hfsc_qlen_notify() idempotent (CVE-2025-37798\n  bsc#1242414).\n- sch_drr: make drr_qlen_notify() idempotent (CVE-2025-37798\n  bsc#1242414).\n- sch_htb: make htb_qlen_notify() idempotent (CVE-2025-37798\n  bsc#1242414).\n- commit ca3d2dc\n\n- KVM: arm64: Change kvm_handle_mmio_return() return polarity\n  (git-fixes).\n- Refresh\n  patches.suse/KVM-arm64-Don-t-retire-aborted-MMIO-instruction.patch.\n- commit 265ba62\n\n- net: openvswitch: fix nested key length validation in the set()\n  action (CVE-2025-37789 bsc#1242762).\n- commit aa0d4ee\n\n- netfilter: nft_tunnel: fix geneve_opt type confusion addition\n  (CVE-2025-22056 bsc#1241525).\n- commit bfce6d7\n\n- nvme-pci: add quirk for Samsung PM173x/PM173xa disk\n  (bsc#1241148).\n- nvme: Add warning when a partiually unique NID is detected\n  (bsc#1241148).\n- nvme: Add 'partial_nid' quirk (bsc#1241148).\n- commit 242af03\n\n- x86/its: Use dynamic thunks for indirect branches (bsc#1242006 CVE-2024-28956).\n- commit 428e9a8\n\n- selftests/mm: fix incorrect buffer-\u0026gt;mirror size in hmm2\n  double_map test (bsc#1242203).\n- commit a065dfc\n\n- mm: zswap: fix crypto_free_acomp() deadlock in\n  zswap_cpu_comp_dead() (CVE-2025-22030 bsc#1241376).\n- commit f3d5b08\n\n- nvme: fixup scan failure for non-ANA multipath controllers\n  (git-fixes).\n- commit fbd0910\n\n- platform/x86: asus-wmi: Fix wlan_ctrl_by_user detection\n  (git-fixes).\n- platform/x86/amd/pmc: Declare quirk_spurious_8042 for MECHREVO\n  Wujie 14XA (GX4HRXL) (git-fixes).\n- commit fe36676\n\n- scsi: core: Clear flags for scsi_cmnd that did not complete\n  (git-fixes).\n- commit 3615a18\n\n- nvme: unblock ctrl state transition for firmware update\n  (git-fixes).\n- nvmet-tcp: select CONFIG_TLS from CONFIG_NVME_TARGET_TCP_TLS\n  (git-fixes).\n- nvme-tcp: select CONFIG_TLS from CONFIG_NVME_TCP_TLS\n  (git-fixes).\n- nvme-tcp: fix premature queue removal and I/O failover\n  (git-fixes).\n- nvme-pci: fix queue unquiesce check on slot_reset (git-fixes).\n- nvmet-fc: put ref when assoc-\u0026gt;del_work is already scheduled\n  (git-fixes).\n- nvmet-fc: take tgtport reference only once (git-fixes).\n- nvmet-fc: update tgtport ref per assoc (git-fixes).\n- nvmet-fc: inline nvmet_fc_free_hostport (git-fixes).\n- nvmet-fc: inline nvmet_fc_delete_assoc (git-fixes).\n- nvmet-fcloop: add ref counting to lport (git-fixes).\n- nvmet-fcloop: replace kref with refcount (git-fixes).\n- nvme: multipath: fix return value of nvme_available_path\n  (git-fixes).\n- nvme: re-read ANA log page after ns scan completes (git-fixes).\n- nvme: requeue namespace scan on missed AENs (git-fixes).\n- nvmet-fcloop: Remove remote port from list when unlinking\n  (git-fixes).\n- commit c20709a\n\n- md/raid10: fix missing discard IO accounting (git-fixes).\n- md/raid10: wait barrier before returning discard request with\n  REQ_NOWAIT (git-fixes).\n- md/raid1,raid10: don't ignore IO flags (git-fixes).\n- md: fix mddev uaf while iterating all_mddevs list (git-fixes).\n- md/raid1: fix memory leak in raid1_run() if no active rdev\n  (git-fixes).\n- md: ensure resync is prioritized over recovery (git-fixes).\n- md/raid5: implement pers-\u0026gt;bitmap_sector() (git-fixes).\n- commit ffbc738\n\n- scsi: qla2xxx: Remove duplicate struct crb_addr_pair\n  (bsc#1243090).\n- scsi: qla2xxx: Remove unused module parameters (bsc#1243090).\n- scsi: qla2xxx: Remove unused qla2x00_gpsc() (bsc#1243090).\n- scsi: qla2xxx: Remove unused ql_log_qp (bsc#1243090).\n- scsi: qla2xxx: Remove unused qla82xx_wait_for_state_change()\n  (bsc#1243090).\n- scsi: qla2xxx: Remove unused qla82xx_pci_region_offset()\n  (bsc#1243090).\n- scsi: qla2xxx: Remove unused qlt_83xx_iospace_config()\n  (bsc#1243090).\n- scsi: qla2xxx: Remove unused qlt_fc_port_deleted()\n  (bsc#1243090).\n- scsi: qla2xxx: Remove unused qlt_free_qfull_cmds()\n  (bsc#1243090).\n- scsi: qla2xxx: Fix typos in a comment (bsc#1243090).\n- scsi: qla2xxx: Mark device strings as nonstring (bsc#1243090).\n- commit c83a90b\n\n- md: preserve KABI in struct md_personality v2 (git-fixes).\n  Added to mitigate md-add-a-new-callback-pers-bitmap_sector.patch,\n  which was a git-fix.\n- commit f999b84\n\n- scsi: lpfc: Copyright updates for 14.4.0.9 patches\n  (bsc#1242993).\n- scsi: lpfc: Update lpfc version to 14.4.0.9 (bsc#1242993).\n- scsi: lpfc: Create lpfc_vmid_info sysfs entry (bsc#1242993).\n- scsi: lpfc: Avoid potential ndlp use-after-free in\n  dev_loss_tmo_callbk (bsc#1242993).\n- scsi: lpfc: Prevent failure to reregister with NVMe transport\n  after PRLI retry (bsc#1242993).\n- scsi: lpfc: Restart eratt_poll timer if HBA_SETUP flag still\n  unset (bsc#1242993).\n- scsi: lpfc: Notify FC transport of rport disappearance during\n  PCI fcn reset (bsc#1242993).\n- scsi: lpfc: Fix lpfc_check_sli_ndlp() handling for GEN_REQUEST64\n  commands (bsc#1242993).\n- scsi: lpfc: Fix spelling mistake 'Toplogy' -\u0026gt; 'Topology'\n  (bsc#1242993).\n- scsi: lpfc: Convert timeouts to secs_to_jiffies() (bsc#1242993).\n- jiffies: Cast to unsigned long in secs_to_jiffies() conversion\n  (bsc#1242993).\n- scsi: lpfc: convert timeouts to secs_to_jiffies() (bsc#1242993).\n- jiffies: Define secs_to_jiffies() (bsc#1242993).\n- commit 25c902e\n\n- bpf: Scrub packet on bpf_redirect_peer (git-fixes).\n- commit b9aeef5\n\n- powercap: intel_rapl: Fix locking in TPMI RAPL (git-fixes).\n- Refresh patches.kabi/power-cap-kabi-workaround.patch.\n- Refresh\n  patches.suse/powercap-intel_rapl-Introduce-APIs-for-PMU-support.patch.\n- commit 7773e64\n\n- tcp_bpf: Charge receive socket buffer in bpf_tcp_ingress()\n  (git-fixes).\n- commit 813fc9a\n\n- xsk: Don't assume metadata is always requested in TX completion\n  (git-fixes).\n- commit dda0558\n\n- media: videobuf2: Add missing doc comment for waiting_in_dqbuf\n  (git-fixes).\n- commit 75cff49\n\n- scsi: lpfc: Use memcpy() for BIOS version (bsc#1240966).\n- commit 55b4352\n\n- check-for-config-changes: Fix flag name typo\n- commit 1046b16\n\n- usb: typec: class: Invalidate USB device pointers on partner\n  unregistration (git-fixes).\n- commit 205050a\n\n- Revert \u0026quot;rndis_host: Flag RNDIS modems as WWAN devices\u0026quot;\n  (git-fixes).\n- commit 01b3feb\n\n- netfilter: socket: Lookup orig tuple for IPv6 SNAT\n  (CVE-2025-22021 bsc#1241282).\n- commit 31e1ce9\n\n- sched/fair: Fix potential memory corruption in\n  child_cfs_rq_on_list (CVE-2025-21919 bsc#1240593).\n- commit d264620\n\n- Input: xpad - fix two controller table values (git-fixes).\n- Input: mtk-pmic-keys - fix possible null pointer dereference\n  (git-fixes).\n- Input: cyttsp5 - ensure minimum reset pulse width (git-fixes).\n- commit bd45eeb\n\n- md: add a new callback pers-\u0026gt;bitmap_sector() (git-fixes).\n- Refresh patches.kabi/md-md_personality-workaround.patch.\n- commit a7e1668\n\n- Move upstreamed sound patch into sorted section\n- commit 3442d03\n\n- usb: usbtmc: Fix erroneous generic_read ioctl return\n  (git-fixes).\n- usb: usbtmc: Fix erroneous wait_srq ioctl return (git-fixes).\n- usb: usbtmc: Fix erroneous get_stb ioctl error returns\n  (git-fixes).\n- usb: typec: tcpm: delay SNK_TRY_WAIT_DEBOUNCE to SRC_TRYWAIT\n  transition (git-fixes).\n- USB: usbtmc: use interruptible sleep in usbtmc_read (git-fixes).\n- usb: cdnsp: fix L1 resume issue for RTL_REVISION_NEW_LPM version\n  (git-fixes).\n- usb: typec: ucsi: displayport: Fix NULL pointer access\n  (git-fixes).\n- usb: uhci-platform: Make the clock really optional (git-fixes).\n- usb: gadget: Use get_status callback to set remote wakeup\n  capability (git-fixes).\n- usb: gadget: f_ecm: Add get_status callback (git-fixes).\n- usb: host: tegra: Prevent host controller crash when OTG port\n  is used (git-fixes).\n- usb: gadget: tegra-xudc: ACK ST_RC after clearing CTRL_RUN\n  (git-fixes).\n- staging: axis-fifo: Remove hardware resets for user errors\n  (git-fixes).\n- staging: axis-fifo: Correct handling of tx_fifo_depth for size\n  validation (git-fixes).\n- iio: adis16201: Correct inclinometer channel resolution\n  (git-fixes).\n- iio: adc: ad7606: fix serial register access (git-fixes).\n- staging: iio: adc: ad7816: Correct conditional logic for store\n  mode (git-fixes).\n- iio: temp: maxim-thermocouple: Fix potential lack of DMA safe\n  buffer (git-fixes).\n- iio: imu: st_lsm6dsx: fix possible lockup in\n  st_lsm6dsx_read_tagged_fifo (git-fixes).\n- iio: imu: st_lsm6dsx: fix possible lockup in\n  st_lsm6dsx_read_fifo (git-fixes).\n- iio: accel: adxl367: fix setting odr for activity time update\n  (git-fixes).\n- drm/amdgpu/hdp5.2: use memcfg register to post the write for\n  HDP flush (git-fixes).\n- drm/amd/display: Fix wrong handling for AUX_DEFER case\n  (git-fixes).\n- drm/amd/display: Copy AUX read reply data whenever length \u0026gt;\n  0 (git-fixes).\n- drm/amd/display: Remove incorrect checking in dmub aux handler\n  (git-fixes).\n- drm/amd/display: Shift DMUB AUX reply command if necessary\n  (git-fixes).\n- drm/panel: simple: Update timings for AUO G101EVN010\n  (git-fixes).\n- wifi: cfg80211: fix out-of-bounds access during multi-link\n  element defragmentation (git-fixes).\n- can: gw: fix RCU/BH usage in cgw_create_job() (git-fixes).\n- can: mcan: m_can_class_unregister(): fix order of unregistration\n  calls (git-fixes).\n- can: mcp251xfd: mcp251xfd_remove(): fix order of unregistration\n  calls (git-fixes).\n- can: mcp251xfd: fix TDC setting for low data bit rates\n  (git-fixes).\n- irqchip/qcom-mpm: Prevent crash when trying to handle non-wake\n  GPIOs (git-fixes).\n- ALSA: usb-audio: Add second USB ID for Jabra Evolve 65 headset\n  (stable-fixes).\n- ALSA: usb-audio: Add retry on -EPROTO from usb_set_interface()\n  (stable-fixes).\n- drm/amd/display: Fix slab-use-after-free in hdcp (git-fixes).\n- platform/x86/amd: pmc: Require at least 2.5 seconds between\n  HW sleep cycles (stable-fixes).\n- drm/amd/display: Add scoped mutexes for amdgpu_dm_dhcp\n  (stable-fixes).\n- ASoC: soc-core: Stop using of_property_read_bool() for\n  non-boolean properties (stable-fixes).\n- ASoC: Use of_property_read_bool() (stable-fixes).\n- xhci: Clean up stale comment on ERST_SIZE macro (stable-fixes).\n- commit 9628f1b\n\n- dm: fix copying after src array boundaries (git-fixes).\n- commit 10c16a9\n\n- dm: add missing unlock on in dm_keyslot_evict() (git-fixes).\n- commit a94a8c2\n\n- net: decrease cached dst counters in dst_release (CVE-2025-22057\n  bsc#1241533).\n- commit 1da248f\n\n- net: mctp: Set SOCK_RCU_FREE (CVE-2025-37790 bsc#1242509).\n- commit cedbf4f\n\n- net_sched: hfsc: Fix a UAF vulnerability in class handling\n  (CVE-2025-37797 bsc#1242417).\n- commit 5c832c4\n\n- powerpc/pseries/iommu: create DDW for devices with DMA mask\n  less than 64-bits (bsc#1239691 bsc#1243044 ltc#212555).\n- commit d9959ab\n\n- codel: remove sch-\u0026gt;q.qlen check before\n  qdisc_tree_reduce_backlog() (CVE-2025-37798 bsc#1242414).\n- commit 8fb5816\n\n- Update\n  patches.suse/net-smc-initialize-close_work-early-to-avoid-warning.patch\n  (CVE-2024-56641 bsc#1235526 bsc#1242985).\n- commit d393a0f\n\n- mptcp: fix NULL pointer in can_accept_new_subflow\n  (CVE-2025-23145 bsc#1242596).\n- mptcp: relax check on MPC passive fallback (git-fixes).\n- mptcp: refine opt_mp_capable determination (git-fixes).\n- mptcp: use OPTION_MPTCP_MPJ_SYN in subflow_check_req()\n  (git-fixes).\n- mptcp: use OPTION_MPTCP_MPJ_SYNACK in subflow_finish_connect()\n  (git-fixes CVE-2024-35840 bsc#1224597).\n- mptcp: strict validation before using mp_opt-\u0026gt;hmac (git-fixes).\n- commit b0b581d\n\n- mptcp: mptcp_parse_option() fix for MPTCPOPT_MP_JOIN\n  (git-fixes).\n- blacklist.conf:\n  - remove the entry for commit be1d9d9d38da which was blacklisted as not\n    needed because of absence of this backport\n- commit 07c39d4\n\n- ax25: Remove broken autobind (CVE-2025-22109 bsc#1241573).\n- commit 9a9abc7\n\n- udp: Fix memory accounting leak (CVE-2025-22058 bsc#1241332).\n- commit 6a0c03a\n\n- perf: arm_cspmu: nvidia: monitor all ports by default (bsc#1242172)\n- commit bf5ce56\n\n- perf: arm_cspmu: nvidia: enable NVLINK-C2C port filtering (bsc#1242172)\n- commit d976f98\n\n- perf: arm_cspmu: nvidia: fix sysfs path in the kernel doc (bsc#1242172)\n- commit bcf5e61\n\n- perf: arm_cspmu: nvidia: remove unsupported SCF events (bsc#1242172)\n- commit 4647012\n\n- x86/ibt: Keep IBT disabled during alternative patching (bsc#1242006 CVE-2024-28956).\n- commit fac02ba\n\n- x86/its: Align RETs in BHB clear sequence to avoid thunking (bsc#1242006 CVE-2024-28956).\n- commit 909407f\n\n- x86/its: Add support for RSB stuffing mitigation (bsc#1242006 CVE-2024-28956).\n- commit 42d05af\n\n- x86/its: Add \u0026quot;vmexit\u0026quot; option to skip mitigation on some CPUs (bsc#1242006 CVE-2024-28956).\n- commit cefce67\n\n- x86/its: Enable Indirect Target Selection mitigation (bsc#1242006 CVE-2024-28956).\n- commit 6720dce\n\n- x86/its: Add support for ITS-safe return thunk (bsc#1242006 CVE-2024-28956).\n- commit b904ebb\n\n- watch_queue: fix pipe accounting mismatch (CVE-2025-23138 bsc#1241648).\n- commit 53d2fbb\n\n- x86/its: Add support for ITS-safe indirect thunk (bsc#1242006 CVE-2024-28956).\n- commit 73d0713\n\n- x86/its: Enumerate Indirect Target Selection (ITS) bug (bsc#1242006 CVE-2024-28956).\n- commit 0ceddfb\n\n- Documentation: x86/bugs/its: Add ITS documentation (bsc#1242006 CVE-2024-28956).\n- commit 8fd974a\n\n- vmxnet3: Fix malformed packet sizing in vmxnet3_process_xdp\n  (CVE-2025-37799 bsc#1242283).\n- commit f53c65a\n\n- btrfs: always fallback to buffered write if the inode  requires\n  checksum (bsc#1242831 bsc#1242710).\n- commit fd92bec\n\n- x86/bhi: Do not set BHI_DIS_S in 32-bit mode (bsc#1242778).\n- x86/bpf: Add IBHF call at end of classic BPF (bsc#1242778).\n- x86/bpf: Call branch history clearing sequence on exit\n  (bsc#1242778).\n- x86/bhi: Do not set BHI_DIS_S in 32-bit mode (bsc#1242778).\n- x86/bpf: Add IBHF call at end of classic BPF (bsc#1242778).\n- x86/bpf: Call branch history clearing sequence on exit\n  (bsc#1242778).\n- commit 528b9b5\n\n- jbd2: increase IO priority for writing revoke records\n  (bsc#1242332).\n- commit a27757f\n\n- Bluetooth: btnxpuart: Fix kernel panic during FW release\n  (bsc#1241456 CVE-2025-22102).\n- commit 9e6b312\n\n- Bluetooth: btnxpuart: Remove check for CTS low after FW download\n  (bsc#1241456 CVE-2025-22102).\n- commit 43b7feb\n\n- firmware: arm_ffa: Skip Rx buffer ownership release if not\n  acquired (git-fixes).\n- firmware: arm_scmi: Balance device refcount when destroying\n  devices (git-fixes).\n- commit e6126fe\n\n- ext4: goto right label 'out_mmap_sem' in ext4_setattr()\n  (bsc#1242556).\n- commit f73dc04\n\n- mm: fix filemap_get_folios_contig returning batches of identical\n  folios (bsc#1242327).\n- commit ab60c72\n\n- mm: fix error handling in __filemap_get_folio() with FGP_NOWAIT\n  (bsc#1242326).\n- commit eefd306\n\n- mm/readahead: fix large folio support in async readahead\n  (bsc#1242321).\n- commit ca8ae9b\n\n- mm: fix oops when filemap_map_pmd() without prealloc_pte\n  (bsc#1242546).\n- commit d84ed9f\n\n- udf: Fix inode_getblk() return value (bsc#1242313).\n- commit 083cf55\n\n- udf: Verify inode link counts before performing rename\n  (bsc#1242314).\n- commit 8e7cda1\n\n- udf: Skip parent dir link count update if corrupted\n  (bsc#1242315).\n- commit 94318f0\n\n- ext4: fix FS_IOC_GETFSMAP handling (bsc#1240557).\n- commit 531b964\n\n- ext4: make block validity check resistent to sb bh corruption\n  (bsc#1242348).\n- commit 12e4947\n\n- ext4: don't treat fhandle lookup of ea_inode as FS corruption\n  (bsc#1242347).\n- commit 3337bde\n\n- jbd2: add a missing data flush during file and fs\n  synchronization (bsc#1242346).\n- commit 0ebdf6c\n\n- ext4: don't over-report free space or inodes in statvfs\n  (bsc#1242345).\n- commit c197ee4\n\n- jbd2: fix off-by-one while erasing journal (bsc#1242344).\n- commit 362ca97\n\n- jbd2: remove wrong sb-\u0026gt;s_sequence check (bsc#1242343).\n- commit b288b9a\n\n- ext4: add missing brelse() for bh2 in ext4_dx_add_entry()\n  (bsc#1242342).\n- commit 8643d9f\n\n- ext4: protect ext4_release_dquot against freezing (bsc#1242335).\n- commit 532c985\n\n- jbd2: flush filesystem device before updating tail sequence\n  (bsc#1242333).\n- commit 79495ff\n\n- ext4: partial zero eof block on unaligned inode size extension\n  (bsc#1242336).\n- commit 992adfb\n\n- ext4: correct encrypted dentry name hash when not casefolded\n  (bsc#1242540).\n- commit 71bfc00\n\n- ext4: treat end of range as exclusive in ext4_zero_range()\n  (bsc#1242539).\n- commit 8950964\n\n- ext4: unify the type of flexbg_size to unsigned int\n  (bsc#1242538).\n  Refresh: patches.suse/ext4-avoid-online-resizing-failures-due-to-oversized.patch\n- commit 9b599f9\n\n- jbd2: increase the journal IO's priority (bsc#1242537).\n- commit 65fd6c7\n\n- ext4: replace the traditional ternary conditional operator\n  with with max()/min() (bsc#1242536).\n  Refresh patches.suse/ext4-move-setting-of-trimmed-bit-into-ext4_try_to_tr.patch\n  Refresh patches.suse/ext4-fix-inconsistent-between-segment-fstrim-and-ful.patch\n- commit 9de0d03\n\n- splice: remove duplicate noinline from pipe_clear_nowait\n  (bsc#1242328).\n- commit 8a9c110\n\n- fs: consistently deref the files table with\n  rcu_dereference_raw() (bsc#1242535).\n- commit 0f7e4fb\n\n- fs: support relative paths with FSCONFIG_SET_STRING (git-fixes).\n- commit 51930da\n\n- vfs: don't mod negative dentry count when on shrinker list\n  (bsc#1242534).\n- commit 25c9c4a\n\n- fs: better handle deep ancestor chains in is_subdir()\n  (bsc#1242528).\n  Refresh patches.suse/dcache-keep-dentry_hashtable-or-d_hash_shift-even-when-not.patch\n- commit 42bc37f\n\n- fs: don't allow non-init s_user_ns for filesystems without\n  FS_USERNS_MOUNT (bsc#1242526).\n- commit 08659e8\n\n- isofs: fix KMSAN uninit-value bug in do_isofs_readdir()\n  (bsc#1242307).\n- commit 08eabe6\n\n- Update\n  patches.suse/OPP-add-index-check-to-assert-to-avoid-buffer-overfl.patch\n  (bsc#1238961 CVE-2024-57998 bsc#1238527).\n- Update\n  patches.suse/PCI-ASPM-Fix-link-state-exit-during-switch-upstream-.patch\n  (git-fixes CVE-2024-58093 bsc#1241347).\n- Update\n  patches.suse/RDMA-erdma-Prevent-use-after-free-in-erdma_accept_ne.patch\n  (git-fixes CVE-2025-22088 bsc#1241528).\n- Update\n  patches.suse/RDMA-mlx5-Fix-mlx5_poll_one-cur_qp-update-flow.patch\n  (git-fixes CVE-2025-22086 bsc#1241458).\n- Update\n  patches.suse/acpi-nfit-fix-narrowing-conversion-in-acpi_nfit_ctl.patch\n  (git-fixes CVE-2025-22044 bsc#1241424).\n- Update\n  patches.suse/arm64-Don-t-call-NULL-in-do_compat_alignment_fixup.patch\n  (git-fixes CVE-2025-22033 bsc#1241436).\n- Update\n  patches.suse/bnxt_en-Mask-the-bd_cnt-field-in-the-TX-BD-properly.patch\n  (git-fixes CVE-2025-22108 bsc#1241574).\n- Update\n  patches.suse/bpf-avoid-holding-freeze_mutex-during-mmap-operation.patch\n  (git-fixes CVE-2025-21853 bsc#1239476).\n- Update\n  patches.suse/dlm-prevent-NPD-when-writing-a-positive-value-to-event_done.patch\n  (git-fixes CVE-2025-23131 bsc#1241601).\n- Update\n  patches.suse/drm-amd-display-avoid-NPD-when-ASIC-does-not-support.patch\n  (git-fixes CVE-2025-22093 bsc#1241545).\n- Update\n  patches.suse/drm-vkms-Fix-use-after-free-and-double-free-on-init-.patch\n  (git-fixes CVE-2025-22097 bsc#1241541).\n- Update patches.suse/fou-fix-initialization-of-grc.patch\n  (CVE-2024-46763 bsc#1230764 CVE-2024-46865 bsc#1231103).\n- Update\n  patches.suse/idpf-check-error-for-register_netdev-on-init.patch\n  (git-fixes CVE-2025-22116 bsc#1241459).\n- Update\n  patches.suse/idpf-fix-adapter-NULL-pointer-dereference-on-reboot.patch\n  (git-fixes CVE-2025-22065 bsc#1241333).\n- Update\n  patches.suse/jfs-add-check-read-only-before-truncation-in-jfs_truncate_nolock.patch\n  (git-fixes CVE-2024-58094 bsc#1241443).\n- Update\n  patches.suse/jfs-add-check-read-only-before-txBeginAnon-call.patch\n  (git-fixes CVE-2024-58095 bsc#1241442).\n- Update\n  patches.suse/media-streamzap-fix-race-between-device-disconnectio.patch\n  (git-fixes CVE-2025-22027 bsc#1241369).\n- Update\n  patches.suse/net-Add-rx_skb-of-kfree_skb-to-raw_tp_null_args.patch\n  (bsc#1235501 CVE-2024-56702 CVE-2025-21852 bsc#1239487).\n- Update\n  patches.suse/netfilter-br_netfilter-skip-conntrack-input-hook-for.patch\n  (CVE-2024-27415 bsc#1224757 CVE-2024-27018 bsc#1223809).\n- Update\n  patches.suse/nfsd-put-dl_stid-if-fail-to-queue-dl_recall.patch\n  (git-fixes CVE-2025-22025 bsc#1241361).\n- Update\n  patches.suse/ntb_hw_switchtec-Fix-shift-out-of-bounds-in-switchte.patch\n  (git-fixes CVE-2023-53034 bsc#1241341).\n- Update\n  patches.suse/ocfs2-handle-a-symlink-read-error-correctly.patch\n  (git-fixes CVE-2024-58001 bsc#1239079).\n- Update\n  patches.suse/rtnetlink-Allocate-vfinfo-size-for-VF-GUIDs-when-sup.patch\n  (bsc#1224013 CVE-2025-22075 bsc#1241402).\n- Update\n  patches.suse/sctp-add-mutual-exclusion-in-proc_sctp_do_udp_port.patch\n  (git-fixes CVE-2025-22062 bsc#1241412).\n- Update\n  patches.suse/tcp-fix-mptcp-DSS-corruption-due-to-large-pmtu-xmit.patch\n  (git-fixes CVE-2024-50083 bsc#1232493).\n- Update\n  patches.suse/thermal-int340x-Add-NULL-check-for-adev.patch\n  (git-fixes CVE-2025-23136 bsc#1241357).\n- Update patches.suse/usbnet-fix-NPE-during-rx_complete.patch\n  (git-fixes CVE-2025-22050 bsc#1241441).\n- Update\n  patches.suse/wifi-ath11k-Clear-affinity-hint-before-calling-ath11.patch\n  (git-fixes CVE-2025-23129 bsc#1241599).\n- Update\n  patches.suse/wifi-ath11k-add-srng-lock-for-ath11k_hal_srng_-in-mo.patch\n  (git-fixes CVE-2024-58096 bsc#1241344).\n- Update\n  patches.suse/wifi-ath11k-fix-RCU-stall-while-reaping-monitor-dest.patch\n  (git-fixes CVE-2024-58097 bsc#1241343).\n- Update\n  patches.suse/wifi-ath12k-Clear-affinity-hint-before-calling-ath12.patch\n  (git-fixes CVE-2025-22128 bsc#1241598).\n- commit a961a1a\n\n- cifs: Fix integer overflow while processing actimeo mount option\n  (git-fixes).\n- commit 747d942\n\n- iommu: Fix two issues in iommu_copy_struct_from_user()\n  (git-fixes).\n- commit 7b79fa9\n\n- cifs: Fix integer overflow while processing acdirmax mount\n  option (CVE-2025-21963 bsc#1240717).\n- commit 5907e46\n\n- cifs: Fix integer overflow while processing acregmax mount\n  option (CVE-2025-21964 bsc#1240740).\n- commit a723b7b\n\n- cifs: Fix integer overflow while processing closetimeo mount\n  option (CVE-2025-21962 bsc#1240655).\n- commit 03a43b4\n\n- ipv6: Align behavior across nexthops during path selection\n  (git-fixes).\n- commit c1801e4\n\n- ipv6: Do not consider link down nexthops in path selection\n  (git-fixes).\n- commit c7408d3\n\n- ipv6: Start path selection from the first nexthop (git-fixes).\n- commit 89a7c1d\n\n- ipv6: fix omitted netlink attributes when using\n  RTEXT_FILTER_SKIP_STATS (git-fixes).\n- commit 63ac763\n\n- net: ipv6: ioam6: fix lwtunnel_output() loop (git-fixes).\n- commit d329fe5\n\n- net: Handle napi_schedule() calls from non-interrupt\n  (git-fixes).\n- commit 27001ca\n\n- net: Clear old fragment checksum value in napi_reuse_skb\n  (git-fixes).\n- commit 36040d5\n\n- net: set the minimum for net_hotdata.netdev_budget_usecs\n  (git-fixes).\n- commit 03bb287\n\n- net: loopback: Avoid sending IP packets without an Ethernet\n  header (git-fixes).\n- commit dd85a8e\n\n- arp: switch to dev_getbyhwaddr() in arp_req_set_public()\n  (git-fixes).\n- commit c36d7e7\n\n- net: Add non-RCU dev_getbyhwaddr() helper (git-fixes).\n- commit 6130cc5\n\n- ipv4: icmp: convert to dev_net_rcu() (git-fixes).\n  Refresh\n  patches.suse/neighbour-use-RCU-protection-in-__neigh_notify.patch.\n- commit 00da98f\n\n- tcp_cubic: fix incorrect HyStart round start detection\n  (git-fixes).\n- commit 77808b8\n\n- inetpeer: update inetpeer timestamp in inet_getpeer()\n  (git-fixes).\n- commit 7d98688\n\n- inetpeer: remove create argument of inet_getpeer_v()\n  (git-fixes).\n- commit 04075c2\n\n- net: reenable NETIF_F_IPV6_CSUM offload for BIG TCP packets\n  (git-fixes).\n- commit 1ffaea2\n\n- netdev-genl: avoid empty messages in queue dump (git-fixes).\n- commit ae9dffe\n\n- netdev: fix repeated netlink messages in queue dump (git-fixes).\n- commit 6c79c90\n\n- net/ipv6: delete temporary address if mngtmpaddr is removed\n  or unmanaged (git-fixes).\n- commit aae6c2b\n\n- ipv4: Convert icmp_route_lookup() to dscp_t (git-fixes).\n- commit b7e7154\n\n- bpf: Fix mismatched RCU unlock flavour in bpf_out_neigh_v6\n  (git-fixes).\n- commit 9c53099\n\n- net: skip offload for NETIF_F_IPV6_CSUM if ipv6 header contains\n  extension (git-fixes).\n- commit 8c8e363\n\n- ipv4: give an IPv4 dev to blackhole_netdev (git-fixes).\n- commit 35af4c9\n\n- ipv4: ip_gre: Fix drops of small packets in ipgre_xmit\n  (git-fixes).\n- commit eb58d27\n\n- ipv4: ip_tunnel: Unmask upper DSCP bits in ip_tunnel_xmit()\n  (git-fixes).\n- commit fb13652\n\n- ipv4: ip_tunnel: Unmask upper DSCP bits in ip_md_tunnel_xmit()\n  (git-fixes).\n- commit a16177c\n\n- ipv4: ip_tunnel: Unmask upper DSCP bits in ip_tunnel_bind_dev()\n  (git-fixes).\n- commit a416975\n\n- ipv4: icmp: Unmask upper DSCP bits in icmp_route_lookup()\n  (git-fixes).\n  Refresh\n  patches.kabi/icmp-prevent-possible-NULL-dereferences-from-icmp_bu.patch.\n- commit 8dafbf4\n\n- netpoll: Ensure clean state on setup failures (git-fixes).\n- commit 0ebd5d5\n\n- neighbour: delete redundant judgment statements (git-fixes).\n- commit a855a28\n\n- ipv4: icmp: Pass full DS field to ip_route_input() (git-fixes).\n- commit c879486\n\n- ipv4: Mask upper DSCP bits and ECN bits in NETLINK_FIB_LOOKUP\n  family (git-fixes).\n- commit bfb1a66\n\n- ipv4: Check !in_dev earlier for ioctl(SIOCSIFADDR) (git-fixes).\n- commit 1a4319d\n\n- ipv4: Fix incorrect source address in Record Route option\n  (git-fixes).\n- commit ea09844\n\n- ipv4: fix source address selection with route leak (git-fixes).\n- commit 4c63285\n\n- net/ipv6: Fix the RT cache flush via sysctl using a previous\n  delay (git-fixes).\n- commit 78196a9\n\n- net/ipv6: Fix route deleting failure when metric equals 0\n  (git-fixes).\n- commit 33d3163\n\n- ipv4/route: avoid unused-but-set-variable warning (git-fixes).\n- commit a1c159a\n\n- ipv4: raw: Fix sending packets from raw sockets via IPsec\n  tunnels (git-fixes).\n- commit a22baf9\n\n- xsk: Add truesize to skb_add_rx_frag() (git-fixes).\n- commit e531eb3\n\n- Fix write to cloned skb in ipv6_hop_ioam() (git-fixes).\n- commit cc7dcb3\n\n- ipv4: properly combine dev_base_seq and ipv4.dev_addr_genid\n  (git-fixes).\n- commit b93126f\n\n- net: gro: parse ipv6 ext headers without frag0 invalidation\n  (git-fixes).\n- commit d47a0d9\n\n- net: don't dump stack on queue timeout (git-fixes).\n- commit ef7367c\n\n- net: Implement missing SO_TIMESTAMPING_NEW cmsg support\n  (git-fixes).\n- commit a28cbd8\n\n- net: Remove acked SYN flag from packet in the transmit queue\n  correctly (git-fixes).\n- commit 3f2806c\n\n- ipv4: ip_gre: Avoid skb_pull() failure in ipgre_xmit()\n  (git-fixes).\n- commit 2190f85\n\n- mptcp: consolidate suboption status (CVE-2025-21707\n  bsc#1238862).\n- commit 18d9efe\n\n- powerpc: Don't use --- in kernel logs (git-fixes).\n- commit df3b280\n\n- tools/hv: update route parsing in kvp daemon (git-fixes).\n- commit 2e81126\n\n- bpf: Fix bpf_sk_select_reuseport() memory leak (bsc#1236704\n  CVE-2025-21683).\n- commit e163503\n\n- i2c: imx-lpi2c: Fix clock count when probe defers (git-fixes).\n- ASoC: soc-pcm: Fix hw_params() and DAPM widget sequence\n  (git-fixes).\n- ALSA: hda/realtek: Fix built-mic regression on other ASUS models\n  (git-fixes).\n- ALSA: hda/realtek - Enable speaker for HP platform (git-fixes).\n- commit 5b6152a\n\n- spi: tegra114: Don't fail set_cs_timing when delays are zero\n  (git-fixes).\n- drm/i915/pxp: fix undefined reference to\n  `intel_pxp_gsccs_is_ready_for_sessions' (git-fixes).\n- drm: Select DRM_KMS_HELPER from DRM_DEBUG_DP_MST_TOPOLOGY_REFS\n  (git-fixes).\n- drm/fdinfo: Protect against driver unbind (git-fixes).\n- drm/nouveau: Fix WARN_ON in nouveau_fence_context_kill()\n  (git-fixes).\n- drm/amd/display: Force full update in gpu reset (stable-fixes).\n- ata: libata-scsi: Improve CDL control (git-fixes).\n- ata: libata-scsi: Fix ata_msense_control_ata_feature()\n  (git-fixes).\n- ata: libata-scsi: Fix ata_mselect_control_ata_feature() return\n  type (git-fixes).\n- USB: serial: simple: add OWON HDS200 series oscilloscope support\n  (stable-fixes).\n- USB: serial: ftdi_sio: add support for Abacus Electrics Optical\n  Probe (stable-fixes).\n- USB: serial: option: add Sierra Wireless EM9291 (stable-fixes).\n- usb: quirks: Add delay init quirk for SanDisk 3.2Gen1 Flash\n  Drive (stable-fixes).\n- USB: VLI disk crashes if LPM is used (stable-fixes).\n- USB: storage: quirk for ADATA Portable HDD CH94 (stable-fixes).\n- usb: quirks: add DELAY_INIT quirk for Silicon Motion Flash Drive\n  (stable-fixes).\n- USB: OHCI: Add quirk for LS7A OHCI controller (rev 0x02)\n  (stable-fixes).\n- mei: me: add panther lake H DID (stable-fixes).\n- spi: tegra210-quad: add rate limiting and simplify timeout\n  error message (stable-fixes).\n- spi: tegra210-quad: use WARN_ON_ONCE instead of WARN_ON for\n  timeouts (stable-fixes).\n- ACPI: EC: Set ec_no_wakeup for Lenovo Go S (stable-fixes).\n- ACPI PPTT: Fix coding mistakes in a couple of sizeof() calls\n  (stable-fixes).\n- ntb_hw_amd: Add NTB PCI ID for new gen CPU (stable-fixes).\n- ntb: reduce stack usage in idt_scan_mws (stable-fixes).\n- rtc: pcf85063: do a SW reset if POR failed (stable-fixes).\n- thunderbolt: Scan retimers after device router has been\n  enumerated (stable-fixes).\n- usb: host: xhci-plat: mvebu: use -\u0026gt;quirks instead of\n  - \u0026gt;init_quirk() func (stable-fixes).\n- usb: gadget: aspeed: Add NULL pointer check in\n  ast_vhub_init_dev() (stable-fixes).\n- usb: dwc3: gadget: Avoid using reserved endpoints on Intel\n  Merrifield (stable-fixes).\n- usb: dwc3: gadget: Refactor loop to avoid NULL endpoints\n  (stable-fixes).\n- usb: host: max3421-hcd: Add missing spi_device_id table\n  (stable-fixes).\n- sound/virtio: Fix cancel_sync warnings on uninitialized\n  work_structs (stable-fixes).\n- dmaengine: dmatest: Fix dmatest waiting less when interrupted\n  (stable-fixes).\n- iio: adc: ad7768-1: Fix conversion result sign (git-fixes).\n- iio: adc: ad7768-1: Move setting of val a bit later to avoid\n  unnecessary return value check (stable-fixes).\n- pinctrl: renesas: rza2: Fix potential NULL pointer dereference\n  (stable-fixes).\n- crypto: ccp - Add support for PCI device 0x1134 (stable-fixes).\n- auxdisplay: hd44780: Fix an API misuse in hd44780.c (git-fixes).\n- auxdisplay: hd44780: Convert to platform remove callback\n  returning void (stable-fixes).\n- commit fe3cf03\n\n- net: dsa: sja1105: fix kasan out-of-bounds warning in sja1105_table_delete_entry() (CVE-2025-22107 bsc#1241575)\n- commit 673084b\n\n- ibmvnic: Use kernel helpers for hex dumps (CVE-2025-22104 bsc#1241550)\n- commit 44ef4eb\n\n- dm: always update the array size in realloc_argv on success\n  (git-fixes).\n- commit 80e573b\n\n- dm-bufio: don't schedule in atomic context (git-fixes).\n- commit 59b9988\n\n- dm-ebs: fix prefetch-vs-suspend race (git-fixes).\n- commit 89effad\n\n- dm-verity: fix prefetch-vs-suspend race (git-fixes).\n- commit 6899d31\n\n- dm-integrity: set ti-\u0026gt;error on memory allocation failure\n  (git-fixes).\n- commit 3c1b2c7\n\n- netfilter: nf_tables: don't unregister hook when table is\n  dormant (CVE-2025-22064 bsc#1241413).\n- commit 3c82332\n\n- net: ipv6: fix UDPv6 GSO segmentation with NAT (git-fixes).\n- commit a110462\n\n- net_sched: qfq: Fix double list add in class with netem as\n  child qdisc (git-fixes).\n- commit 8e1bbd0\n\n- net_sched: ets: Fix double list add in class with netem as\n  child qdisc (git-fixes).\n- commit 2e9fa99\n\n- net_sched: hfsc: Fix a UAF vulnerability in class with netem\n  as child qdisc (git-fixes).\n- commit 3f5a489\n\n- net_sched: drr: Fix double list add in class with netem as\n  child qdisc (git-fixes).\n- commit 4947830\n\n- ax25: Fix refcount leak caused by setting SO_BINDTODEVICE\n  sockopt (CVE-2025-21792 bsc#1238745).\n- commit 2ffce83\n\n- ipv6: mcast: add RCU protection to mld_newpack() (CVE-2025-21758\n  bsc#1238737).\n- commit 4b8b3e5\n\n- Bluetooth: btusb: avoid NULL pointer dereference in\n  skb_dequeue() (git-fixes).\n- wifi: brcm80211: fmac: Add error handling for\n  brcmf_usb_dl_writeimage() (git-fixes).\n- wifi: plfxlc: Remove erroneous assert in plfxlc_mac_release\n  (git-fixes).\n- commit 470cfc0\n\n- net: ipv6: fix dst ref loops in rpl, seg6 and ioam6 lwtunnels\n  (CVE-2025-21768 bsc#1238714).\n- commit ed713b9\n\n- kABI workaround struct rcu_head and ax25_ptr (CVE-2025-21812\n  bsc#1238471).\n- commit 714a2d7\n\n- btrfs: fix block group refcount race in\n  btrfs_create_pending_block_groups() (bsc#1241578\n  CVE-2025-22115).\n- commit 1f7a10d\n\n- Refresh\n  patches.kabi/kabi-fix-for-bpf-Prevent-tailcall-infinite-loop-caus.patch.\n  Piggyback kABI workaround for \u0026quot;struct bpf_subprog_info\u0026quot; for upstream\n  commit 51081a3f25c7 \u0026quot;bpf: track changes_pkt_data property for global\n  functions\u0026quot;.\n- commit bf7c4bc\n\n- Add missing bugzilla references (CVE-2025-22105 bsc#1241548 CVE-2025-37860 bsc#1241452)\n- commit 00ec2e2\n\n- atm: Fix NULL pointer dereference (CVE-2025-22018 bsc#1241266)\n- commit 8ef48c7\n\n- bpf: bpf_local_storage: Always use bpf_mem_alloc in PREEMPT_RT (CVE-2024-58070 bsc#1238983)\n- commit 335e132\n\n- iommu/vt-d: Avoid use of NULL after WARN_ON_ONCE (CVE-2025-21833, bsc#1239108).\n- commit 069abee\n\n- sfc: fix NULL dereferences in ef100_process_design_param()\n  (CVE-2025-37860).\n- net: mvpp2: Prevent parser TCAM memory corruption\n  (CVE-2025-22060 bsc#1241526).\n- bonding: check xdp prog when set bond mode (CVE-2025-22105).\n- bonding: return detailed error when loading native XDP fails\n  (CVE-2025-22105).\n- commit 1110c2d\n\n- ALSA: ump: Fix buffer overflow at UMP SysEx message conversion\n  (bsc#1242044).\n- commit 43160c9\n\n- Correct the upsteram version numbers in the previous patches\n- commit 6f72baf\n\n- mmc: renesas_sdhi: Fix error handling in renesas_sdhi_probe\n  (git-fixes).\n- platform/x86/intel-uncore-freq: Fix missing uncore sysfs during\n  CPU hotplug (git-fixes).\n- commit f912ebf\n\n- Require zstd in kernel-default-devel when module compression is zstd\n  To use ksym-provides tool modules need to be uncompressed.\n  Without zstd at least kernel-default-base does not have provides.\n  Link: https://github.com/openSUSE/rpm-config-SUSE/pull/82\n- commit a3262dd\n\n- net: ibmveth: make veth_pool_store stop hanging (CVE-2025-22053\n  bsc#1241373).\n- commit 509c07e\n\n- powerpc/boot: Fix dash warning (bsc#1215199).\n- commit aeb4455\n\n- exec: fix the racy usage of fs_struct-\u0026gt;in_exec (CVE-2025-22029\n  bsc#1241378).\n- commit f780e88\n\n- x86/mm: Fix flush_tlb_range() when used for zapping normal PMDs\n  (CVE-2025-22045 bsc#1241433).\n- commit 1e24dab\n\n- powerpc/boot: Check for ld-option support (bsc#1215199).\n- commit 333e1e5\n\n- selftests/bpf: extend changes_pkt_data with cases w/o\n  subprograms (bsc#1241590).\n- bpf: fix null dereference when computing changes_pkt_data of\n  prog w/o subprogs (bsc#1241590).\n- selftests/bpf: validate that tail call invalidates packet\n  pointers (bsc#1241590).\n- bpf: consider that tail calls invalidate packet pointers\n  (bsc#1241590).\n- selftests/bpf: freplace tests for tracking of\n  changes_packet_data (bsc#1241590).\n- bpf: check changes_pkt_data property for extension programs\n  (bsc#1241590).\n- Refresh patches.kabi/kabi-fix-for-bpf-Prevent-tailcall-infinite-loop-caus.patch\n- selftests/bpf: test for changing packet data from global\n  functions (bsc#1241590).\n- bpf: track changes_pkt_data property for global functions\n  (bsc#1241590).\n- bpf: refactor bpf_helper_changes_pkt_data to use helper number\n  (bsc#1241590).\n- bpf: add find_containing_subprog() utility function\n  (bsc#1241590).\n- commit e531d2b\n\n- Update\n  patches.suse/memstick-rtsx_usb_ms-Fix-slab-use-after-free-in-rtsx.patch\n  (bsc#1241280 CVE-2025-22020).\n  Added CVE reference\n- commit 80d99d3\n\n- Fixup breakage in ext2 introduced by backporting in:\n  patches.suse/ext2-Avoid-reading-renamed-directory-if-parent-does-.patch.\n- commit b7c808a\n\n- cxgb4: fix memory leak in cxgb4_init_ethtool_filters() error\n  path (git-fixes).\n- eth: bnxt: fix missing ring index trim on error path\n  (git-fixes).\n- igc: add lock preventing multiple simultaneous PTM transactions\n  (git-fixes).\n- igc: cleanup PTP module if probe fails (git-fixes).\n- igc: handle the IGC_PTP_ENABLED flag correctly (git-fixes).\n- igc: move ktime snapshot into PTM retry loop (git-fixes).\n- igc: increase wait time before retrying PTM (git-fixes).\n- igc: fix PTM cycle trigger logic (git-fixes).\n- idpf: fix adapter NULL pointer dereference on reboot\n  (git-fixes).\n- e1000e: change k1 configuration on MTP and later platforms\n  (git-fixes).\n- gve: handle overflow when reporting TX consumed descriptors\n  (git-fixes).\n- net/mlx5e: SHAMPO, Make reserved size independent of page size\n  (git-fixes).\n- vdpa/mlx5: Fix oversized null mkey longer than 32bit\n  (git-fixes).\n- idpf: check error for register_netdev() on init (git-fixes).\n- ice: stop truncating queue ids when checking (git-fixes).\n- virtchnl: make proto and filter action count unsigned\n  (git-fixes).\n- ice: fix reservation of resources for RDMA when disabled\n  (git-fixes).\n- net/mlx5: Start health poll after enable hca (git-fixes).\n- bnxt_en: Linearize TX SKB if the fragments exceed the max\n  (git-fixes).\n- bnxt_en: Mask the bd_cnt field in the TX BD properly\n  (git-fixes).\n- net/mlx5e: Fix ethtool -N flow-type ip4 to RSS context\n  (git-fixes).\n- igb: reject invalid external timestamp requests for 82580-based\n  HW (git-fixes).\n- net/mlx5e: Prevent bridge link show failure for\n  non-eswitch-allowed devices (git-fixes).\n- net/mlx5: Lag, Check shared fdb before creating MultiPort\n  E-Switch (git-fixes).\n- net/mlx5: Fill out devlink dev info only for PFs (git-fixes).\n- net/mlx5: IRQ, Fix null string in debug print (git-fixes).\n- gve: set xdp redirect target only when it is available\n  (git-fixes).\n- ice: Add check for devm_kzalloc() (git-fixes).\n- commit 8b3f5c6\n\n- ext4: fix OOB read when checking dotdot dir (bsc#1241640\n  CVE-2025-37785).\n- ext4: fix out-of-bound read in ext4_xattr_inode_dec_ref_all()\n  (bsc#1241593 CVE-2025-22121).\n- proc: fix UAF in proc_get_inode() (bsc#1240802 CVE-2025-21999).\n- fs: relax assertions on failure to encode file handles\n  (bsc#1236086 CVE-2024-57924).\n- commit 0e972d0\n\n- net: gso: fix ownership in __udp_gso_segment (CVE-2025-21926\n  bsc#1240712).\n- commit a0db76b\n\n- jfs: add sanity check for agwidth in dbMount (git-fixes).\n- commit 8faa28a\n\n- jfs: Prevent copying of nlink with value 0 from disk inode\n  (git-fixes).\n- commit eea1d40\n\n- fs/jfs: Prevent integer overflow in AG size calculation\n  (git-fixes).\n- commit fce66a4\n\n- fs/jfs: cast inactags to s64 to prevent potential overflow\n  (git-fixes).\n- commit 8b1cc16\n\n- jfs: Fix uninit-value access of imap allocated in the diMount()\n  function (git-fixes).\n- commit 5b527ae\n\n- irqchip/gic-v2m: Prevent use after free of gicv2m_get_fwnode()\n  (git-fixes).\n- drm/amd/display: Fix gpu reset in multidisplay config\n  (git-fixes).\n- Revert \u0026quot;drm/meson: vclk: fix calculation of 59.94 fractional\n  rates\u0026quot; (git-fixes).\n- commit 9f8b470\n\n- block: integrity: Do not call set_page_dirty_lock() (git-fixes).\n- loop: stop using vfs_iter_{read,write} for buffered I/O\n  (git-fixes).\n- loop: LOOP_SET_FD: send uevents for partitions (git-fixes).\n- loop: properly send KOBJ_CHANGED uevent for disk device\n  (git-fixes).\n- block: fix resource leak in blk_register_queue() error path\n  (git-fixes).\n- block: make sure -\u0026gt;nr_integrity_segments is cloned in\n  blk_rq_prep_clone (git-fixes).\n- badblocks: fix missing bad blocks on retry in _badblocks_check()\n  (git-fixes).\n- badblocks: fix merge issue when new badblocks align with pre+1\n  (git-fixes).\n- badblocks: fix the using of MAX_BADBLOCKS (git-fixes).\n- badblocks: return error if any badblock set fails (git-fixes).\n- badblocks: return error directly when setting badblocks exceeds\n  512 (git-fixes).\n- badblocks: Fix error shitf ops (git-fixes).\n- blk-throttle: fix lower bps rate by throtl_trim_slice()\n  (git-fixes).\n- block: change blk_mq_add_to_batch() third argument type to bool\n  (git-fixes).\n- block: fix conversion of GPT partition name to 7-bit\n  (git-fixes).\n- ublk: set_params: properly check if parameters can be applied\n  (git-fixes).\n- block: fix 'kmem_cache of name 'bio-108' already exists'\n  (git-fixes).\n- commit 607aa83\n\n- drm/tests: Build KMS helpers when DRM_KUNIT_TEST_HELPERS is\n  enabled (git-fixes).\n- commit 03063eb\n\n- USB: wdm: add annotation (git-fixes).\n- USB: wdm: wdm_wwan_port_tx_complete mutex in atomic context\n  (git-fixes).\n- USB: wdm: close race between wdm_open and wdm_wwan_port_stop\n  (git-fixes).\n- USB: wdm: handle IO errors in wdm_wwan_port_start (git-fixes).\n- usb: dwc3: gadget: check that event count does not exceed\n  event buffer length (git-fixes).\n- usb: dwc3: xilinx: Prevent spike in reset signal (git-fixes).\n- usb: cdns3: Fix deadlock when using NCM gadget (git-fixes).\n- usb: chipidea: ci_hdrc_imx: implement usb_phy_init() error\n  handling (git-fixes).\n- usb: chipidea: ci_hdrc_imx: fix call balance of regulator\n  routines (git-fixes).\n- serial: sifive: lock port in startup()/shutdown() callbacks\n  (git-fixes).\n- serial: msm: Configure correct working mode before starting\n  earlycon (git-fixes).\n- misc: microchip: pci1xxxx: Fix incorrect IRQ status handling\n  during ack (git-fixes).\n- misc: microchip: pci1xxxx: Fix Kernel panic during IRQ handler\n  registration (git-fixes).\n- string: Add load_unaligned_zeropad() code path to\n  sized_strscpy() (git-fixes).\n- kunit: qemu_configs: SH: Respect kunit cmdline (git-fixes).\n- Revert \u0026quot;wifi: mac80211: Update skb's control block key in\n  ieee80211_tx_dequeue()\u0026quot; (git-fixes).\n- wifi: mac80211: Update skb's control block key in\n  ieee80211_tx_dequeue() (git-fixes).\n- selftests/mm: generate a temporary mountpoint for cgroup\n  filesystem (git-fixes).\n- selftests/futex: futex_waitv wouldblock test should fail\n  (git-fixes).\n- phy: freescale: imx8m-pcie: assert phy reset and perst in\n  power off (git-fixes).\n- PCI: vmd: Make vmd_dev::cfg_lock a raw_spinlock_t type\n  (stable-fixes).\n- ktest: Fix Test Failures Due to Missing LOG_FILE Directories\n  (stable-fixes).\n- wifi: mt76: mt76x2u: add TP-Link TL-WDN6200 ID to device table\n  (stable-fixes).\n- wifi: ath12k: Fix invalid data access in\n  ath12k_dp_rx_h_undecap_nwifi (stable-fixes).\n- wifi: ath12k: Fix invalid entry fetch in\n  ath12k_dp_mon_srng_process (stable-fixes).\n- net: usb: asix_devices: add FiberGecko DeviceID (stable-fixes).\n- media: uvcvideo: Add quirk for Actions UVC05 (stable-fixes).\n- mmc: dw_mmc: add a quirk for accessing 64-bit FIFOs in two\n  halves (stable-fixes).\n- pm: cpupower: bench: Prevent NULL dereference on malloc failure\n  (stable-fixes).\n- commit b154b2c\n\n- drm/tests: probe-helper: Fix drm_display_mode memory leak\n  (git-fixes).\n- drm/tests: modes: Fix drm_display_mode memory leak (git-fixes).\n- drm/tests: cmdline: Fix drm_display_mode memory leak\n  (git-fixes).\n- drm/tests: helpers: Create kunit helper to destroy a\n  drm_display_mode (stable-fixes).\n- drm/i915/gvt: fix unterminated-string-initialization warning\n  (stable-fixes).\n- drm/i915: Disable RPG during live selftest (git-fixes).\n- gpio: zynq: Fix wakeup source leaks on device unbind\n  (stable-fixes).\n- drm/amd: Handle being compiled without SI or CIK support better\n  (stable-fixes).\n- drm/mediatek: mtk_dpi: Explicitly manage TVD clock in power\n  on/off (stable-fixes).\n- drm/mediatek: mtk_dpi: Move the input_2p_en bit to platform data\n  (stable-fixes).\n- drm/amdgpu: handle amdgpu_cgs_create_device() errors in\n  amd_powerplay_create() (stable-fixes).\n- drm/amdkfd: debugfs hang_hws skip GPU with MES (stable-fixes).\n- drm/amdkfd: Fix pqm_destroy_queue race with GPU reset\n  (stable-fixes).\n- drm/amdkfd: Fix mode1 reset crash issue (stable-fixes).\n- drm/amdkfd: clamp queue size to minimum (stable-fixes).\n- drm/amd/display: add workaround flag to link to force FFE preset\n  (stable-fixes).\n- drm/bridge: panel: forbid initializing a panel with unknown\n  connector type (stable-fixes).\n- drm: panel-orientation-quirks: Add quirk for OneXPlayer Mini\n  (Intel) (stable-fixes).\n- drm: panel-orientation-quirks: Add new quirk for GPD Win 2\n  (stable-fixes).\n- drm: panel-orientation-quirks: Add quirk for AYA NEO Slide\n  (stable-fixes).\n- drm: panel-orientation-quirks: Add quirks for AYA NEO Flip DS\n  and KB (stable-fixes).\n- drm: panel-orientation-quirks: Add support for AYANEO 2S\n  (stable-fixes).\n- drm: allow encoder mode_set even when connectors change for crtc\n  (stable-fixes).\n- fbdev: omapfb: Add 'plane' value check (stable-fixes).\n- drm/tests: helpers: Fix compiler warning (git-fixes).\n- drm/tests: helpers: Add helper for\n  drm_display_mode_from_cea_vic() (stable-fixes).\n- drm/i915/dg2: wait for HuC load completion before running\n  selftests (stable-fixes).\n- drm/tests: Add helper to create mock crtc (stable-fixes).\n- commit a0a41da\n\n- char: misc: register chrdev region with all possible minors\n  (git-fixes).\n- Revert \u0026quot;drivers: core: synchronize really_probe() and\n  dev_uevent()\u0026quot; (stable-fixes).\n- Bluetooth: l2cap: Process valid commands in too long frame\n  (stable-fixes).\n- drivers: base: devres: Allow to release group on device release\n  (stable-fixes).\n- Bluetooth: hci_uart: Fix another race during initialization\n  (git-fixes).\n- Bluetooth: hci_uart: fix race during initialization\n  (stable-fixes).\n- cdc_ether|r8152: ThinkPad Hybrid USB-C/A Dock quirk\n  (stable-fixes).\n- ahci: add PCI ID for Marvell 88SE9215 SATA Controller\n  (stable-fixes).\n- ASoC: amd: yc: update quirk data for new Lenovo model\n  (stable-fixes).\n- ASoC: fsl_audmix: register card device depends on 'dais'\n  property (stable-fixes).\n- ASoC: SOF: topology: Use krealloc_array() to replace krealloc()\n  (stable-fixes).\n- ASoC: amd: Add DMI quirk for ACP6X mic support (stable-fixes).\n- ALSA: usb-audio: Fix CME quirk for UF series keyboards\n  (stable-fixes).\n- ALSA: hda: intel: Add Lenovo IdeaPad Z570 to probe denylist\n  (stable-fixes).\n- ALSA: hda: intel: Fix Optimus when GPU has no sound\n  (stable-fixes).\n- drm/tests: Add helper to create mock plane (stable-fixes).\n- drm/tests: helpers: Add atomic helpers (stable-fixes).\n- drm/i915/xelpg: Extend driver code of Xe_LPG to Xe_LPG+\n  (stable-fixes).\n- commit 58c19a1\n\n- Update\n  patches.suse/vmxnet3-unregister-xdp-rxq-info-in-the-reset-path.patch\n  (bsc#1241394 CVE-2025-22106 bsc#1241547).\n- commit a998629\n\n- mm: (un)track_pfn_copy() fix + doc improvements (CVE-2025-22090\n  bsc#1241537).\n- commit 1ccdfdd\n\n- x86/mm/pat: Fix VM_PAT handling when fork() fails in\n  copy_page_range() (CVE-2025-22090 bsc#1241537).\n- commit f0ac623\n\n- exfat: fix random stack corruption after get_block (bsc#1241426\n  CVE-2025-22036).\n- commit 1f685c3\n\n- exfat: do not fallback to buffered write (git-fixes).\n- commit f7d2bc8\n\n- exfat: drop -\u0026gt;i_size_ondisk (git-fixes).\n- commit 9420be9\n\n- fs/ntfs3: Prevent integer overflow in hdr_first_de()\n  (bsc#1241416 CVE-2025-22080).\n- commit 401237e\n\n- clk: samsung: Fix UBSAN panic in samsung_clk_init()\n  (CVE-2025-39728 bsc#1241626).\n- commit 146debe\n\n- net: phy: leds: fix memory leak (git-fixes).\n- net: phy: microchip: force IRQ polling mode for lan88xx\n  (git-fixes).\n- crypto: atmel-sha204a - Set hwrng quality to lowest possible\n  (git-fixes).\n- commit 007e98d\n\n- net: ethtool: Don't call .cleanup_data when prepare_data fails\n  (git-fixes).\n- ethtool: Fix set RXNFC command with symmetric RSS hash\n  (git-fixes).\n- ethtool: Fix wrong mod state in case of verbose and no_mask\n  bitset (git-fixes).\n- ethtool: Fix context creation with no parameters (git-fixes).\n- ethtool: fix setting key and resetting indir at once\n  (git-fixes).\n- ethtool: rss: echo the context number back (git-fixes).\n- net: ethtool: Fix RSS setting (git-fixes).\n- ethtool: netlink: do not return SQI value if link is down\n  (git-fixes).\n- ethtool: netlink: Add missing ethnl_ops_begin/complete\n  (git-fixes).\n- ethtool: don't propagate EOPNOTSUPP from dumps (git-fixes).\n- ethtool: plca: fix plca enable data type while parsing the value\n  (git-fixes).\n- commit 6a09a48\n\n- OPP: add index check to assert to avoid buffer overflow in _read_freq() (bsc#1238961)\n- commit 2e43a01\n\n- Test the correct macro to detect RT kernel build\n  Fixes: 470cd1a41502 (\u0026quot;kernel-binary: Support livepatch_rt with merged RT branch\u0026quot;)\n- commit 50e863e\n\n- mm: clear uffd-wp PTE/PMD state on mremap() (bsc#1237111\n  CVE-2025-21696).\n  Refreshed:\n  patches.suse/mm-hugetlb-Add-huge-page-size-param-to-huge_ptep_get_and_clear.patch\n- commit e18d57e\n\n- bpf: Make sure internal and UAPI bpf_redirect flags don't\n  overlap (bsc#1233098 CVE-2024-50163).\n- commit f73adfb\n\n- bpf: selftests: send packet to devmap redirect XDP (bsc#1233075\n  CVE-2024-50162).\n- bpf: devmap: provide rxq after redirect (bsc#1233075\n  CVE-2024-50162).\n- commit efb272f\n\n- mm: clear uffd-wp PTE/PMD state on mremap() (bsc#1237111\n  CVE-2025-21696).\n  Refreshed:\n  patches.suse/mm-hugetlb-Add-huge-page-size-param-to-huge_ptep_get_and_clear.patch\n- commit 559ab65\n\n- mm/migrate: fix shmem xarray update during migration\n  (CVE-2025-22015 bsc#1240944).\n- commit 18f748b\n\n- fou: fix initialization of grc (CVE-2024-46763 bsc#1230764).\n- commit c144530\n\n- kernel-source: Also update the search to match bin/env\n  Fixes: dc2037cd8f94 (\u0026quot;kernel-source: Also replace bin/env\u0026quot;\n- commit bae6b69\n\n- rpm/check-for-config-changes: Add GCC_ASM_FLAG_OUTPUT_BROKEN\n  Both spellings are actually used\n- rpm/check-for-config-changes: Add GCC_ASM_FLAG_OUTPUT_BROKEN\n- commit d9e0b30\n\n- fou: Fix null-ptr-deref in GRO (CVE-2024-46763 bsc#1230764).\n- commit 759f2a9\n\n- hwpoison, memory_hotplug: lock folio before unmap hwpoisoned\n  folio (CVE-2025-21931 bsc#1240709).\n- commit 1ece281\n\n- net: fix geneve_opt length integer overflow (CVE-2025-22055\n  bsc#1241371).\n- commit 45017c8\n\n- PCI/MSI: Add an option to write MSIX ENTRY_DATA before any reads\n  (git-fixes).\n- irqchip/davinci: Remove leftover header (git-fixes).\n- tty: n_tty: use uint for space returned by tty_write_room()\n  (git-fixes).\n- commit 2e047cb\n\n- kABI fix for sctp: detect and prevent references to a freed\n  transport in sendmsg (git-fixes).\n- commit ce43999\n\n- wifi: ath11k: update channel list in reg notifier instead reg\n  worker (CVE-2025-23133 bsc#1241451).\n- commit dfc599a\n\n- exfat: short-circuit zero-byte writes in exfat_file_write_iter\n  (git-fixes).\n- commit c31ee51\n\n- exfat: fix soft lockup in exfat_clear_bitmap (git-fixes).\n- commit 527ed08\n\n- nfsd: decrease sc_count directly if fail to queue dl_recall\n  (git-fixes).\n- commit 91b68ee\n\n- nfs: add missing selections of CONFIG_CRC32 (git-fixes).\n- commit f409d6e\n\n- nvmet-fcloop: swap list_add_tail arguments (git-fixes).\n- nvme-pci: skip nvme_write_sq_db on empty rqlist (git-fixes).\n- nvme/ioctl: don't warn on vectorized uring_cmd with fixed buffer\n  (git-fixes).\n- nvme-pci: fix stuck reset on concurrent DPC and HP (git-fixes).\n- nvme-pci: skip CMB blocks incompatible with PCI P2P DMA\n  (git-fixes).\n- nvme-pci: clean up CMBMSC when registering CMB fails\n  (git-fixes).\n- nvme-tcp: fix possible UAF in nvme_tcp_poll (git-fixes).\n- commit bf9d0e5\n\n- Move upstreamed smb patch into sorted section\n  Also move other out-of-tree patches into the proper section\n- commit ba77adc\n\n- rpm/kernel-binary.spec.in: revert the revert change with OrderWithRequires\n  The recent change using OrderWithRequires addresses the known issues,\n  but also caused regressions for the existing image or package builds.\n  For SLE15-SPx, better to be conservative and stick with the older way.\n- commit bbe05e4\n\n- Refresh\n  patches.suse/kernel-add-product-identifying-information-to-kernel-build.patch.\n  scripts/gen-suse_version_h.sh requires bash, yet in Makefile\n  CONFIG_SHELL is defined to 'sh'. In openSUSE and SUSE products 'sh' is a\n  symbolic link to 'bash', hence this isn't a problem. However\n  distributions like Debian and Ubuntu 'sh' is symbolically linked to\n  'dash' instead, and gen-suse_version_h.sh will fail to run with\n  ./scripts/gen-suse_version_h.sh: 3: Syntax error: \u0026quot;(\u0026quot; unexpected\n  make[1]: *** [/home/runner/work/libbpf/libbpf/.kernel/Makefile:1135: include/generated/uapi/linux/suse_version.h] Error 2\n  make: *** [Makefile:224: __sub-make] Error 2\n  Explicitly use bash to run scripts/gen-suse_version_h.sh to make sure\n  it will always work.\n- commit 2be3c0f\n\n- scsi: iscsi: Fix missing scsi_host_put() in error path\n  (git-fixes).\n- scsi: hisi_sas: Enable force phy when SATA disk directly\n  connected (git-fixes).\n- scsi: lpfc: Restore clearing of NLP_UNREG_INP in ndlp-\u0026gt;nlp_flag\n  (git-fixes).\n- scsi: scsi_debug: Remove a reference to in_use_bm (git-fixes).\n- scsi: mpt3sas: Fix a locking bug in an error path (git-fixes).\n- scsi: mpi3mr: Fix locking in an error path (git-fixes).\n- scsi: mpt3sas: Reduce log level of ignore_delay_remove message\n  to KERN_INFO (git-fixes).\n- scsi: core: Use GFP_NOIO to avoid circular locking dependency\n  (git-fixes).\n- commit c9f2a96\n\n- net: annotate data-races around sk-\u0026gt;sk_tx_queue_mapping\n  (git-fixes).\n- commit 39ebbf2\n\n- sctp: detect and prevent references to a freed transport in\n  sendmsg (git-fixes).\n- commit 1334236\n\n- sctp: add mutual exclusion in proc_sctp_do_udp_port()\n  (git-fixes).\n- commit 711cff2\n\n- sctp: Fix undefined behavior in left shift operation\n  (git-fixes).\n- commit a1edf61\n\n- netpoll: Use rcu_access_pointer() in netpoll_poll_lock\n  (git-fixes).\n- commit 4965a27\n\n- tcp: fix mptcp DSS corruption due to large pmtu xmit\n  (git-fixes).\n- commit ba5be47\n\n- sctp: ensure sk_state is set to CLOSED if hashing fails in\n  sctp_listen_start (git-fixes).\n- commit a7b311d\n\n- sctp: fix association labeling in the duplicate COOKIE-ECHO case\n  (git-fixes).\n- commit f2ab0aa\n\n- sctp: prefer struct_size over open coded arithmetic (git-fixes).\n- commit e26aab9\n\n- net: blackhole_dev: fix build warning for ethh set but not used\n  (git-fixes).\n- commit 9f9bf2f\n\n- net: sctp: fix skb leak in sctp_inq_free() (git-fixes).\n- commit ef140e3\n\n- sctp: fix busy polling (git-fixes).\n- commit 533e122\n\n- sctp: support MSG_ERRQUEUE flag in recvmsg() (git-fixes).\n- commit 1e9a8f7\n\n- i2c: cros-ec-tunnel: defer probe if parent EC is not present\n  (git-fixes).\n- commit 68f8146\n\n- vmxnet3: unregister xdp rxq info in the reset path\n  (bsc#1241394).\n- vmxnet3: Fix tx queue race condition with XDP (bsc#1241394).\n- commit d09ed0e\n\n- ALSA: hda/realtek - Fixed ASUS platform headset Mic issue\n  (git-fixes).\n- commit 53f07fb\n\n- Refresh patches.suse/ALSA-hda-realtek-Workaround-for-resume-on-Dell-Venue.patch\n  The patch was applied incorrectly to a wrong device\n- commit cf41ba6\n\n- Bluetooth: vhci: Avoid needless snprintf() calls (git-fixes).\n- wifi: wl1251: fix memory leak in wl1251_tx_work (git-fixes).\n- wifi: mac80211: Purge vif txq in ieee80211_do_stop()\n  (git-fixes).\n- wifi: at76c50x: fix use after free access in at76_disconnect\n  (git-fixes).\n- Bluetooth: l2cap: Check encryption key size on incoming\n  connection (git-fixes).\n- Bluetooth: btrtl: Prevent potential NULL dereference\n  (git-fixes).\n- Bluetooth: hci_event: Fix sending MGMT_EV_DEVICE_FOUND for\n  invalid address (git-fixes).\n- ASoC: codecs:lpass-wsa-macro: Fix logic of enabling vi channels\n  (git-fixes).\n- ASoC: codecs:lpass-wsa-macro: Fix vi feedback rate (git-fixes).\n- ASoC: Intel: avs: Fix null-ptr-deref in avs_component_probe()\n  (git-fixes).\n- ASoC: qcom: Fix sc7280 lpass potential buffer overflow\n  (git-fixes).\n- asus-laptop: Fix an uninitialized variable (git-fixes).\n- ata: libata-sata: Save all fields from sense data descriptor\n  (git-fixes).\n- commit b064ee6\n\n- smb: client: fix folio leaks and perf improvements (bsc#1239997,\n  bsc1241265).\n- commit 3640faf\n\n- net: mark racy access on sk-\u0026gt;sk_rcvbuf (git-fixes).\n- commit c7df85a\n\n- net: set SOCK_RCU_FREE before inserting socket into hashtable\n  (git-fixes).\n- commit 469342f\n\n- net: annotate data-races around sk-\u0026gt;sk_dst_pending_confirm\n  (git-fixes).\n- commit ddac370\n\n- Refresh patches.suse/x86-paravirt-Move-halt-paravirt-calls-under-CONFIG_PARAVIR.patch.\n  This fixes a build error\n- commit 885e121\n\n- ipv4: fib: annotate races around nh-\u0026gt;nh_saddr_genid and\n  nh-\u0026gt;nh_saddr (git-fixes).\n- commit 42e44b7\n\n- rpm/kernel-binary.spec.in: Also order against update-bootloader\n  (boo#1228659, boo#1240785, boo#1241038).\n- commit fe0a8c9\n\n- crypto: caam/qi - Fix drv_ctx refcount bug (git-fixes).\n- commit 004010d\n\n- selftests/bpf: Add a few tests to cover (git-fixes).\n- bpf: Add missed var_off setting in coerce_subreg_to_size_sx()\n  (git-fixes).\n- bpf: Add missed var_off setting in set_sext32_default_val()\n  (git-fixes).\n- commit 07fae33\n\n- Drop PCI patch that caused a regression (bsc#1241123)\n  The patch patches.suse/PCI-Avoid-reset-when-disabled-via-sysfs.patch\n  seems causing a regression about missing device passthrough on VM.\n  Drop it to address the regression.\n- commit 5845d87\n\n- bpf, test_run: Fix use-after-free issue in eth_skb_pkt_type()\n  (bsc#1240181 CVE-2025-21867).\n- commit 82a6d4f\n\n- Revert commit (bsc#1241051)\n  Delete\n  patches.suse/mm-various-give-up-if-pte_offset_map-_lock-fails.patch.\n- commit c63b737\n\n- rpm/package-descriptions: Add rt and rt_debug descriptions\n- commit 09573c0\n\n- fs/ntfs3: add prefix to bitmap_size() and use BITS_TO_U64()\n  (bsc#1241250).\n- commit a11e79b\n\n- x86/microcode/AMD: Split load_microcode_amd() (git-fixes).\n- Refresh\n  patches.suse/x86-microcode-AMD-Fix-out-of-bounds-on-systems-with-.patch.\n- commit e4a11da\n\n- x86/microcode/AMD: Pay attention to the stepping dynamically (git-fixes).\n- commit 581b74c\n\n- x86/microcode/intel: Set new revision only after a successful update (git-fixes).\n- commit 7ef0614\n\n- x86/microcode/AMD: Fix a -Wsometimes-uninitialized clang false positive (git-fixes).\n- commit 0584d8b\n\n- btrfs: fix hole expansion when writing at an offset beyond EOF\n  (bsc#1241151).\n- btrfs: fix swap file activation failure due to extents that\n  used to be shared (bsc#1241204).\n- btrfs: fix race with memory mapped writes when activating swap\n  file (bsc#1241204).\n- btrfs: fix missing snapshot drew unlock when root is dead\n  during swap activation (bsc#1241204).\n- btrfs: add and use helper to verify the calling task has locked\n  the inode (bsc#1241204).\n- commit d9b6443\n\n- sched: address a potential NULL pointer dereference in the\n  GRED scheduler (CVE-2025-21980 bsc#1240809).\n- commit ce44194\n\n- net: atm: fix use after free in lec_send() (CVE-2025-22004\n  bsc#1240835).\n- commit 0623761\n\n- llc: do not use skb_get() before dev_queue_xmit()\n  (CVE-2025-21925 bsc#1240713).\n- commit 79eced9\n\n- tools/power turbostat: report CoreThr per measurement interval\n  (git-fixes).\n- commit d3776d1\n\n- x86/microcode/AMD: Use the family,model,stepping encoded in the patch  ID (git-fixes).\n- Refresh\n  patches.suse/x86-microcode-AMD-Flush-patch-buffer-mapping-after-applica.patch.\n- commit 88521da\n\n- x86/microcode: Rework early revisions reporting (git-fixes).\n- Refresh\n  patches.suse/x86-microcode-AMD-Flush-patch-buffer-mapping-after-applica.patch.\n- commit 4d17d9e\n\n- ax25: rcu protect dev-\u0026gt;ax25_ptr (CVE-2025-21812 bsc#1238471).\n- commit 5fd1fff\n\n- x86/microcode: Remove the driver announcement and version (git-fixes).\n- commit 46995b1\n\n- x86/tdx: Emit warning if IRQs are enabled during HLT #VE handling (git-fixes).\n- commit d56cfaf\n\n- x86/tdx: Fix arch_safe_halt() execution for TDX VMs (git-fixes).\n- commit d95d976\n\n- Refresh\n  patches.suse/ipv6-remove-hard-coded-limitation-on-ipv6_pinfo.patch.\n- commit 0200f55\n\n- hfs/hfsplus: fix slab-out-of-bounds in hfs_bnode_read_key\n  (git-fixes).\n- commit 6eab8d6\n\n- x86/paravirt: Move halt paravirt calls under CONFIG_PARAVIRT (git-fixes).\n- commit df4a06f\n\n- x86/microcode/AMD: Flush patch buffer mapping after application (git-fixes).\n- commit 3abf82a\n\n- x86/dumpstack: Fix inaccurate unwinding from exception stacks due to  misplaced assignment (git-fixes).\n- commit 9a5f9b4\n\n- x86/entry: Fix ORC unwinder for PUSH_REGS with save_ret=1 (git-fixes).\n- commit a987e8f\n\n- x86/uaccess: Improve performance by aligning writes to 8 bytes in  copy_user_generic(), on non-FSRM/ERMS CPUs (git-fixes).\n- commit b668be3\n\n- x86/bugs: Add RSB mitigation document (git-fixes).\n- commit b8dad0f\n\n- x86/bugs: Don't fill RSB on context switch with eIBRS (git-fixes).\n- commit 187dbce\n\n- x86/bugs: Don't fill RSB on VMEXIT with eIBRS+retpoline (git-fixes).\n- commit 4f16d88\n\n- x86/bugs: Fix RSB clearing in indirect_branch_prediction_barrier() (git-fixes).\n- commit fb3ed54\n\n- x86/bugs: Use SBPB in write_ibpb() if applicable (git-fixes).\n- commit 4702713\n\n- x86/bugs: Rename entry_ibpb() to write_ibpb() (git-fixes).\n- commit 05f7f50\n\n- selftest/bpf: Add vsock test for sockmap rejecting unconnected\n  (bsc#1239470 CVE-2025-21854).\n- selftest/bpf: Adapt vsock_delete_on_close to sockmap rejecting\n  unconnected (bsc#1239470 CVE-2025-21854).\n- vsock/bpf: Warn on socket without transport (bsc#1239470\n  CVE-2025-21854).\n- commit 9aa107b\n\n- tools/power turbostat: Increase CPU_SUBSET_MAXCPUS to 8192\n  (bsc#1241175).\n- commit b06e876\n\n- sockmap, vsock: For connectible sockets allow only connected\n  (bsc#1239470 CVE-2025-21854).\n- bpf: sockmap, test for unconnected af_unix sock (bsc#1239470\n  CVE-2025-21854).\n- Refresh patches.suse/selftest-bpf-Add-test-for-af_vsock-poll.patch\n- bpf: syzkaller found null ptr deref in unix_bpf proto add\n  (bsc#1239470 CVE-2025-21854).\n- Refresh patches.suse/udp-fix-busy-polling.patch\n- Refresh\n  patches.suse/bpf-sockmap-SK_DROP-on-attempted-redirects-of-unsupported-.patch\n- commit 62e8475\n\n- bpf, vsock: Invoke proto::close on close() (bsc#1239470 CVE-2025-21854).\n- Refresh\n  patches.suse/vsock-Keep-the-binding-until-socket-destruction.patch.\n- Refresh patches.suse/vsock-Orphan-socket-after-transport-release.patch\n- commit a88600e\n\n- selftest/bpf: Add test for vsock removal from sockmap on close()\n  (bsc#1239470 CVE-2025-21854).\n- selftest/bpf: Add test for af_vsock poll() (bsc#1239470\n  CVE-2025-21854).\n- bpf, vsock: Fix poll() missing a queue (bsc#1239470\n  CVE-2025-21854).\n- commit 43f792d\n\n- RDMA/core: Silence oversized kvmalloc() warning (git-fixes)\n- commit 0801938\n\n- RDMA/cma: Fix workqueue crash in cma_netevent_work_handler (git-fixes)\n- commit 8be4a6f\n\n- RDMA/hns: Fix wrong maximum DMA segment size (git-fixes)\n- commit 9a0c549\n\n- RDMA/usnic: Fix passing zero to PTR_ERR in usnic_ib_pci_probe() (git-fixes)\n- commit 7bf895d\n\n- net: xdp: Disallow attaching device-bound programs in generic\n  mode (bsc#1238742 CVE-2025-21808).\n- commit c2feb9e\n\n- md/md-bitmap: fix wrong bitmap_limit for clustermd when write sb (bsc#1238212)\n  Also reenable patches.suse/md-md-bitmap-fix-writing-non-bitmap-pages-ab99.patch\n- commit 22ce219\n\n- bpf: Fix deadlock when freeing cgroup storage (CVE-2024-58088 bsc#1239510)\n- commit a5b985f\n\n- dpll: fix xa_alloc_cyclic() error handling (CVE-2025-22016 bsc#1240934)\n- commit 2521b46\n\n- devlink: fix xa_alloc_cyclic() error handling (CVE-2025-22017 bsc#1240936)\n- commit 6e391e8\n\n- zap_pid_ns_processes: clear TIF_NOTIFY_SIGNAL along with\n  TIF_SIGPENDING (bsc#1241167).\n- commit 2fe69fb\n\n- caif_virtio: fix wrong pointer check in cfv_probe()\n  (CVE-2025-21904 bsc#1240576).\n- commit 9a83e3e\n\n- Refresh\n  patches.kabi/kABI-fix-for-ipv6-remove-hard-coded-limitation-on-ip.patch.\n- commit 81847b0\n\n- xfs: flush inodegc before swapon (git-fixes).\n- commit c599968\n\n- net: mana: Switch to page pool for jumbo frames (git-fixes).\n- RDMA/mana_ib: Ensure variable err is initialized (git-fixes).\n- x86/hyperv: Fix check of return value from snp_set_vmsa()\n  (git-fixes).\n- commit 2b709c0\n\n- pwm: fsl-ftm: Handle clk_get_rate() returning 0 (git-fixes).\n- pwm: rcar: Improve register calculation (git-fixes).\n- pwm: mediatek: Prevent divide-by-zero in pwm_mediatek_config()\n  (git-fixes).\n- commit 9d83cd0\n\n- ata: sata_sx4: Add error handling in pdc20621_i2c_read()\n  (git-fixes).\n- ata: pata_pxa: Fix potential NULL pointer dereference in\n  pxa_ata_probe() (git-fixes).\n- commit dcc1d06\n\n- kABI workaround for powercap update (bsc#1241010).\n- commit 6da4ad4\n\n- drm/amd/display: Fix out-of-bound accesses (bsc#1240811 CVE-2025-21985)\n- commit f9ae89c\n\n- Revert \u0026quot;tcp: Fix bind() regression for v6-only wildcard and\u0026quot;\n  This reverts commit 10a8fd3005bd56ac305a4a4e9bf53cfc50aad28f.\n  This patch is part of a bigger series [0] and AFAIU can't be applied\n  individually. Applying the entire series would result in kABI breakage.\n  [0]\n  https://lore.kernel.org/all/20231213082029.35149-1-kuniyu@amazon.com/\n- commit 9692530\n\nPackage augeas was updated:\n\n- Add patch, fix for bsc#1239909 / CVE-2025-2588:  * CVE-2025-2588.patch\n\nPackage gcc14 was updated:\n\n- Exclude shared objects present for link editing in the GCC specific  subdirectory from provides processing via __provides_exclude_from.\n  [bsc#1244050][bsc#1243991]\n\n- Make cross-*-gcc14-bootstrap package conflict with the non-bootstrap\n  variant conflict with the unversioned cross-*-gcc package.\n\n- Disable build of glibc cross to loongarch64 and hppa in SLFO\n  and SLE15.\n\n- Update to GCC 14.3 release, bb24b4c804f3d95b0ba95b7496, git11799\n- Remove gcc14-pr120061.patch which is now included upstream.\n\n- Add gcc14-pr120061.patch to fix the PR108900 fix instead of\n  reverting it.\n- Remove gcc14-pr108900.patch\n\n- Add gcc14-pr108900.patch to revert it, fixing libqt6webengine build.\n\n- Update to gcc-14 branch head, 3418d740b344e0ba38022f3be, git11702\n  * Remove gcc14-pr118780.patch now on the upstream branch\n- Fix build on s390x [bsc#1241549]\n\n- Make sure link editing is done against our own shared library\n  copy rather than the installed system runtime.  [bsc#1240788]\n- Add gcc14-pr119680.patch to fix cross-compiler builds with\n  - -enable-host-pie.\n\nPackage libgcrypt was updated:\n\n- Security fix [bsc#1221107, CVE-2024-2236]  * Add --enable-marvin-workaround to spec to enable workaround\n  * Fix  timing based side-channel in RSA implementation ( Marvin attack )\n  * Add libgcrypt-CVE-2024-2236_01.patch\n  * Add libgcrypt-CVE-2024-2236_02.patch\n\nPackage xz was updated:\n\n- Fix CVE-2025-31115 (bsc#1240414)  * CVE-2025-31115.patch\n\nPackage openssl-3 was updated:\n\n- Security fix: [bsc#1240366, CVE-2025-27587]  * Minerva side channel vulnerability in P-384 on PPC arch\n  * Add openssl-3-p384-minerva-ppc.patch\n  * Add openssl-3-p384-minerva-ppc-p9.patch\n\n- Security fix: [bsc#1220262, CVE-2023-50782]\n  * Implicit rejection in PKCS#1 v1.5\n  * Add openssl-CVE-2023-50782.patch\n\nPackage python311:base was updated:\n\n- Add CVE-2025-6069-quad-complex-HTMLParser.patch to avoid worst  case quadratic complexity when processing certain crafted\n  malformed inputs with HTMLParser (CVE-2025-6069, bsc#1244705).\n\n- Use one core to build doc. This will make sphinx doc build\n  reproducible.\n  bsc#1243155\n\n- Update to 3.11.13:\n  - Security\n  - gh-135034: Fixes multiple issues that allowed tarfile\n    extraction filters (filter=\u0026quot;data\u0026quot; and filter=\u0026quot;tar\u0026quot;)\n    to be bypassed using crafted symlinks and hard links.\n    Addresses CVE-2024-12718 (bsc#1244056), CVE-2025-4138\n    (bsc#1244059), CVE-2025-4330 (bsc#1244060), and\n    CVE-2025-4517 (bsc#1244032). Also addresses CVE-2025-4435\n    (gh#135034, bsc#1244061).\n  - gh-133767: Fix use-after-free in the âunicode-escapeâ\n    decoder with a non-âstrictâ error handler (CVE-2025-4516,\n    bsc#1243273).\n  - gh-128840: Short-circuit the processing of long IPv6\n    addresses early in ipaddress to prevent excessive memory\n    consumption and a minor denial-of-service.\n  - Library\n  - gh-128840: Fix parsing long IPv6 addresses with embedded\n    IPv4 address.\n  - gh-134062: ipaddress: fix collisions in __hash__() for\n    IPv4Network and IPv6Network objects.\n  - gh-123409: Fix ipaddress.IPv6Address.reverse_pointer output\n    according to RFC 3596, Â§2.5. Patch by BÃ©nÃ©dikt Tran.\n  - bpo-43633: Improve the textual representation of\n    IPv4-mapped IPv6 addresses (RFC 4291 Sections 2.2, 2.5.5.2)\n    in ipaddress. Patch by Oleksandr Pavliuk.\n- Remove upstreamed patches:\n  - gh-126572-test_ssl-no-stop-ThreadedEchoServer-OSError.patch\n  - CVE-2025-4516-DecodeError-handler.patch\n\n- Add CVE-2025-4516-DecodeError-handler.patch fixing\n  CVE-2025-4516 (bsc#1243273) blocking DecodeError handling\n  vulnerability, which could lead to DoS.\n\n- Use extended %autopatch.\n\n- Remove python-3.3.0b1-test-posix_fadvise.patch (not needed\n  since kernel 3.6-rc1)\n\n- Update to 3.11.12:\n  - gh-131809: Update bundled libexpat to 2.7.1\n  - gh-131261: Upgrade to libexpat 2.7.0\n  - gh-105704: When using urllib.parse.urlsplit() and\n    urllib.parse.urlparse() host parsing would not reject domain\n    names containing square brackets ([ and ]). Square brackets\n    are only valid for IPv6 and IPvFuture hosts according to RFC\n    3986 Section 3.2.2 (bsc#1236705, CVE-2025-0938,\n    gh#python/cpython#105704).\n  - gh-121284: Fix bug in the folding of rfc2047 encoded-words\n    when flattening an email message using a modern email\n    policy. Previously when an encoded-word was too long for\n    a line, it would be decoded, split across lines, and\n    re-encoded. But commas and other special characters in the\n    original text could be left unencoded and unquoted. This\n    could theoretically be used to spoof header lines using a\n    carefully constructed encoded-word if the resulting rendered\n    email was transmitted or re-parsed.\n  - gh-80222: Fix bug in the folding of quoted strings\n    when flattening an email message using a modern email\n    policy. Previously when a quoted string was folded so that\n    it spanned more than one line, the surrounding quotes and\n    internal escapes would be omitted. This could theoretically\n    be used to spoof header lines using a carefully constructed\n    quoted string if the resulting rendered email was transmitted\n    or re-parsed.\n  - gh-119511: Fix a potential denial of service in the imaplib\n    module. When connecting to a malicious server, it could\n    cause an arbitrary amount of memory to be allocated. On many\n    systems this is harmless as unused virtual memory is only\n    a mapping, but if this hit a virtual address size limit\n    it could lead to a MemoryError or other process crash. On\n    unusual systems or builds where all allocated memory is\n    touched and backed by actual ram or storage it couldâve\n    consumed resources doing so until similarly crashing.\n  - gh-127257: In ssl, system call failures that OpenSSL reports\n    using ERR_LIB_SYS are now raised as OSError.\n  - gh-121277: Writers of CPythonâs documentation can now use\n    next as the version for the versionchanged, versionadded,\n    deprecated directives.\n  - gh-106883: Disable GC during the _PyThread_CurrentFrames()\n    and _PyThread_CurrentExceptions() calls to avoid the\n    interpreter to deadlock.\n- Remove upstreamed patch:\n  - CVE-2025-0938-sq-brackets-domain-names.patch\n- Add gh-126572-test_ssl-no-stop-ThreadedEchoServer-OSError.patch\n  which makes test_ssl not to stop ThreadedEchoServer on OSError,\n  which makes test_ssl pass with OpenSSL 3.5 (bsc#1241067,\n  gh#python/cpython!126572)\n\n- Allow to disable PGO\n\n- Skip PGO with %want_reproducible_builds (bsc#1239210)\n\n- Add CVE-2025-0938-sq-brackets-domain-names.patch which\n  disallows square brackets ([ and ]) in domain names for parsed\n  URLs (bsc#1236705, CVE-2025-0938, gh#python/cpython#105704)\n\n- Configure externally_managed with a bcond\n  https://en.opensuse.org/openSUSE:Python:Externally_managed\n  bsc#1228165\n\n- Update to 3.11.11:\n  - Tools/Demos\n  - gh-123418: Update GitHub CI workflows to use OpenSSL 3.0.15\n    and multissltests to use 3.0.15, 3.1.7, and 3.2.3.\n  - Tests\n  - gh-125041: Re-enable skipped tests for zlib on the\n    s390x architecture: only skip checks of the compressed\n    bytes, which can be different between zlibâs software\n    implementation and the hardware-accelerated implementation.\n  - Security\n  - gh-126623: Upgrade libexpat to 2.6.4\n  - gh-122792: Changed IPv4-mapped ipaddress.IPv6Address to\n    consistently use the mapped IPv4 address value for deciding\n    properties. Properties which have their behavior fixed are\n    is_multicast, is_reserved, is_link_local, is_global, and\n    is_unspecified.\n  - Library\n  - gh-124651: Properly quote template strings in venv\n    activation scripts (bsc#1232241, CVE-2024-9287).\n- Removed upstreamed patches:\n  - CVE-2024-9287-venv_path_unquoted.patch\n\n- Add add-loongarch64-support.patch to support loongarch64\n\nPackage rpm was updated:\n\n- fix --runposttrans not working correctly with the --root  option [bnc#1216091]\n  * updated patch: posttrans.diff\n  * added \u0026quot;rpm_fixed_runposttrans\u0026quot; provides for libzypp\n- print scriptlet messages in --runposttrans\n  * needed to fix leaking tmp files [bsc#1218459]\n  * updated patch: posttrans.diff\n- fix memory leak in str2locale [bsc#1241052]\n  * updated patch: localetag.diff\n\nPackage libsolv was updated:\n\n- add support for product-obsoletes() provides in the product  autopackage generation code\n- bump version to 0.7.34\n\n- improve transaction ordering by allowing more uninst-\u0026gt;uninst\n  edges [bsc#1243457]\n- implement color filtering when adding update targets\n- support orderwithrequires dependencies in susedata.xml\n- bump version to 0.7.33\n\n- build both static and dynamic libraries on new suse distros\n- support the apk package and repository format (both v2 and v3)\n- new dataiterator_final_{repo,solvable} functions\n- bump version to 0.7.32\n\n- Provide a symbol specific for the ruby-version\n  so yast does not break across updates (boo#1235598)\n\n- fix replaces_installed_package using the wrong solvable id\n  when checking the noupdate map\n- make POOL_FLAG_ADDFILEPROVIDESFILTERED behaviour more standard\n- add rpm_query_idarray query function\n- support rpm's \u0026quot;orderwithrequires\u0026quot; dependency\n- bump version to 0.7.31\n\nPackage sqlite3 was updated:\n\n- Mark build recipe as POSIX-sh-incompatible- Run mkdir/rm with verbose mode for the build log\n\n- Update to release 3.49.1:\n  * Improve portability of makefiles and configure scripts.\n  * CVE-2025-29087, bsc#1241020: Fix a bug in the concat_ws()\n    function, introduced in version 3.44.0, that could lead to a\n    memory error if the separator string is very large (hundreds\n    of megabytes).\n  * CVE-2025-29088, bsc#1241078: Enhanced the\n    SQLITE_DBCONFIG_LOOKASIDE interface to make it  more robust\n    against misuse.\n\n- Update to release 3.49.0:\n  * Enhancements to the query planner:\n  - Improve the query-time index optimization so that it works on\n    WITHOUT ROWID tables.\n  - Better query plans for large star-query joins. This fixes\n    three different performance regressions that were reported\n    on the SQLite Forum.\n  - When two or more queries have the same estimated cost, use\n    the one with the fewer bytes per row.\n  * Enhance the iif() SQL function so that it can accept any number\n    of arguments greater than or equal to two.\n  * Enhance the session extension so that it works on databases\n    that make use of generated columns.\n  * Omit the SQLITE_USE_STDIO_FOR_CONSOLE compile-time option which\n    was not implemented correctly and never worked right. In its place\n    add the SQLITE_USE_W32_FOR_CONSOLE_IO compile-time option. This\n    option applies to command-line tools like the CLI only, not to the\n    SQLite core. It causes Win32 APIs to be used for console I/O\n    instead of stdio. This option affects Windows builds only.\n  * Three new options to sqlite3_db_config(). All default \u0026quot;on\u0026quot;.\n    SQLITE_DBCONFIG_ENABLE_ATTACH_CREATE\n    SQLITE_DBCONFIG_ENABLE_ATTACH_WRITE\n    SQLITE_DBCONFIG_ENABLE_COMMENTS\n\n- Re-enable SONAME which got disabled by default in 3.48.0.\n  * https://www.sqlite.org/src/forumpost/5a3b44f510df8ded\n  * https://sqlite.org/forum/forumpost/ab8f15697a\n\n- Update to release 3.48.0:\n  * Improved EXPLAIN QUERY PLAN output for covering indexes.\n  * Allow a two-argument version of the iif() SQL function.\n  * Also allow if() as an alternative spelling for iif().\n  * Add the \u0026quot;.dbtotxt\u0026quot; command to the CLI.\n  * Add the SQLITE_IOCAP_SUBPAGE_READ property to the\n    xDeviceCharacteristics method of the sqlite3_io_methods object.\n  * Add the SQLITE_PREPARE_DONT_LOG option to sqlite3_prepare_v3()\n    that prevents warning messages being sent to the error log if\n    the SQL is ill-formed. This allows sqlite3_prepare_v3() to be\n    used to do test compiles of SQL to check for validity without\n    polluting the error log with false messages.\n  * Increase the minimum allowed value of SQLITE_LIMIT_LENGTH from\n    1 to 30.\n  * Added the SQLITE_FCNTL_NULL_IO file control.\n  * Extend the FTS5 auxiliary API xInstToken() to work with prefix\n    queries via the insttoken configuration option and the\n    fts5_insttoken() SQL function.\n  * Increase the maximum number of arguments to an SQL function\n    from 127 to 1000.\n  * Obsoletes sqlite3-6216bfcb.patch .\n\n- Add sqlite3-6216bfcb.patch to fix a test suite regression in\n  3.47.0 on s390x. Only the test was broken, not the code itself.\n  https://sqlite.org/forum/forumpost/7b2bab04c5\n\n- Update to release 3.47.2:\n  * Fix a problem in text-to-floating-point conversion that affects\n    text values where the first 16 significant digits are\n    '1844674407370955'. This issue was introduced in 3.47.0 and\n    only arises on x64 and i386 hardware.\n  * Other minor bug fixes.\n- Enable the session extension, because NodeJS 22 needs it.\n\n- Update to release 3.47.1:\n  * Fix the makefiles so that they once again honored DESTDIR for\n    the \u0026quot;install\u0026quot; target.\n  * Add the SQLITE_IOCAP_SUBPAGE_READ capability to the VFS, to\n    work around issues on some non-standard VFSes caused by making\n    SQLITE_DIRECT_OVERFLOW_READ the default in version 3.45.0.\n  * Fix incorrect answers to certain obscure IN queries caused by\n    new query optimizations added in the 3.47.0 release.\n  * Other minor bug fixes.\n\n- Update to release 3.47.0:\n  * Allow arbitrary expressions in the second argument to the RAISE\n    function.\n  * If the RHS of the -\u0026gt;\u0026gt; operator is negative, then access array\n    elements counting from the right.\n  * Fix a problem with rolling back hot journal files in the\n    seldom-used unix-dotfile VFS.\n  * FTS5 tables can now be dropped even if they use a non-standard\n    tokenizer that has not been registered.\n  * Fix the group_concat() aggregate function so that it returns an\n    empty string, not a NULL, if it receives a single input value\n    which is an empty string.\n  * Enhance the generate_series() table-valued function so that it\n    is able to recognize and use constraints on its output value.\n    Preupdate hooks now recognize when a column added by ALTER\n    TABLE ADD COLUMN has a non-null default value.\n  * Improved reuse of subqueries associated with the IN operator,\n    especially when the IN operator has been duplicated due to\n    predicate push-down.\n  * Use a Bloom filter on subqueries on the right-hand side of the\n    IN operator, in cases where that seems likely to improve\n    performance.\n  * Ensure that queries like \u0026quot;SELECT func(a) FROM tab GROUP BY 1\u0026quot;\n    only invoke the func() function once per row.\n  * No attempt is made to create automatic indexes on a column\n    that is known to be non-selective because of its use in other\n    indexes that have been analyzed.\n  * Adjustments to the query planner so that it produces better\n    plans for star queries with a large number of dimension\n    tables.\n  * Add the \u0026quot;order-by-subquery\u0026quot; optimization, that seeks to\n    disable sort operations in outer queries if the desired order\n    is obtained naturally due to ORDER BY clauses in subqueries.\n  * The \u0026quot;indexed-subtype-expr\u0026quot; optimization strives to use\n    expressions that are part of an index rather than recomputing\n    the expression based on table values, as long as the query\n    planner can prove that the subtype of the expression will\n    never be used.\n  * Miscellaneous coding tweaks for faster runtimes.\n  * Add the experimental sqlite3_rsync program.\n  * Add extension functions median(), percentile(),\n    percentile_cont(), and percentile_disc() to the CLI.\n  * Add the .www dot-command to the CLI.\n  * The sqlite3_analyzer utility now provides a break-out of\n    statistics for WITHOUT ROWID tables.\n  * The sqldiff utility avoids creating an empty database if its\n    second argument does not exist.\n  * Enhance the sqlite_dbpage table-valued function such that\n    INSERT can be used to increase or decrease the size of the\n    database file.\n  * SQLite no longer makes any use of the \u0026quot;long double\u0026quot; data type,\n    as hardware support for long double is becoming less common\n    and long double creates challenges for some compiler tool\n    chains. Instead, SQLite uses Dekker's algorithm when extended\n    precision is needed.\n  * The TCL Interface for SQLite supports TCL9. Everything\n    probably still works for TCL 8.5 and later, though this is not\n    guaranteed. Users are encouraged to upgrade to TCL9.\n  * Fix a corruption-causing bug in the JavaScript \u0026quot;opfs\u0026quot; VFS.\n    Correct \u0026quot;mode=ro\u0026quot; handling for the \u0026quot;opfs\u0026quot; VFS.  Work around a\n    couple of browser-specific OPFS quirks.\n  * Add the fts5_tokenizer_v2 API and the locale=1 option, for\n    creating custom locale-aware tokenizers and fts5 tables that\n    may take advantage of them.\n  * Add the contentless_unindexed=1 option, for creating\n    contentless fts5 tables that store the values of any UNINDEXED\n    columns persistently in the database.\n  * Allow an FTS5 table to be dropped even if it uses a custom\n    tokenizer whose implementation is not available.\n\n- Update to release 3.46.1:\n  * Improved robustness while parsing the tokenize= arguments in\n    FTS5.\n  * Enhancements to covering index prediction in the query planner.\n  * Do not let the number of terms on a VALUES clause be limited by\n    SQLITE_LIMIT_COMPOUND_SELECT, even if the VALUES clause\n    contains elements that appear to be variables due to\n    double-quoted string literals.\n  * Fix the window function version of group_concat() so that it\n    returns an empty string if it has one or more empty string\n    inputs.\n  * In FTS5 secure-delete mode, fix false-positive integrity-check\n    reports about corrupt indexes.\n  * Syntax errors in ALTER TABLE should always return SQLITE_ERROR.\n    In some cases, they were formerly returning SQLITE_INTERNAL.\n  * Other minor fixes.\n\n- Update to release 3.46.0:\n  * https://sqlite.org/releaselog/3_46_0.html\n  * Enhance PRAGMA optimize in multiple ways.\n  * Enhancements to the date and time functions.\n  * Add support for underscore (\u0026quot;_\u0026quot;) characters between digits in\n    numeric literals.\n  * Add the json_pretty() SQL function.\n  * Query planner improvements.\n  * Allocate additional memory from the heap for the SQL parser\n    stack if that stack overflows, rather than reporting a \u0026quot;parser\n    stack overflow\u0026quot; error.\n  * Allow ASCII control characters within JSON5 string literals.\n  * Fix the -\u0026gt; and -\u0026gt;\u0026gt; JSON operators so that when the right-hand\n    side operand is a string that looks like an integer it is still\n    treated as a string, because that is what PostgreSQL does.\n  * Obsoletes sqlite3-float-i586.patch.\n\n- Update to release 3.45.3:\n  * Fix a long-standing bug (going back to version 3.24.0) that\n    might (rarely) cause the \u0026quot;old.*\u0026quot; values of an UPDATE trigger\n    to be incorrect if that trigger fires in response to an UPSERT.\n  * Reduce the scope of the NOT NULL strength reduction\n    optimization that was added as item 8e in version 3.35.0. The\n    optimization was being attempted in some contexts where it did\n    not work, resulting in incorrect query results.\n- Add SQLITE_STRICT_SUBTYPE=1 as recommended by upstream.\n\n- Update to release 3.45.2:\n  * Added the SQLITE_RESULT_SUBTYPE property for application-\n    defined SQL functions.\n  * Enhancements to the JSON SQL functions\n  * Add the FTS5 tokendata option to the FTS5 virtual table.\n  * The SQLITE_DIRECT_OVERFLOW_READ optimization is now enabled by\n    default.\n  * Query planner improvements\n  * Increase the default value for SQLITE_MAX_PAGE_COUNT from\n    1073741824 to 4294967294.\n  * Enhancements to the CLI\n  * Restore the JSON BLOB input bug, and promise to support the\n    anomaly in subsequent releases, for backward compatibility.\n  * Fix the PRAGMA integrity_check command so that it works on\n    read-only databases that contain FTS3 and FTS5 tables.\n  * Fix issues associated with processing corrupt JSONB inputs.\n  * Fix a long-standing bug in which a read of a few bytes past the\n    end of a memory-mapped segment might occur when accessing a\n    craftily corrupted database using memory-mapped database.\n  * Fix a long-standing bug in which a NULL pointer dereference\n    might occur in the bytecode engine due to incorrect bytecode\n    being generated for a class of SQL statements that are\n    deliberately designed to stress the query planner but which\n    are otherwise pointless.\n  * Fix an error in UPSERT, introduced in version 3.35.0.\n  * Reduce the scope of the NOT NULL strength reduction\n    optimization that was added in version 3.35.0.\n- Add sqlite3-float-i586.patch to fix build on i586.\n- sqlite3-rtree-i686.patch is not needed anymore.\n- Abort build when %version and %tarversion don't match.\n\nPackage libssh was updated:\n\n- Fix CVE-2025-5372: ssh_kdf() returns a success code on certain failures (bsc#1245314)  * Add patch libssh-CVE-2025-5372.patch\n- Fix CVE-2025-5987: Invalid return code for chacha20 poly1305 with OpenSSL backend (bsc#1245317)\n  * Add patch libssh-CVE-2025-5987.patch\n- Fix CVE-2025-4877: Write beyond bounds in binary to base64 conversion functions (bsc#1245309)\n  * Add patch libssh-CVE-2025-4877.patch\n- Fix CVE-2025-4878: Use of uninitialized variable in privatekey_from_file() (bsc#1245310)\n  * Add patches:\n  - libssh-CVE-2025-4878-1.patch\n  - libssh-CVE-2025-4878-2.patch\n- Fix CVE-2025-5318: Likely read beyond bounds in sftp server handle management (bsc#1245311)\n  * Add patch libssh-CVE-2025-5318.patch\n- Fix CVE-2025-5351: Double free in functions exporting keys (bsc#1245312)\n  * Add patch libssh-CVE-2025-5351.patch\n\nPackage systemd was updated:\n\n- Remove the script used to help migrating the language and locale settings  located in /etc/sysconfig/language on old systems to the systemd default\n  locations (bsc#1247074)\n  The script was introduced more than 7 years ago and all systems running TW\n  should have been migrated since then. Moreover the installer supports the\n  systemd default locations since approximately SLE15.\n\n- triggers.systemd: skip update of hwdb, journal-catalog if executed during an\n  offline update.\n\n- Import commit 247091bc99ba506cee501b520d1d0a11d772fc13 (merge of v254.27)\n  For a complete list of changes, visit:\n  https://github.com/openSUSE/systemd/compare/aa12f501ae4749c542a091028d848796da4ef51b...247091bc99ba506cee501b520d1d0a11d772fc13\n\n- Import commit aa12f501ae4749c542a091028d848796da4ef51b\n  aa12f501ae logs-show: get timestamp and boot ID only when necessary (bsc#1242827)\n  e8b17d11bc sd-journal: drop to use Hashmap to manage journal files per boot ID\n  ea80273738 tree-wide: set SD_JOURNAL_ASSUME_IMMUTABLE where appropriate\n  a5b3b5344f sd-journal: introduce SD_JOURNAL_ASSUME_IMMUTABLE flag\n  5fa0600b34 sd-journal: make journal_file_read_tail_timestamp() notify to the caller that some new journal entries added\n  737e8193e7 sd-journal: cache last entry offset and journal file state\n  057dca426f sd-journal: fix typo in function name\n\n- Import commit 656494acfaf4b7ac5f3137c09b96b8c4bf08f7d0 (merge of v254.25)\n  This merge includes the following fix:\n    7fc7aa5a4d coredump: use %d in kernel core pattern (bsc#1243935 CVE-2025-4598)\n  For a complete list of changes, visit:\n  https://github.com/openSUSE/systemd/compare/41d2be2fb502e62e671db2b22ee330af8fade7e2...656494acfaf4b7ac5f3137c09b96b8c4bf08f7d0\n\n- Import commit 41d2be2fb502e62e671db2b22ee330af8fade7e2\n  41d2be2fb5 Revert \u0026quot;macro: terminate the temporary VA_ARGS_FOREACH() array with a sentinel\u0026quot; (SUSE specific)\n\n- Import commit 806c21e22ba4e3038817c20da19633b483b3ee80\n  806c21e22b umount: do not move busy network mounts (bsc#1236177)\n\n- Import commit ebdfa3e44e0c85febfa3b35fc8843f8db6f3fb10\n  ebdfa3e44e man/pstore.conf: pstore.conf template is not always installed in /etc\n  304ed20aab man: coredump.conf template is not always installed in /etc (bsc#1237496)\n\n- Add 1003-journal-again-create-user-journals-for-users-with-hi.patch (bsc#1242938)\n  Don't write messages sent from users with UID falling into the container UID\n  range to the system journal. Daemons in the container don't talk to the\n  outside journald as they talk to the inner one directly, which does its\n  journal splitting based on shifted uids.\n\n- Add 1002-udev-persistent-net-rule-generator-support.patch (bsc#1241190)\n  This re-adds back the support for the persistent net name rules as well as\n  their generator since predictable naming scheme is still disabled by default\n  on Micro (via the `net.ifnames=0` boot option).\n\nPackage tpm2.0-abrmd was updated:\n\n- sync with Factory package to fix SELinux issues in SLE Micro 6.1 (bsc#1246460)\n- also enable SELinux features for SLE-16 (bsc#1240070). On SLE-16 abrmd does\n  not work, because the SELinux configuration is missing and thus its\n  operations are denied. Include SLE-16 to fix this.\n\n- Drop rcFOO symlinks for CODE16 (PED-266).\n\n- Fix SELinux sbin/bin merge (bsc#1229047)\n  1229047-fix-bin-sbin-selinux.patch\n  Can be dropped once https://github.com/tpm2-software/tpm2-abrmd/pull/846\n  is merged upstream\n\nPackage libxml2 was updated:\n\n- security update- added patches\n  CVE-2024-40896 [bsc#1234812], XXE vulnerability\n  + libxml2-CVE-2024-40896.patch\n\n- security update\n- added patches\n  CVE-2025-32414 [bsc#1241551], out-of-bounds read when parsing text via the Python API\n  + libxml2-CVE-2025-32414.patch\n  CVE-2025-32415 [bsc#1241453], a crafted XML document may lead to a heap-based buffer under-read\n  + libxml2-CVE-2025-32415.patch\n\nPackage libzypp was updated:\n\n- Fix evaluation of libproxy results (bsc#1247690)- Replace URL variables inside mirrorlist/metalink files\n  (fixes #667)\n- version 17.37.16 (35)\n\n- Append RepoInfo::path() to the mirror URLs in Preloader\n  (bsc#1247054)\n- version 17.37.15 (35)\n\n- During installation indicate the backend being used (bsc#1246038)\n  If some package actually needs to know, it should test for\n  ZYPP_CLASSIC_RPMTRANS being set in the environment.\n  Otherwise the transaction is driven by librpm.\n- version 17.37.14 (35)\n\n- Workaround 'rpm -vv' leaving scriptlets /var/tmp (bsc#1218459)\n- Verbose log libproxy results if PX_DEBUG=1 is set.\n- BuildRequires:  cmake \u0026gt;= 3.17.\n- version 17.37.13 (35)\n\n- Allow explicit request to probe an added repo's URL\n  (bsc#1246466)\n- Fix tests with -DISABLE_MEDIABACKEND_TESTS=1 (fixes #661)\n- version 17.37.12 (35)\n\n- Add runtime check for a broken rpm-4.18.0 --runpostrans\n  (bsc#1246149)\n- Add regression test for bsc#1245220 and some other filesize\n  related tests.\n- version 17.37.11 (35)\n\n- BuildRequires: %{libsolv_devel_package} \u0026gt;= 0.7.34 (bsc#1243486)\n  Newer rpm versions no longer allow a ':' in rpm package names or\n  obsoletes. So injecting an\n    Obsoletes: product:oldproductname \u0026lt; oldproductversion\n  into the -release package to indicate a product rename is no longer\n  possible.\n  Since libsolv-0.7.34 you can and should use:\n    Provides: product-obsoletes(oldproductname) \u0026lt; oldproductversion\n  in the -release package. libsolv will then inject the appropriate\n  Obsoletes into the Product.\n- version 17.37.10 (35)\n\n- Ignore DeltaRpm download errors (bsc#1245672)\n  DeltaRpms are in fact optional resources. In case of a failure\n  the full rpm is downloaded.\n- Improve fix for incorrect filesize handling (bsc#1245220)\n- version 17.37.9 (35)\n\n- Do not trigger download data exceeded errors on HTTP non data\n  responses (bsc#1245220)\n  In some cases a HTTP 401 or 407 did trigger a \u0026quot;filesize exceeded\u0026quot;\n  error, because the response payload size was compared against the\n  expected filesize. This patch adds some checks if the response\n  code is in the success range and only then takes expected\n  filesize into account. Otherwise the response content-length is\n  used or a fallback of 2Mb if no content-length is known.\n- version 17.37.8 (35)\n\n- Fix SEGV in MediaDISK handler (bsc#1245452)\n- Explicitly selecting DownloadAsNeeded also selects the\n  classic_rpmtrans backend.\n  DownloadAsNeeded can not be combined with the rpm singletrans\n  installer backend because a rpm transaction requires all package\n  headers to be available the the beginning of the transaction. So\n  explicitly selecting this mode also turns on the classic_rpmtrans\n  backend.\n- Fix evaluation of libproxy results (bsc#1244710)\n- version 17.37.7 (35)\n\n- Enhancements regarding mirror handling during repo refresh.\n  Added  means to disable the use of mirrors when downloading\n  security relevant files. Requires updaing zypper to 1.14.91.\n- Fix autotestcase writer if ZYPP_FULLLOG=1 (bsc#1244042)\n  If ZYPP_FULLLOG=1 a solver testcase to\n  \u0026quot;/var/log/YaST2/autoTestcase\u0026quot; should be written for each solver\n  run. There was no testcase written for the very first solver run.\n  This is now fixed.\n- Pass $1==2 to %posttrans script if it's an update (bsc#1243279)\n- version 17.37.6 (35)\n\n- Fix credential handling in HEAD requests (bsc#1244105)\n- version 17.37.5 (35)\n\n- RepoInfo: use pathNameSetTrailingSlash (fixes #643)\n- Fix wrong userdata parameter type when running zypp with debug\n  verbosity (bsc#1239012)\n- version 17.37.4 (35)\n\n- Do not warn about no mirrors if mirrorlist was switched on\n  automatically. (bsc#1243901)\n- Relax permission of cached packages to 0644 \u0026amp; ~umask\n  (bsc#1243887)\n- version 17.37.3 (35)\n\n- Add a note to service maintained .repo file entries (fixes #638)\n- Support using %{url} variable in a RIS service's repo section.\n- version 17.37.2 (35)\n\n- Use a cookie file to validate mirrorlist cache.\n  This patch extends the mirrorlist code to use a cookie file to\n  validate the contents of the cache against the source URL, making\n  sure that we do not accidentially use a old cache when the\n  mirrorlist url was changed. For example when migrating a system\n  from one release to the next where the same repo alias might just\n  have a different URL.\n- Let Service define and update gpgkey, mirrorlist and metalink.\n- Preserve a mirrorlist file in the raw cache during refresh.\n- version 17.37.1 (35)\n\n- Code16: Enable curl2 backend and parallel package download by\n  default. In Code15 it's optional.\n  Environment variables ZYPP_CURL2=\u0026lt;0|1\u0026gt; and ZYPP_PCK_PRELOAD=\u0026lt;0|1\u0026gt;\n  can be used to turn the features on or off.\n- Make gpgKeyUrl the default source for gpg keys.\n  When refreshing zypp now primarily uses gpgKeyUrl information\n  from the repo files and only falls back to a automatically\n  generated key Url if a gpgKeyUrl was not specified.\n- Introduce mirrors into the Media backends (bsc#1240132)\n- Drop MediaMultiCurl backend.\n- Throttle progress updates when preloading packages (bsc#1239543)\n- Check if request is in valid state in CURL callbacks (fixes\n  openSUSE/zypper#605)\n- spec/CMake: add conditional build\n  '--with[out] classic_rpmtrans_as_default'.\n  classic_rpmtrans is the current builtin default for SUSE,\n  otherwise it's single_rpmtrans.\n  The `enable_preview_single_rpmtrans_as_default_for_zypper` switch\n  was removed from the spec file.  Accordingly the CMake option\n  ENABLE_PREVIEW_SINGLE_RPMTRANS_AS_DEFAULT_FOR_ZYPPER was removed.\n- version 17.37.0 (35)\n\n- fixed build with boost 1.88.\n- XmlReader: Fix detection of bad input streams (fixes #635)\n  libxml2 2.14 potentially reads the complete stream, so it may\n  have the 'eof' bit set. Which is not 'good' but also not 'bad'.\n- rpm: Fix detection of %triggerscript starts (bsc#1222044)\n- RepoindexFileReader: add more \u0026lt;repo\u0026gt; related attributes a\n  service may set.\n  Add optional attributes gpgcheck, repo_gpgcheck, pkg_gpgcheck,\n  keeppackages, gpgkey, mirrorlist, and metalink with the same\n  semantic as in a .repo file.\n- version 17.36.7 (35)\n\n- Drop workaround for broken rpm-4.18 in Code16 (bsc#1237172)\n- BuildRequires:  %{libsolv_devel_package} \u0026gt;= 0.7.32.\n  Code16 moved static libs to libsolv-devel-static.\n- Drop usage of SHA1 hash algorithm because it will become\n  unavailable in FIPS mode (bsc#1240529)\n- Fix zypp.conf dupAllowVendorChange to reflect the correct\n  default (false).\n  The default was true in Code12 (libzypp-16.x) and changed to\n  false with Code15 (libzypp-17.x). Unfortunately this was done by\n  shipping a modified zypp.conf file rather than fixing the code.\n- zypp.conf: Add `lock_timeout` ($ZYPP_LOCK_TIMEOUT) (bsc#1239809)\n- version 17.36.6 (35)\n\n- Fix computation of RepStatus if Repo URLs change.\n- Fix lost double slash when appending to an absolute FTP url\n  (bsc#1238315)\n  Ftp actually differs between absolute and relative URL paths.\n  Absolute path names begin with a double slash encoded as '/%2F'.\n  This must be preserved when manipulating the path.\n- version 17.36.5 (35)\n\n- Add a transaction package preloader (fixes openSUSE/zypper#104)\n  This patch adds a preloader that concurrently downloads files\n  during a transaction commit. It's not yet enabled per default.\n  To enable the preview set ZYPP_CURL2=1 and ZYPP_PCK_PRELOAD=1\n  in the environment.\n- RpmPkgSigCheck_test: Exchange the test package signingkey\n  (fixes #622)\n- Exclude MediaCurl tests if DISABLE_MEDIABACKEND_TESTS (fixes #626)\n- Strip a mediahandler tag from baseUrl querystrings.\n- version 17.36.4 (35)\n\n- Disable zypp.conf:download.use_deltarpm by default (fixes #620)\n  Measurements show that you don't benefit from using deltarpms\n  unless your network connection is very slow. That's why most\n  distributions even stop offering deltarpms. The default remains\n  unchanged on SUSE-15.6 and older.\n- Make sure repo variables are evaluated in the right context\n  (bsc#1237044)\n- Introducing MediaCurl2 a alternative HTTP backend.\n  This patch adds MediaCurl2 as a testbed for experimenting with a\n  more simple way to download files. Set ZYPP_CURL2=1 in the\n  environment to use it.\n- version 17.36.3 (35)\n\n- Filesystem usrmerge must not be done in singletrans mode\n  (bsc#1236481, bsc#1189788)\n  Commit will amend the backend in case the transaction would\n  perform a filesystem usrmerge.\n- Workaround bsc#1216091 on Code16.\n- version 17.36.2 (35)\n\n- Don't issue deprecated warnings if -DNDEBUG is set (bsc#1236983)\n  Released libyui packages compile with -Werror=deprecated-declarations\n  so we can't add deprecated warnings without breaking them.\n- make gcc15 happy (fixes #613)\n- version 17.36.1 (35)\n\n- Drop zypp-CheckAccessDeleted in favor of 'zypper ps'.\n- Fix Repoverification plugin not being executed (fixes #614)\n- Refresh: Fetch the master index file before key and signature\n  (bsc#1236820)\n- Allow libzypp to compile with C++20.\n- Deprecate RepoReports we do not trigger.\n- version 17.36.0 (35)\n\n- Create '.keep_packages' in the package cache dir to enforce\n  keeping downloaded packages of all repos cahed there (bsc#1232458)\n- version 17.35.19 (35)\n\n- Fix missing UID checks in repomanager workflow (fixes #603)\n- version 17.35.18 (35)\n\n- Move cmake config files to LIB_INSTALL_DIR/cmake/Zypp (fixes #28)\n- Fix 'zypper ps' when running in incus container (bsc#1229106)\n  Should apply to lxc and lxd containers as well.\n- Re-enable 'rpm --runposttrans' usage for chrooted systems\n  (bsc#1216091)\n- version 17.35.17 (35)\n\nPackage lsof was updated:\n\n- Update to version 4.99.4:  * In lsof manpage: mention /etc/services for -P option\n  * Fix typos in docs\n  * Linux 6.9 changed the pidfs appearence in procfs. Try to\n    maintain original output in lsof (bsc#1224285)\n  * closefrom_shim: Add optimized fallback for platforms without\n    closefrom or close_range\n  * fix build against -std=c23 (`void (*)()`) changed the meaning)\n- Drop obsolete lsof-4.99.3-fix-version-in-configure-ac.patch,\n  0001-tests-eliminate-use-of-fgrep.patch and\n  0002-linux-Maintain-original-output-for-pidfd-in-linux-6..patch.\n\n- Add reproducible.patch to not store build host kernel version (boo#1232425)\n\n- replace:\n  0002-tests-fix-for-kernel-6.9.patch\n  by upstream proposed:\n  0002-linux-Maintain-original-output-for-pidfd-in-linux-6..patch\n\n- add (bsc#1224285):\n  * 0001-tests-eliminate-use-of-fgrep.patch\n  * 0002-tests-fix-for-kernel-6.9.patch\n\n- lsof 4.99.3:\n  * Fix compilation error when HASIPv6 is not defined\n  * Add configure option --disable-liblsof to disable installation\n    of liblsof\n- add lsof-4.99.3-fix-version-in-configure-ac.patch\n\n- Skip tests that are difficult to emulate by qemu\n\n- lsof 4.99.0:\n  * Do not hard-code fd numbers in epoll test\n  * --with-selinux configure option.\n  * Improve performance by using closefrom()\n  * Introduce liblsof for programmatic access over spawning lsof\n    in a subprocess\n- build with libtirpc\n- switch to upstream tarball again as it dropped proprietary code\n\nPackage pam-config was updated:\n\n- Stop adding pam_env in AUTH stack, and be sure to put this module at the  really end of the SESSION stack.\n  [bsc#1243226, CVE-2025-6018, remove-pam_env-from-auth-stack.patch]\n\nPackage pam was updated:\n\n- pam_namespace: convert functions that may operate on a user-controlled path  to operate on file descriptors instead of absolute path. And keep the\n  bind-mount protection from protect_mount() as a defense in depthmeasure.\n  [bsc#1244509, CVE-2025-6020,\n  pam_inline-introduce-pam_asprintf-pam_snprintf-and-p.patch,\n  pam_namespace-fix-potential-privilege-escalation.patch,\n  pam_namespace-add-flags-to-indicate-path-safety.patch,\n  pam_namespace-secure_opendir-do-not-look-at-the-grou.patch]\n- pam_namespace-fix-potential-privilege-escalation.patch adapted and includes\n  changes from upstream commits: ds6242a, bc856cd.\n  * pam_namespace fix logic in return value handling\n  * pam_namespace move functions around\n\nPackage perl was updated:\n\n- do not change the current directory when cloning an open  directory handle [bnc#1244079] [CVE-2025-40909]\n  new patch: perl-dirdup.diff\n\n- fix heap buffer overflow with tr// [bsc#1241083] [CVE-2024-56406]\n  new patch: perl-pmtrans.diff\n\nPackage python-instance-billing-flavor-check was updated:\n\n- Update to version 1.0.1  + Fix infinite loop (bsc#1242064)\n  + Fix bug in update infrastructure request (bsc#1242064)\n\nPackage python-cryptography was updated:\n\nPackage libxml2:python was updated:\n\n- security update- added patches\n  CVE-2024-40896 [bsc#1234812], XXE vulnerability\n  + libxml2-CVE-2024-40896.patch\n\n- security update\n- added patches\n  CVE-2025-32414 [bsc#1241551], out-of-bounds read when parsing text via the Python API\n  + libxml2-CVE-2025-32414.patch\n  CVE-2025-32415 [bsc#1241453], a crafted XML document may lead to a heap-based buffer under-read\n  + libxml2-CVE-2025-32415.patch\n\nPackage python-requests was updated:\n\n- Add revert-caching-default-sslcontext.patch upstream patch to avoid  problems with certificate caching in sslcontext.\n  bsc#1246104, gh#psf/requests#6767\n\n- update to 2.32.4:\n  * CVE-2024-47081 Fixed an issue where a maliciously crafted URL\n    and trusted environment will retrieve credentials for the wrong\n    hostname/machine from a netrc file\n  * Numerous documentation improvements\n  * Added support for pypy 3.11 for Linux and macOS.\n  * Dropped support for pypy 3.9 following its end of support.\n- drop CVE-2024-47081.patch (merged upstream)\n\n- Add CVE-2024-47081.patch upstream patch, fixes netrc credential leak\n  (gh#psf/requests#6965, CVE-2024-47081, bsc#1244039)\n\n- Switch to pyproject macros.\n\nPackage python-setuptools was updated:\n\n- Add patch CVE-2025-47273.patch to fix A path traversal  vulnerability.\n  (bsc#1243313, CVE-2025-47273, gh#pypa/setuptools@250a6d17978f)\n\nPackage python311 was updated:\n\n- Add CVE-2025-6069-quad-complex-HTMLParser.patch to avoid worst  case quadratic complexity when processing certain crafted\n  malformed inputs with HTMLParser (CVE-2025-6069, bsc#1244705).\n\n- Use one core to build doc. This will make sphinx doc build\n  reproducible.\n  bsc#1243155\n\n- Update to 3.11.13:\n  - Security\n  - gh-135034: Fixes multiple issues that allowed tarfile\n    extraction filters (filter=\u0026quot;data\u0026quot; and filter=\u0026quot;tar\u0026quot;)\n    to be bypassed using crafted symlinks and hard links.\n    Addresses CVE-2024-12718 (bsc#1244056), CVE-2025-4138\n    (bsc#1244059), CVE-2025-4330 (bsc#1244060), and\n    CVE-2025-4517 (bsc#1244032). Also addresses CVE-2025-4435\n    (gh#135034, bsc#1244061).\n  - gh-133767: Fix use-after-free in the âunicode-escapeâ\n    decoder with a non-âstrictâ error handler (CVE-2025-4516,\n    bsc#1243273).\n  - gh-128840: Short-circuit the processing of long IPv6\n    addresses early in ipaddress to prevent excessive memory\n    consumption and a minor denial-of-service.\n  - Library\n  - gh-128840: Fix parsing long IPv6 addresses with embedded\n    IPv4 address.\n  - gh-134062: ipaddress: fix collisions in __hash__() for\n    IPv4Network and IPv6Network objects.\n  - gh-123409: Fix ipaddress.IPv6Address.reverse_pointer output\n    according to RFC 3596, Â§2.5. Patch by BÃ©nÃ©dikt Tran.\n  - bpo-43633: Improve the textual representation of\n    IPv4-mapped IPv6 addresses (RFC 4291 Sections 2.2, 2.5.5.2)\n    in ipaddress. Patch by Oleksandr Pavliuk.\n- Remove upstreamed patches:\n  - gh-126572-test_ssl-no-stop-ThreadedEchoServer-OSError.patch\n  - CVE-2025-4516-DecodeError-handler.patch\n\n- Add CVE-2025-4516-DecodeError-handler.patch fixing\n  CVE-2025-4516 (bsc#1243273) blocking DecodeError handling\n  vulnerability, which could lead to DoS.\n\n- Use extended %autopatch.\n\n- Remove python-3.3.0b1-test-posix_fadvise.patch (not needed\n  since kernel 3.6-rc1)\n\n- Update to 3.11.12:\n  - gh-131809: Update bundled libexpat to 2.7.1\n  - gh-131261: Upgrade to libexpat 2.7.0\n  - gh-105704: When using urllib.parse.urlsplit() and\n    urllib.parse.urlparse() host parsing would not reject domain\n    names containing square brackets ([ and ]). Square brackets\n    are only valid for IPv6 and IPvFuture hosts according to RFC\n    3986 Section 3.2.2 (bsc#1236705, CVE-2025-0938,\n    gh#python/cpython#105704).\n  - gh-121284: Fix bug in the folding of rfc2047 encoded-words\n    when flattening an email message using a modern email\n    policy. Previously when an encoded-word was too long for\n    a line, it would be decoded, split across lines, and\n    re-encoded. But commas and other special characters in the\n    original text could be left unencoded and unquoted. This\n    could theoretically be used to spoof header lines using a\n    carefully constructed encoded-word if the resulting rendered\n    email was transmitted or re-parsed.\n  - gh-80222: Fix bug in the folding of quoted strings\n    when flattening an email message using a modern email\n    policy. Previously when a quoted string was folded so that\n    it spanned more than one line, the surrounding quotes and\n    internal escapes would be omitted. This could theoretically\n    be used to spoof header lines using a carefully constructed\n    quoted string if the resulting rendered email was transmitted\n    or re-parsed.\n  - gh-119511: Fix a potential denial of service in the imaplib\n    module. When connecting to a malicious server, it could\n    cause an arbitrary amount of memory to be allocated. On many\n    systems this is harmless as unused virtual memory is only\n    a mapping, but if this hit a virtual address size limit\n    it could lead to a MemoryError or other process crash. On\n    unusual systems or builds where all allocated memory is\n    touched and backed by actual ram or storage it couldâve\n    consumed resources doing so until similarly crashing.\n  - gh-127257: In ssl, system call failures that OpenSSL reports\n    using ERR_LIB_SYS are now raised as OSError.\n  - gh-121277: Writers of CPythonâs documentation can now use\n    next as the version for the versionchanged, versionadded,\n    deprecated directives.\n  - gh-106883: Disable GC during the _PyThread_CurrentFrames()\n    and _PyThread_CurrentExceptions() calls to avoid the\n    interpreter to deadlock.\n- Remove upstreamed patch:\n  - CVE-2025-0938-sq-brackets-domain-names.patch\n- Add gh-126572-test_ssl-no-stop-ThreadedEchoServer-OSError.patch\n  which makes test_ssl not to stop ThreadedEchoServer on OSError,\n  which makes test_ssl pass with OpenSSL 3.5 (bsc#1241067,\n  gh#python/cpython!126572)\n\n- Allow to disable PGO\n\n- Skip PGO with %want_reproducible_builds (bsc#1239210)\n\n- Add CVE-2025-0938-sq-brackets-domain-names.patch which\n  disallows square brackets ([ and ]) in domain names for parsed\n  URLs (bsc#1236705, CVE-2025-0938, gh#python/cpython#105704)\n\n- Configure externally_managed with a bcond\n  https://en.opensuse.org/openSUSE:Python:Externally_managed\n  bsc#1228165\n\n- Update to 3.11.11:\n  - Tools/Demos\n  - gh-123418: Update GitHub CI workflows to use OpenSSL 3.0.15\n    and multissltests to use 3.0.15, 3.1.7, and 3.2.3.\n  - Tests\n  - gh-125041: Re-enable skipped tests for zlib on the\n    s390x architecture: only skip checks of the compressed\n    bytes, which can be different between zlibâs software\n    implementation and the hardware-accelerated implementation.\n  - Security\n  - gh-126623: Upgrade libexpat to 2.6.4\n  - gh-122792: Changed IPv4-mapped ipaddress.IPv6Address to\n    consistently use the mapped IPv4 address value for deciding\n    properties. Properties which have their behavior fixed are\n    is_multicast, is_reserved, is_link_local, is_global, and\n    is_unspecified.\n  - Library\n  - gh-124651: Properly quote template strings in venv\n    activation scripts (bsc#1232241, CVE-2024-9287).\n- Removed upstreamed patches:\n  - CVE-2024-9287-venv_path_unquoted.patch\n\n- Add add-loongarch64-support.patch to support loongarch64\n\nPackage selinux-policy was updated:\n\n- Update to version 20241031+git8.1f94e96d:  * Revert downstream fix for bsc#1199630 due to regression (bsc#1243242)\n\nPackage sudo was updated:\n\n- Fix a possible local privilege escalation via the --host option  [bsc#1245274, CVE-2025-32462]\n  * fix-CVE-2025-32462.patch\n- Fix a possible local privilege Escalation via chroot option\n  [bsc#1245275, CVE-2025-32463]\n  * fix-CVE-2025-32463.patch\n\nPackage supportutils was updated:\n\n- Changes to version 3.2.10  + network.txt collect all firewalld zones (pr#233)\n  + Collects gfs2 info (PED-11853, pr#235, pr#236)\n  + Ignore tasks/threads to prevent collecting duplicate fd data in open_files (bsc#1230371, pr#237)\n  + Added openldap2_5 support for SLES (pr#238)\n  + Collects additional hawk details (pr#239)\n  + Optimized filtering D/Z processes (pr#241)\n  + Collect firewalld permanent configuration (pr#243)\n  + ldap_info: support for multiple DBs and sanitize olcRootPW (bsc#1231838, pr#247)\n  + Added dbus_info for dbus.txt (bsc#1222650, pr#248)\n\nPackage zypper was updated:\n\n- Fix addrepo to handle explicit --check and --no-check requests  (bsc#1246466)\n- Accept \u0026quot;show\u0026quot; as alias for \u0026quot;info\u0026quot; (bsc#1245985)\n- version 1.14.93\n\n- sh: Reset solver options after command (bsc#1245496)\n- Explicitly selecting DownloadAsNeeded also selects the\n  classic_rpmtrans backend.\n- version 1.14.92\n\n- BuildRequires:  libzypp-devel \u0026gt;= 17.37.6.\n  Enhancements regarding mirror handling during repo refresh. Adapt\n  to libzypp API changes. (bsc#1230267)\n- version 1.14.91\n\n- BuildRequires:  libzypp-devel \u0026gt;= 17.37.0.\n- Use libzypp improvements for preload and mirror handling.\n- xmlout.rnc: Update repo-element (bsc#1241463)\n  Add the \u0026quot;metalink\u0026quot; attribute and reflect that the \u0026quot;url\u0026quot; elements\n  list may in fact be empty, if no baseurls are defined in the\n  .repo files.\n- man: update --allow-unsigned-rpm description.\n  Explain how to achieve the same for packages provided by\n  repositories.\n- version 1.14.90\n\n- Updated translations (bsc#1230267)\n- version 1.14.89\n\n- Do not double encode URL strings passed on the commandline\n  (bsc#1237587)\n  URLs passed on the commandline must have their special chars\n  encoded already. We just want to check and encode forgotten\n  unsafe chars like a blank. A '%' however must not be encoded\n  again.\n- version 1.14.88\n\n- Package preloader that concurrently downloads files. It's not yet\n  enabled per default. To enable the preview set ZYPP_CURL2=1 and\n  ZYPP_PCK_PRELOAD=1 in the environment. (#104)\n- BuildRequires:  libzypp-devel \u0026gt;= 17.36.4.\n- version 1.14.87\n\n- refresh: add --include-all-archs (fixes #598)\n  Future multi-arch repos may allow to download only those metadata\n  which refer to packages actually compatible with the systems\n  architecture. Some tools however want zypp to provide the full\n  metadata of a repository without filtering incompatible\n  architectures.\n- info,search: add option to search and list Enhances\n  (bsc#1237949)\n- version 1.14.86\n\n- Annonunce --root in commands not launching a Target\n  (bsc#1237044)\n- BuildRequires:  libzypp-devel \u0026gt;= 17.36.3.\n- version 1.14.85\n\n- Let zypper dup fail in case of (temporarily) unaccessible repos\n  (bsc#1228434, bsc#1236939, fixes #446)\n- version 1.14.84\n\n- New system-architecture command (bsc#1236384)\n  Prints the detected system architecture.\n- version 1.14.83\n\n- requires: libzypp \u0026gt;= 17.36.0.\n- Change versioncmp command to return exit code according to the\n  comparison result (#593)\n- version 1.14.82\n\n- lr: show the repositories keep-packages flag (bsc#1232458)\n  It is shown in the  details view or by using -k,--keep-packages.\n  In addition libyzpp supports to enforce keeping downloaded\n  packages of all repos within a package cache by creating a\n  '.keep_packages' file there.\n- version 1.14.81\n\n- Try to refresh update repos first to have updated GPG keys on\n  the fly (bsc#1234752)\n  An update repo may contain a prolonged GPG key for the GA repo.\n  Refreshing the update repo first updates a trusted key on the fly\n  and avoids a 'key has expired' warning being issued when\n  refreshing the GA repo.\n- Refresh: restore legacy behavior and suppress Exception\n  reporting as non-root (bsc#1235636)\n- version 1.14.80\n\n- info: Allow to query a specific version (jsc#PED-11268)\n  To query for a specific version simply append \u0026quot;-\u0026lt;version\u0026gt;\u0026quot; or\n  \u0026quot;-\u0026lt;version\u0026gt;-\u0026lt;release\u0026gt;\u0026quot; to the \u0026quot;\u0026lt;name\u0026gt;\u0026quot; pattern. Note that the\n  edition part must always match exactly.\n- version 1.14.79\n\n- Don't try to download missing raw metadata if cache is not\n  writable (bsc#1225451)\n- man: Update 'search' command description.\n  Hint to \u0026quot;se -v\u0026quot; showing the matches within the packages metadata.\n  Explain that search strings starting with a \u0026quot;/\u0026quot; will implicitly\n  look into the filelist as well. Otherfise an explicit \u0026quot;-f\u0026quot; is\n  needed.\n- version 1.14.78\n\n",
      "Title": "Details",
      "Type": "General"
    },
    {
      "Text": "The CVRF data is provided by SUSE under the Creative Commons License 4.0 with Attribution (CC-BY-4.0).",
      "Title": "Terms of Use",
      "Type": "Legal Disclaimer"
    }
  ],
  "ProductTree": {
    "Relationships": [
      {
        "ProductReference": "SL-Micro-release-6.1-slfo.1.11.50",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cloud-netconfig-gce-1.15-slfo.1.1_1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cloud-regionsrv-client-10.5.1-slfo.1.1_5.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "cloud-regionsrv-client-plugin-gce-1.0.0-slfo.1.1_5.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "containerd-1.7.27-slfo.1.1_1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "docker-28.3.2_ce-slfo.1.1_5.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "dracut-kiwi-lib-10.2.29-slfo.1.1_1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "dracut-kiwi-oem-repart-10.2.29-slfo.1.1_1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glib2-tools-2.78.6-slfo.1.1_3.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glibc-2.38-slfo.1.1_4.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "glibc-locale-base-2.38-slfo.1.1_4.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "google-dracut-config-0.0.4-slfo.1.1_2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "gpg2-2.4.4-slfo.1.1_5.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "gptfdisk-1.0.9-slfo.1.1_2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "iputils-20221126-slfo.1.1_2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "kernel-default-6.4.0-31.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "less-668-slfo.1.1_1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libaugeas0-1.14.1-slfo.1.1_2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libfa1-1.14.1-slfo.1.1_2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgcc_s1-14.3.0+git11799-slfo.1.1_1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgcrypt20-1.10.3-slfo.1.1_2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgio-2_0-0-2.78.6-slfo.1.1_3.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libglib-2_0-0-2.78.6-slfo.1.1_3.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgmodule-2_0-0-2.78.6-slfo.1.1_3.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgobject-2_0-0-2.78.6-slfo.1.1_3.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libgomp1-14.3.0+git11799-slfo.1.1_1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "liblzma5-5.4.3-slfo.1.1_2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libopenssl3-3.1.4-slfo.1.1_6.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libpython3_11-1_0-3.11.13-slfo.1.1_1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "librpmbuild9-4.18.0-slfo.1.1_2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsolv-tools-base-0.7.34-slfo.1.1_1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsqlite3-0-3.49.1-slfo.1.1_1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libssh-config-0.10.6-slfo.1.1_2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libssh4-0.10.6-slfo.1.1_2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libstdc++6-14.3.0+git11799-slfo.1.1_1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libsystemd0-254.27-slfo.1.1_1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libtss2-tcti-tabrmd0-3.0.0-slfo.1.1_2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libudev1-254.27-slfo.1.1_1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libxml2-2-2.11.6-slfo.1.1_5.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libxml2-tools-2.11.6-slfo.1.1_5.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "libzypp-17.37.16-slfo.1.1_1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "lsof-4.99.4-slfo.1.1_1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "openssl-3-3.1.4-slfo.1.1_6.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "pam-1.6.1-slfo.1.1_3.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "pam-config-2.11+git.20240906-slfo.1.1_2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "perl-5.38.2-slfo.1.1_2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "perl-base-5.38.2-slfo.1.1_2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python-instance-billing-flavor-check-1.0.1-slfo.1.1_1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python311-3.11.13-slfo.1.1_1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python311-base-3.11.13-slfo.1.1_1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python311-cryptography-42.0.4-slfo.1.1_2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python311-libxml2-2.11.6-slfo.1.1_5.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python311-requests-2.32.4-slfo.1.1_1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python311-rpm-4.18.0-slfo.1.1_2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "python311-setuptools-70.0.0-slfo.1.1_2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "rpm-4.18.0-slfo.1.1_2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "selinux-policy-20241031+git8.1f94e96d-slfo.1.1_1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "selinux-policy-targeted-20241031+git8.1f94e96d-slfo.1.1_1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "sudo-1.9.15p5-slfo.1.1_2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "supportutils-3.2.10-slfo.1.1_1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "systemd-254.27-slfo.1.1_1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "systemd-coredump-254.27-slfo.1.1_1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "tpm2.0-abrmd-3.0.0-slfo.1.1_2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "udev-254.27-slfo.1.1_1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "xz-5.4.3-slfo.1.1_2.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "zypper-1.14.93-slfo.1.1_1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      },
      {
        "ProductReference": "zypper-needs-restarting-1.14.93-slfo.1.1_1.1",
        "RelatesToProductReference": "Public Cloud Image google/sle-micro-6-1-byos-v20250823-x86-64",
        "RelationType": "Default Component Of"
      }
    ]
  },
  "References": [
    {
      "URL": "https://publiccloudimagechangeinfo.suse.com/google/sle-micro-6-1-byos-v20250823-x86-64/",
      "Description": "Public Cloud Image Info"
    },
    {
      "URL": "https://www.suse.com/support/security/rating/",
      "Description": "SUSE Security Ratings"
    }
  ],
  "Vulnerabilities": [
    {
      "CVE": "CVE-2023-50782",
      "Description": "A flaw was found in the python-cryptography package. This issue may allow a remote attacker to decrypt captured messages in TLS servers that use RSA key exchanges, which may lead to exposure of confidential or sensitive data.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-52888",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: mediatek: vcodec: Only free buffer VA that is not NULL\n\nIn the MediaTek vcodec driver, while mtk_vcodec_mem_free() is mostly\ncalled only when the buffer to free exists, there are some instances\nthat didn't do the check and triggered warnings in practice.\n\nWe believe those checks were forgotten unintentionally. Add the checks\nback to fix the warnings.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53034",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nntb_hw_switchtec: Fix shift-out-of-bounds in switchtec_ntb_mw_set_trans\n\nThere is a kernel API ntb_mw_clear_trans() would pass 0 to both addr and\nsize. This would make xlate_pos negative.\n\n[   23.734156] switchtec switchtec0: MW 0: part 0 addr 0x0000000000000000 size 0x0000000000000000\n[   23.734158] ================================================================================\n[   23.734172] UBSAN: shift-out-of-bounds in drivers/ntb/hw/mscc/ntb_hw_switchtec.c:293:7\n[   23.734418] shift exponent -1 is negative\n\nEnsuring xlate_pos is a positive or zero before BIT.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2023-53146",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: dw2102: Fix null-ptr-deref in dw2102_i2c_transfer()\n\nIn dw2102_i2c_transfer, msg is controlled by user. When msg[i].buf\nis null and msg[i].len is zero, former checks on msg[i].buf would be\npassed. Malicious data finally reach dw2102_i2c_transfer. If accessing\nmsg[i].buf[0] without sanity check, null ptr deref would happen.\nWe add check on msg[i].len to prevent crash.\n\nSimilar commit:\ncommit 950e252cb469\n(\"[media] dw2102: limit messages to buffer size\")",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-12718",
      "Description": "Allows modifying some file metadata (e.g. last modified) with filter=\"data\"  or file permissions (chmod) with filter=\"tar\"  of files outside the extraction directory.\nYou are affected by this vulnerability if using the tarfile  module to extract untrusted tar archives using TarFile.extractall()  or TarFile.extract()  using the filter=  parameter with a value of \"data\"  or \"tar\". See the tarfile  extraction filters documentation https://docs.python.org/3/library/tarfile.html#tarfile-extraction-filter   for more information. Only Python versions 3.12 or later are affected by these vulnerabilities, earlier versions don't include the extraction filter feature.\n\nNote that for Python 3.14 or later the default value of filter=  changed from \"no filtering\" to `\"data\", so if you are relying on this new default behavior then your usage is also affected.\n\nNote that none of these vulnerabilities significantly affect the installation of source distributions which are tar archives as source distributions already allow arbitrary code execution during the build process. However when evaluating source distributions it's important to avoid installing source distributions with suspicious links.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-2236",
      "Description": "A timing-based side-channel flaw was found in libgcrypt's RSA implementation. This issue may allow a remote attacker to initiate a Bleichenbacher-style attack, which can lead to the decryption of RSA ciphertexts.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-26831",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/handshake: Fix handshake_req_destroy_test1\n\nRecently, handshake_req_destroy_test1 started failing:\n\nExpected handshake_req_destroy_test == req, but\n    handshake_req_destroy_test == 0000000000000000\n    req == 0000000060f99b40\nnot ok 11 req_destroy works\n\nThis is because \"sock_release(sock)\" was replaced with \"fput(filp)\"\nto address a memory leak. Note that sock_release() is synchronous\nbut fput() usually delays the final close and clean-up.\n\nThe delay is not consequential in the other cases that were changed\nbut handshake_req_destroy_test1 is testing that handshake_req_cancel()\nfollowed by closing the file actually does call the -\u003ehp_destroy\nmethod. Thus the PTR_EQ test at the end has to be sure that the\nfinal close is complete before it checks the pointer.\n\nWe cannot use a completion here because if -\u003ehp_destroy is never\ncalled (ie, there is an API bug) then the test will hang.\n\nReported by: Guenter Roeck \u003clinux@roeck-us.net\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-27415",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: bridge: confirm multicast packets before passing them up the stack\n\nconntrack nf_confirm logic cannot handle cloned skbs referencing\nthe same nf_conn entry, which will happen for multicast (broadcast)\nframes on bridges.\n\n Example:\n    macvlan0\n       |\n      br0\n     /  \\\n  ethX    ethY\n\n ethX (or Y) receives a L2 multicast or broadcast packet containing\n an IP packet, flow is not yet in conntrack table.\n\n 1. skb passes through bridge and fake-ip (br_netfilter)Prerouting.\n    -\u003e skb-\u003e_nfct now references a unconfirmed entry\n 2. skb is broad/mcast packet. bridge now passes clones out on each bridge\n    interface.\n 3. skb gets passed up the stack.\n 4. In macvlan case, macvlan driver retains clone(s) of the mcast skb\n    and schedules a work queue to send them out on the lower devices.\n\n    The clone skb-\u003e_nfct is not a copy, it is the same entry as the\n    original skb.  The macvlan rx handler then returns RX_HANDLER_PASS.\n 5. Normal conntrack hooks (in NF_INET_LOCAL_IN) confirm the orig skb.\n\nThe Macvlan broadcast worker and normal confirm path will race.\n\nThis race will not happen if step 2 already confirmed a clone. In that\ncase later steps perform skb_clone() with skb-\u003e_nfct already confirmed (in\nhash table).  This works fine.\n\nBut such confirmation won't happen when eb/ip/nftables rules dropped the\npackets before they reached the nf_confirm step in postrouting.\n\nPablo points out that nf_conntrack_bridge doesn't allow use of stateful\nnat, so we can safely discard the nf_conn entry and let inet call\nconntrack again.\n\nThis doesn't work for bridge netfilter: skb could have a nat\ntransformation. Also bridge nf prevents re-invocation of inet prerouting\nvia 'sabotage_in' hook.\n\nWork around this problem by explicit confirmation of the entry at LOCAL_IN\ntime, before upper layer has a chance to clone the unconfirmed entry.\n\nThe downside is that this disables NAT and conntrack helpers.\n\nAlternative fix would be to add locking to all code parts that deal with\nunconfirmed packets, but even if that could be done in a sane way this\nopens up other problems, for example:\n\n-m physdev --physdev-out eth0 -j SNAT --snat-to 1.2.3.4\n-m physdev --physdev-out eth1 -j SNAT --snat-to 1.2.3.5\n\nFor multicast case, only one of such conflicting mappings will be\ncreated, conntrack only handles 1:1 NAT mappings.\n\nUsers should set create a setup that explicitly marks such traffic\nNOTRACK (conntrack bypass) to avoid this, but we cannot auto-bypass\nthem, ruleset might have accept rules for untracked traffic already,\nso user-visible behaviour would change.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-28956",
      "Description": "Exposure of Sensitive Information in Shared Microarchitectural Structures during Transient Execution for some Intel(R) Processors may allow an authenticated user to potentially enable information disclosure via local access.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-35840",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: use OPTION_MPTCP_MPJ_SYNACK in subflow_finish_connect()\n\nsubflow_finish_connect() uses four fields (backup, join_id, thmac, none)\nthat may contain garbage unless OPTION_MPTCP_MPJ_SYNACK has been set\nin mptcp_parse_option()",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40635",
      "Description": "containerd is an open-source container runtime. A bug was found in containerd prior to versions 1.6.38, 1.7.27, and 2.0.4 where containers launched with a User set as a `UID:GID` larger than the maximum 32-bit signed integer can cause an overflow condition where the container ultimately runs as root (UID 0). This could cause unexpected behavior for environments that require containers to run as a non-root user. This bug has been fixed in containerd 1.6.38, 1.7.27, and 2.04. As a workaround, ensure that only trusted images are used and that only trusted users have permissions to import images.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-40896",
      "Description": "In libxml2 2.11 before 2.11.9, 2.12 before 2.12.9, and 2.13 before 2.13.3, the SAX parser can produce events for external entities even if custom SAX handlers try to override entity content (by setting \"checked\"). This makes classic XXE attacks possible.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-43869",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nperf: Fix event leak upon exec and file release\n\nThe perf pending task work is never waited upon the matching event\nrelease. In the case of a child event, released via free_event()\ndirectly, this can potentially result in a leaked event, such as in the\nfollowing scenario that doesn't even require a weak IRQ work\nimplementation to trigger:\n\nschedule()\n   prepare_task_switch()\n=======\u003e \u003cNMI\u003e\n      perf_event_overflow()\n         event-\u003epending_sigtrap = ...\n         irq_work_queue(\u0026event-\u003epending_irq)\n\u003c======= \u003c/NMI\u003e\n      perf_event_task_sched_out()\n          event_sched_out()\n              event-\u003epending_sigtrap = 0;\n              atomic_long_inc_not_zero(\u0026event-\u003erefcount)\n              task_work_add(\u0026event-\u003epending_task)\n   finish_lock_switch()\n=======\u003e \u003cIRQ\u003e\n   perf_pending_irq()\n      //do nothing, rely on pending task work\n\u003c======= \u003c/IRQ\u003e\n\nbegin_new_exec()\n   perf_event_exit_task()\n      perf_event_exit_event()\n         // If is child event\n         free_event()\n            WARN(atomic_long_cmpxchg(\u0026event-\u003erefcount, 1, 0) != 1)\n            // event is leaked\n\nSimilar scenarios can also happen with perf_event_remove_on_exec() or\nsimply against concurrent perf_event_release().\n\nFix this with synchonizing against the possibly remaining pending task\nwork while freeing the event, just like is done with remaining pending\nIRQ work. This means that the pending task callback neither need nor\nshould hold a reference to the event, preventing it from ever beeing\nfreed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46713",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nperf/aux: Fix AUX buffer serialization\n\nOle reported that event-\u003emmap_mutex is strictly insufficient to\nserialize the AUX buffer, add a per RB mutex to fully serialize it.\n\nNote that in the lock order comment the perf_event::mmap_mutex order\nwas already wrong, that is, it nesting under mmap_lock is not new with\nthis patch.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-46763",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfou: Fix null-ptr-deref in GRO.\n\nWe observed a null-ptr-deref in fou_gro_receive() while shutting down\na host.  [0]\n\nThe NULL pointer is sk-\u003esk_user_data, and the offset 8 is of protocol\nin struct fou.\n\nWhen fou_release() is called due to netns dismantle or explicit tunnel\nteardown, udp_tunnel_sock_release() sets NULL to sk-\u003esk_user_data.\nThen, the tunnel socket is destroyed after a single RCU grace period.\n\nSo, in-flight udp4_gro_receive() could find the socket and execute the\nFOU GRO handler, where sk-\u003esk_user_data could be NULL.\n\nLet's use rcu_dereference_sk_user_data() in fou_from_sock() and add NULL\nchecks in FOU GRO handlers.\n\n[0]:\nBUG: kernel NULL pointer dereference, address: 0000000000000008\n PF: supervisor read access in kernel mode\n PF: error_code(0x0000) - not-present page\nPGD 80000001032f4067 P4D 80000001032f4067 PUD 103240067 PMD 0\nSMP PTI\nCPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.10.216-204.855.amzn2.x86_64 #1\nHardware name: Amazon EC2 c5.large/, BIOS 1.0 10/16/2017\nRIP: 0010:fou_gro_receive (net/ipv4/fou.c:233) [fou]\nCode: 41 5f c3 cc cc cc cc e8 e7 2e 69 f4 0f 1f 80 00 00 00 00 0f 1f 44 00 00 49 89 f8 41 54 48 89 f7 48 89 d6 49 8b 80 88 02 00 00 \u003c0f\u003e b6 48 08 0f b7 42 4a 66 25 fd fd 80 cc 02 66 89 42 4a 0f b6 42\nRSP: 0018:ffffa330c0003d08 EFLAGS: 00010297\nRAX: 0000000000000000 RBX: ffff93d9e3a6b900 RCX: 0000000000000010\nRDX: ffff93d9e3a6b900 RSI: ffff93d9e3a6b900 RDI: ffff93dac2e24d08\nRBP: ffff93d9e3a6b900 R08: ffff93dacbce6400 R09: 0000000000000002\nR10: 0000000000000000 R11: ffffffffb5f369b0 R12: ffff93dacbce6400\nR13: ffff93dac2e24d08 R14: 0000000000000000 R15: ffffffffb4edd1c0\nFS:  0000000000000000(0000) GS:ffff93daee800000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000008 CR3: 0000000102140001 CR4: 00000000007706f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n \u003cIRQ\u003e\n ? show_trace_log_lvl (arch/x86/kernel/dumpstack.c:259)\n ? __die_body.cold (arch/x86/kernel/dumpstack.c:478 arch/x86/kernel/dumpstack.c:420)\n ? no_context (arch/x86/mm/fault.c:752)\n ? exc_page_fault (arch/x86/include/asm/irqflags.h:49 arch/x86/include/asm/irqflags.h:89 arch/x86/mm/fault.c:1435 arch/x86/mm/fault.c:1483)\n ? asm_exc_page_fault (arch/x86/include/asm/idtentry.h:571)\n ? fou_gro_receive (net/ipv4/fou.c:233) [fou]\n udp_gro_receive (include/linux/netdevice.h:2552 net/ipv4/udp_offload.c:559)\n udp4_gro_receive (net/ipv4/udp_offload.c:604)\n inet_gro_receive (net/ipv4/af_inet.c:1549 (discriminator 7))\n dev_gro_receive (net/core/dev.c:6035 (discriminator 4))\n napi_gro_receive (net/core/dev.c:6170)\n ena_clean_rx_irq (drivers/amazon/net/ena/ena_netdev.c:1558) [ena]\n ena_io_poll (drivers/amazon/net/ena/ena_netdev.c:1742) [ena]\n napi_poll (net/core/dev.c:6847)\n net_rx_action (net/core/dev.c:6917)\n __do_softirq (arch/x86/include/asm/jump_label.h:25 include/linux/jump_label.h:200 include/trace/events/irq.h:142 kernel/softirq.c:299)\n asm_call_irq_on_stack (arch/x86/entry/entry_64.S:809)\n\u003c/IRQ\u003e\n do_softirq_own_stack (arch/x86/include/asm/irq_stack.h:27 arch/x86/include/asm/irq_stack.h:77 arch/x86/kernel/irq_64.c:77)\n irq_exit_rcu (kernel/softirq.c:393 kernel/softirq.c:423 kernel/softirq.c:435)\n common_interrupt (arch/x86/kernel/irq.c:239)\n asm_common_interrupt (arch/x86/include/asm/idtentry.h:626)\nRIP: 0010:acpi_idle_do_entry (arch/x86/include/asm/irqflags.h:49 arch/x86/include/asm/irqflags.h:89 drivers/acpi/processor_idle.c:114 drivers/acpi/processor_idle.c:575)\nCode: 8b 15 d1 3c c4 02 ed c3 cc cc cc cc 65 48 8b 04 25 40 ef 01 00 48 8b 00 a8 08 75 eb 0f 1f 44 00 00 0f 00 2d d5 09 55 00 fb f4 \u003cfa\u003e c3 cc cc cc cc e9 be fc ff ff 66 66 2e 0f 1f 84 00 00 00 00 00\nRSP: 0018:ffffffffb5603e58 EFLAGS: 00000246\nRAX: 0000000000004000 RBX: ffff93dac0929c00 RCX: ffff93daee833900\nRDX: ffff93daee800000 RSI: ffff93d\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-47081",
      "Description": "Requests is a HTTP library. Due to a URL parsing issue, Requests releases prior to 2.32.4 may leak .netrc credentials to third parties for specific maliciously-crafted URLs. Users should upgrade to version 2.32.4 to receive a fix. For older versions of Requests, use of the .netrc file can be disabled with `trust_env=False` on one's Requests Session.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-49568",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/smc: check v2_ext_offset/eid_cnt/ism_gid_cnt when receiving proposal msg\n\nWhen receiving proposal msg in server, the fields v2_ext_offset/\neid_cnt/ism_gid_cnt in proposal msg are from the remote client\nand can not be fully trusted. Especially the field v2_ext_offset,\nonce exceed the max value, there has the chance to access wrong\naddress, and crash may happen.\n\nThis patch checks the fields v2_ext_offset/eid_cnt/ism_gid_cnt\nbefore using them.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50083",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: fix mptcp DSS corruption due to large pmtu xmit\n\nSyzkaller was able to trigger a DSS corruption:\n\n  TCP: request_sock_subflow_v4: Possible SYN flooding on port [::]:20002. Sending cookies.\n  ------------[ cut here ]------------\n  WARNING: CPU: 0 PID: 5227 at net/mptcp/protocol.c:695 __mptcp_move_skbs_from_subflow+0x20a9/0x21f0 net/mptcp/protocol.c:695\n  Modules linked in:\n  CPU: 0 UID: 0 PID: 5227 Comm: syz-executor350 Not tainted 6.11.0-syzkaller-08829-gaf9c191ac2a0 #0\n  Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 08/06/2024\n  RIP: 0010:__mptcp_move_skbs_from_subflow+0x20a9/0x21f0 net/mptcp/protocol.c:695\n  Code: 0f b6 dc 31 ff 89 de e8 b5 dd ea f5 89 d8 48 81 c4 50 01 00 00 5b 41 5c 41 5d 41 5e 41 5f 5d c3 cc cc cc cc e8 98 da ea f5 90 \u003c0f\u003e 0b 90 e9 47 ff ff ff e8 8a da ea f5 90 0f 0b 90 e9 99 e0 ff ff\n  RSP: 0018:ffffc90000006db8 EFLAGS: 00010246\n  RAX: ffffffff8ba9df18 RBX: 00000000000055f0 RCX: ffff888030023c00\n  RDX: 0000000000000100 RSI: 00000000000081e5 RDI: 00000000000055f0\n  RBP: 1ffff110062bf1ae R08: ffffffff8ba9cf12 R09: 1ffff110062bf1b8\n  R10: dffffc0000000000 R11: ffffed10062bf1b9 R12: 0000000000000000\n  R13: dffffc0000000000 R14: 00000000700cec61 R15: 00000000000081e5\n  FS:  000055556679c380(0000) GS:ffff8880b8600000(0000) knlGS:0000000000000000\n  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  CR2: 0000000020287000 CR3: 0000000077892000 CR4: 00000000003506f0\n  DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n  DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n  Call Trace:\n   \u003cIRQ\u003e\n   move_skbs_to_msk net/mptcp/protocol.c:811 [inline]\n   mptcp_data_ready+0x29c/0xa90 net/mptcp/protocol.c:854\n   subflow_data_ready+0x34a/0x920 net/mptcp/subflow.c:1490\n   tcp_data_queue+0x20fd/0x76c0 net/ipv4/tcp_input.c:5283\n   tcp_rcv_established+0xfba/0x2020 net/ipv4/tcp_input.c:6237\n   tcp_v4_do_rcv+0x96d/0xc70 net/ipv4/tcp_ipv4.c:1915\n   tcp_v4_rcv+0x2dc0/0x37f0 net/ipv4/tcp_ipv4.c:2350\n   ip_protocol_deliver_rcu+0x22e/0x440 net/ipv4/ip_input.c:205\n   ip_local_deliver_finish+0x341/0x5f0 net/ipv4/ip_input.c:233\n   NF_HOOK+0x3a4/0x450 include/linux/netfilter.h:314\n   NF_HOOK+0x3a4/0x450 include/linux/netfilter.h:314\n   __netif_receive_skb_one_core net/core/dev.c:5662 [inline]\n   __netif_receive_skb+0x2bf/0x650 net/core/dev.c:5775\n   process_backlog+0x662/0x15b0 net/core/dev.c:6107\n   __napi_poll+0xcb/0x490 net/core/dev.c:6771\n   napi_poll net/core/dev.c:6840 [inline]\n   net_rx_action+0x89b/0x1240 net/core/dev.c:6962\n   handle_softirqs+0x2c5/0x980 kernel/softirq.c:554\n   do_softirq+0x11b/0x1e0 kernel/softirq.c:455\n   \u003c/IRQ\u003e\n   \u003cTASK\u003e\n   __local_bh_enable_ip+0x1bb/0x200 kernel/softirq.c:382\n   local_bh_enable include/linux/bottom_half.h:33 [inline]\n   rcu_read_unlock_bh include/linux/rcupdate.h:919 [inline]\n   __dev_queue_xmit+0x1764/0x3e80 net/core/dev.c:4451\n   dev_queue_xmit include/linux/netdevice.h:3094 [inline]\n   neigh_hh_output include/net/neighbour.h:526 [inline]\n   neigh_output include/net/neighbour.h:540 [inline]\n   ip_finish_output2+0xd41/0x1390 net/ipv4/ip_output.c:236\n   ip_local_out net/ipv4/ip_output.c:130 [inline]\n   __ip_queue_xmit+0x118c/0x1b80 net/ipv4/ip_output.c:536\n   __tcp_transmit_skb+0x2544/0x3b30 net/ipv4/tcp_output.c:1466\n   tcp_transmit_skb net/ipv4/tcp_output.c:1484 [inline]\n   tcp_mtu_probe net/ipv4/tcp_output.c:2547 [inline]\n   tcp_write_xmit+0x641d/0x6bf0 net/ipv4/tcp_output.c:2752\n   __tcp_push_pending_frames+0x9b/0x360 net/ipv4/tcp_output.c:3015\n   tcp_push_pending_frames include/net/tcp.h:2107 [inline]\n   tcp_data_snd_check net/ipv4/tcp_input.c:5714 [inline]\n   tcp_rcv_established+0x1026/0x2020 net/ipv4/tcp_input.c:6239\n   tcp_v4_do_rcv+0x96d/0xc70 net/ipv4/tcp_ipv4.c:1915\n   sk_backlog_rcv include/net/sock.h:1113 [inline]\n   __release_sock+0x214/0x350 net/core/sock.c:3072\n   release_sock+0x61/0x1f0 net/core/sock.c:3626\n   mptcp_push_\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50106",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfsd: fix race between laundromat and free_stateid\n\nThere is a race between laundromat handling of revoked delegations\nand a client sending free_stateid operation. Laundromat thread\nfinds that delegation has expired and needs to be revoked so it\nmarks the delegation stid revoked and it puts it on a reaper list\nbut then it unlock the state lock and the actual delegation revocation\nhappens without the lock. Once the stid is marked revoked a racing\nfree_stateid processing thread does the following (1) it calls\nlist_del_init() which removes it from the reaper list and (2) frees\nthe delegation stid structure. The laundromat thread ends up not\ncalling the revoke_delegation() function for this particular delegation\nbut that means it will no release the lock lease that exists on\nthe file.\n\nNow, a new open for this file comes in and ends up finding that\nlease list isn't empty and calls nfsd_breaker_owns_lease() which ends\nup trying to derefence a freed delegation stateid. Leading to the\nfollowint use-after-free KASAN warning:\n\nkernel: ==================================================================\nkernel: BUG: KASAN: slab-use-after-free in nfsd_breaker_owns_lease+0x140/0x160 [nfsd]\nkernel: Read of size 8 at addr ffff0000e73cd0c8 by task nfsd/6205\nkernel:\nkernel: CPU: 2 UID: 0 PID: 6205 Comm: nfsd Kdump: loaded Not tainted 6.11.0-rc7+ #9\nkernel: Hardware name: Apple Inc. Apple Virtualization Generic Platform, BIOS 2069.0.0.0.0 08/03/2024\nkernel: Call trace:\nkernel: dump_backtrace+0x98/0x120\nkernel: show_stack+0x1c/0x30\nkernel: dump_stack_lvl+0x80/0xe8\nkernel: print_address_description.constprop.0+0x84/0x390\nkernel: print_report+0xa4/0x268\nkernel: kasan_report+0xb4/0xf8\nkernel: __asan_report_load8_noabort+0x1c/0x28\nkernel: nfsd_breaker_owns_lease+0x140/0x160 [nfsd]\nkernel: nfsd_file_do_acquire+0xb3c/0x11d0 [nfsd]\nkernel: nfsd_file_acquire_opened+0x84/0x110 [nfsd]\nkernel: nfs4_get_vfs_file+0x634/0x958 [nfsd]\nkernel: nfsd4_process_open2+0xa40/0x1a40 [nfsd]\nkernel: nfsd4_open+0xa08/0xe80 [nfsd]\nkernel: nfsd4_proc_compound+0xb8c/0x2130 [nfsd]\nkernel: nfsd_dispatch+0x22c/0x718 [nfsd]\nkernel: svc_process_common+0x8e8/0x1960 [sunrpc]\nkernel: svc_process+0x3d4/0x7e0 [sunrpc]\nkernel: svc_handle_xprt+0x828/0xe10 [sunrpc]\nkernel: svc_recv+0x2cc/0x6a8 [sunrpc]\nkernel: nfsd+0x270/0x400 [nfsd]\nkernel: kthread+0x288/0x310\nkernel: ret_from_fork+0x10/0x20\n\nThis patch proposes a fixed that's based on adding 2 new additional\nstid's sc_status values that help coordinate between the laundromat\nand other operations (nfsd4_free_stateid() and nfsd4_delegreturn()).\n\nFirst to make sure, that once the stid is marked revoked, it is not\nremoved by the nfsd4_free_stateid(), the laundromat take a reference\non the stateid. Then, coordinating whether the stid has been put\non the cl_revoked list or we are processing FREE_STATEID and need to\nmake sure to remove it from the list, each check that state and act\naccordingly. If laundromat has added to the cl_revoke list before\nthe arrival of FREE_STATEID, then nfsd4_free_stateid() knows to remove\nit from the list. If nfsd4_free_stateid() finds that operations arrived\nbefore laundromat has placed it on cl_revoke list, it marks the state\nfreed and then laundromat will no longer add it to the list.\n\nAlso, for nfsd4_delegreturn() when looking for the specified stid,\nwe need to access stid that are marked removed or freeable, it means\nthe laundromat has started processing it but hasn't finished and this\ndelegreturn needs to return nfserr_deleg_revoked and not\nnfserr_bad_stateid. The latter will not trigger a FREE_STATEID and the\nlack of it will leave this stid on the cl_revoked list indefinitely.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50162",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: devmap: provide rxq after redirect\n\nrxq contains a pointer to the device from where\nthe redirect happened. Currently, the BPF program\nthat was executed after a redirect via BPF_MAP_TYPE_DEVMAP*\ndoes not have it set.\n\nThis is particularly bad since accessing ingress_ifindex, e.g.\n\nSEC(\"xdp\")\nint prog(struct xdp_md *pkt)\n{\n        return bpf_redirect_map(\u0026dev_redirect_map, 0, 0);\n}\n\nSEC(\"xdp/devmap\")\nint prog_after_redirect(struct xdp_md *pkt)\n{\n        bpf_printk(\"ifindex %i\", pkt-\u003eingress_ifindex);\n        return XDP_PASS;\n}\n\ndepends on access to rxq, so a NULL pointer gets dereferenced:\n\n\u003c1\u003e[  574.475170] BUG: kernel NULL pointer dereference, address: 0000000000000000\n\u003c1\u003e[  574.475188] #PF: supervisor read access in kernel mode\n\u003c1\u003e[  574.475194] #PF: error_code(0x0000) - not-present page\n\u003c6\u003e[  574.475199] PGD 0 P4D 0\n\u003c4\u003e[  574.475207] Oops: Oops: 0000 [#1] PREEMPT SMP NOPTI\n\u003c4\u003e[  574.475217] CPU: 4 UID: 0 PID: 217 Comm: kworker/4:1 Not tainted 6.11.0-rc5-reduced-00859-g780801200300 #23\n\u003c4\u003e[  574.475226] Hardware name: Intel(R) Client Systems NUC13ANHi7/NUC13ANBi7, BIOS ANRPL357.0026.2023.0314.1458 03/14/2023\n\u003c4\u003e[  574.475231] Workqueue: mld mld_ifc_work\n\u003c4\u003e[  574.475247] RIP: 0010:bpf_prog_5e13354d9cf5018a_prog_after_redirect+0x17/0x3c\n\u003c4\u003e[  574.475257] Code: cc cc cc cc cc cc cc 80 00 00 00 cc cc cc cc cc cc cc cc f3 0f 1e fa 0f 1f 44 00 00 66 90 55 48 89 e5 f3 0f 1e fa 48 8b 57 20 \u003c48\u003e 8b 52 00 8b 92 e0 00 00 00 48 bf f8 a6 d5 c4 5d a0 ff ff be 0b\n\u003c4\u003e[  574.475263] RSP: 0018:ffffa62440280c98 EFLAGS: 00010206\n\u003c4\u003e[  574.475269] RAX: ffffa62440280cd8 RBX: 0000000000000001 RCX: 0000000000000000\n\u003c4\u003e[  574.475274] RDX: 0000000000000000 RSI: ffffa62440549048 RDI: ffffa62440280ce0\n\u003c4\u003e[  574.475278] RBP: ffffa62440280c98 R08: 0000000000000002 R09: 0000000000000001\n\u003c4\u003e[  574.475281] R10: ffffa05dc8b98000 R11: ffffa05f577fca40 R12: ffffa05dcab24000\n\u003c4\u003e[  574.475285] R13: ffffa62440280ce0 R14: ffffa62440549048 R15: ffffa62440549000\n\u003c4\u003e[  574.475289] FS:  0000000000000000(0000) GS:ffffa05f4f700000(0000) knlGS:0000000000000000\n\u003c4\u003e[  574.475294] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n\u003c4\u003e[  574.475298] CR2: 0000000000000000 CR3: 000000025522e000 CR4: 0000000000f50ef0\n\u003c4\u003e[  574.475303] PKRU: 55555554\n\u003c4\u003e[  574.475306] Call Trace:\n\u003c4\u003e[  574.475313]  \u003cIRQ\u003e\n\u003c4\u003e[  574.475318]  ? __die+0x23/0x70\n\u003c4\u003e[  574.475329]  ? page_fault_oops+0x180/0x4c0\n\u003c4\u003e[  574.475339]  ? skb_pp_cow_data+0x34c/0x490\n\u003c4\u003e[  574.475346]  ? kmem_cache_free+0x257/0x280\n\u003c4\u003e[  574.475357]  ? exc_page_fault+0x67/0x150\n\u003c4\u003e[  574.475368]  ? asm_exc_page_fault+0x26/0x30\n\u003c4\u003e[  574.475381]  ? bpf_prog_5e13354d9cf5018a_prog_after_redirect+0x17/0x3c\n\u003c4\u003e[  574.475386]  bq_xmit_all+0x158/0x420\n\u003c4\u003e[  574.475397]  __dev_flush+0x30/0x90\n\u003c4\u003e[  574.475407]  veth_poll+0x216/0x250 [veth]\n\u003c4\u003e[  574.475421]  __napi_poll+0x28/0x1c0\n\u003c4\u003e[  574.475430]  net_rx_action+0x32d/0x3a0\n\u003c4\u003e[  574.475441]  handle_softirqs+0xcb/0x2c0\n\u003c4\u003e[  574.475451]  do_softirq+0x40/0x60\n\u003c4\u003e[  574.475458]  \u003c/IRQ\u003e\n\u003c4\u003e[  574.475461]  \u003cTASK\u003e\n\u003c4\u003e[  574.475464]  __local_bh_enable_ip+0x66/0x70\n\u003c4\u003e[  574.475471]  __dev_queue_xmit+0x268/0xe40\n\u003c4\u003e[  574.475480]  ? selinux_ip_postroute+0x213/0x420\n\u003c4\u003e[  574.475491]  ? alloc_skb_with_frags+0x4a/0x1d0\n\u003c4\u003e[  574.475502]  ip6_finish_output2+0x2be/0x640\n\u003c4\u003e[  574.475512]  ? nf_hook_slow+0x42/0xf0\n\u003c4\u003e[  574.475521]  ip6_finish_output+0x194/0x300\n\u003c4\u003e[  574.475529]  ? __pfx_ip6_finish_output+0x10/0x10\n\u003c4\u003e[  574.475538]  mld_sendpack+0x17c/0x240\n\u003c4\u003e[  574.475548]  mld_ifc_work+0x192/0x410\n\u003c4\u003e[  574.475557]  process_one_work+0x15d/0x380\n\u003c4\u003e[  574.475566]  worker_thread+0x29d/0x3a0\n\u003c4\u003e[  574.475573]  ? __pfx_worker_thread+0x10/0x10\n\u003c4\u003e[  574.475580]  ? __pfx_worker_thread+0x10/0x10\n\u003c4\u003e[  574.475587]  kthread+0xcd/0x100\n\u003c4\u003e[  574.475597]  ? __pfx_kthread+0x10/0x10\n\u003c4\u003e[  574.475606]  ret_from_fork+0x31/0x50\n\u003c4\u003e[  574.475615]  ? __pfx_kthread+0x10/0x10\n\u003c4\u003e[  574.475623]  ret_from_fork_asm+0x1a/0x\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50163",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Make sure internal and UAPI bpf_redirect flags don't overlap\n\nThe bpf_redirect_info is shared between the SKB and XDP redirect paths,\nand the two paths use the same numeric flag values in the ri-\u003eflags\nfield (specifically, BPF_F_BROADCAST == BPF_F_NEXTHOP). This means that\nif skb bpf_redirect_neigh() is used with a non-NULL params argument and,\nsubsequently, an XDP redirect is performed using the same\nbpf_redirect_info struct, the XDP path will get confused and end up\ncrashing, which syzbot managed to trigger.\n\nWith the stack-allocated bpf_redirect_info, the structure is no longer\nshared between the SKB and XDP paths, so the crash doesn't happen\nanymore. However, different code paths using identically-numbered flag\nvalues in the same struct field still seems like a bit of a mess, so\nthis patch cleans that up by moving the flag definitions together and\nredefining the three flags in BPF_F_REDIRECT_INTERNAL to not overlap\nwith the flags used for XDP. It also adds a BUILD_BUG_ON() check to make\nsure the overlap is not re-introduced by mistake.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-50223",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsched/numa: Fix the potential null pointer dereference in task_numa_work()\n\nWhen running stress-ng-vm-segv test, we found a null pointer dereference\nerror in task_numa_work(). Here is the backtrace:\n\n  [323676.066985] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000020\n  ......\n  [323676.067108] CPU: 35 PID: 2694524 Comm: stress-ng-vm-se\n  ......\n  [323676.067113] pstate: 23401009 (nzCv daif +PAN -UAO +TCO +DIT +SSBS BTYPE=--)\n  [323676.067115] pc : vma_migratable+0x1c/0xd0\n  [323676.067122] lr : task_numa_work+0x1ec/0x4e0\n  [323676.067127] sp : ffff8000ada73d20\n  [323676.067128] x29: ffff8000ada73d20 x28: 0000000000000000 x27: 000000003e89f010\n  [323676.067130] x26: 0000000000080000 x25: ffff800081b5c0d8 x24: ffff800081b27000\n  [323676.067133] x23: 0000000000010000 x22: 0000000104d18cc0 x21: ffff0009f7158000\n  [323676.067135] x20: 0000000000000000 x19: 0000000000000000 x18: ffff8000ada73db8\n  [323676.067138] x17: 0001400000000000 x16: ffff800080df40b0 x15: 0000000000000035\n  [323676.067140] x14: ffff8000ada73cc8 x13: 1fffe0017cc72001 x12: ffff8000ada73cc8\n  [323676.067142] x11: ffff80008001160c x10: ffff000be639000c x9 : ffff8000800f4ba4\n  [323676.067145] x8 : ffff000810375000 x7 : ffff8000ada73974 x6 : 0000000000000001\n  [323676.067147] x5 : 0068000b33e26707 x4 : 0000000000000001 x3 : ffff0009f7158000\n  [323676.067149] x2 : 0000000000000041 x1 : 0000000000004400 x0 : 0000000000000000\n  [323676.067152] Call trace:\n  [323676.067153]  vma_migratable+0x1c/0xd0\n  [323676.067155]  task_numa_work+0x1ec/0x4e0\n  [323676.067157]  task_work_run+0x78/0xd8\n  [323676.067161]  do_notify_resume+0x1ec/0x290\n  [323676.067163]  el0_svc+0x150/0x160\n  [323676.067167]  el0t_64_sync_handler+0xf8/0x128\n  [323676.067170]  el0t_64_sync+0x17c/0x180\n  [323676.067173] Code: d2888001 910003fd f9000bf3 aa0003f3 (f9401000)\n  [323676.067177] SMP: stopping secondary CPUs\n  [323676.070184] Starting crashdump kernel...\n\nstress-ng-vm-segv in stress-ng is used to stress test the SIGSEGV error\nhandling function of the system, which tries to cause a SIGSEGV error on\nreturn from unmapping the whole address space of the child process.\n\nNormally this program will not cause kernel crashes. But before the\nmunmap system call returns to user mode, a potential task_numa_work()\nfor numa balancing could be added and executed. In this scenario, since the\nchild process has no vma after munmap, the vma_next() in task_numa_work()\nwill return a null pointer even if the vma iterator restarts from 0.\n\nRecheck the vma pointer before dereferencing it in task_numa_work().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-53135",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: VMX: Bury Intel PT virtualization (guest/host mode) behind CONFIG_BROKEN\n\nHide KVM's pt_mode module param behind CONFIG_BROKEN, i.e. disable support\nfor virtualizing Intel PT via guest/host mode unless BROKEN=y.  There are\nmyriad bugs in the implementation, some of which are fatal to the guest,\nand others which put the stability and health of the host at risk.\n\nFor guest fatalities, the most glaring issue is that KVM fails to ensure\ntracing is disabled, and *stays* disabled prior to VM-Enter, which is\nnecessary as hardware disallows loading (the guest's) RTIT_CTL if tracing\nis enabled (enforced via a VMX consistency check).  Per the SDM:\n\n  If the logical processor is operating with Intel PT enabled (if\n  IA32_RTIT_CTL.TraceEn = 1) at the time of VM entry, the \"load\n  IA32_RTIT_CTL\" VM-entry control must be 0.\n\nOn the host side, KVM doesn't validate the guest CPUID configuration\nprovided by userspace, and even worse, uses the guest configuration to\ndecide what MSRs to save/load at VM-Enter and VM-Exit.  E.g. configuring\nguest CPUID to enumerate more address ranges than are supported in hardware\nwill result in KVM trying to passthrough, save, and load non-existent MSRs,\nwhich generates a variety of WARNs, ToPA ERRORs in the host, a potential\ndeadlock, etc.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-54458",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: ufs: bsg: Set bsg_queue to NULL after removal\n\nCurrently, this does not cause any issues, but I believe it is necessary to\nset bsg_queue to NULL after removing it to prevent potential use-after-free\n(UAF) access.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56406",
      "Description": "A heap buffer overflow vulnerability was discovered in Perl. \n\nRelease branches 5.34, 5.36, 5.38 and 5.40 are affected, including development versions from 5.33.1 through 5.41.10.\n\nWhen there are non-ASCII bytes in the left-hand-side of the `tr` operator, `S_do_trans_invmap` can overflow the destination pointer `d`.\n\n     $ perl -e '$_ = \"\\x{FF}\" x 1000000; tr/\\xFF/\\x{100}/;' \n     Segmentation fault (core dumped)\n\nIt is believed that this vulnerability can enable Denial of Service and possibly Code Execution attacks on platforms that lack sufficient defenses.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56613",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsched/numa: fix memory leak due to the overwritten vma-\u003enumab_state\n\n[Problem Description]\nWhen running the hackbench program of LTP, the following memory leak is\nreported by kmemleak.\n\n  # /opt/ltp/testcases/bin/hackbench 20 thread 1000\n  Running with 20*40 (== 800) tasks.\n\n  # dmesg | grep kmemleak\n  ...\n  kmemleak: 480 new suspected memory leaks (see /sys/kernel/debug/kmemleak)\n  kmemleak: 665 new suspected memory leaks (see /sys/kernel/debug/kmemleak)\n\n  # cat /sys/kernel/debug/kmemleak\n  unreferenced object 0xffff888cd8ca2c40 (size 64):\n    comm \"hackbench\", pid 17142, jiffies 4299780315\n    hex dump (first 32 bytes):\n      ac 74 49 00 01 00 00 00 4c 84 49 00 01 00 00 00  .tI.....L.I.....\n      00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    backtrace (crc bff18fd4):\n      [\u003cffffffff81419a89\u003e] __kmalloc_cache_noprof+0x2f9/0x3f0\n      [\u003cffffffff8113f715\u003e] task_numa_work+0x725/0xa00\n      [\u003cffffffff8110f878\u003e] task_work_run+0x58/0x90\n      [\u003cffffffff81ddd9f8\u003e] syscall_exit_to_user_mode+0x1c8/0x1e0\n      [\u003cffffffff81dd78d5\u003e] do_syscall_64+0x85/0x150\n      [\u003cffffffff81e0012b\u003e] entry_SYSCALL_64_after_hwframe+0x76/0x7e\n  ...\n\nThis issue can be consistently reproduced on three different servers:\n  * a 448-core server\n  * a 256-core server\n  * a 192-core server\n\n[Root Cause]\nSince multiple threads are created by the hackbench program (along with\nthe command argument 'thread'), a shared vma might be accessed by two or\nmore cores simultaneously. When two or more cores observe that\nvma-\u003enumab_state is NULL at the same time, vma-\u003enumab_state will be\noverwritten.\n\nAlthough current code ensures that only one thread scans the VMAs in a\nsingle 'numa_scan_period', there might be a chance for another thread\nto enter in the next 'numa_scan_period' while we have not gotten till\nnumab_state allocation [1].\n\nNote that the command `/opt/ltp/testcases/bin/hackbench 50 process 1000`\ncannot the reproduce the issue. It is verified with 200+ test runs.\n\n[Solution]\nUse the cmpxchg atomic operation to ensure that only one thread executes\nthe vma-\u003enumab_state assignment.\n\n[1] https://lore.kernel.org/lkml/1794be3c-358c-4cdc-a43d-a1f841d91ef7@amd.com/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56641",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/smc: initialize close_work early to avoid warning\n\nWe encountered a warning that close_work was canceled before\ninitialization.\n\n  WARNING: CPU: 7 PID: 111103 at kernel/workqueue.c:3047 __flush_work+0x19e/0x1b0\n  Workqueue: events smc_lgr_terminate_work [smc]\n  RIP: 0010:__flush_work+0x19e/0x1b0\n  Call Trace:\n   ? __wake_up_common+0x7a/0x190\n   ? work_busy+0x80/0x80\n   __cancel_work_timer+0xe3/0x160\n   smc_close_cancel_work+0x1a/0x70 [smc]\n   smc_close_active_abort+0x207/0x360 [smc]\n   __smc_lgr_terminate.part.38+0xc8/0x180 [smc]\n   process_one_work+0x19e/0x340\n   worker_thread+0x30/0x370\n   ? process_one_work+0x340/0x340\n   kthread+0x117/0x130\n   ? __kthread_cancel_work+0x50/0x50\n   ret_from_fork+0x22/0x30\n\nThis is because when smc_close_cancel_work is triggered, e.g. the RDMA\ndriver is rmmod and the LGR is terminated, the conn-\u003eclose_work is\nflushed before initialization, resulting in WARN_ON(!work-\u003efunc).\n\n__smc_lgr_terminate             | smc_connect_{rdma|ism}\n-------------------------------------------------------------\n                                | smc_conn_create\n\t\t\t\t| \\- smc_lgr_register_conn\nfor conn in lgr-\u003econns_all      |\n\\- smc_conn_kill                |\n   \\- smc_close_active_abort    |\n      \\- smc_close_cancel_work  |\n         \\- cancel_work_sync    |\n            \\- __flush_work     |\n\t         (close_work)   |\n\t                        | smc_close_init\n\t                        | \\- INIT_WORK(\u0026close_work)\n\nSo fix this by initializing close_work before establishing the\nconnection.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56699",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/pci: Fix potential double remove of hotplug slot\n\nIn commit 6ee600bfbe0f (\"s390/pci: remove hotplug slot when releasing the\ndevice\") the zpci_exit_slot() was moved from zpci_device_reserved() to\nzpci_release_device() with the intention of keeping the hotplug slot\naround until the device is actually removed.\n\nNow zpci_release_device() is only called once all references are\ndropped. Since the zPCI subsystem only drops its reference once the\ndevice is in the reserved state it follows that zpci_release_device()\nmust only deal with devices in the reserved state. Despite that it\ncontains code to tear down from both configured and standby state. For\nthe standby case this already includes the removal of the hotplug slot\nso would cause a double removal if a device was ever removed in\neither configured or standby state.\n\nInstead of causing a potential double removal in a case that should\nnever happen explicitly WARN_ON() if a device in non-reserved state is\nreleased and get rid of the dead code cases.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-56702",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Mark raw_tp arguments with PTR_MAYBE_NULL\n\nArguments to a raw tracepoint are tagged as trusted, which carries the\nsemantics that the pointer will be non-NULL.  However, in certain cases,\na raw tracepoint argument may end up being NULL. More context about this\nissue is available in [0].\n\nThus, there is a discrepancy between the reality, that raw_tp arguments\ncan actually be NULL, and the verifier's knowledge, that they are never\nNULL, causing explicit NULL checks to be deleted, and accesses to such\npointers potentially crashing the kernel.\n\nTo fix this, mark raw_tp arguments as PTR_MAYBE_NULL, and then special\ncase the dereference and pointer arithmetic to permit it, and allow\npassing them into helpers/kfuncs; these exceptions are made for raw_tp\nprograms only. Ensure that we don't do this when ref_obj_id \u003e 0, as in\nthat case this is an acquired object and doesn't need such adjustment.\n\nThe reason we do mask_raw_tp_trusted_reg logic is because other will\nrecheck in places whether the register is a trusted_reg, and then\nconsider our register as untrusted when detecting the presence of the\nPTR_MAYBE_NULL flag.\n\nTo allow safe dereference, we enable PROBE_MEM marking when we see loads\ninto trusted pointers with PTR_MAYBE_NULL.\n\nWhile trusted raw_tp arguments can also be passed into helpers or kfuncs\nwhere such broken assumption may cause issues, a future patch set will\ntackle their case separately, as PTR_TO_BTF_ID (without PTR_TRUSTED) can\nalready be passed into helpers and causes similar problems. Thus, they\nare left alone for now.\n\nIt is possible that these checks also permit passing non-raw_tp args\nthat are trusted PTR_TO_BTF_ID with null marking. In such a case,\nallowing dereference when pointer is NULL expands allowed behavior, so\nwon't regress existing programs, and the case of passing these into\nhelpers is the same as above and will be dealt with later.\n\nAlso update the failure case in tp_btf_nullable selftest to capture the\nnew behavior, as the verifier will no longer cause an error when\ndirectly dereference a raw tracepoint argument marked as __nullable.\n\n  [0]: https://lore.kernel.org/bpf/ZrCZS6nisraEqehw@jlelli-thinkpadt14gen4.remote.csb",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-57924",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfs: relax assertions on failure to encode file handles\n\nEncoding file handles is usually performed by a filesystem \u003eencode_fh()\nmethod that may fail for various reasons.\n\nThe legacy users of exportfs_encode_fh(), namely, nfsd and\nname_to_handle_at(2) syscall are ready to cope with the possibility\nof failure to encode a file handle.\n\nThere are a few other users of exportfs_encode_{fh,fid}() that\ncurrently have a WARN_ON() assertion when -\u003eencode_fh() fails.\nRelax those assertions because they are wrong.\n\nThe second linked bug report states commit 16aac5ad1fa9 (\"ovl: support\nencoding non-decodable file handles\") in v6.6 as the regressing commit,\nbut this is not accurate.\n\nThe aforementioned commit only increases the chances of the assertion\nand allows triggering the assertion with the reproducer using overlayfs,\ninotify and drop_caches.\n\nTriggering this assertion was always possible with other filesystems and\nother reasons of -\u003eencode_fh() failures and more particularly, it was\nalso possible with the exact same reproducer using overlayfs that is\nmounted with options index=on,nfs_export=on also on kernels \u003c v6.6.\nTherefore, I am not listing the aforementioned commit as a Fixes commit.\n\nBackport hint: this patch will have a trivial conflict applying to\nv6.6.y, and other trivial conflicts applying to stable kernels \u003c v6.6.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-57982",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxfrm: state: fix out-of-bounds read during lookup\n\nlookup and resize can run in parallel.\n\nThe xfrm_state_hash_generation seqlock ensures a retry, but the hash\nfunctions can observe a hmask value that is too large for the new hlist\narray.\n\nrehash does:\n  rcu_assign_pointer(net-\u003exfrm.state_bydst, ndst) [..]\n  net-\u003exfrm.state_hmask = nhashmask;\n\nWhile state lookup does:\n  h = xfrm_dst_hash(net, daddr, saddr, tmpl-\u003ereqid, encap_family);\n  hlist_for_each_entry_rcu(x, net-\u003exfrm.state_bydst + h, bydst) {\n\nThis is only safe in case the update to state_bydst is larger than\nnet-\u003exfrm.xfrm_state_hmask (or if the lookup function gets\nserialized via state spinlock again).\n\nFix this by prefetching state_hmask and the associated pointers.\nThe xfrm_state_hash_generation seqlock retry will ensure that the pointer\nand the hmask will be consistent.\n\nThe existing helpers, like xfrm_dst_hash(), are now unsafe for RCU side,\nadd lockdep assertions to document that they are only safe for insert\nside.\n\nxfrm_state_lookup_byaddr() uses the spinlock rather than RCU.\nAFAICS this is an oversight from back when state lookup was converted to\nRCU, this lock should be replaced with RCU in a future patch.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-57998",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nOPP: add index check to assert to avoid buffer overflow in _read_freq()\n\nPass the freq index to the assert function to make sure\nwe do not read a freq out of the opp-\u003erates[] table when called\nfrom the indexed variants:\ndev_pm_opp_find_freq_exact_indexed() or\ndev_pm_opp_find_freq_ceil/floor_indexed().\n\nAdd a secondary parameter to the assert function, unused\nfor assert_single_clk() then add assert_clk_index() which\nwill check for the clock index when called from the _indexed()\nfind functions.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-58001",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: handle a symlink read error correctly\n\nPatch series \"Convert ocfs2 to use folios\".\n\nMark did a conversion of ocfs2 to use folios and sent it to me as a\ngiant patch for review ;-)\n\nSo I've redone it as individual patches, and credited Mark for the patches\nwhere his code is substantially the same.  It's not a bad way to do it;\nhis patch had some bugs and my patches had some bugs.  Hopefully all our\nbugs were different from each other.  And hopefully Mark likes all the\nchanges I made to his code!\n\n\nThis patch (of 23):\n\nIf we can't read the buffer, be sure to unlock the page before returning.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-58053",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nrxrpc: Fix handling of received connection abort\n\nFix the handling of a connection abort that we've received.  Though the\nabort is at the connection level, it needs propagating to the calls on that\nconnection.  Whilst the propagation bit is performed, the calls aren't then\nwoken up to go and process their termination, and as no further input is\nforthcoming, they just hang.\n\nAlso add some tracing for the logging of connection aborts.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-58070",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: bpf_local_storage: Always use bpf_mem_alloc in PREEMPT_RT\n\nIn PREEMPT_RT, kmalloc(GFP_ATOMIC) is still not safe in non preemptible\ncontext. bpf_mem_alloc must be used in PREEMPT_RT. This patch is\nto enforce bpf_mem_alloc in the bpf_local_storage when CONFIG_PREEMPT_RT\nis enabled.\n\n[   35.118559] BUG: sleeping function called from invalid context at kernel/locking/spinlock_rt.c:48\n[   35.118566] in_atomic(): 1, irqs_disabled(): 0, non_block: 0, pid: 1832, name: test_progs\n[   35.118569] preempt_count: 1, expected: 0\n[   35.118571] RCU nest depth: 1, expected: 1\n[   35.118577] INFO: lockdep is turned off.\n    ...\n[   35.118647]  __might_resched+0x433/0x5b0\n[   35.118677]  rt_spin_lock+0xc3/0x290\n[   35.118700]  ___slab_alloc+0x72/0xc40\n[   35.118723]  __kmalloc_noprof+0x13f/0x4e0\n[   35.118732]  bpf_map_kzalloc+0xe5/0x220\n[   35.118740]  bpf_selem_alloc+0x1d2/0x7b0\n[   35.118755]  bpf_local_storage_update+0x2fa/0x8b0\n[   35.118784]  bpf_sk_storage_get_tracing+0x15a/0x1d0\n[   35.118791]  bpf_prog_9a118d86fca78ebb_trace_inet_sock_set_state+0x44/0x66\n[   35.118795]  bpf_trace_run3+0x222/0x400\n[   35.118820]  __bpf_trace_inet_sock_set_state+0x11/0x20\n[   35.118824]  trace_inet_sock_set_state+0x112/0x130\n[   35.118830]  inet_sk_state_store+0x41/0x90\n[   35.118836]  tcp_set_state+0x3b3/0x640\n\nThere is no need to adjust the gfp_flags passing to the\nbpf_mem_cache_alloc_flags() which only honors the GFP_KERNEL.\nThe verifier has ensured GFP_KERNEL is passed only in sleepable context.\n\nIt has been an old issue since the first introduction of the\nbpf_local_storage ~5 years ago, so this patch targets the bpf-next.\n\nbpf_mem_alloc is needed to solve it, so the Fixes tag is set\nto the commit when bpf_mem_alloc was first used in the bpf_local_storage.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-58088",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix deadlock when freeing cgroup storage\n\nThe following commit\nbc235cdb423a (\"bpf: Prevent deadlock from recursive bpf_task_storage_[get|delete]\")\nfirst introduced deadlock prevention for fentry/fexit programs attaching\non bpf_task_storage helpers. That commit also employed the logic in map\nfree path in its v6 version.\n\nLater bpf_cgrp_storage was first introduced in\nc4bcfb38a95e (\"bpf: Implement cgroup storage available to non-cgroup-attached bpf progs\")\nwhich faces the same issue as bpf_task_storage, instead of its busy\ncounter, NULL was passed to bpf_local_storage_map_free() which opened\na window to cause deadlock:\n\n\t\u003cTASK\u003e\n\t\t(acquiring local_storage-\u003elock)\n\t_raw_spin_lock_irqsave+0x3d/0x50\n\tbpf_local_storage_update+0xd1/0x460\n\tbpf_cgrp_storage_get+0x109/0x130\n\tbpf_prog_a4d4a370ba857314_cgrp_ptr+0x139/0x170\n\t? __bpf_prog_enter_recur+0x16/0x80\n\tbpf_trampoline_6442485186+0x43/0xa4\n\tcgroup_storage_ptr+0x9/0x20\n\t\t(holding local_storage-\u003elock)\n\tbpf_selem_unlink_storage_nolock.constprop.0+0x135/0x160\n\tbpf_selem_unlink_storage+0x6f/0x110\n\tbpf_local_storage_map_free+0xa2/0x110\n\tbpf_map_free_deferred+0x5b/0x90\n\tprocess_one_work+0x17c/0x390\n\tworker_thread+0x251/0x360\n\tkthread+0xd2/0x100\n\tret_from_fork+0x34/0x50\n\tret_from_fork_asm+0x1a/0x30\n\t\u003c/TASK\u003e\n\nProgs:\n - A: SEC(\"fentry/cgroup_storage_ptr\")\n   - cgid (BPF_MAP_TYPE_HASH)\n\tRecord the id of the cgroup the current task belonging\n\tto in this hash map, using the address of the cgroup\n\tas the map key.\n   - cgrpa (BPF_MAP_TYPE_CGRP_STORAGE)\n\tIf current task is a kworker, lookup the above hash\n\tmap using function parameter @owner as the key to get\n\tits corresponding cgroup id which is then used to get\n\ta trusted pointer to the cgroup through\n\tbpf_cgroup_from_id(). This trusted pointer can then\n\tbe passed to bpf_cgrp_storage_get() to finally trigger\n\tthe deadlock issue.\n - B: SEC(\"tp_btf/sys_enter\")\n   - cgrpb (BPF_MAP_TYPE_CGRP_STORAGE)\n\tThe only purpose of this prog is to fill Prog A's\n\thash map by calling bpf_cgrp_storage_get() for as\n\tmany userspace tasks as possible.\n\nSteps to reproduce:\n - Run A;\n - while (true) { Run B; Destroy B; }\n\nFix this issue by passing its busy counter to the free procedure so\nit can be properly incremented before storage/smap locking.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-58093",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nPCI/ASPM: Fix link state exit during switch upstream function removal\n\nBefore 456d8aa37d0f (\"PCI/ASPM: Disable ASPM on MFD function removal to\navoid use-after-free\"), we would free the ASPM link only after the last\nfunction on the bus pertaining to the given link was removed.\n\nThat was too late. If function 0 is removed before sibling function,\nlink-\u003edownstream would point to free'd memory after.\n\nAfter above change, we freed the ASPM parent link state upon any function\nremoval on the bus pertaining to a given link.\n\nThat is too early. If the link is to a PCIe switch with MFD on the upstream\nport, then removing functions other than 0 first would free a link which\nstill remains parent_link to the remaining downstream ports.\n\nThe resulting GPFs are especially frequent during hot-unplug, because\npciehp removes devices on the link bus in reverse order.\n\nOn that switch, function 0 is the virtual P2P bridge to the internal bus.\nFree exactly when function 0 is removed -- before the parent link is\nobsolete, but after all subordinate links are gone.\n\n[kwilczynski: commit log]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-58094",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\njfs: add check read-only before truncation in jfs_truncate_nolock()\n\nAdded a check for \"read-only\" mode in the `jfs_truncate_nolock`\nfunction to avoid errors related to writing to a read-only\nfilesystem.\n\nCall stack:\n\nblock_write_begin() {\n  jfs_write_failed() {\n    jfs_truncate() {\n      jfs_truncate_nolock() {\n        txEnd() {\n          ...\n          log = JFS_SBI(tblk-\u003esb)-\u003elog;\n          // (log == NULL)\n\nIf the `isReadOnly(ip)` condition is triggered in\n`jfs_truncate_nolock`, the function execution will stop, and no\nfurther data modification will occur. Instead, the `xtTruncate`\nfunction will be called with the \"COMMIT_WMAP\" flag, preventing\nmodifications in \"read-only\" mode.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-58095",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\njfs: add check read-only before txBeginAnon() call\n\nAdded a read-only check before calling `txBeginAnon` in `extAlloc`\nand `extRecord`. This prevents modification attempts on a read-only\nmounted filesystem, avoiding potential errors or crashes.\n\nCall trace:\n txBeginAnon+0xac/0x154\n extAlloc+0xe8/0xdec fs/jfs/jfs_extent.c:78\n jfs_get_block+0x340/0xb98 fs/jfs/inode.c:248\n __block_write_begin_int+0x580/0x166c fs/buffer.c:2128\n __block_write_begin fs/buffer.c:2177 [inline]\n block_write_begin+0x98/0x11c fs/buffer.c:2236\n jfs_write_begin+0x44/0x88 fs/jfs/inode.c:299",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-58096",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath11k: add srng-\u003elock for ath11k_hal_srng_* in monitor mode\n\nath11k_hal_srng_* should be used with srng-\u003elock to protect srng data.\n\nFor ath11k_dp_rx_mon_dest_process() and ath11k_dp_full_mon_process_rx(),\nthey use ath11k_hal_srng_* for many times but never call srng-\u003elock.\n\nSo when running (full) monitor mode, warning will occur:\nRIP: 0010:ath11k_hal_srng_dst_peek+0x18/0x30 [ath11k]\nCall Trace:\n ? ath11k_hal_srng_dst_peek+0x18/0x30 [ath11k]\n ath11k_dp_rx_process_mon_status+0xc45/0x1190 [ath11k]\n ? idr_alloc_u32+0x97/0xd0\n ath11k_dp_rx_process_mon_rings+0x32a/0x550 [ath11k]\n ath11k_dp_service_srng+0x289/0x5a0 [ath11k]\n ath11k_pcic_ext_grp_napi_poll+0x30/0xd0 [ath11k]\n __napi_poll+0x30/0x1f0\n net_rx_action+0x198/0x320\n __do_softirq+0xdd/0x319\n\nSo add srng-\u003elock for them to avoid such warnings.\n\nInorder to fetch the srng-\u003elock, should change srng's definition from\n'void' to 'struct hal_srng'. And initialize them elsewhere to prevent\none line of code from being too long. This is consistent with other ring\nprocess functions, such as ath11k_dp_process_rx().\n\nTested-on: WCN6855 hw2.0 PCI WLAN.HSP.1.1-03125-QCAHSPSWPL_V1_V2_SILICONZ_LITE-3.6510.30\nTested-on: QCN9074 hw1.0 PCI WLAN.HK.2.7.0.1-01744-QCAHKSWPL_SILICONZ-1",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-58097",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath11k: fix RCU stall while reaping monitor destination ring\n\nWhile processing the monitor destination ring, MSDUs are reaped from the\nlink descriptor based on the corresponding buf_id.\n\nHowever, sometimes the driver cannot obtain a valid buffer corresponding\nto the buf_id received from the hardware. This causes an infinite loop\nin the destination processing, resulting in a kernel crash.\n\nkernel log:\nath11k_pci 0000:58:00.0: data msdu_pop: invalid buf_id 309\nath11k_pci 0000:58:00.0: data dp_rx_monitor_link_desc_return failed\nath11k_pci 0000:58:00.0: data msdu_pop: invalid buf_id 309\nath11k_pci 0000:58:00.0: data dp_rx_monitor_link_desc_return failed\n\nFix this by skipping the problematic buf_id and reaping the next entry,\nreplacing the break with the next MSDU processing.\n\nTested-on: WCN6855 hw2.0 PCI WLAN.HSP.1.1-03125-QCAHSPSWPL_V1_V2_SILICONZ_LITE-3.6510.30\nTested-on: QCN9074 hw1.0 PCI WLAN.HK.2.7.0.1-01744-QCAHKSWPL_SILICONZ-1",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-58098",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: track changes_pkt_data property for global functions\n\nWhen processing calls to certain helpers, verifier invalidates all\npacket pointers in a current state. For example, consider the\nfollowing program:\n\n    __attribute__((__noinline__))\n    long skb_pull_data(struct __sk_buff *sk, __u32 len)\n    {\n        return bpf_skb_pull_data(sk, len);\n    }\n\n    SEC(\"tc\")\n    int test_invalidate_checks(struct __sk_buff *sk)\n    {\n        int *p = (void *)(long)sk-\u003edata;\n        if ((void *)(p + 1) \u003e (void *)(long)sk-\u003edata_end) return TCX_DROP;\n        skb_pull_data(sk, 0);\n        *p = 42;\n        return TCX_PASS;\n    }\n\nAfter a call to bpf_skb_pull_data() the pointer 'p' can't be used\nsafely. See function filter.c:bpf_helper_changes_pkt_data() for a list\nof such helpers.\n\nAt the moment verifier invalidates packet pointers when processing\nhelper function calls, and does not traverse global sub-programs when\nprocessing calls to global sub-programs. This means that calls to\nhelpers done from global sub-programs do not invalidate pointers in\nthe caller state. E.g. the program above is unsafe, but is not\nrejected by verifier.\n\nThis commit fixes the omission by computing field\nbpf_subprog_info-\u003echanges_pkt_data for each sub-program before main\nverification pass.\nchanges_pkt_data should be set if:\n- subprogram calls helper for which bpf_helper_changes_pkt_data\n  returns true;\n- subprogram calls a global function,\n  for which bpf_subprog_info-\u003echanges_pkt_data should be set.\n\nThe verifier.c:check_cfg() pass is modified to compute this\ninformation. The commit relies on depth first instruction traversal\ndone by check_cfg() and absence of recursive function calls:\n- check_cfg() would eventually visit every call to subprogram S in a\n  state when S is fully explored;\n- when S is fully explored:\n  - every direct helper call within S is explored\n    (and thus changes_pkt_data is set if needed);\n  - every call to subprogram S1 called by S was visited with S1 fully\n    explored (and thus S inherits changes_pkt_data from S1).\n\nThe downside of such approach is that dead code elimination is not\ntaken into account: if a helper call inside global function is dead\nbecause of current configuration, verifier would conservatively assume\nthat the call occurs for the purpose of the changes_pkt_data\ncomputation.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-58099",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvmxnet3: Fix packet corruption in vmxnet3_xdp_xmit_frame\n\nAndrew and Nikolay reported connectivity issues with Cilium's service\nload-balancing in case of vmxnet3.\n\nIf a BPF program for native XDP adds an encapsulation header such as\nIPIP and transmits the packet out the same interface, then in case\nof vmxnet3 a corrupted packet is being sent and subsequently dropped\non the path.\n\nvmxnet3_xdp_xmit_frame() which is called e.g. via vmxnet3_run_xdp()\nthrough vmxnet3_xdp_xmit_back() calculates an incorrect DMA address:\n\n  page = virt_to_page(xdpf-\u003edata);\n  tbi-\u003edma_addr = page_pool_get_dma_addr(page) +\n                  VMXNET3_XDP_HEADROOM;\n  dma_sync_single_for_device(\u0026adapter-\u003epdev-\u003edev,\n                             tbi-\u003edma_addr, buf_size,\n                             DMA_TO_DEVICE);\n\nThe above assumes a fixed offset (VMXNET3_XDP_HEADROOM), but the XDP\nBPF program could have moved xdp-\u003edata. While the passed buf_size is\ncorrect (xdpf-\u003elen), the dma_addr needs to have a dynamic offset which\ncan be calculated as xdpf-\u003edata - (void *)xdpf, that is, xdp-\u003edata -\nxdp-\u003edata_hard_start.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-58100",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: check changes_pkt_data property for extension programs\n\nWhen processing calls to global sub-programs, verifier decides whether\nto invalidate all packet pointers in current state depending on the\nchanges_pkt_data property of the global sub-program.\n\nBecause of this, an extension program replacing a global sub-program\nmust be compatible with changes_pkt_data property of the sub-program\nbeing replaced.\n\nThis commit:\n- adds changes_pkt_data flag to struct bpf_prog_aux:\n  - this flag is set in check_cfg() for main sub-program;\n  - in jit_subprogs() for other sub-programs;\n- modifies bpf_check_attach_btf_id() to check changes_pkt_data flag;\n- moves call to check_attach_btf_id() after the call to check_cfg(),\n  because it needs changes_pkt_data flag to be set:\n\n    bpf_check:\n      ...                             ...\n    - check_attach_btf_id             resolve_pseudo_ldimm64\n      resolve_pseudo_ldimm64   --\u003e    bpf_prog_is_offloaded\n      bpf_prog_is_offloaded           check_cfg\n      check_cfg                     + check_attach_btf_id\n      ...                             ...\n\nThe following fields are set by check_attach_btf_id():\n- env-\u003eops\n- prog-\u003eaux-\u003eattach_btf_trace\n- prog-\u003eaux-\u003eattach_func_name\n- prog-\u003eaux-\u003eattach_func_proto\n- prog-\u003eaux-\u003edst_trampoline\n- prog-\u003eaux-\u003emod\n- prog-\u003eaux-\u003esaved_dst_attach_type\n- prog-\u003eaux-\u003esaved_dst_prog_type\n- prog-\u003eexpected_attach_type\n\nNeither of these fields are used by resolve_pseudo_ldimm64() or\nbpf_prog_offload_verifier_prep() (for netronome and netdevsim\ndrivers), so the reordering is safe.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-58237",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: consider that tail calls invalidate packet pointers\n\nTail-called programs could execute any of the helpers that invalidate\npacket pointers. Hence, conservatively assume that each tail call\ninvalidates packet pointers.\n\nMaking the change in bpf_helper_changes_pkt_data() automatically makes\nuse of check_cfg() logic that computes 'changes_pkt_data' effect for\nglobal sub-programs, such that the following program could be\nrejected:\n\n    int tail_call(struct __sk_buff *sk)\n    {\n    \tbpf_tail_call_static(sk, \u0026jmp_table, 0);\n    \treturn 0;\n    }\n\n    SEC(\"tc\")\n    int not_safe(struct __sk_buff *sk)\n    {\n    \tint *p = (void *)(long)sk-\u003edata;\n    \t... make p valid ...\n    \ttail_call(sk);\n    \t*p = 42; /* this is unsafe */\n    \t...\n    }\n\nThe tc_bpf2bpf.c:subprog_tc() needs change: mark it as a function that\ncan invalidate packet pointers. Otherwise, it can't be freplaced with\ntailcall_freplace.c:entry_freplace() that does a tail call.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2024-9287",
      "Description": "A vulnerability has been found in the CPython `venv` module and CLI where path names provided when creating a virtual environment were not quoted properly, allowing the creator to inject commands into virtual environment \"activation\" scripts (ie \"source venv/bin/activate\"). This means that attacker-controlled virtual environments are able to run commands when the virtual environment is activated. Virtual environments which are not created by an attacker or which aren't activated before being used (ie \"./venv/bin/python\") are not affected.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-0495",
      "Description": "Buildx is a Docker CLI plugin that extends build capabilities using BuildKit.\n\nCache backends support credentials by setting secrets directly as attribute values in cache-to/cache-from  configuration. When supplied as user input, these secure values may be inadvertently captured in OpenTelemetry traces as part of the arguments and flags for the traced CLI command.  OpenTelemetry traces are also saved in BuildKit daemon's history records.\n\n\nThis vulnerability does not impact secrets passed to the Github cache backend  via environment variables or registry authentication.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-0938",
      "Description": "The Python standard library functions `urllib.parse.urlsplit` and `urlparse` accepted domain names that included square brackets which isn't valid according to RFC 3986. Square brackets are only meant to be used as delimiters for specifying IPv6 and IPvFuture hosts in URLs. This could result in differential parsing across the Python URL parser and other specification-compliant URL parsers.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21629",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: reenable NETIF_F_IPV6_CSUM offload for BIG TCP packets\n\nThe blamed commit disabled hardware offoad of IPv6 packets with\nextension headers on devices that advertise NETIF_F_IPV6_CSUM,\nbased on the definition of that feature in skbuff.h:\n\n *   * - %NETIF_F_IPV6_CSUM\n *     - Driver (device) is only able to checksum plain\n *       TCP or UDP packets over IPv6. These are specifically\n *       unencapsulated packets of the form IPv6|TCP or\n *       IPv6|UDP where the Next Header field in the IPv6\n *       header is either TCP or UDP. IPv6 extension headers\n *       are not supported with this feature. This feature\n *       cannot be set in features for a device with\n *       NETIF_F_HW_CSUM also set. This feature is being\n *       DEPRECATED (see below).\n\nThe change causes skb_warn_bad_offload to fire for BIG TCP\npackets.\n\n[  496.310233] WARNING: CPU: 13 PID: 23472 at net/core/dev.c:3129 skb_warn_bad_offload+0xc4/0xe0\n\n[  496.310297]  ? skb_warn_bad_offload+0xc4/0xe0\n[  496.310300]  skb_checksum_help+0x129/0x1f0\n[  496.310303]  skb_csum_hwoffload_help+0x150/0x1b0\n[  496.310306]  validate_xmit_skb+0x159/0x270\n[  496.310309]  validate_xmit_skb_list+0x41/0x70\n[  496.310312]  sch_direct_xmit+0x5c/0x250\n[  496.310317]  __qdisc_run+0x388/0x620\n\nBIG TCP introduced an IPV6_TLV_JUMBO IPv6 extension header to\ncommunicate packet length, as this is an IPv6 jumbogram. But, the\nfeature is only enabled on devices that support BIG TCP TSO. The\nheader is only present for PF_PACKET taps like tcpdump, and not\ntransmitted by physical devices.\n\nFor this specific case of extension headers that are not\ntransmitted, return to the situation before the blamed commit\nand support hardware offload.\n\nipv6_has_hopopt_jumbo() tests not only whether this header is present,\nbut also that it is the only extension header before a terminal (L4)\nheader.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21648",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: conntrack: clamp maximum hashtable size to INT_MAX\n\nUse INT_MAX as maximum size for the conntrack hashtable. Otherwise, it\nis possible to hit WARN_ON_ONCE in __kvmalloc_node_noprof() when\nresizing hashtable because __GFP_NOWARN is unset. See:\n\n  0708a0afe291 (\"mm: Consider __GFP_NOWARN flag for oversized kvmalloc() calls\")\n\nNote: hashtable resize is only possible from init_netns.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21658",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: avoid NULL pointer dereference if no valid extent tree\n\n[BUG]\nSyzbot reported a crash with the following call trace:\n\n  BTRFS info (device loop0): scrub: started on devid 1\n  BUG: kernel NULL pointer dereference, address: 0000000000000208\n  #PF: supervisor read access in kernel mode\n  #PF: error_code(0x0000) - not-present page\n  PGD 106e70067 P4D 106e70067 PUD 107143067 PMD 0\n  Oops: Oops: 0000 [#1] PREEMPT SMP NOPTI\n  CPU: 1 UID: 0 PID: 689 Comm: repro Kdump: loaded Tainted: G           O       6.13.0-rc4-custom+ #206\n  Tainted: [O]=OOT_MODULE\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS unknown 02/02/2022\n  RIP: 0010:find_first_extent_item+0x26/0x1f0 [btrfs]\n  Call Trace:\n   \u003cTASK\u003e\n   scrub_find_fill_first_stripe+0x13d/0x3b0 [btrfs]\n   scrub_simple_mirror+0x175/0x260 [btrfs]\n   scrub_stripe+0x5d4/0x6c0 [btrfs]\n   scrub_chunk+0xbb/0x170 [btrfs]\n   scrub_enumerate_chunks+0x2f4/0x5f0 [btrfs]\n   btrfs_scrub_dev+0x240/0x600 [btrfs]\n   btrfs_ioctl+0x1dc8/0x2fa0 [btrfs]\n   ? do_sys_openat2+0xa5/0xf0\n   __x64_sys_ioctl+0x97/0xc0\n   do_syscall_64+0x4f/0x120\n   entry_SYSCALL_64_after_hwframe+0x76/0x7e\n   \u003c/TASK\u003e\n\n[CAUSE]\nThe reproducer is using a corrupted image where extent tree root is\ncorrupted, thus forcing to use \"rescue=all,ro\" mount option to mount the\nimage.\n\nThen it triggered a scrub, but since scrub relies on extent tree to find\nwhere the data/metadata extents are, scrub_find_fill_first_stripe()\nrelies on an non-empty extent root.\n\nBut unfortunately scrub_find_fill_first_stripe() doesn't really expect\nan NULL pointer for extent root, it use extent_root to grab fs_info and\ntriggered a NULL pointer dereference.\n\n[FIX]\nAdd an extra check for a valid extent root at the beginning of\nscrub_find_fill_first_stripe().\n\nThe new error path is introduced by 42437a6386ff (\"btrfs: introduce\nmount option rescue=ignorebadroots\"), but that's pretty old, and later\ncommit b979547513ff (\"btrfs: scrub: introduce helper to find and fill\nsector info for a scrub_stripe\") changed how we do scrub.\n\nSo for kernels older than 6.6, the fix will need manual backport.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21683",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix bpf_sk_select_reuseport() memory leak\n\nAs pointed out in the original comment, lookup in sockmap can return a TCP\nESTABLISHED socket. Such TCP socket may have had SO_ATTACH_REUSEPORT_EBPF\nset before it was ESTABLISHED. In other words, a non-NULL sk_reuseport_cb\ndoes not imply a non-refcounted socket.\n\nDrop sk's reference in both error paths.\n\nunreferenced object 0xffff888101911800 (size 2048):\n  comm \"test_progs\", pid 44109, jiffies 4297131437\n  hex dump (first 32 bytes):\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n    80 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\n  backtrace (crc 9336483b):\n    __kmalloc_noprof+0x3bf/0x560\n    __reuseport_alloc+0x1d/0x40\n    reuseport_alloc+0xca/0x150\n    reuseport_attach_prog+0x87/0x140\n    sk_reuseport_attach_bpf+0xc8/0x100\n    sk_setsockopt+0x1181/0x1990\n    do_sock_setsockopt+0x12b/0x160\n    __sys_setsockopt+0x7b/0xc0\n    __x64_sys_setsockopt+0x1b/0x30\n    do_syscall_64+0x93/0x180\n    entry_SYSCALL_64_after_hwframe+0x76/0x7e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21696",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: clear uffd-wp PTE/PMD state on mremap()\n\nWhen mremap()ing a memory region previously registered with userfaultfd as\nwrite-protected but without UFFD_FEATURE_EVENT_REMAP, an inconsistency in\nflag clearing leads to a mismatch between the vma flags (which have\nuffd-wp cleared) and the pte/pmd flags (which do not have uffd-wp\ncleared).  This mismatch causes a subsequent mprotect(PROT_WRITE) to\ntrigger a warning in page_table_check_pte_flags() due to setting the pte\nto writable while uffd-wp is still set.\n\nFix this by always explicitly clearing the uffd-wp pte/pmd flags on any\nsuch mremap() so that the values are consistent with the existing clearing\nof VM_UFFD_WP.  Be careful to clear the logical flag regardless of its\nphysical form; a PTE bit, a swap PTE bit, or a PTE marker.  Cover PTE,\nhuge PMD and hugetlb paths.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21702",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npfifo_tail_enqueue: Drop new packet when sch-\u003elimit == 0\n\nExpected behaviour:\nIn case we reach scheduler's limit, pfifo_tail_enqueue() will drop a\npacket in scheduler's queue and decrease scheduler's qlen by one.\nThen, pfifo_tail_enqueue() enqueue new packet and increase\nscheduler's qlen by one. Finally, pfifo_tail_enqueue() return\n`NET_XMIT_CN` status code.\n\nWeird behaviour:\nIn case we set `sch-\u003elimit == 0` and trigger pfifo_tail_enqueue() on a\nscheduler that has no packet, the 'drop a packet' step will do nothing.\nThis means the scheduler's qlen still has value equal 0.\nThen, we continue to enqueue new packet and increase scheduler's qlen by\none. In summary, we can leverage pfifo_tail_enqueue() to increase qlen by\none and return `NET_XMIT_CN` status code.\n\nThe problem is:\nLet's say we have two qdiscs: Qdisc_A and Qdisc_B.\n - Qdisc_A's type must have '-\u003egraft()' function to create parent/child relationship.\n   Let's say Qdisc_A's type is `hfsc`. Enqueue packet to this qdisc will trigger `hfsc_enqueue`.\n - Qdisc_B's type is pfifo_head_drop. Enqueue packet to this qdisc will trigger `pfifo_tail_enqueue`.\n - Qdisc_B is configured to have `sch-\u003elimit == 0`.\n - Qdisc_A is configured to route the enqueued's packet to Qdisc_B.\n\nEnqueue packet through Qdisc_A will lead to:\n - hfsc_enqueue(Qdisc_A) -\u003e pfifo_tail_enqueue(Qdisc_B)\n - Qdisc_B-\u003eq.qlen += 1\n - pfifo_tail_enqueue() return `NET_XMIT_CN`\n - hfsc_enqueue() check for `NET_XMIT_SUCCESS` and see `NET_XMIT_CN` =\u003e hfsc_enqueue() don't increase qlen of Qdisc_A.\n\nThe whole process lead to a situation where Qdisc_A-\u003eq.qlen == 0 and Qdisc_B-\u003eq.qlen == 1.\nReplace 'hfsc' with other type (for example: 'drr') still lead to the same problem.\nThis violate the design where parent's qlen should equal to the sum of its childrens'qlen.\n\nBug impact: This issue can be used for user-\u003ekernel privilege escalation when it is reachable.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21707",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: consolidate suboption status\n\nMPTCP maintains the received sub-options status is the bitmask carrying\nthe received suboptions and in several bitfields carrying per suboption\nadditional info.\n\nZeroing the bitmask before parsing is not enough to ensure a consistent\nstatus, and the MPTCP code has to additionally clear some bitfiled\ndepending on the actually parsed suboption.\n\nThe above schema is fragile, and syzbot managed to trigger a path where\na relevant bitfield is not cleared/initialized:\n\n  BUG: KMSAN: uninit-value in __mptcp_expand_seq net/mptcp/options.c:1030 [inline]\n  BUG: KMSAN: uninit-value in mptcp_expand_seq net/mptcp/protocol.h:864 [inline]\n  BUG: KMSAN: uninit-value in ack_update_msk net/mptcp/options.c:1060 [inline]\n  BUG: KMSAN: uninit-value in mptcp_incoming_options+0x2036/0x3d30 net/mptcp/options.c:1209\n   __mptcp_expand_seq net/mptcp/options.c:1030 [inline]\n   mptcp_expand_seq net/mptcp/protocol.h:864 [inline]\n   ack_update_msk net/mptcp/options.c:1060 [inline]\n   mptcp_incoming_options+0x2036/0x3d30 net/mptcp/options.c:1209\n   tcp_data_queue+0xb4/0x7be0 net/ipv4/tcp_input.c:5233\n   tcp_rcv_established+0x1061/0x2510 net/ipv4/tcp_input.c:6264\n   tcp_v4_do_rcv+0x7f3/0x11a0 net/ipv4/tcp_ipv4.c:1916\n   tcp_v4_rcv+0x51df/0x5750 net/ipv4/tcp_ipv4.c:2351\n   ip_protocol_deliver_rcu+0x2a3/0x13d0 net/ipv4/ip_input.c:205\n   ip_local_deliver_finish+0x336/0x500 net/ipv4/ip_input.c:233\n   NF_HOOK include/linux/netfilter.h:314 [inline]\n   ip_local_deliver+0x21f/0x490 net/ipv4/ip_input.c:254\n   dst_input include/net/dst.h:460 [inline]\n   ip_rcv_finish+0x4a2/0x520 net/ipv4/ip_input.c:447\n   NF_HOOK include/linux/netfilter.h:314 [inline]\n   ip_rcv+0xcd/0x380 net/ipv4/ip_input.c:567\n   __netif_receive_skb_one_core net/core/dev.c:5704 [inline]\n   __netif_receive_skb+0x319/0xa00 net/core/dev.c:5817\n   process_backlog+0x4ad/0xa50 net/core/dev.c:6149\n   __napi_poll+0xe7/0x980 net/core/dev.c:6902\n   napi_poll net/core/dev.c:6971 [inline]\n   net_rx_action+0xa5a/0x19b0 net/core/dev.c:7093\n   handle_softirqs+0x1a0/0x7c0 kernel/softirq.c:561\n   __do_softirq+0x14/0x1a kernel/softirq.c:595\n   do_softirq+0x9a/0x100 kernel/softirq.c:462\n   __local_bh_enable_ip+0x9f/0xb0 kernel/softirq.c:389\n   local_bh_enable include/linux/bottom_half.h:33 [inline]\n   rcu_read_unlock_bh include/linux/rcupdate.h:919 [inline]\n   __dev_queue_xmit+0x2758/0x57d0 net/core/dev.c:4493\n   dev_queue_xmit include/linux/netdevice.h:3168 [inline]\n   neigh_hh_output include/net/neighbour.h:523 [inline]\n   neigh_output include/net/neighbour.h:537 [inline]\n   ip_finish_output2+0x187c/0x1b70 net/ipv4/ip_output.c:236\n   __ip_finish_output+0x287/0x810\n   ip_finish_output+0x4b/0x600 net/ipv4/ip_output.c:324\n   NF_HOOK_COND include/linux/netfilter.h:303 [inline]\n   ip_output+0x15f/0x3f0 net/ipv4/ip_output.c:434\n   dst_output include/net/dst.h:450 [inline]\n   ip_local_out net/ipv4/ip_output.c:130 [inline]\n   __ip_queue_xmit+0x1f2a/0x20d0 net/ipv4/ip_output.c:536\n   ip_queue_xmit+0x60/0x80 net/ipv4/ip_output.c:550\n   __tcp_transmit_skb+0x3cea/0x4900 net/ipv4/tcp_output.c:1468\n   tcp_transmit_skb net/ipv4/tcp_output.c:1486 [inline]\n   tcp_write_xmit+0x3b90/0x9070 net/ipv4/tcp_output.c:2829\n   __tcp_push_pending_frames+0xc4/0x380 net/ipv4/tcp_output.c:3012\n   tcp_send_fin+0x9f6/0xf50 net/ipv4/tcp_output.c:3618\n   __tcp_close+0x140c/0x1550 net/ipv4/tcp.c:3130\n   __mptcp_close_ssk+0x74e/0x16f0 net/mptcp/protocol.c:2496\n   mptcp_close_ssk+0x26b/0x2c0 net/mptcp/protocol.c:2550\n   mptcp_pm_nl_rm_addr_or_subflow+0x635/0xd10 net/mptcp/pm_netlink.c:889\n   mptcp_pm_nl_rm_subflow_received net/mptcp/pm_netlink.c:924 [inline]\n   mptcp_pm_flush_addrs_and_subflows net/mptcp/pm_netlink.c:1688 [inline]\n   mptcp_nl_flush_addrs_list net/mptcp/pm_netlink.c:1709 [inline]\n   mptcp_pm_nl_flush_addrs_doit+0xe10/0x1630 net/mptcp/pm_netlink.c:1750\n   genl_family_rcv_msg_doit net/netlink/genetlink.c:1115 [inline]\n \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21720",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxfrm: delete intermediate secpath entry in packet offload mode\n\nPackets handled by hardware have added secpath as a way to inform XFRM\ncore code that this path was already handled. That secpath is not needed\nat all after policy is checked and it is removed later in the stack.\n\nHowever, in the case of IP forwarding is enabled (/proc/sys/net/ipv4/ip_forward),\nthat secpath is not removed and packets which already were handled are reentered\nto the driver TX path with xfrm_offload set.\n\nThe following kernel panic is observed in mlx5 in such case:\n\n mlx5_core 0000:04:00.0 enp4s0f0np0: Link up\n mlx5_core 0000:04:00.1 enp4s0f1np1: Link up\n Initializing XFRM netlink socket\n IPsec XFRM device driver\n BUG: kernel NULL pointer dereference, address: 0000000000000000\n #PF: supervisor instruction fetch in kernel mode\n #PF: error_code(0x0010) - not-present page\n PGD 0 P4D 0\n Oops: Oops: 0010 [#1] PREEMPT SMP\n CPU: 0 UID: 0 PID: 0 Comm: swapper/0 Not tainted 6.13.0-rc1-alex #3\n Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.13.0-1ubuntu1.1 04/01/2014\n RIP: 0010:0x0\n Code: Unable to access opcode bytes at 0xffffffffffffffd6.\n RSP: 0018:ffffb87380003800 EFLAGS: 00010206\n RAX: ffff8df004e02600 RBX: ffffb873800038d8 RCX: 00000000ffff98cf\n RDX: ffff8df00733e108 RSI: ffff8df00521fb80 RDI: ffff8df001661f00\n RBP: ffffb87380003850 R08: ffff8df013980000 R09: 0000000000000010\n R10: 0000000000000002 R11: 0000000000000002 R12: ffff8df001661f00\n R13: ffff8df00521fb80 R14: ffff8df00733e108 R15: ffff8df011faf04e\n FS:  0000000000000000(0000) GS:ffff8df46b800000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: ffffffffffffffd6 CR3: 0000000106384000 CR4: 0000000000350ef0\n Call Trace:\n  \u003cIRQ\u003e\n  ? show_regs+0x63/0x70\n  ? __die_body+0x20/0x60\n  ? __die+0x2b/0x40\n  ? page_fault_oops+0x15c/0x550\n  ? do_user_addr_fault+0x3ed/0x870\n  ? exc_page_fault+0x7f/0x190\n  ? asm_exc_page_fault+0x27/0x30\n  mlx5e_ipsec_handle_tx_skb+0xe7/0x2f0 [mlx5_core]\n  mlx5e_xmit+0x58e/0x1980 [mlx5_core]\n  ? __fib_lookup+0x6a/0xb0\n  dev_hard_start_xmit+0x82/0x1d0\n  sch_direct_xmit+0xfe/0x390\n  __dev_queue_xmit+0x6d8/0xee0\n  ? __fib_lookup+0x6a/0xb0\n  ? internal_add_timer+0x48/0x70\n  ? mod_timer+0xe2/0x2b0\n  neigh_resolve_output+0x115/0x1b0\n  __neigh_update+0x26a/0xc50\n  neigh_update+0x14/0x20\n  arp_process+0x2cb/0x8e0\n  ? __napi_build_skb+0x5e/0x70\n  arp_rcv+0x11e/0x1c0\n  ? dev_gro_receive+0x574/0x820\n  __netif_receive_skb_list_core+0x1cf/0x1f0\n  netif_receive_skb_list_internal+0x183/0x2a0\n  napi_complete_done+0x76/0x1c0\n  mlx5e_napi_poll+0x234/0x7a0 [mlx5_core]\n  __napi_poll+0x2d/0x1f0\n  net_rx_action+0x1a6/0x370\n  ? atomic_notifier_call_chain+0x3b/0x50\n  ? irq_int_handler+0x15/0x20 [mlx5_core]\n  handle_softirqs+0xb9/0x2f0\n  ? handle_irq_event+0x44/0x60\n  irq_exit_rcu+0xdb/0x100\n  common_interrupt+0x98/0xc0\n  \u003c/IRQ\u003e\n  \u003cTASK\u003e\n  asm_common_interrupt+0x27/0x40\n RIP: 0010:pv_native_safe_halt+0xb/0x10\n Code: 09 c3 66 66 2e 0f 1f 84 00 00 00 00 00 66 90 0f 22\n 0f 1f 84 00 00 00 00 00 90 eb 07 0f 00 2d 7f e9 36 00 fb\n40 00 83 ff 07 77 21 89 ff ff 24 fd 88 3d a1 bd 0f 21 f8\n RSP: 0018:ffffffffbe603de8 EFLAGS: 00000202\n RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000f92f46680\n RDX: 0000000000000037 RSI: 00000000ffffffff RDI: 00000000000518d4\n RBP: ffffffffbe603df0 R08: 000000cd42e4dffb R09: ffffffffbe603d70\n R10: 0000004d80d62680 R11: 0000000000000001 R12: ffffffffbe60bf40\n R13: 0000000000000000 R14: 0000000000000000 R15: ffffffffbe60aff8\n  ? default_idle+0x9/0x20\n  arch_cpu_idle+0x9/0x10\n  default_idle_call+0x29/0xf0\n  do_idle+0x1f2/0x240\n  cpu_startup_entry+0x2c/0x30\n  rest_init+0xe7/0x100\n  start_kernel+0x76b/0xb90\n  x86_64_start_reservations+0x18/0x30\n  x86_64_start_kernel+0xc0/0x110\n  ? setup_ghcb+0xe/0x130\n  common_startup_64+0x13e/0x141\n  \u003c/TASK\u003e\n Modules linked in: esp4_offload esp4 xfrm_interface\nxfrm6_tunnel tunnel4 tunnel6 xfrm_user xfrm_algo binf\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21758",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: mcast: add RCU protection to mld_newpack()\n\nmld_newpack() can be called without RTNL or RCU being held.\n\nNote that we no longer can use sock_alloc_send_skb() because\nipv6.igmp_sk uses GFP_KERNEL allocations which can sleep.\n\nInstead use alloc_skb() and charge the net-\u003eipv6.igmp_sk\nsocket under RCU protection.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21768",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ipv6: fix dst ref loops in rpl, seg6 and ioam6 lwtunnels\n\nSome lwtunnels have a dst cache for post-transformation dst.\nIf the packet destination did not change we may end up recording\na reference to the lwtunnel in its own cache, and the lwtunnel\nstate will never be freed.\n\nDiscovered by the ioam6.sh test, kmemleak was recently fixed\nto catch per-cpu memory leaks. I'm not sure if rpl and seg6\ncan actually hit this, but in principle I don't see why not.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21787",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nteam: better TEAM_OPTION_TYPE_STRING validation\n\nsyzbot reported following splat [1]\n\nMake sure user-provided data contains one nul byte.\n\n[1]\n BUG: KMSAN: uninit-value in string_nocheck lib/vsprintf.c:633 [inline]\n BUG: KMSAN: uninit-value in string+0x3ec/0x5f0 lib/vsprintf.c:714\n  string_nocheck lib/vsprintf.c:633 [inline]\n  string+0x3ec/0x5f0 lib/vsprintf.c:714\n  vsnprintf+0xa5d/0x1960 lib/vsprintf.c:2843\n  __request_module+0x252/0x9f0 kernel/module/kmod.c:149\n  team_mode_get drivers/net/team/team_core.c:480 [inline]\n  team_change_mode drivers/net/team/team_core.c:607 [inline]\n  team_mode_option_set+0x437/0x970 drivers/net/team/team_core.c:1401\n  team_option_set drivers/net/team/team_core.c:375 [inline]\n  team_nl_options_set_doit+0x1339/0x1f90 drivers/net/team/team_core.c:2662\n  genl_family_rcv_msg_doit net/netlink/genetlink.c:1115 [inline]\n  genl_family_rcv_msg net/netlink/genetlink.c:1195 [inline]\n  genl_rcv_msg+0x1214/0x12c0 net/netlink/genetlink.c:1210\n  netlink_rcv_skb+0x375/0x650 net/netlink/af_netlink.c:2543\n  genl_rcv+0x40/0x60 net/netlink/genetlink.c:1219\n  netlink_unicast_kernel net/netlink/af_netlink.c:1322 [inline]\n  netlink_unicast+0xf52/0x1260 net/netlink/af_netlink.c:1348\n  netlink_sendmsg+0x10da/0x11e0 net/netlink/af_netlink.c:1892\n  sock_sendmsg_nosec net/socket.c:718 [inline]\n  __sock_sendmsg+0x30f/0x380 net/socket.c:733\n  ____sys_sendmsg+0x877/0xb60 net/socket.c:2573\n  ___sys_sendmsg+0x28d/0x3c0 net/socket.c:2627\n  __sys_sendmsg net/socket.c:2659 [inline]\n  __do_sys_sendmsg net/socket.c:2664 [inline]\n  __se_sys_sendmsg net/socket.c:2662 [inline]\n  __x64_sys_sendmsg+0x212/0x3c0 net/socket.c:2662\n  x64_sys_call+0x2ed6/0x3c30 arch/x86/include/generated/asm/syscalls_64.h:47\n  do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n  do_syscall_64+0xcd/0x1e0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21792",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nax25: Fix refcount leak caused by setting SO_BINDTODEVICE sockopt\n\nIf an AX25 device is bound to a socket by setting the SO_BINDTODEVICE\nsocket option, a refcount leak will occur in ax25_release().\n\nCommit 9fd75b66b8f6 (\"ax25: Fix refcount leaks caused by ax25_cb_del()\")\nadded decrement of device refcounts in ax25_release(). In order for that\nto work correctly the refcounts must already be incremented when the\ndevice is bound to the socket. An AX25 device can be bound to a socket\nby either calling ax25_bind() or setting SO_BINDTODEVICE socket option.\nIn both cases the refcounts should be incremented, but in fact it is done\nonly in ax25_bind().\n\nThis bug leads to the following issue reported by Syzkaller:\n\n================================================================\nrefcount_t: decrement hit 0; leaking memory.\nWARNING: CPU: 1 PID: 5932 at lib/refcount.c:31 refcount_warn_saturate+0x1ed/0x210 lib/refcount.c:31\nModules linked in:\nCPU: 1 UID: 0 PID: 5932 Comm: syz-executor424 Not tainted 6.13.0-rc4-syzkaller-00110-g4099a71718b0 #0\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2~bpo12+1 04/01/2014\nRIP: 0010:refcount_warn_saturate+0x1ed/0x210 lib/refcount.c:31\nCall Trace:\n \u003cTASK\u003e\n __refcount_dec include/linux/refcount.h:336 [inline]\n refcount_dec include/linux/refcount.h:351 [inline]\n ref_tracker_free+0x710/0x820 lib/ref_tracker.c:236\n netdev_tracker_free include/linux/netdevice.h:4156 [inline]\n netdev_put include/linux/netdevice.h:4173 [inline]\n netdev_put include/linux/netdevice.h:4169 [inline]\n ax25_release+0x33f/0xa10 net/ax25/af_ax25.c:1069\n __sock_release+0xb0/0x270 net/socket.c:640\n sock_close+0x1c/0x30 net/socket.c:1408\n ...\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xcd/0x250 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n ...\n \u003c/TASK\u003e\n================================================================\n\nFix the implementation of ax25_setsockopt() by adding increment of\nrefcounts for the new device bound, and decrement of refcounts for\nthe old unbound device.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21808",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: xdp: Disallow attaching device-bound programs in generic mode\n\nDevice-bound programs are used to support RX metadata kfuncs. These\nkfuncs are driver-specific and rely on the driver context to read the\nmetadata. This means they can't work in generic XDP mode. However, there\nis no check to disallow such programs from being attached in generic\nmode, in which case the metadata kfuncs will be called in an invalid\ncontext, leading to crashes.\n\nFix this by adding a check to disallow attaching device-bound programs\nin generic mode.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21812",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nax25: rcu protect dev-\u003eax25_ptr\n\nsyzbot found a lockdep issue [1].\n\nWe should remove ax25 RTNL dependency in ax25_setsockopt()\n\nThis should also fix a variety of possible UAF in ax25.\n\n[1]\n\nWARNING: possible circular locking dependency detected\n6.13.0-rc3-syzkaller-00762-g9268abe611b0 #0 Not tainted\n------------------------------------------------------\nsyz.5.1818/12806 is trying to acquire lock:\n ffffffff8fcb3988 (rtnl_mutex){+.+.}-{4:4}, at: ax25_setsockopt+0xa55/0xe90 net/ax25/af_ax25.c:680\n\nbut task is already holding lock:\n ffff8880617ac258 (sk_lock-AF_AX25){+.+.}-{0:0}, at: lock_sock include/net/sock.h:1618 [inline]\n ffff8880617ac258 (sk_lock-AF_AX25){+.+.}-{0:0}, at: ax25_setsockopt+0x209/0xe90 net/ax25/af_ax25.c:574\n\nwhich lock already depends on the new lock.\n\nthe existing dependency chain (in reverse order) is:\n\n-\u003e #1 (sk_lock-AF_AX25){+.+.}-{0:0}:\n        lock_acquire+0x1ed/0x550 kernel/locking/lockdep.c:5849\n        lock_sock_nested+0x48/0x100 net/core/sock.c:3642\n        lock_sock include/net/sock.h:1618 [inline]\n        ax25_kill_by_device net/ax25/af_ax25.c:101 [inline]\n        ax25_device_event+0x24d/0x580 net/ax25/af_ax25.c:146\n        notifier_call_chain+0x1a5/0x3f0 kernel/notifier.c:85\n       __dev_notify_flags+0x207/0x400\n        dev_change_flags+0xf0/0x1a0 net/core/dev.c:9026\n        dev_ifsioc+0x7c8/0xe70 net/core/dev_ioctl.c:563\n        dev_ioctl+0x719/0x1340 net/core/dev_ioctl.c:820\n        sock_do_ioctl+0x240/0x460 net/socket.c:1234\n        sock_ioctl+0x626/0x8e0 net/socket.c:1339\n        vfs_ioctl fs/ioctl.c:51 [inline]\n        __do_sys_ioctl fs/ioctl.c:906 [inline]\n        __se_sys_ioctl+0xf5/0x170 fs/ioctl.c:892\n        do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n        do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83\n       entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\n-\u003e #0 (rtnl_mutex){+.+.}-{4:4}:\n        check_prev_add kernel/locking/lockdep.c:3161 [inline]\n        check_prevs_add kernel/locking/lockdep.c:3280 [inline]\n        validate_chain+0x18ef/0x5920 kernel/locking/lockdep.c:3904\n        __lock_acquire+0x1397/0x2100 kernel/locking/lockdep.c:5226\n        lock_acquire+0x1ed/0x550 kernel/locking/lockdep.c:5849\n        __mutex_lock_common kernel/locking/mutex.c:585 [inline]\n        __mutex_lock+0x1ac/0xee0 kernel/locking/mutex.c:735\n        ax25_setsockopt+0xa55/0xe90 net/ax25/af_ax25.c:680\n        do_sock_setsockopt+0x3af/0x720 net/socket.c:2324\n        __sys_setsockopt net/socket.c:2349 [inline]\n        __do_sys_setsockopt net/socket.c:2355 [inline]\n        __se_sys_setsockopt net/socket.c:2352 [inline]\n        __x64_sys_setsockopt+0x1ee/0x280 net/socket.c:2352\n        do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n        do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83\n       entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nother info that might help us debug this:\n\n Possible unsafe locking scenario:\n\n       CPU0                    CPU1\n       ----                    ----\n  lock(sk_lock-AF_AX25);\n                               lock(rtnl_mutex);\n                               lock(sk_lock-AF_AX25);\n  lock(rtnl_mutex);\n\n *** DEADLOCK ***\n\n1 lock held by syz.5.1818/12806:\n  #0: ffff8880617ac258 (sk_lock-AF_AX25){+.+.}-{0:0}, at: lock_sock include/net/sock.h:1618 [inline]\n  #0: ffff8880617ac258 (sk_lock-AF_AX25){+.+.}-{0:0}, at: ax25_setsockopt+0x209/0xe90 net/ax25/af_ax25.c:574\n\nstack backtrace:\nCPU: 1 UID: 0 PID: 12806 Comm: syz.5.1818 Not tainted 6.13.0-rc3-syzkaller-00762-g9268abe611b0 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 09/13/2024\nCall Trace:\n \u003cTASK\u003e\n  __dump_stack lib/dump_stack.c:94 [inline]\n  dump_stack_lvl+0x241/0x360 lib/dump_stack.c:120\n  print_circular_bug+0x13a/0x1b0 kernel/locking/lockdep.c:2074\n  check_noncircular+0x36a/0x4a0 kernel/locking/lockdep.c:2206\n  check_prev_add kernel/locking/lockdep.c:3161 [inline]\n  check_prevs_add kernel/lockin\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21814",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nptp: Ensure info-\u003eenable callback is always set\n\nThe ioctl and sysfs handlers unconditionally call the -\u003eenable callback.\nNot all drivers implement that callback, leading to NULL dereferences.\nExample of affected drivers: ptp_s390.c, ptp_vclock.c and ptp_mock.c.\n\nInstead use a dummy callback if no better was specified by the driver.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21833",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niommu/vt-d: Avoid use of NULL after WARN_ON_ONCE\n\nThere is a WARN_ON_ONCE to catch an unlikely situation when\ndomain_remove_dev_pasid can't find the `pasid`. In case it nevertheless\nhappens we must avoid using a NULL pointer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21853",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: avoid holding freeze_mutex during mmap operation\n\nWe use map-\u003efreeze_mutex to prevent races between map_freeze() and\nmemory mapping BPF map contents with writable permissions. The way we\nnaively do this means we'll hold freeze_mutex for entire duration of all\nthe mm and VMA manipulations, which is completely unnecessary. This can\npotentially also lead to deadlocks, as reported by syzbot in [0].\n\nSo, instead, hold freeze_mutex only during writeability checks, bump\n(proactively) \"write active\" count for the map, unlock the mutex and\nproceed with mmap logic. And only if something went wrong during mmap\nlogic, then undo that \"write active\" counter increment.\n\n  [0] https://lore.kernel.org/bpf/678dcbc9.050a0220.303755.0066.GAE@google.com/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21854",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsockmap, vsock: For connectible sockets allow only connected\n\nsockmap expects all vsocks to have a transport assigned, which is expressed\nin vsock_proto::psock_update_sk_prot(). However, there is an edge case\nwhere an unconnected (connectible) socket may lose its previously assigned\ntransport. This is handled with a NULL check in the vsock/BPF recv path.\n\nAnother design detail is that listening vsocks are not supposed to have any\ntransport assigned at all. Which implies they are not supported by the\nsockmap. But this is complicated by the fact that a socket, before\nswitching to TCP_LISTEN, may have had some transport assigned during a\nfailed connect() attempt. Hence, we may end up with a listening vsock in a\nsockmap, which blows up quickly:\n\nKASAN: null-ptr-deref in range [0x0000000000000120-0x0000000000000127]\nCPU: 7 UID: 0 PID: 56 Comm: kworker/7:0 Not tainted 6.14.0-rc1+\nWorkqueue: vsock-loopback vsock_loopback_work\nRIP: 0010:vsock_read_skb+0x4b/0x90\nCall Trace:\n sk_psock_verdict_data_ready+0xa4/0x2e0\n virtio_transport_recv_pkt+0x1ca8/0x2acc\n vsock_loopback_work+0x27d/0x3f0\n process_one_work+0x846/0x1420\n worker_thread+0x5b3/0xf80\n kthread+0x35a/0x700\n ret_from_fork+0x2d/0x70\n ret_from_fork_asm+0x1a/0x30\n\nFor connectible sockets, instead of relying solely on the state of\nvsk-\u003etransport, tell sockmap to only allow those representing established\nconnections. This aligns with the behaviour for AF_INET and AF_UNIX.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21867",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf, test_run: Fix use-after-free issue in eth_skb_pkt_type()\n\nKMSAN reported a use-after-free issue in eth_skb_pkt_type()[1]. The\ncause of the issue was that eth_skb_pkt_type() accessed skb's data\nthat didn't contain an Ethernet header. This occurs when\nbpf_prog_test_run_xdp() passes an invalid value as the user_data\nargument to bpf_test_init().\n\nFix this by returning an error when user_data is less than ETH_HLEN in\nbpf_test_init(). Additionally, remove the check for \"if (user_size \u003e\nsize)\" as it is unnecessary.\n\n[1]\nBUG: KMSAN: use-after-free in eth_skb_pkt_type include/linux/etherdevice.h:627 [inline]\nBUG: KMSAN: use-after-free in eth_type_trans+0x4ee/0x980 net/ethernet/eth.c:165\n eth_skb_pkt_type include/linux/etherdevice.h:627 [inline]\n eth_type_trans+0x4ee/0x980 net/ethernet/eth.c:165\n __xdp_build_skb_from_frame+0x5a8/0xa50 net/core/xdp.c:635\n xdp_recv_frames net/bpf/test_run.c:272 [inline]\n xdp_test_run_batch net/bpf/test_run.c:361 [inline]\n bpf_test_run_xdp_live+0x2954/0x3330 net/bpf/test_run.c:390\n bpf_prog_test_run_xdp+0x148e/0x1b10 net/bpf/test_run.c:1318\n bpf_prog_test_run+0x5b7/0xa30 kernel/bpf/syscall.c:4371\n __sys_bpf+0x6a6/0xe20 kernel/bpf/syscall.c:5777\n __do_sys_bpf kernel/bpf/syscall.c:5866 [inline]\n __se_sys_bpf kernel/bpf/syscall.c:5864 [inline]\n __x64_sys_bpf+0xa4/0xf0 kernel/bpf/syscall.c:5864\n x64_sys_call+0x2ea0/0x3d90 arch/x86/include/generated/asm/syscalls_64.h:322\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xd9/0x1d0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nUninit was created at:\n free_pages_prepare mm/page_alloc.c:1056 [inline]\n free_unref_page+0x156/0x1320 mm/page_alloc.c:2657\n __free_pages+0xa3/0x1b0 mm/page_alloc.c:4838\n bpf_ringbuf_free kernel/bpf/ringbuf.c:226 [inline]\n ringbuf_map_free+0xff/0x1e0 kernel/bpf/ringbuf.c:235\n bpf_map_free kernel/bpf/syscall.c:838 [inline]\n bpf_map_free_deferred+0x17c/0x310 kernel/bpf/syscall.c:862\n process_one_work kernel/workqueue.c:3229 [inline]\n process_scheduled_works+0xa2b/0x1b60 kernel/workqueue.c:3310\n worker_thread+0xedf/0x1550 kernel/workqueue.c:3391\n kthread+0x535/0x6b0 kernel/kthread.c:389\n ret_from_fork+0x6e/0x90 arch/x86/kernel/process.c:147\n ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244\n\nCPU: 1 UID: 0 PID: 17276 Comm: syz.1.16450 Not tainted 6.12.0-05490-g9bb88c659673 #8\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-3.fc41 04/01/2014",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21868",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: allow small head cache usage with large MAX_SKB_FRAGS values\n\nSabrina reported the following splat:\n\n    WARNING: CPU: 0 PID: 1 at net/core/dev.c:6935 netif_napi_add_weight_locked+0x8f2/0xba0\n    Modules linked in:\n    CPU: 0 UID: 0 PID: 1 Comm: swapper/0 Not tainted 6.14.0-rc1-net-00092-g011b03359038 #996\n    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Arch Linux 1.16.3-1-1 04/01/2014\n    RIP: 0010:netif_napi_add_weight_locked+0x8f2/0xba0\n    Code: e8 c3 e6 6a fe 48 83 c4 28 5b 5d 41 5c 41 5d 41 5e 41 5f c3 cc cc cc cc c7 44 24 10 ff ff ff ff e9 8f fb ff ff e8 9e e6 6a fe \u003c0f\u003e 0b e9 d3 fe ff ff e8 92 e6 6a fe 48 8b 04 24 be ff ff ff ff 48\n    RSP: 0000:ffffc9000001fc60 EFLAGS: 00010293\n    RAX: 0000000000000000 RBX: ffff88806ce48128 RCX: 1ffff11001664b9e\n    RDX: ffff888008f00040 RSI: ffffffff8317ca42 RDI: ffff88800b325cb6\n    RBP: ffff88800b325c40 R08: 0000000000000001 R09: ffffed100167502c\n    R10: ffff88800b3a8163 R11: 0000000000000000 R12: ffff88800ac1c168\n    R13: ffff88800ac1c168 R14: ffff88800ac1c168 R15: 0000000000000007\n    FS:  0000000000000000(0000) GS:ffff88806ce00000(0000) knlGS:0000000000000000\n    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n    CR2: ffff888008201000 CR3: 0000000004c94001 CR4: 0000000000370ef0\n    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n    Call Trace:\n    \u003cTASK\u003e\n    gro_cells_init+0x1ba/0x270\n    xfrm_input_init+0x4b/0x2a0\n    xfrm_init+0x38/0x50\n    ip_rt_init+0x2d7/0x350\n    ip_init+0xf/0x20\n    inet_init+0x406/0x590\n    do_one_initcall+0x9d/0x2e0\n    do_initcalls+0x23b/0x280\n    kernel_init_freeable+0x445/0x490\n    kernel_init+0x20/0x1d0\n    ret_from_fork+0x46/0x80\n    ret_from_fork_asm+0x1a/0x30\n    \u003c/TASK\u003e\n    irq event stamp: 584330\n    hardirqs last  enabled at (584338): [\u003cffffffff8168bf87\u003e] __up_console_sem+0x77/0xb0\n    hardirqs last disabled at (584345): [\u003cffffffff8168bf6c\u003e] __up_console_sem+0x5c/0xb0\n    softirqs last  enabled at (583242): [\u003cffffffff833ee96d\u003e] netlink_insert+0x14d/0x470\n    softirqs last disabled at (583754): [\u003cffffffff8317c8cd\u003e] netif_napi_add_weight_locked+0x77d/0xba0\n\non kernel built with MAX_SKB_FRAGS=45, where SKB_WITH_OVERHEAD(1024)\nis smaller than GRO_MAX_HEAD.\n\nSuch built additionally contains the revert of the single page frag cache\nso that napi_get_frags() ends up using the page frag allocator, triggering\nthe splat.\n\nNote that the underlying issue is independent from the mentioned\nrevert; address it ensuring that the small head cache will fit either TCP\nand GRO allocation and updating napi_alloc_skb() and __netdev_alloc_skb()\nto select kmalloc() usage for any allocation fitting such cache.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21898",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nftrace: Avoid potential division by zero in function_stat_show()\n\nCheck whether denominator expression x * (x - 1) * 1000 mod {2^32, 2^64}\nproduce zero and skip stddev computation in that case.\n\nFor now don't care about rec-\u003ecounter * rec-\u003ecounter overflow because\nrec-\u003etime * rec-\u003etime overflow will likely happen earlier.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21899",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Fix bad hist from corrupting named_triggers list\n\nThe following commands causes a crash:\n\n ~# cd /sys/kernel/tracing/events/rcu/rcu_callback\n ~# echo 'hist:name=bad:keys=common_pid:onmax(bogus).save(common_pid)' \u003e trigger\n bash: echo: write error: Invalid argument\n ~# echo 'hist:name=bad:keys=common_pid' \u003e trigger\n\nBecause the following occurs:\n\nevent_trigger_write() {\n  trigger_process_regex() {\n    event_hist_trigger_parse() {\n\n      data = event_trigger_alloc(..);\n\n      event_trigger_register(.., data) {\n        cmd_ops-\u003ereg(.., data, ..) [hist_register_trigger()] {\n          data-\u003eops-\u003einit() [event_hist_trigger_init()] {\n            save_named_trigger(name, data) {\n              list_add(\u0026data-\u003enamed_list, \u0026named_triggers);\n            }\n          }\n        }\n      }\n\n      ret = create_actions(); (return -EINVAL)\n      if (ret)\n        goto out_unreg;\n[..]\n      ret = hist_trigger_enable(data, ...) {\n        list_add_tail_rcu(\u0026data-\u003elist, \u0026file-\u003etriggers); \u003c\u003c\u003c---- SKIPPED!!! (this is important!)\n[..]\n out_unreg:\n      event_hist_unregister(.., data) {\n        cmd_ops-\u003eunreg(.., data, ..) [hist_unregister_trigger()] {\n          list_for_each_entry(iter, \u0026file-\u003etriggers, list) {\n            if (!hist_trigger_match(data, iter, named_data, false))   \u003c- never matches\n                continue;\n            [..]\n            test = iter;\n          }\n          if (test \u0026\u0026 test-\u003eops-\u003efree) \u003c\u003c\u003c-- test is NULL\n\n            test-\u003eops-\u003efree(test) [event_hist_trigger_free()] {\n              [..]\n              if (data-\u003ename)\n                del_named_trigger(data) {\n                  list_del(\u0026data-\u003enamed_list);  \u003c\u003c\u003c\u003c-- NEVER gets removed!\n                }\n              }\n           }\n         }\n\n         [..]\n         kfree(data); \u003c\u003c\u003c-- frees item but it is still on list\n\nThe next time a hist with name is registered, it causes an u-a-f bug and\nthe kernel can crash.\n\nMove the code around such that if event_trigger_register() succeeds, the\nnext thing called is hist_trigger_enable() which adds it to the list.\n\nA bunch of actions is called if get_named_trigger_data() returns false.\nBut that doesn't need to be called after event_trigger_register(), so it\ncan be moved up, allowing event_trigger_register() to be called just\nbefore hist_trigger_enable() keeping them together and allowing the\nfile-\u003etriggers to be properly populated.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21904",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncaif_virtio: fix wrong pointer check in cfv_probe()\n\ndel_vqs() frees virtqueues, therefore cfv-\u003evq_tx pointer should be checked\nfor NULL before calling it, not cfv-\u003evdev. Also the current implementation\nis redundant because the pointer cfv-\u003evdev is dereferenced before it is\nchecked for NULL.\n\nFix this by checking cfv-\u003evq_tx for NULL instead of cfv-\u003evdev before\ncalling del_vqs().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21919",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsched/fair: Fix potential memory corruption in child_cfs_rq_on_list\n\nchild_cfs_rq_on_list attempts to convert a 'prev' pointer to a cfs_rq.\nThis 'prev' pointer can originate from struct rq's leaf_cfs_rq_list,\nmaking the conversion invalid and potentially leading to memory\ncorruption. Depending on the relative positions of leaf_cfs_rq_list and\nthe task group (tg) pointer within the struct, this can cause a memory\nfault or access garbage data.\n\nThe issue arises in list_add_leaf_cfs_rq, where both\ncfs_rq-\u003eleaf_cfs_rq_list and rq-\u003eleaf_cfs_rq_list are added to the same\nleaf list. Also, rq-\u003etmp_alone_branch can be set to rq-\u003eleaf_cfs_rq_list.\n\nThis adds a check `if (prev == \u0026rq-\u003eleaf_cfs_rq_list)` after the main\nconditional in child_cfs_rq_on_list. This ensures that the container_of\noperation will convert a correct cfs_rq struct.\n\nThis check is sufficient because only cfs_rqs on the same CPU are added\nto the list, so verifying the 'prev' pointer against the current rq's list\nhead is enough.\n\nFixes a potential memory corruption issue that due to current struct\nlayout might not be manifesting as a crash but could lead to unpredictable\nbehavior when the layout changes.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21920",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvlan: enforce underlying device type\n\nCurrently, VLAN devices can be created on top of non-ethernet devices.\n\nBesides the fact that it doesn't make much sense, this also causes a\nbug which leaks the address of a kernel function to usermode.\n\nWhen creating a VLAN device, we initialize GARP (garp_init_applicant)\nand MRP (mrp_init_applicant) for the underlying device.\n\nAs part of the initialization process, we add the multicast address of\neach applicant to the underlying device, by calling dev_mc_add.\n\n__dev_mc_add uses dev-\u003eaddr_len to determine the length of the new\nmulticast address.\n\nThis causes an out-of-bounds read if dev-\u003eaddr_len is greater than 6,\nsince the multicast addresses provided by GARP and MRP are only 6\nbytes long.\n\nThis behaviour can be reproduced using the following commands:\n\nip tunnel add gretest mode ip6gre local ::1 remote ::2 dev lo\nip l set up dev gretest\nip link add link gretest name vlantest type vlan id 100\n\nThen, the following command will display the address of garp_pdu_rcv:\n\nip maddr show | grep 01:80:c2:00:00:21\n\nFix the bug by enforcing the type of the underlying device during VLAN\ndevice initialization.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21925",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nllc: do not use skb_get() before dev_queue_xmit()\n\nsyzbot is able to crash hosts [1], using llc and devices\nnot supporting IFF_TX_SKB_SHARING.\n\nIn this case, e1000 driver calls eth_skb_pad(), while\nthe skb is shared.\n\nSimply replace skb_get() by skb_clone() in net/llc/llc_s_ac.c\n\nNote that e1000 driver might have an issue with pktgen,\nbecause it does not clear IFF_TX_SKB_SHARING, this is an\northogonal change.\n\nWe need to audit other skb_get() uses in net/llc.\n\n[1]\n\nkernel BUG at net/core/skbuff.c:2178 !\nOops: invalid opcode: 0000 [#1] PREEMPT SMP KASAN NOPTI\nCPU: 0 UID: 0 PID: 16371 Comm: syz.2.2764 Not tainted 6.14.0-rc4-syzkaller-00052-gac9c34d1e45a #0\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2~bpo12+1 04/01/2014\n RIP: 0010:pskb_expand_head+0x6ce/0x1240 net/core/skbuff.c:2178\nCall Trace:\n \u003cTASK\u003e\n  __skb_pad+0x18a/0x610 net/core/skbuff.c:2466\n  __skb_put_padto include/linux/skbuff.h:3843 [inline]\n  skb_put_padto include/linux/skbuff.h:3862 [inline]\n  eth_skb_pad include/linux/etherdevice.h:656 [inline]\n  e1000_xmit_frame+0x2d99/0x5800 drivers/net/ethernet/intel/e1000/e1000_main.c:3128\n  __netdev_start_xmit include/linux/netdevice.h:5151 [inline]\n  netdev_start_xmit include/linux/netdevice.h:5160 [inline]\n  xmit_one net/core/dev.c:3806 [inline]\n  dev_hard_start_xmit+0x9a/0x7b0 net/core/dev.c:3822\n  sch_direct_xmit+0x1ae/0xc30 net/sched/sch_generic.c:343\n  __dev_xmit_skb net/core/dev.c:4045 [inline]\n  __dev_queue_xmit+0x13d4/0x43e0 net/core/dev.c:4621\n  dev_queue_xmit include/linux/netdevice.h:3313 [inline]\n  llc_sap_action_send_test_c+0x268/0x320 net/llc/llc_s_ac.c:144\n  llc_exec_sap_trans_actions net/llc/llc_sap.c:153 [inline]\n  llc_sap_next_state net/llc/llc_sap.c:182 [inline]\n  llc_sap_state_process+0x239/0x510 net/llc/llc_sap.c:209\n  llc_ui_sendmsg+0xd0d/0x14e0 net/llc/af_llc.c:993\n  sock_sendmsg_nosec net/socket.c:718 [inline]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21926",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: gso: fix ownership in __udp_gso_segment\n\nIn __udp_gso_segment the skb destructor is removed before segmenting the\nskb but the socket reference is kept as-is. This is an issue if the\noriginal skb is later orphaned as we can hit the following bug:\n\n  kernel BUG at ./include/linux/skbuff.h:3312!  (skb_orphan)\n  RIP: 0010:ip_rcv_core+0x8b2/0xca0\n  Call Trace:\n   ip_rcv+0xab/0x6e0\n   __netif_receive_skb_one_core+0x168/0x1b0\n   process_backlog+0x384/0x1100\n   __napi_poll.constprop.0+0xa1/0x370\n   net_rx_action+0x925/0xe50\n\nThe above can happen following a sequence of events when using\nOpenVSwitch, when an OVS_ACTION_ATTR_USERSPACE action precedes an\nOVS_ACTION_ATTR_OUTPUT action:\n\n1. OVS_ACTION_ATTR_USERSPACE is handled (in do_execute_actions): the skb\n   goes through queue_gso_packets and then __udp_gso_segment, where its\n   destructor is removed.\n2. The segments' data are copied and sent to userspace.\n3. OVS_ACTION_ATTR_OUTPUT is handled (in do_execute_actions) and the\n   same original skb is sent to its path.\n4. If it later hits skb_orphan, we hit the bug.\n\nFix this by also removing the reference to the socket in\n__udp_gso_segment.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21931",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nhwpoison, memory_hotplug: lock folio before unmap hwpoisoned folio\n\nCommit b15c87263a69 (\"hwpoison, memory_hotplug: allow hwpoisoned pages to\nbe offlined) add page poison checks in do_migrate_range in order to make\noffline hwpoisoned page possible by introducing isolate_lru_page and\ntry_to_unmap for hwpoisoned page.  However folio lock must be held before\ncalling try_to_unmap.  Add it to fix this problem.\n\nWarning will be produced if folio is not locked during unmap:\n\n  ------------[ cut here ]------------\n  kernel BUG at ./include/linux/swapops.h:400!\n  Internal error: Oops - BUG: 00000000f2000800 [#1] PREEMPT SMP\n  Modules linked in:\n  CPU: 4 UID: 0 PID: 411 Comm: bash Tainted: G        W          6.13.0-rc1-00016-g3c434c7ee82a-dirty #41\n  Tainted: [W]=WARN\n  Hardware name: QEMU QEMU Virtual Machine, BIOS 0.0.0 02/06/2015\n  pstate: 40400005 (nZcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n  pc : try_to_unmap_one+0xb08/0xd3c\n  lr : try_to_unmap_one+0x3dc/0xd3c\n  Call trace:\n   try_to_unmap_one+0xb08/0xd3c (P)\n   try_to_unmap_one+0x3dc/0xd3c (L)\n   rmap_walk_anon+0xdc/0x1f8\n   rmap_walk+0x3c/0x58\n   try_to_unmap+0x88/0x90\n   unmap_poisoned_folio+0x30/0xa8\n   do_migrate_range+0x4a0/0x568\n   offline_pages+0x5a4/0x670\n   memory_block_action+0x17c/0x374\n   memory_subsys_offline+0x3c/0x78\n   device_offline+0xa4/0xd0\n   state_store+0x8c/0xf0\n   dev_attr_store+0x18/0x2c\n   sysfs_kf_write+0x44/0x54\n   kernfs_fop_write_iter+0x118/0x1a8\n   vfs_write+0x3a8/0x4bc\n   ksys_write+0x6c/0xf8\n   __arm64_sys_write+0x1c/0x28\n   invoke_syscall+0x44/0x100\n   el0_svc_common.constprop.0+0x40/0xe0\n   do_el0_svc+0x1c/0x28\n   el0_svc+0x30/0xd0\n   el0t_64_sync_handler+0xc8/0xcc\n   el0t_64_sync+0x198/0x19c\n  Code: f9407be0 b5fff320 d4210000 17ffff97 (d4210000)\n  ---[ end trace 0000000000000000 ]---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21938",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: fix 'scheduling while atomic' in mptcp_pm_nl_append_new_local_addr\n\nIf multiple connection requests attempt to create an implicit mptcp\nendpoint in parallel, more than one caller may end up in\nmptcp_pm_nl_append_new_local_addr because none found the address in\nlocal_addr_list during their call to mptcp_pm_nl_get_local_id.  In this\ncase, the concurrent new_local_addr calls may delete the address entry\ncreated by the previous caller.  These deletes use synchronize_rcu, but\nthis is not permitted in some of the contexts where this function may be\ncalled.  During packet recv, the caller may be in a rcu read critical\nsection and have preemption disabled.\n\nAn example stack:\n\n   BUG: scheduling while atomic: swapper/2/0/0x00000302\n\n   Call Trace:\n   \u003cIRQ\u003e\n   dump_stack_lvl (lib/dump_stack.c:117 (discriminator 1))\n   dump_stack (lib/dump_stack.c:124)\n   __schedule_bug (kernel/sched/core.c:5943)\n   schedule_debug.constprop.0 (arch/x86/include/asm/preempt.h:33 kernel/sched/core.c:5970)\n   __schedule (arch/x86/include/asm/jump_label.h:27 include/linux/jump_label.h:207 kernel/sched/features.h:29 kernel/sched/core.c:6621)\n   schedule (arch/x86/include/asm/preempt.h:84 kernel/sched/core.c:6804 kernel/sched/core.c:6818)\n   schedule_timeout (kernel/time/timer.c:2160)\n   wait_for_completion (kernel/sched/completion.c:96 kernel/sched/completion.c:116 kernel/sched/completion.c:127 kernel/sched/completion.c:148)\n   __wait_rcu_gp (include/linux/rcupdate.h:311 kernel/rcu/update.c:444)\n   synchronize_rcu (kernel/rcu/tree.c:3609)\n   mptcp_pm_nl_append_new_local_addr (net/mptcp/pm_netlink.c:966 net/mptcp/pm_netlink.c:1061)\n   mptcp_pm_nl_get_local_id (net/mptcp/pm_netlink.c:1164)\n   mptcp_pm_get_local_id (net/mptcp/pm.c:420)\n   subflow_check_req (net/mptcp/subflow.c:98 net/mptcp/subflow.c:213)\n   subflow_v4_route_req (net/mptcp/subflow.c:305)\n   tcp_conn_request (net/ipv4/tcp_input.c:7216)\n   subflow_v4_conn_request (net/mptcp/subflow.c:651)\n   tcp_rcv_state_process (net/ipv4/tcp_input.c:6709)\n   tcp_v4_do_rcv (net/ipv4/tcp_ipv4.c:1934)\n   tcp_v4_rcv (net/ipv4/tcp_ipv4.c:2334)\n   ip_protocol_deliver_rcu (net/ipv4/ip_input.c:205 (discriminator 1))\n   ip_local_deliver_finish (include/linux/rcupdate.h:813 net/ipv4/ip_input.c:234)\n   ip_local_deliver (include/linux/netfilter.h:314 include/linux/netfilter.h:308 net/ipv4/ip_input.c:254)\n   ip_sublist_rcv_finish (include/net/dst.h:461 net/ipv4/ip_input.c:580)\n   ip_sublist_rcv (net/ipv4/ip_input.c:640)\n   ip_list_rcv (net/ipv4/ip_input.c:675)\n   __netif_receive_skb_list_core (net/core/dev.c:5583 net/core/dev.c:5631)\n   netif_receive_skb_list_internal (net/core/dev.c:5685 net/core/dev.c:5774)\n   napi_complete_done (include/linux/list.h:37 include/net/gro.h:449 include/net/gro.h:444 net/core/dev.c:6114)\n   igb_poll (drivers/net/ethernet/intel/igb/igb_main.c:8244) igb\n   __napi_poll (net/core/dev.c:6582)\n   net_rx_action (net/core/dev.c:6653 net/core/dev.c:6787)\n   handle_softirqs (kernel/softirq.c:553)\n   __irq_exit_rcu (kernel/softirq.c:588 kernel/softirq.c:427 kernel/softirq.c:636)\n   irq_exit_rcu (kernel/softirq.c:651)\n   common_interrupt (arch/x86/kernel/irq.c:247 (discriminator 14))\n   \u003c/IRQ\u003e\n\nThis problem seems particularly prevalent if the user advertises an\nendpoint that has a different external vs internal address.  In the case\nwhere the external address is advertised and multiple connections\nalready exist, multiple subflow SYNs arrive in parallel which tends to\ntrigger the race during creation of the first local_addr_list entries\nwhich have the internal address instead.\n\nFix by skipping the replacement of an existing implicit local address if\ncalled via mptcp_pm_nl_get_local_id.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21959",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_conncount: Fully initialize struct nf_conncount_tuple in insert_tree()\n\nSince commit b36e4523d4d5 (\"netfilter: nf_conncount: fix garbage\ncollection confirm race\"), `cpu` and `jiffies32` were introduced to\nthe struct nf_conncount_tuple.\n\nThe commit made nf_conncount_add() initialize `conn-\u003ecpu` and\n`conn-\u003ejiffies32` when allocating the struct.\nIn contrast, count_tree() was not changed to initialize them.\n\nBy commit 34848d5c896e (\"netfilter: nf_conncount: Split insert and\ntraversal\"), count_tree() was split and the relevant allocation\ncode now resides in insert_tree().\nInitialize `conn-\u003ecpu` and `conn-\u003ejiffies32` in insert_tree().\n\nBUG: KMSAN: uninit-value in find_or_evict net/netfilter/nf_conncount.c:117 [inline]\nBUG: KMSAN: uninit-value in __nf_conncount_add+0xd9c/0x2850 net/netfilter/nf_conncount.c:143\n find_or_evict net/netfilter/nf_conncount.c:117 [inline]\n __nf_conncount_add+0xd9c/0x2850 net/netfilter/nf_conncount.c:143\n count_tree net/netfilter/nf_conncount.c:438 [inline]\n nf_conncount_count+0x82f/0x1e80 net/netfilter/nf_conncount.c:521\n connlimit_mt+0x7f6/0xbd0 net/netfilter/xt_connlimit.c:72\n __nft_match_eval net/netfilter/nft_compat.c:403 [inline]\n nft_match_eval+0x1a5/0x300 net/netfilter/nft_compat.c:433\n expr_call_ops_eval net/netfilter/nf_tables_core.c:240 [inline]\n nft_do_chain+0x426/0x2290 net/netfilter/nf_tables_core.c:288\n nft_do_chain_ipv4+0x1a5/0x230 net/netfilter/nft_chain_filter.c:23\n nf_hook_entry_hookfn include/linux/netfilter.h:154 [inline]\n nf_hook_slow+0xf4/0x400 net/netfilter/core.c:626\n nf_hook_slow_list+0x24d/0x860 net/netfilter/core.c:663\n NF_HOOK_LIST include/linux/netfilter.h:350 [inline]\n ip_sublist_rcv+0x17b7/0x17f0 net/ipv4/ip_input.c:633\n ip_list_rcv+0x9ef/0xa40 net/ipv4/ip_input.c:669\n __netif_receive_skb_list_ptype net/core/dev.c:5936 [inline]\n __netif_receive_skb_list_core+0x15c5/0x1670 net/core/dev.c:5983\n __netif_receive_skb_list net/core/dev.c:6035 [inline]\n netif_receive_skb_list_internal+0x1085/0x1700 net/core/dev.c:6126\n netif_receive_skb_list+0x5a/0x460 net/core/dev.c:6178\n xdp_recv_frames net/bpf/test_run.c:280 [inline]\n xdp_test_run_batch net/bpf/test_run.c:361 [inline]\n bpf_test_run_xdp_live+0x2e86/0x3480 net/bpf/test_run.c:390\n bpf_prog_test_run_xdp+0xf1d/0x1ae0 net/bpf/test_run.c:1316\n bpf_prog_test_run+0x5e5/0xa30 kernel/bpf/syscall.c:4407\n __sys_bpf+0x6aa/0xd90 kernel/bpf/syscall.c:5813\n __do_sys_bpf kernel/bpf/syscall.c:5902 [inline]\n __se_sys_bpf kernel/bpf/syscall.c:5900 [inline]\n __ia32_sys_bpf+0xa0/0xe0 kernel/bpf/syscall.c:5900\n ia32_sys_call+0x394d/0x4180 arch/x86/include/generated/asm/syscalls_32.h:358\n do_syscall_32_irqs_on arch/x86/entry/common.c:165 [inline]\n __do_fast_syscall_32+0xb0/0x110 arch/x86/entry/common.c:387\n do_fast_syscall_32+0x38/0x80 arch/x86/entry/common.c:412\n do_SYSENTER_32+0x1f/0x30 arch/x86/entry/common.c:450\n entry_SYSENTER_compat_after_hwframe+0x84/0x8e\n\nUninit was created at:\n slab_post_alloc_hook mm/slub.c:4121 [inline]\n slab_alloc_node mm/slub.c:4164 [inline]\n kmem_cache_alloc_noprof+0x915/0xe10 mm/slub.c:4171\n insert_tree net/netfilter/nf_conncount.c:372 [inline]\n count_tree net/netfilter/nf_conncount.c:450 [inline]\n nf_conncount_count+0x1415/0x1e80 net/netfilter/nf_conncount.c:521\n connlimit_mt+0x7f6/0xbd0 net/netfilter/xt_connlimit.c:72\n __nft_match_eval net/netfilter/nft_compat.c:403 [inline]\n nft_match_eval+0x1a5/0x300 net/netfilter/nft_compat.c:433\n expr_call_ops_eval net/netfilter/nf_tables_core.c:240 [inline]\n nft_do_chain+0x426/0x2290 net/netfilter/nf_tables_core.c:288\n nft_do_chain_ipv4+0x1a5/0x230 net/netfilter/nft_chain_filter.c:23\n nf_hook_entry_hookfn include/linux/netfilter.h:154 [inline]\n nf_hook_slow+0xf4/0x400 net/netfilter/core.c:626\n nf_hook_slow_list+0x24d/0x860 net/netfilter/core.c:663\n NF_HOOK_LIST include/linux/netfilter.h:350 [inline]\n ip_sublist_rcv+0x17b7/0x17f0 net/ipv4/ip_input.c:633\n ip_list_rcv+0x9ef/0xa40 net/ip\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21962",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: Fix integer overflow while processing closetimeo mount option\n\nUser-provided mount parameter closetimeo of type u32 is intended to have\nan upper limit, but before it is validated, the value is converted from\nseconds to jiffies which can lead to an integer overflow.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21963",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: Fix integer overflow while processing acdirmax mount option\n\nUser-provided mount parameter acdirmax of type u32 is intended to have\nan upper limit, but before it is validated, the value is converted from\nseconds to jiffies which can lead to an integer overflow.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21964",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: Fix integer overflow while processing acregmax mount option\n\nUser-provided mount parameter acregmax of type u32 is intended to have\nan upper limit, but before it is validated, the value is converted from\nseconds to jiffies which can lead to an integer overflow.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21980",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsched: address a potential NULL pointer dereference in the GRED scheduler.\n\nIf kzalloc in gred_init returns a NULL pointer, the code follows the\nerror handling path, invoking gred_destroy. This, in turn, calls\ngred_offload, where memset could receive a NULL pointer as input,\npotentially leading to a kernel crash.\n\nWhen table-\u003eopt is NULL in gred_init(), gred_change_table_def()\nis not called yet, so it is not necessary to call -\u003endo_setup_tc()\nin gred_offload().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21985",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Fix out-of-bound accesses\n\n[WHAT \u0026 HOW]\nhpo_stream_to_link_encoder_mapping has size MAX_HPO_DP2_ENCODERS(=4),\nbut location can have size up to 6. As a result, it is necessary to\ncheck location against MAX_HPO_DP2_ENCODERS.\n\nSimiliarly, disp_cfg_stream_location can be used as an array index which\nshould be 0..5, so the ASSERT's conditions should be less without equal.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21997",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxsk: fix an integer overflow in xp_create_and_assign_umem()\n\nSince the i and pool-\u003echunk_size variables are of type 'u32',\ntheir product can wrap around and then be cast to 'u64'.\nThis can lead to two different XDP buffers pointing to the same\nmemory area.\n\nFound by InfoTeCS on behalf of Linux Verification Center\n(linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-21999",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nproc: fix UAF in proc_get_inode()\n\nFix race between rmmod and /proc/XXX's inode instantiation.\n\nThe bug is that pde-\u003eproc_ops don't belong to /proc, it belongs to a\nmodule, therefore dereferencing it after /proc entry has been registered\nis a bug unless use_pde/unuse_pde() pair has been used.\n\nuse_pde/unuse_pde can be avoided (2 atomic ops!) because pde-\u003eproc_ops\nnever changes so information necessary for inode instantiation can be\nsaved _before_ proc_register() in PDE itself and used later, avoiding\npde-\u003eproc_ops-\u003e...  dereference.\n\n      rmmod                         lookup\nsys_delete_module\n                         proc_lookup_de\n\t\t\t   pde_get(de);\n\t\t\t   proc_get_inode(dir-\u003ei_sb, de);\n  mod-\u003eexit()\n    proc_remove\n      remove_proc_subtree\n       proc_entry_rundown(de);\n  free_module(mod);\n\n                               if (S_ISREG(inode-\u003ei_mode))\n\t                         if (de-\u003eproc_ops-\u003eproc_read_iter)\n                           --\u003e As module is already freed, will trigger UAF\n\nBUG: unable to handle page fault for address: fffffbfff80a702b\nPGD 817fc4067 P4D 817fc4067 PUD 817fc0067 PMD 102ef4067 PTE 0\nOops: Oops: 0000 [#1] PREEMPT SMP KASAN PTI\nCPU: 26 UID: 0 PID: 2667 Comm: ls Tainted: G\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996)\nRIP: 0010:proc_get_inode+0x302/0x6e0\nRSP: 0018:ffff88811c837998 EFLAGS: 00010a06\nRAX: dffffc0000000000 RBX: ffffffffc0538140 RCX: 0000000000000007\nRDX: 1ffffffff80a702b RSI: 0000000000000001 RDI: ffffffffc0538158\nRBP: ffff8881299a6000 R08: 0000000067bbe1e5 R09: 1ffff11023906f20\nR10: ffffffffb560ca07 R11: ffffffffb2b43a58 R12: ffff888105bb78f0\nR13: ffff888100518048 R14: ffff8881299a6004 R15: 0000000000000001\nFS:  00007f95b9686840(0000) GS:ffff8883af100000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: fffffbfff80a702b CR3: 0000000117dd2000 CR4: 00000000000006f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n \u003cTASK\u003e\n proc_lookup_de+0x11f/0x2e0\n __lookup_slow+0x188/0x350\n walk_component+0x2ab/0x4f0\n path_lookupat+0x120/0x660\n filename_lookup+0x1ce/0x560\n vfs_statx+0xac/0x150\n __do_sys_newstat+0x96/0x110\n do_syscall_64+0x5f/0x170\n entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\n[adobriyan@gmail.com: don't do 2 atomic ops on the common path]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22004",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: atm: fix use after free in lec_send()\n\nThe -\u003esend() operation frees skb so save the length before calling\n-\u003esend() to avoid a use after free.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22005",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipv6: Fix memleak of nhc_pcpu_rth_output in fib_check_nh_v6_gw().\n\nfib_check_nh_v6_gw() expects that fib6_nh_init() cleans up everything\nwhen it fails.\n\nCommit 7dd73168e273 (\"ipv6: Always allocate pcpu memory in a fib6_nh\")\nmoved fib_nh_common_init() before alloc_percpu_gfp() within fib6_nh_init()\nbut forgot to add cleanup for fib6_nh-\u003enh_common.nhc_pcpu_rth_output in\ncase it fails to allocate fib6_nh-\u003ert6i_pcpu, resulting in memleak.\n\nLet's call fib_nh_common_release() and clear nhc_pcpu_rth_output in the\nerror path.\n\nNote that we can remove the fib6_nh_release() call in nh_create_ipv6()\nlater in net-next.git.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22015",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/migrate: fix shmem xarray update during migration\n\nA shmem folio can be either in page cache or in swap cache, but not at the\nsame time.  Namely, once it is in swap cache, folio-\u003emapping should be\nNULL, and the folio is no longer in a shmem mapping.\n\nIn __folio_migrate_mapping(), to determine the number of xarray entries to\nupdate, folio_test_swapbacked() is used, but that conflates shmem in page\ncache case and shmem in swap cache case.  It leads to xarray multi-index\nentry corruption, since it turns a sibling entry to a normal entry during\nxas_store() (see [1] for a userspace reproduction).  Fix it by only using\nfolio_test_swapcache() to determine whether xarray is storing swap cache\nentries or not to choose the right number of xarray entries to update.\n\n[1] https://lore.kernel.org/linux-mm/Z8idPCkaJW1IChjT@casper.infradead.org/\n\nNote:\nIn __split_huge_page(), folio_test_anon() \u0026\u0026 folio_test_swapcache() is\nused to get swap_cache address space, but that ignores the shmem folio in\nswap cache case.  It could lead to NULL pointer dereferencing when a\nin-swap-cache shmem folio is split at __xa_store(), since\n!folio_test_anon() is true and folio-\u003emapping is NULL.  But fortunately,\nits caller split_huge_page_to_list_to_order() bails out early with EBUSY\nwhen folio-\u003emapping is NULL.  So no need to take care of it here.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22016",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndpll: fix xa_alloc_cyclic() error handling\n\nIn case of returning 1 from xa_alloc_cyclic() (wrapping) ERR_PTR(1) will\nbe returned, which will cause IS_ERR() to be false. Which can lead to\ndereference not allocated pointer (pin).\n\nFix it by checking if err is lower than zero.\n\nThis wasn't found in real usecase, only noticed. Credit to Pierre.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22017",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndevlink: fix xa_alloc_cyclic() error handling\n\nIn case of returning 1 from xa_alloc_cyclic() (wrapping) ERR_PTR(1) will\nbe returned, which will cause IS_ERR() to be false. Which can lead to\ndereference not allocated pointer (rel).\n\nFix it by checking if err is lower than zero.\n\nThis wasn't found in real usecase, only noticed. Credit to Pierre.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22018",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\natm: Fix NULL pointer dereference\n\nWhen MPOA_cache_impos_rcvd() receives the msg, it can trigger\nNull Pointer Dereference Vulnerability if both entry and\nholding_time are NULL. Because there is only for the situation\nwhere entry is NULL and holding_time exists, it can be passed\nwhen both entry and holding_time are NULL. If these are NULL,\nthe entry will be passd to eg_cache_put() as parameter and\nit is referenced by entry-\u003euse code in it.\n\nkasan log:\n\n[    3.316691] Oops: general protection fault, probably for non-canonical address 0xdffffc0000000006:I\n[    3.317568] KASAN: null-ptr-deref in range [0x0000000000000030-0x0000000000000037]\n[    3.318188] CPU: 3 UID: 0 PID: 79 Comm: ex Not tainted 6.14.0-rc2 #102\n[    3.318601] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014\n[    3.319298] RIP: 0010:eg_cache_remove_entry+0xa5/0x470\n[    3.319677] Code: c1 f7 6e fd 48 c7 c7 00 7e 38 b2 e8 95 64 54 fd 48 c7 c7 40 7e 38 b2 48 89 ee e80\n[    3.321220] RSP: 0018:ffff88800583f8a8 EFLAGS: 00010006\n[    3.321596] RAX: 0000000000000006 RBX: ffff888005989000 RCX: ffffffffaecc2d8e\n[    3.322112] RDX: 0000000000000000 RSI: 0000000000000004 RDI: 0000000000000030\n[    3.322643] RBP: 0000000000000000 R08: 0000000000000000 R09: fffffbfff6558b88\n[    3.323181] R10: 0000000000000003 R11: 203a207972746e65 R12: 1ffff11000b07f15\n[    3.323707] R13: dffffc0000000000 R14: ffff888005989000 R15: ffff888005989068\n[    3.324185] FS:  000000001b6313c0(0000) GS:ffff88806d380000(0000) knlGS:0000000000000000\n[    3.325042] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[    3.325545] CR2: 00000000004b4b40 CR3: 000000000248e000 CR4: 00000000000006f0\n[    3.326430] Call Trace:\n[    3.326725]  \u003cTASK\u003e\n[    3.326927]  ? die_addr+0x3c/0xa0\n[    3.327330]  ? exc_general_protection+0x161/0x2a0\n[    3.327662]  ? asm_exc_general_protection+0x26/0x30\n[    3.328214]  ? vprintk_emit+0x15e/0x420\n[    3.328543]  ? eg_cache_remove_entry+0xa5/0x470\n[    3.328910]  ? eg_cache_remove_entry+0x9a/0x470\n[    3.329294]  ? __pfx_eg_cache_remove_entry+0x10/0x10\n[    3.329664]  ? console_unlock+0x107/0x1d0\n[    3.329946]  ? __pfx_console_unlock+0x10/0x10\n[    3.330283]  ? do_syscall_64+0xa6/0x1a0\n[    3.330584]  ? entry_SYSCALL_64_after_hwframe+0x47/0x7f\n[    3.331090]  ? __pfx_prb_read_valid+0x10/0x10\n[    3.331395]  ? down_trylock+0x52/0x80\n[    3.331703]  ? vprintk_emit+0x15e/0x420\n[    3.331986]  ? __pfx_vprintk_emit+0x10/0x10\n[    3.332279]  ? down_trylock+0x52/0x80\n[    3.332527]  ? _printk+0xbf/0x100\n[    3.332762]  ? __pfx__printk+0x10/0x10\n[    3.333007]  ? _raw_write_lock_irq+0x81/0xe0\n[    3.333284]  ? __pfx__raw_write_lock_irq+0x10/0x10\n[    3.333614]  msg_from_mpoad+0x1185/0x2750\n[    3.333893]  ? __build_skb_around+0x27b/0x3a0\n[    3.334183]  ? __pfx_msg_from_mpoad+0x10/0x10\n[    3.334501]  ? __alloc_skb+0x1c0/0x310\n[    3.334809]  ? __pfx___alloc_skb+0x10/0x10\n[    3.335283]  ? _raw_spin_lock+0xe0/0xe0\n[    3.335632]  ? finish_wait+0x8d/0x1e0\n[    3.335975]  vcc_sendmsg+0x684/0xba0\n[    3.336250]  ? __pfx_vcc_sendmsg+0x10/0x10\n[    3.336587]  ? __pfx_autoremove_wake_function+0x10/0x10\n[    3.337056]  ? fdget+0x176/0x3e0\n[    3.337348]  __sys_sendto+0x4a2/0x510\n[    3.337663]  ? __pfx___sys_sendto+0x10/0x10\n[    3.337969]  ? ioctl_has_perm.constprop.0.isra.0+0x284/0x400\n[    3.338364]  ? sock_ioctl+0x1bb/0x5a0\n[    3.338653]  ? __rseq_handle_notify_resume+0x825/0xd20\n[    3.339017]  ? __pfx_sock_ioctl+0x10/0x10\n[    3.339316]  ? __pfx___rseq_handle_notify_resume+0x10/0x10\n[    3.339727]  ? selinux_file_ioctl+0xa4/0x260\n[    3.340166]  __x64_sys_sendto+0xe0/0x1c0\n[    3.340526]  ? syscall_exit_to_user_mode+0x123/0x140\n[    3.340898]  do_syscall_64+0xa6/0x1a0\n[    3.341170]  entry_SYSCALL_64_after_hwframe+0x77/0x7f\n[    3.341533] RIP: 0033:0x44a380\n[    3.341757] Code: 0f 1f 84 00 00 00 00 00 66 90 f3 0f 1e fa 41 89 ca 64 8b 04 25 18 00 00 00 85 c00\n[    \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22020",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmemstick: rtsx_usb_ms: Fix slab-use-after-free in rtsx_usb_ms_drv_remove\n\nThis fixes the following crash:\n\n==================================================================\nBUG: KASAN: slab-use-after-free in rtsx_usb_ms_poll_card+0x159/0x200 [rtsx_usb_ms]\nRead of size 8 at addr ffff888136335380 by task kworker/6:0/140241\n\nCPU: 6 UID: 0 PID: 140241 Comm: kworker/6:0 Kdump: loaded Tainted: G            E      6.14.0-rc6+ #1\nTainted: [E]=UNSIGNED_MODULE\nHardware name: LENOVO 30FNA1V7CW/1057, BIOS S0EKT54A 07/01/2024\nWorkqueue: events rtsx_usb_ms_poll_card [rtsx_usb_ms]\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl+0x51/0x70\n print_address_description.constprop.0+0x27/0x320\n ? rtsx_usb_ms_poll_card+0x159/0x200 [rtsx_usb_ms]\n print_report+0x3e/0x70\n kasan_report+0xab/0xe0\n ? rtsx_usb_ms_poll_card+0x159/0x200 [rtsx_usb_ms]\n rtsx_usb_ms_poll_card+0x159/0x200 [rtsx_usb_ms]\n ? __pfx_rtsx_usb_ms_poll_card+0x10/0x10 [rtsx_usb_ms]\n ? __pfx___schedule+0x10/0x10\n ? kick_pool+0x3b/0x270\n process_one_work+0x357/0x660\n worker_thread+0x390/0x4c0\n ? __pfx_worker_thread+0x10/0x10\n kthread+0x190/0x1d0\n ? __pfx_kthread+0x10/0x10\n ret_from_fork+0x2d/0x50\n ? __pfx_kthread+0x10/0x10\n ret_from_fork_asm+0x1a/0x30\n \u003c/TASK\u003e\n\nAllocated by task 161446:\n kasan_save_stack+0x20/0x40\n kasan_save_track+0x10/0x30\n __kasan_kmalloc+0x7b/0x90\n __kmalloc_noprof+0x1a7/0x470\n memstick_alloc_host+0x1f/0xe0 [memstick]\n rtsx_usb_ms_drv_probe+0x47/0x320 [rtsx_usb_ms]\n platform_probe+0x60/0xe0\n call_driver_probe+0x35/0x120\n really_probe+0x123/0x410\n __driver_probe_device+0xc7/0x1e0\n driver_probe_device+0x49/0xf0\n __device_attach_driver+0xc6/0x160\n bus_for_each_drv+0xe4/0x160\n __device_attach+0x13a/0x2b0\n bus_probe_device+0xbd/0xd0\n device_add+0x4a5/0x760\n platform_device_add+0x189/0x370\n mfd_add_device+0x587/0x5e0\n mfd_add_devices+0xb1/0x130\n rtsx_usb_probe+0x28e/0x2e0 [rtsx_usb]\n usb_probe_interface+0x15c/0x460\n call_driver_probe+0x35/0x120\n really_probe+0x123/0x410\n __driver_probe_device+0xc7/0x1e0\n driver_probe_device+0x49/0xf0\n __device_attach_driver+0xc6/0x160\n bus_for_each_drv+0xe4/0x160\n __device_attach+0x13a/0x2b0\n rebind_marked_interfaces.isra.0+0xcc/0x110\n usb_reset_device+0x352/0x410\n usbdev_do_ioctl+0xe5c/0x1860\n usbdev_ioctl+0xa/0x20\n __x64_sys_ioctl+0xc5/0xf0\n do_syscall_64+0x59/0x170\n entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\nFreed by task 161506:\n kasan_save_stack+0x20/0x40\n kasan_save_track+0x10/0x30\n kasan_save_free_info+0x36/0x60\n __kasan_slab_free+0x34/0x50\n kfree+0x1fd/0x3b0\n device_release+0x56/0xf0\n kobject_cleanup+0x73/0x1c0\n rtsx_usb_ms_drv_remove+0x13d/0x220 [rtsx_usb_ms]\n platform_remove+0x2f/0x50\n device_release_driver_internal+0x24b/0x2e0\n bus_remove_device+0x124/0x1d0\n device_del+0x239/0x530\n platform_device_del.part.0+0x19/0xe0\n platform_device_unregister+0x1c/0x40\n mfd_remove_devices_fn+0x167/0x170\n device_for_each_child_reverse+0xc9/0x130\n mfd_remove_devices+0x6e/0xa0\n rtsx_usb_disconnect+0x2e/0xd0 [rtsx_usb]\n usb_unbind_interface+0xf3/0x3f0\n device_release_driver_internal+0x24b/0x2e0\n proc_disconnect_claim+0x13d/0x220\n usbdev_do_ioctl+0xb5e/0x1860\n usbdev_ioctl+0xa/0x20\n __x64_sys_ioctl+0xc5/0xf0\n do_syscall_64+0x59/0x170\n entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\nLast potentially related work creation:\n kasan_save_stack+0x20/0x40\n kasan_record_aux_stack+0x85/0x90\n insert_work+0x29/0x100\n __queue_work+0x34a/0x540\n call_timer_fn+0x2a/0x160\n expire_timers+0x5f/0x1f0\n __run_timer_base.part.0+0x1b6/0x1e0\n run_timer_softirq+0x8b/0xe0\n handle_softirqs+0xf9/0x360\n __irq_exit_rcu+0x114/0x130\n sysvec_apic_timer_interrupt+0x72/0x90\n asm_sysvec_apic_timer_interrupt+0x16/0x20\n\nSecond to last potentially related work creation:\n kasan_save_stack+0x20/0x40\n kasan_record_aux_stack+0x85/0x90\n insert_work+0x29/0x100\n __queue_work+0x34a/0x540\n call_timer_fn+0x2a/0x160\n expire_timers+0x5f/0x1f0\n __run_timer_base.part.0+0x1b6/0x1e0\n run_timer_softirq+0x8b/0xe0\n handle_softirqs+0xf9/0x\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22021",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: socket: Lookup orig tuple for IPv6 SNAT\n\nnf_sk_lookup_slow_v4 does the conntrack lookup for IPv4 packets to\nrestore the original 5-tuple in case of SNAT, to be able to find the\nright socket (if any). Then socket_match() can correctly check whether\nthe socket was transparent.\n\nHowever, the IPv6 counterpart (nf_sk_lookup_slow_v6) lacks this\nconntrack lookup, making xt_socket fail to match on the socket when the\npacket was SNATed. Add the same logic to nf_sk_lookup_slow_v6.\n\nIPv6 SNAT is used in Kubernetes clusters for pod-to-world packets, as\npods' addresses are in the fd00::/8 ULA subnet and need to be replaced\nwith the node's external address. Cilium leverages Envoy to enforce L7\npolicies, and Envoy uses transparent sockets. Cilium inserts an iptables\nprerouting rule that matches on `-m socket --transparent` and redirects\nthe packets to localhost, but it fails to match SNATed IPv6 packets due\nto that missing conntrack lookup.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22025",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfsd: put dl_stid if fail to queue dl_recall\n\nBefore calling nfsd4_run_cb to queue dl_recall to the callback_wq, we\nincrement the reference count of dl_stid.\nWe expect that after the corresponding work_struct is processed, the\nreference count of dl_stid will be decremented through the callback\nfunction nfsd4_cb_recall_release.\nHowever, if the call to nfsd4_run_cb fails, the incremented reference\ncount of dl_stid will not be decremented correspondingly, leading to the\nfollowing nfs4_stid leak:\nunreferenced object 0xffff88812067b578 (size 344):\n  comm \"nfsd\", pid 2761, jiffies 4295044002 (age 5541.241s)\n  hex dump (first 32 bytes):\n    01 00 00 00 6b 6b 6b 6b b8 02 c0 e2 81 88 ff ff  ....kkkk........\n    00 6b 6b 6b 6b 6b 6b 6b 00 00 00 00 ad 4e ad de  .kkkkkkk.....N..\n  backtrace:\n    kmem_cache_alloc+0x4b9/0x700\n    nfsd4_process_open1+0x34/0x300\n    nfsd4_open+0x2d1/0x9d0\n    nfsd4_proc_compound+0x7a2/0xe30\n    nfsd_dispatch+0x241/0x3e0\n    svc_process_common+0x5d3/0xcc0\n    svc_process+0x2a3/0x320\n    nfsd+0x180/0x2e0\n    kthread+0x199/0x1d0\n    ret_from_fork+0x30/0x50\n    ret_from_fork_asm+0x1b/0x30\nunreferenced object 0xffff8881499f4d28 (size 368):\n  comm \"nfsd\", pid 2761, jiffies 4295044005 (age 5541.239s)\n  hex dump (first 32 bytes):\n    01 00 00 00 00 00 00 00 30 4d 9f 49 81 88 ff ff  ........0M.I....\n    30 4d 9f 49 81 88 ff ff 20 00 00 00 01 00 00 00  0M.I.... .......\n  backtrace:\n    kmem_cache_alloc+0x4b9/0x700\n    nfs4_alloc_stid+0x29/0x210\n    alloc_init_deleg+0x92/0x2e0\n    nfs4_set_delegation+0x284/0xc00\n    nfs4_open_delegation+0x216/0x3f0\n    nfsd4_process_open2+0x2b3/0xee0\n    nfsd4_open+0x770/0x9d0\n    nfsd4_proc_compound+0x7a2/0xe30\n    nfsd_dispatch+0x241/0x3e0\n    svc_process_common+0x5d3/0xcc0\n    svc_process+0x2a3/0x320\n    nfsd+0x180/0x2e0\n    kthread+0x199/0x1d0\n    ret_from_fork+0x30/0x50\n    ret_from_fork_asm+0x1b/0x30\nFix it by checking the result of nfsd4_run_cb and call nfs4_put_stid if\nfail to queue dl_recall.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22027",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: streamzap: fix race between device disconnection and urb callback\n\nSyzkaller has reported a general protection fault at function\nir_raw_event_store_with_filter(). This crash is caused by a NULL pointer\ndereference of dev-\u003eraw pointer, even though it is checked for NULL in\nthe same function, which means there is a race condition. It occurs due\nto the incorrect order of actions in the streamzap_disconnect() function:\nrc_unregister_device() is called before usb_kill_urb(). The dev-\u003eraw\npointer is freed and set to NULL in rc_unregister_device(), and only\nafter that usb_kill_urb() waits for in-progress requests to finish.\n\nIf rc_unregister_device() is called while streamzap_callback() handler is\nnot finished, this can lead to accessing freed resources. Thus\nrc_unregister_device() should be called after usb_kill_urb().\n\nFound by Linux Verification Center (linuxtesting.org) with Syzkaller.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22029",
      "Description": "This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22030",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: zswap: fix crypto_free_acomp() deadlock in zswap_cpu_comp_dead()\n\nCurrently, zswap_cpu_comp_dead() calls crypto_free_acomp() while holding\nthe per-CPU acomp_ctx mutex.  crypto_free_acomp() then holds scomp_lock\n(through crypto_exit_scomp_ops_async()).\n\nOn the other hand, crypto_alloc_acomp_node() holds the scomp_lock (through\ncrypto_scomp_init_tfm()), and then allocates memory.  If the allocation\nresults in reclaim, we may attempt to hold the per-CPU acomp_ctx mutex.\n\nThe above dependencies can cause an ABBA deadlock.  For example in the\nfollowing scenario:\n\n(1) Task A running on CPU #1:\n    crypto_alloc_acomp_node()\n      Holds scomp_lock\n      Enters reclaim\n      Reads per_cpu_ptr(pool-\u003eacomp_ctx, 1)\n\n(2) Task A is descheduled\n\n(3) CPU #1 goes offline\n    zswap_cpu_comp_dead(CPU #1)\n      Holds per_cpu_ptr(pool-\u003eacomp_ctx, 1))\n      Calls crypto_free_acomp()\n      Waits for scomp_lock\n\n(4) Task A running on CPU #2:\n      Waits for per_cpu_ptr(pool-\u003eacomp_ctx, 1) // Read on CPU #1\n      DEADLOCK\n\nSince there is no requirement to call crypto_free_acomp() with the per-CPU\nacomp_ctx mutex held in zswap_cpu_comp_dead(), move it after the mutex is\nunlocked.  Also move the acomp_request_free() and kfree() calls for\nconsistency and to avoid any potential sublte locking dependencies in the\nfuture.\n\nWith this, only setting acomp_ctx fields to NULL occurs with the mutex\nheld.  This is similar to how zswap_cpu_comp_prepare() only initializes\nacomp_ctx fields with the mutex held, after performing all allocations\nbefore holding the mutex.\n\nOpportunistically, move the NULL check on acomp_ctx so that it takes place\nbefore the mutex dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22033",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\narm64: Don't call NULL in do_compat_alignment_fixup()\n\ndo_alignment_t32_to_handler() only fixes up alignment faults for\nspecific instructions; it returns NULL otherwise (e.g. LDREX). When\nthat's the case, signal to the caller that it needs to proceed with the\nregular alignment fault handling (i.e. SIGBUS). Without this patch, the\nkernel panics:\n\n  Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000\n  Mem abort info:\n    ESR = 0x0000000086000006\n    EC = 0x21: IABT (current EL), IL = 32 bits\n    SET = 0, FnV = 0\n    EA = 0, S1PTW = 0\n    FSC = 0x06: level 2 translation fault\n  user pgtable: 4k pages, 48-bit VAs, pgdp=00000800164aa000\n  [0000000000000000] pgd=0800081fdbd22003, p4d=0800081fdbd22003, pud=08000815d51c6003, pmd=0000000000000000\n  Internal error: Oops: 0000000086000006 [#1] SMP\n  Modules linked in: cfg80211 rfkill xt_nat xt_tcpudp xt_conntrack nft_chain_nat xt_MASQUERADE nf_nat nf_conntrack_netlink nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 xfrm_user xfrm_algo xt_addrtype nft_compat br_netfilter veth nvme_fa\u003e\n   libcrc32c crc32c_generic raid0 multipath linear dm_mod dax raid1 md_mod xhci_pci nvme xhci_hcd nvme_core t10_pi usbcore igb crc64_rocksoft crc64 crc_t10dif crct10dif_generic crct10dif_ce crct10dif_common usb_common i2c_algo_bit i2c\u003e\n  CPU: 2 PID: 3932954 Comm: WPEWebProcess Not tainted 6.1.0-31-arm64 #1  Debian 6.1.128-1\n  Hardware name: GIGABYTE MP32-AR1-00/MP32-AR1-00, BIOS F18v (SCP: 1.08.20211002) 12/01/2021\n  pstate: 80400009 (Nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n  pc : 0x0\n  lr : do_compat_alignment_fixup+0xd8/0x3dc\n  sp : ffff80000f973dd0\n  x29: ffff80000f973dd0 x28: ffff081b42526180 x27: 0000000000000000\n  x26: 0000000000000000 x25: 0000000000000000 x24: 0000000000000000\n  x23: 0000000000000004 x22: 0000000000000000 x21: 0000000000000001\n  x20: 00000000e8551f00 x19: ffff80000f973eb0 x18: 0000000000000000\n  x17: 0000000000000000 x16: 0000000000000000 x15: 0000000000000000\n  x14: 0000000000000000 x13: 0000000000000000 x12: 0000000000000000\n  x11: 0000000000000000 x10: 0000000000000000 x9 : ffffaebc949bc488\n  x8 : 0000000000000000 x7 : 0000000000000000 x6 : 0000000000000000\n  x5 : 0000000000400000 x4 : 0000fffffffffffe x3 : 0000000000000000\n  x2 : ffff80000f973eb0 x1 : 00000000e8551f00 x0 : 0000000000000001\n  Call trace:\n   0x0\n   do_alignment_fault+0x40/0x50\n   do_mem_abort+0x4c/0xa0\n   el0_da+0x48/0xf0\n   el0t_32_sync_handler+0x110/0x140\n   el0t_32_sync+0x190/0x194\n  Code: bad PC value\n  ---[ end trace 0000000000000000 ]---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22035",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Fix use-after-free in print_graph_function_flags during tracer switching\n\nKairui reported a UAF issue in print_graph_function_flags() during\nftrace stress testing [1]. This issue can be reproduced if puting a\n'mdelay(10)' after 'mutex_unlock(\u0026trace_types_lock)' in s_start(),\nand executing the following script:\n\n  $ echo function_graph \u003e current_tracer\n  $ cat trace \u003e /dev/null \u0026\n  $ sleep 5  # Ensure the 'cat' reaches the 'mdelay(10)' point\n  $ echo timerlat \u003e current_tracer\n\nThe root cause lies in the two calls to print_graph_function_flags\nwithin print_trace_line during each s_show():\n\n  * One through 'iter-\u003etrace-\u003eprint_line()';\n  * Another through 'event-\u003efuncs-\u003etrace()', which is hidden in\n    print_trace_fmt() before print_trace_line returns.\n\nTracer switching only updates the former, while the latter continues\nto use the print_line function of the old tracer, which in the script\nabove is print_graph_function_flags.\n\nMoreover, when switching from the 'function_graph' tracer to the\n'timerlat' tracer, s_start only calls graph_trace_close of the\n'function_graph' tracer to free 'iter-\u003eprivate', but does not set\nit to NULL. This provides an opportunity for 'event-\u003efuncs-\u003etrace()'\nto use an invalid 'iter-\u003eprivate'.\n\nTo fix this issue, set 'iter-\u003eprivate' to NULL immediately after\nfreeing it in graph_trace_close(), ensuring that an invalid pointer\nis not passed to other tracers. Additionally, clean up the unnecessary\n'iter-\u003eprivate = NULL' during each 'cat trace' when using wakeup and\nirqsoff tracers.\n\n [1] https://lore.kernel.org/all/20231112150030.84609-1-ryncsn@gmail.com/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22036",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nexfat: fix random stack corruption after get_block\n\nWhen get_block is called with a buffer_head allocated on the stack, such\nas do_mpage_readpage, stack corruption due to buffer_head UAF may occur in\nthe following race condition situation.\n\n     \u003cCPU 0\u003e                      \u003cCPU 1\u003e\nmpage_read_folio\n  \u003c\u003cbh on stack\u003e\u003e\n  do_mpage_readpage\n    exfat_get_block\n      bh_read\n        __bh_read\n\t  get_bh(bh)\n          submit_bh\n          wait_on_buffer\n                              ...\n                              end_buffer_read_sync\n                                __end_buffer_read_notouch\n                                   unlock_buffer\n          \u003c\u003ckeep going\u003e\u003e\n        ...\n      ...\n    ...\n  ...\n\u003c\u003cbh is not valid out of mpage_read_folio\u003e\u003e\n   .\n   .\nanother_function\n  \u003c\u003cvariable A on stack\u003e\u003e\n                                   put_bh(bh)\n                                     atomic_dec(bh-\u003eb_count)\n  * stack corruption here *\n\nThis patch returns -EAGAIN if a folio does not have buffers when bh_read\nneeds to be called. By doing this, the caller can fallback to functions\nlike block_read_full_folio(), create a buffer_head in the folio, and then\ncall get_block again.\n\nLet's do not call bh_read() with on-stack buffer_head.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22044",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nacpi: nfit: fix narrowing conversion in acpi_nfit_ctl\n\nSyzkaller has reported a warning in to_nfit_bus_uuid(): \"only secondary\nbus families can be translated\". This warning is emited if the argument\nis equal to NVDIMM_BUS_FAMILY_NFIT == 0. Function acpi_nfit_ctl() first\nverifies that a user-provided value call_pkg-\u003end_family of type u64 is\nnot equal to 0. Then the value is converted to int, and only after that\nis compared to NVDIMM_BUS_FAMILY_MAX. This can lead to passing an invalid\nargument to acpi_nfit_ctl(), if call_pkg-\u003end_family is non-zero, while\nthe lower 32 bits are zero.\n\nFurthermore, it is best to return EINVAL immediately upon seeing the\ninvalid user input.  The WARNING is insufficient to prevent further\nundefined behavior based on other invalid user input.\n\nAll checks of the input value should be applied to the original variable\ncall_pkg-\u003end_family.\n\n[iweiny: update commit message]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22045",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/mm: Fix flush_tlb_range() when used for zapping normal PMDs\n\nOn the following path, flush_tlb_range() can be used for zapping normal\nPMD entries (PMD entries that point to page tables) together with the PTE\nentries in the pointed-to page table:\n\n    collapse_pte_mapped_thp\n      pmdp_collapse_flush\n        flush_tlb_range\n\nThe arm64 version of flush_tlb_range() has a comment describing that it can\nbe used for page table removal, and does not use any last-level\ninvalidation optimizations. Fix the X86 version by making it behave the\nsame way.\n\nCurrently, X86 only uses this information for the following two purposes,\nwhich I think means the issue doesn't have much impact:\n\n - In native_flush_tlb_multi() for checking if lazy TLB CPUs need to be\n   IPI'd to avoid issues with speculative page table walks.\n - In Hyper-V TLB paravirtualization, again for lazy TLB stuff.\n\nThe patch \"x86/mm: only invalidate final translations with INVLPGB\" which\nis currently under review (see\n\u003chttps://lore.kernel.org/all/20241230175550.4046587-13-riel@surriel.com/\u003e)\nwould probably be making the impact of this a lot worse.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22050",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusbnet:fix NPE during rx_complete\n\nMissing usbnet_going_away Check in Critical Path.\nThe usb_submit_urb function lacks a usbnet_going_away\nvalidation, whereas __usbnet_queue_skb includes this check.\n\nThis inconsistency creates a race condition where:\nA URB request may succeed, but the corresponding SKB data\nfails to be queued.\n\nSubsequent processes:\n(e.g., rx_complete -\u003e defer_bh -\u003e __skb_unlink(skb, list))\nattempt to access skb-\u003enext, triggering a NULL pointer\ndereference (Kernel Panic).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22053",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ibmveth: make veth_pool_store stop hanging\n\nv2:\n- Created a single error handling unlock and exit in veth_pool_store\n- Greatly expanded commit message with previous explanatory-only text\n\nSummary: Use rtnl_mutex to synchronize veth_pool_store with itself,\nibmveth_close and ibmveth_open, preventing multiple calls in a row to\nnapi_disable.\n\nBackground: Two (or more) threads could call veth_pool_store through\nwriting to /sys/devices/vio/30000002/pool*/*. You can do this easily\nwith a little shell script. This causes a hang.\n\nI configured LOCKDEP, compiled ibmveth.c with DEBUG, and built a new\nkernel. I ran this test again and saw:\n\n    Setting pool0/active to 0\n    Setting pool1/active to 1\n    [   73.911067][ T4365] ibmveth 30000002 eth0: close starting\n    Setting pool1/active to 1\n    Setting pool1/active to 0\n    [   73.911367][ T4366] ibmveth 30000002 eth0: close starting\n    [   73.916056][ T4365] ibmveth 30000002 eth0: close complete\n    [   73.916064][ T4365] ibmveth 30000002 eth0: open starting\n    [  110.808564][  T712] systemd-journald[712]: Sent WATCHDOG=1 notification.\n    [  230.808495][  T712] systemd-journald[712]: Sent WATCHDOG=1 notification.\n    [  243.683786][  T123] INFO: task stress.sh:4365 blocked for more than 122 seconds.\n    [  243.683827][  T123]       Not tainted 6.14.0-01103-g2df0c02dab82-dirty #8\n    [  243.683833][  T123] \"echo 0 \u003e /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\n    [  243.683838][  T123] task:stress.sh       state:D stack:28096 pid:4365  tgid:4365  ppid:4364   task_flags:0x400040 flags:0x00042000\n    [  243.683852][  T123] Call Trace:\n    [  243.683857][  T123] [c00000000c38f690] [0000000000000001] 0x1 (unreliable)\n    [  243.683868][  T123] [c00000000c38f840] [c00000000001f908] __switch_to+0x318/0x4e0\n    [  243.683878][  T123] [c00000000c38f8a0] [c000000001549a70] __schedule+0x500/0x12a0\n    [  243.683888][  T123] [c00000000c38f9a0] [c00000000154a878] schedule+0x68/0x210\n    [  243.683896][  T123] [c00000000c38f9d0] [c00000000154ac80] schedule_preempt_disabled+0x30/0x50\n    [  243.683904][  T123] [c00000000c38fa00] [c00000000154dbb0] __mutex_lock+0x730/0x10f0\n    [  243.683913][  T123] [c00000000c38fb10] [c000000001154d40] napi_enable+0x30/0x60\n    [  243.683921][  T123] [c00000000c38fb40] [c000000000f4ae94] ibmveth_open+0x68/0x5dc\n    [  243.683928][  T123] [c00000000c38fbe0] [c000000000f4aa20] veth_pool_store+0x220/0x270\n    [  243.683936][  T123] [c00000000c38fc70] [c000000000826278] sysfs_kf_write+0x68/0xb0\n    [  243.683944][  T123] [c00000000c38fcb0] [c0000000008240b8] kernfs_fop_write_iter+0x198/0x2d0\n    [  243.683951][  T123] [c00000000c38fd00] [c00000000071b9ac] vfs_write+0x34c/0x650\n    [  243.683958][  T123] [c00000000c38fdc0] [c00000000071bea8] ksys_write+0x88/0x150\n    [  243.683966][  T123] [c00000000c38fe10] [c0000000000317f4] system_call_exception+0x124/0x340\n    [  243.683973][  T123] [c00000000c38fe50] [c00000000000d05c] system_call_vectored_common+0x15c/0x2ec\n    ...\n    [  243.684087][  T123] Showing all locks held in the system:\n    [  243.684095][  T123] 1 lock held by khungtaskd/123:\n    [  243.684099][  T123]  #0: c00000000278e370 (rcu_read_lock){....}-{1:2}, at: debug_show_all_locks+0x50/0x248\n    [  243.684114][  T123] 4 locks held by stress.sh/4365:\n    [  243.684119][  T123]  #0: c00000003a4cd3f8 (sb_writers#3){.+.+}-{0:0}, at: ksys_write+0x88/0x150\n    [  243.684132][  T123]  #1: c000000041aea888 (\u0026of-\u003emutex#2){+.+.}-{3:3}, at: kernfs_fop_write_iter+0x154/0x2d0\n    [  243.684143][  T123]  #2: c0000000366fb9a8 (kn-\u003eactive#64){.+.+}-{0:0}, at: kernfs_fop_write_iter+0x160/0x2d0\n    [  243.684155][  T123]  #3: c000000035ff4cb8 (\u0026dev-\u003elock){+.+.}-{3:3}, at: napi_enable+0x30/0x60\n    [  243.684166][  T123] 5 locks held by stress.sh/4366:\n    [  243.684170][  T123]  #0: c00000003a4cd3f8 (sb_writers#3){.+.+}-{0:0}, at: ksys_write+0x88/0x150\n    [  243.\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22055",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: fix geneve_opt length integer overflow\n\nstruct geneve_opt uses 5 bit length for each single option, which\nmeans every vary size option should be smaller than 128 bytes.\n\nHowever, all current related Netlink policies cannot promise this\nlength condition and the attacker can exploit a exact 128-byte size\noption to *fake* a zero length option and confuse the parsing logic,\nfurther achieve heap out-of-bounds read.\n\nOne example crash log is like below:\n\n[    3.905425] ==================================================================\n[    3.905925] BUG: KASAN: slab-out-of-bounds in nla_put+0xa9/0xe0\n[    3.906255] Read of size 124 at addr ffff888005f291cc by task poc/177\n[    3.906646]\n[    3.906775] CPU: 0 PID: 177 Comm: poc-oob-read Not tainted 6.1.132 #1\n[    3.907131] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.0-0-gd239552ce722-prebuilt.qemu.org 04/01/2014\n[    3.907784] Call Trace:\n[    3.907925]  \u003cTASK\u003e\n[    3.908048]  dump_stack_lvl+0x44/0x5c\n[    3.908258]  print_report+0x184/0x4be\n[    3.909151]  kasan_report+0xc5/0x100\n[    3.909539]  kasan_check_range+0xf3/0x1a0\n[    3.909794]  memcpy+0x1f/0x60\n[    3.909968]  nla_put+0xa9/0xe0\n[    3.910147]  tunnel_key_dump+0x945/0xba0\n[    3.911536]  tcf_action_dump_1+0x1c1/0x340\n[    3.912436]  tcf_action_dump+0x101/0x180\n[    3.912689]  tcf_exts_dump+0x164/0x1e0\n[    3.912905]  fw_dump+0x18b/0x2d0\n[    3.913483]  tcf_fill_node+0x2ee/0x460\n[    3.914778]  tfilter_notify+0xf4/0x180\n[    3.915208]  tc_new_tfilter+0xd51/0x10d0\n[    3.918615]  rtnetlink_rcv_msg+0x4a2/0x560\n[    3.919118]  netlink_rcv_skb+0xcd/0x200\n[    3.919787]  netlink_unicast+0x395/0x530\n[    3.921032]  netlink_sendmsg+0x3d0/0x6d0\n[    3.921987]  __sock_sendmsg+0x99/0xa0\n[    3.922220]  __sys_sendto+0x1b7/0x240\n[    3.922682]  __x64_sys_sendto+0x72/0x90\n[    3.922906]  do_syscall_64+0x5e/0x90\n[    3.923814]  entry_SYSCALL_64_after_hwframe+0x6e/0xd8\n[    3.924122] RIP: 0033:0x7e83eab84407\n[    3.924331] Code: 48 89 fa 4c 89 df e8 38 aa 00 00 8b 93 08 03 00 00 59 5e 48 83 f8 fc 74 1a 5b c3 0f 1f 84 00 00 00 00 00 48 8b 44 24 10 0f 05 \u003c5b\u003e c3 0f 1f 80 00 00 00 00 83 e2 39 83 faf\n[    3.925330] RSP: 002b:00007ffff505e370 EFLAGS: 00000202 ORIG_RAX: 000000000000002c\n[    3.925752] RAX: ffffffffffffffda RBX: 00007e83eaafa740 RCX: 00007e83eab84407\n[    3.926173] RDX: 00000000000001a8 RSI: 00007ffff505e3c0 RDI: 0000000000000003\n[    3.926587] RBP: 00007ffff505f460 R08: 00007e83eace1000 R09: 000000000000000c\n[    3.926977] R10: 0000000000000000 R11: 0000000000000202 R12: 00007ffff505f3c0\n[    3.927367] R13: 00007ffff505f5c8 R14: 00007e83ead1b000 R15: 00005d4fbbe6dcb8\n\nFix these issues by enforing correct length condition in related\npolicies.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22056",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nft_tunnel: fix geneve_opt type confusion addition\n\nWhen handling multiple NFTA_TUNNEL_KEY_OPTS_GENEVE attributes, the\nparsing logic should place every geneve_opt structure one by one\ncompactly. Hence, when deciding the next geneve_opt position, the\npointer addition should be in units of char *.\n\nHowever, the current implementation erroneously does type conversion\nbefore the addition, which will lead to heap out-of-bounds write.\n\n[    6.989857] ==================================================================\n[    6.990293] BUG: KASAN: slab-out-of-bounds in nft_tunnel_obj_init+0x977/0xa70\n[    6.990725] Write of size 124 at addr ffff888005f18974 by task poc/178\n[    6.991162]\n[    6.991259] CPU: 0 PID: 178 Comm: poc-oob-write Not tainted 6.1.132 #1\n[    6.991655] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.0-0-gd239552ce722-prebuilt.qemu.org 04/01/2014\n[    6.992281] Call Trace:\n[    6.992423]  \u003cTASK\u003e\n[    6.992586]  dump_stack_lvl+0x44/0x5c\n[    6.992801]  print_report+0x184/0x4be\n[    6.993790]  kasan_report+0xc5/0x100\n[    6.994252]  kasan_check_range+0xf3/0x1a0\n[    6.994486]  memcpy+0x38/0x60\n[    6.994692]  nft_tunnel_obj_init+0x977/0xa70\n[    6.995677]  nft_obj_init+0x10c/0x1b0\n[    6.995891]  nf_tables_newobj+0x585/0x950\n[    6.996922]  nfnetlink_rcv_batch+0xdf9/0x1020\n[    6.998997]  nfnetlink_rcv+0x1df/0x220\n[    6.999537]  netlink_unicast+0x395/0x530\n[    7.000771]  netlink_sendmsg+0x3d0/0x6d0\n[    7.001462]  __sock_sendmsg+0x99/0xa0\n[    7.001707]  ____sys_sendmsg+0x409/0x450\n[    7.002391]  ___sys_sendmsg+0xfd/0x170\n[    7.003145]  __sys_sendmsg+0xea/0x170\n[    7.004359]  do_syscall_64+0x5e/0x90\n[    7.005817]  entry_SYSCALL_64_after_hwframe+0x6e/0xd8\n[    7.006127] RIP: 0033:0x7ec756d4e407\n[    7.006339] Code: 48 89 fa 4c 89 df e8 38 aa 00 00 8b 93 08 03 00 00 59 5e 48 83 f8 fc 74 1a 5b c3 0f 1f 84 00 00 00 00 00 48 8b 44 24 10 0f 05 \u003c5b\u003e c3 0f 1f 80 00 00 00 00 83 e2 39 83 faf\n[    7.007364] RSP: 002b:00007ffed5d46760 EFLAGS: 00000202 ORIG_RAX: 000000000000002e\n[    7.007827] RAX: ffffffffffffffda RBX: 00007ec756cc4740 RCX: 00007ec756d4e407\n[    7.008223] RDX: 0000000000000000 RSI: 00007ffed5d467f0 RDI: 0000000000000003\n[    7.008620] RBP: 00007ffed5d468a0 R08: 0000000000000000 R09: 0000000000000000\n[    7.009039] R10: 0000000000000000 R11: 0000000000000202 R12: 0000000000000000\n[    7.009429] R13: 00007ffed5d478b0 R14: 00007ec756ee5000 R15: 00005cbd4e655cb8\n\nFix this bug with correct pointer addition and conversion in parse\nand dump code.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22057",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: decrease cached dst counters in dst_release\n\nUpstream fix ac888d58869b (\"net: do not delay dst_entries_add() in\ndst_release()\") moved decrementing the dst count from dst_destroy to\ndst_release to avoid accessing already freed data in case of netns\ndismantle. However in case CONFIG_DST_CACHE is enabled and OvS+tunnels\nare used, this fix is incomplete as the same issue will be seen for\ncached dsts:\n\n  Unable to handle kernel paging request at virtual address ffff5aabf6b5c000\n  Call trace:\n   percpu_counter_add_batch+0x3c/0x160 (P)\n   dst_release+0xec/0x108\n   dst_cache_destroy+0x68/0xd8\n   dst_destroy+0x13c/0x168\n   dst_destroy_rcu+0x1c/0xb0\n   rcu_do_batch+0x18c/0x7d0\n   rcu_core+0x174/0x378\n   rcu_core_si+0x18/0x30\n\nFix this by invalidating the cache, and thus decrementing cached dst\ncounters, in dst_release too.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22058",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nudp: Fix memory accounting leak.\n\nMatt Dowling reported a weird UDP memory usage issue.\n\nUnder normal operation, the UDP memory usage reported in /proc/net/sockstat\nremains close to zero.  However, it occasionally spiked to 524,288 pages\nand never dropped.  Moreover, the value doubled when the application was\nterminated.  Finally, it caused intermittent packet drops.\n\nWe can reproduce the issue with the script below [0]:\n\n  1. /proc/net/sockstat reports 0 pages\n\n    # cat /proc/net/sockstat | grep UDP:\n    UDP: inuse 1 mem 0\n\n  2. Run the script till the report reaches 524,288\n\n    # python3 test.py \u0026 sleep 5\n    # cat /proc/net/sockstat | grep UDP:\n    UDP: inuse 3 mem 524288  \u003c-- (INT_MAX + 1) \u003e\u003e PAGE_SHIFT\n\n  3. Kill the socket and confirm the number never drops\n\n    # pkill python3 \u0026\u0026 sleep 5\n    # cat /proc/net/sockstat | grep UDP:\n    UDP: inuse 1 mem 524288\n\n  4. (necessary since v6.0) Trigger proto_memory_pcpu_drain()\n\n    # python3 test.py \u0026 sleep 1 \u0026\u0026 pkill python3\n\n  5. The number doubles\n\n    # cat /proc/net/sockstat | grep UDP:\n    UDP: inuse 1 mem 1048577\n\nThe application set INT_MAX to SO_RCVBUF, which triggered an integer\noverflow in udp_rmem_release().\n\nWhen a socket is close()d, udp_destruct_common() purges its receive\nqueue and sums up skb-\u003etruesize in the queue.  This total is calculated\nand stored in a local unsigned integer variable.\n\nThe total size is then passed to udp_rmem_release() to adjust memory\naccounting.  However, because the function takes a signed integer\nargument, the total size can wrap around, causing an overflow.\n\nThen, the released amount is calculated as follows:\n\n  1) Add size to sk-\u003esk_forward_alloc.\n  2) Round down sk-\u003esk_forward_alloc to the nearest lower multiple of\n      PAGE_SIZE and assign it to amount.\n  3) Subtract amount from sk-\u003esk_forward_alloc.\n  4) Pass amount \u003e\u003e PAGE_SHIFT to __sk_mem_reduce_allocated().\n\nWhen the issue occurred, the total in udp_destruct_common() was 2147484480\n(INT_MAX + 833), which was cast to -2147482816 in udp_rmem_release().\n\nAt 1) sk-\u003esk_forward_alloc is changed from 3264 to -2147479552, and\n2) sets -2147479552 to amount.  3) reverts the wraparound, so we don't\nsee a warning in inet_sock_destruct().  However, udp_memory_allocated\nends up doubling at 4).\n\nSince commit 3cd3399dd7a8 (\"net: implement per-cpu reserves for\nmemory_allocated\"), memory usage no longer doubles immediately after\na socket is close()d because __sk_mem_reduce_allocated() caches the\namount in udp_memory_per_cpu_fw_alloc.  However, the next time a UDP\nsocket receives a packet, the subtraction takes effect, causing UDP\nmemory usage to double.\n\nThis issue makes further memory allocation fail once the socket's\nsk-\u003esk_rmem_alloc exceeds net.ipv4.udp_rmem_min, resulting in packet\ndrops.\n\nTo prevent this issue, let's use unsigned int for the calculation and\ncall sk_forward_alloc_add() only once for the small delta.\n\nNote that first_packet_length() also potentially has the same problem.\n\n[0]:\nfrom socket import *\n\nSO_RCVBUFFORCE = 33\nINT_MAX = (2 ** 31) - 1\n\ns = socket(AF_INET, SOCK_DGRAM)\ns.bind(('', 0))\ns.setsockopt(SOL_SOCKET, SO_RCVBUFFORCE, INT_MAX)\n\nc = socket(AF_INET, SOCK_DGRAM)\nc.connect(s.getsockname())\n\ndata = b'a' * 100\n\nwhile True:\n    c.send(data)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22060",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mvpp2: Prevent parser TCAM memory corruption\n\nProtect the parser TCAM/SRAM memory, and the cached (shadow) SRAM\ninformation, from concurrent modifications.\n\nBoth the TCAM and SRAM tables are indirectly accessed by configuring\nan index register that selects the row to read or write to. This means\nthat operations must be atomic in order to, e.g., avoid spreading\nwrites across multiple rows. Since the shadow SRAM array is used to\nfind free rows in the hardware table, it must also be protected in\norder to avoid TOCTOU errors where multiple cores allocate the same\nrow.\n\nThis issue was detected in a situation where `mvpp2_set_rx_mode()` ran\nconcurrently on two CPUs. In this particular case the\nMVPP2_PE_MAC_UC_PROMISCUOUS entry was corrupted, causing the\nclassifier unit to drop all incoming unicast - indicated by the\n`rx_classifier_drops` counter.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22062",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsctp: add mutual exclusion in proc_sctp_do_udp_port()\n\nWe must serialize calls to sctp_udp_sock_stop() and sctp_udp_sock_start()\nor risk a crash as syzbot reported:\n\nOops: general protection fault, probably for non-canonical address 0xdffffc000000000d: 0000 [#1] SMP KASAN PTI\nKASAN: null-ptr-deref in range [0x0000000000000068-0x000000000000006f]\nCPU: 1 UID: 0 PID: 6551 Comm: syz.1.44 Not tainted 6.14.0-syzkaller-g7f2ff7b62617 #0 PREEMPT(full)\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 02/12/2025\n RIP: 0010:kernel_sock_shutdown+0x47/0x70 net/socket.c:3653\nCall Trace:\n \u003cTASK\u003e\n  udp_tunnel_sock_release+0x68/0x80 net/ipv4/udp_tunnel_core.c:181\n  sctp_udp_sock_stop+0x71/0x160 net/sctp/protocol.c:930\n  proc_sctp_do_udp_port+0x264/0x450 net/sctp/sysctl.c:553\n  proc_sys_call_handler+0x3d0/0x5b0 fs/proc/proc_sysctl.c:601\n  iter_file_splice_write+0x91c/0x1150 fs/splice.c:738\n  do_splice_from fs/splice.c:935 [inline]\n  direct_splice_actor+0x18f/0x6c0 fs/splice.c:1158\n  splice_direct_to_actor+0x342/0xa30 fs/splice.c:1102\n  do_splice_direct_actor fs/splice.c:1201 [inline]\n  do_splice_direct+0x174/0x240 fs/splice.c:1227\n  do_sendfile+0xafd/0xe50 fs/read_write.c:1368\n  __do_sys_sendfile64 fs/read_write.c:1429 [inline]\n  __se_sys_sendfile64 fs/read_write.c:1415 [inline]\n  __x64_sys_sendfile64+0x1d8/0x220 fs/read_write.c:1415\n  do_syscall_x64 arch/x86/entry/syscall_64.c:63 [inline]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22063",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetlabel: Fix NULL pointer exception caused by CALIPSO on IPv4 sockets\n\nWhen calling netlbl_conn_setattr(), addr-\u003esa_family is used\nto determine the function behavior. If sk is an IPv4 socket,\nbut the connect function is called with an IPv6 address,\nthe function calipso_sock_setattr() is triggered.\nInside this function, the following code is executed:\n\nsk_fullsock(__sk) ? inet_sk(__sk)-\u003epinet6 : NULL;\n\nSince sk is an IPv4 socket, pinet6 is NULL, leading to a\nnull pointer dereference.\n\nThis patch fixes the issue by checking if inet6_sk(sk)\nreturns a NULL pointer before accessing pinet6.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22064",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: don't unregister hook when table is dormant\n\nWhen nf_tables_updchain encounters an error, hook registration needs to\nbe rolled back.\n\nThis should only be done if the hook has been registered, which won't\nhappen when the table is flagged as dormant (inactive).\n\nJust move the assignment into the registration block.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22065",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nidpf: fix adapter NULL pointer dereference on reboot\n\nWith SRIOV enabled, idpf ends up calling into idpf_remove() twice.\nFirst via idpf_shutdown() and then again when idpf_remove() calls into\nsriov_disable(), because the VF devices use the idpf driver, hence the\nsame remove routine. When that happens, it is possible for the adapter\nto be NULL from the first call to idpf_remove(), leading to a NULL\npointer dereference.\n\necho 1 \u003e /sys/class/net/\u003cnetif\u003e/device/sriov_numvfs\nreboot\n\nBUG: kernel NULL pointer dereference, address: 0000000000000020\n...\nRIP: 0010:idpf_remove+0x22/0x1f0 [idpf]\n...\n? idpf_remove+0x22/0x1f0 [idpf]\n? idpf_remove+0x1e4/0x1f0 [idpf]\npci_device_remove+0x3f/0xb0\ndevice_release_driver_internal+0x19f/0x200\npci_stop_bus_device+0x6d/0x90\npci_stop_and_remove_bus_device+0x12/0x20\npci_iov_remove_virtfn+0xbe/0x120\nsriov_disable+0x34/0xe0\nidpf_sriov_configure+0x58/0x140 [idpf]\nidpf_remove+0x1b9/0x1f0 [idpf]\nidpf_shutdown+0x12/0x30 [idpf]\npci_device_shutdown+0x35/0x60\ndevice_shutdown+0x156/0x200\n...\n\nReplace the direct idpf_remove() call in idpf_shutdown() with\nidpf_vc_core_deinit() and idpf_deinit_dflt_mbx(), which perform\nthe bulk of the cleanup, such as stopping the init task, freeing IRQs,\ndestroying the vports and freeing the mailbox. This avoids the calls to\nsriov_disable() in addition to a small netdev cleanup, and destroying\nworkqueues, which don't seem to be required on shutdown.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22066",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: imx-card: Add NULL check in imx_card_probe()\n\ndevm_kasprintf() returns NULL when memory allocation fails. Currently,\nimx_card_probe() does not check for this case, which results in a NULL\npointer dereference.\n\nAdd NULL check after devm_kasprintf() to prevent this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22070",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfs/9p: fix NULL pointer dereference on mkdir\n\nWhen a 9p tree was mounted with option 'posixacl', parent directory had a\ndefault ACL set for its subdirectories, e.g.:\n\n  setfacl -m default:group:simpsons:rwx parentdir\n\nthen creating a subdirectory crashed 9p client, as v9fs_fid_add() call in\nfunction v9fs_vfs_mkdir_dotl() sets the passed 'fid' pointer to NULL\n(since dafbe689736) even though the subsequent v9fs_set_create_acl() call\nexpects a valid non-NULL 'fid' pointer:\n\n  [   37.273191] BUG: kernel NULL pointer dereference, address: 0000000000000000\n  ...\n  [   37.322338] Call Trace:\n  [   37.323043]  \u003cTASK\u003e\n  [   37.323621] ? __die (arch/x86/kernel/dumpstack.c:421 arch/x86/kernel/dumpstack.c:434)\n  [   37.324448] ? page_fault_oops (arch/x86/mm/fault.c:714)\n  [   37.325532] ? search_module_extables (kernel/module/main.c:3733)\n  [   37.326742] ? p9_client_walk (net/9p/client.c:1165) 9pnet\n  [   37.328006] ? search_bpf_extables (kernel/bpf/core.c:804)\n  [   37.329142] ? exc_page_fault (./arch/x86/include/asm/paravirt.h:686 arch/x86/mm/fault.c:1488 arch/x86/mm/fault.c:1538)\n  [   37.330196] ? asm_exc_page_fault (./arch/x86/include/asm/idtentry.h:574)\n  [   37.331330] ? p9_client_walk (net/9p/client.c:1165) 9pnet\n  [   37.332562] ? v9fs_fid_xattr_get (fs/9p/xattr.c:30) 9p\n  [   37.333824] v9fs_fid_xattr_set (fs/9p/fid.h:23 fs/9p/xattr.c:121) 9p\n  [   37.335077] v9fs_set_acl (fs/9p/acl.c:276) 9p\n  [   37.336112] v9fs_set_create_acl (fs/9p/acl.c:307) 9p\n  [   37.337326] v9fs_vfs_mkdir_dotl (fs/9p/vfs_inode_dotl.c:411) 9p\n  [   37.338590] vfs_mkdir (fs/namei.c:4313)\n  [   37.339535] do_mkdirat (fs/namei.c:4336)\n  [   37.340465] __x64_sys_mkdir (fs/namei.c:4354)\n  [   37.341455] do_syscall_64 (arch/x86/entry/common.c:52 arch/x86/entry/common.c:83)\n  [   37.342447] entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n\nFix this by simply swapping the sequence of these two calls in\nv9fs_vfs_mkdir_dotl(), i.e. calling v9fs_set_create_acl() before\nv9fs_fid_add().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22075",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nrtnetlink: Allocate vfinfo size for VF GUIDs when supported\n\nCommit 30aad41721e0 (\"net/core: Add support for getting VF GUIDs\")\nadded support for getting VF port and node GUIDs in netlink ifinfo\nmessages, but their size was not taken into consideration in the\nfunction that allocates the netlink message, causing the following\nwarning when a netlink message is filled with many VF port and node\nGUIDs:\n # echo 64 \u003e /sys/bus/pci/devices/0000\\:08\\:00.0/sriov_numvfs\n # ip link show dev ib0\n RTNETLINK answers: Message too long\n Cannot send link get request: Message too long\n\nKernel warning:\n\n ------------[ cut here ]------------\n WARNING: CPU: 2 PID: 1930 at net/core/rtnetlink.c:4151 rtnl_getlink+0x586/0x5a0\n Modules linked in: xt_conntrack xt_MASQUERADE nfnetlink xt_addrtype iptable_nat nf_nat br_netfilter overlay mlx5_ib macsec mlx5_core tls rpcrdma rdma_ucm ib_uverbs ib_iser libiscsi scsi_transport_iscsi ib_umad rdma_cm iw_cm ib_ipoib fuse ib_cm ib_core\n CPU: 2 UID: 0 PID: 1930 Comm: ip Not tainted 6.14.0-rc2+ #1\n Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014\n RIP: 0010:rtnl_getlink+0x586/0x5a0\n Code: cb 82 e8 3d af 0a 00 4d 85 ff 0f 84 08 ff ff ff 4c 89 ff 41 be ea ff ff ff e8 66 63 5b ff 49 c7 07 80 4f cb 82 e9 36 fc ff ff \u003c0f\u003e 0b e9 16 fe ff ff e8 de a0 56 00 66 66 2e 0f 1f 84 00 00 00 00\n RSP: 0018:ffff888113557348 EFLAGS: 00010246\n RAX: 00000000ffffffa6 RBX: ffff88817e87aa34 RCX: dffffc0000000000\n RDX: 0000000000000003 RSI: 0000000000000000 RDI: ffff88817e87afb8\n RBP: 0000000000000009 R08: ffffffff821f44aa R09: 0000000000000000\n R10: ffff8881260f79a8 R11: ffff88817e87af00 R12: ffff88817e87aa00\n R13: ffffffff8563d300 R14: 00000000ffffffa6 R15: 00000000ffffffff\n FS:  00007f63a5dbf280(0000) GS:ffff88881ee00000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 00007f63a5ba4493 CR3: 00000001700fe002 CR4: 0000000000772eb0\n DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n PKRU: 55555554\n Call Trace:\n  \u003cTASK\u003e\n  ? __warn+0xa5/0x230\n  ? rtnl_getlink+0x586/0x5a0\n  ? report_bug+0x22d/0x240\n  ? handle_bug+0x53/0xa0\n  ? exc_invalid_op+0x14/0x50\n  ? asm_exc_invalid_op+0x16/0x20\n  ? skb_trim+0x6a/0x80\n  ? rtnl_getlink+0x586/0x5a0\n  ? __pfx_rtnl_getlink+0x10/0x10\n  ? rtnetlink_rcv_msg+0x1e5/0x860\n  ? __pfx___mutex_lock+0x10/0x10\n  ? rcu_is_watching+0x34/0x60\n  ? __pfx_lock_acquire+0x10/0x10\n  ? stack_trace_save+0x90/0xd0\n  ? filter_irq_stacks+0x1d/0x70\n  ? kasan_save_stack+0x30/0x40\n  ? kasan_save_stack+0x20/0x40\n  ? kasan_save_track+0x10/0x30\n  rtnetlink_rcv_msg+0x21c/0x860\n  ? entry_SYSCALL_64_after_hwframe+0x76/0x7e\n  ? __pfx_rtnetlink_rcv_msg+0x10/0x10\n  ? arch_stack_walk+0x9e/0xf0\n  ? rcu_is_watching+0x34/0x60\n  ? lock_acquire+0xd5/0x410\n  ? rcu_is_watching+0x34/0x60\n  netlink_rcv_skb+0xe0/0x210\n  ? __pfx_rtnetlink_rcv_msg+0x10/0x10\n  ? __pfx_netlink_rcv_skb+0x10/0x10\n  ? rcu_is_watching+0x34/0x60\n  ? __pfx___netlink_lookup+0x10/0x10\n  ? lock_release+0x62/0x200\n  ? netlink_deliver_tap+0xfd/0x290\n  ? rcu_is_watching+0x34/0x60\n  ? lock_release+0x62/0x200\n  ? netlink_deliver_tap+0x95/0x290\n  netlink_unicast+0x31f/0x480\n  ? __pfx_netlink_unicast+0x10/0x10\n  ? rcu_is_watching+0x34/0x60\n  ? lock_acquire+0xd5/0x410\n  netlink_sendmsg+0x369/0x660\n  ? lock_release+0x62/0x200\n  ? __pfx_netlink_sendmsg+0x10/0x10\n  ? import_ubuf+0xb9/0xf0\n  ? __import_iovec+0x254/0x2b0\n  ? lock_release+0x62/0x200\n  ? __pfx_netlink_sendmsg+0x10/0x10\n  ____sys_sendmsg+0x559/0x5a0\n  ? __pfx_____sys_sendmsg+0x10/0x10\n  ? __pfx_copy_msghdr_from_user+0x10/0x10\n  ? rcu_is_watching+0x34/0x60\n  ? do_read_fault+0x213/0x4a0\n  ? rcu_is_watching+0x34/0x60\n  ___sys_sendmsg+0xe4/0x150\n  ? __pfx____sys_sendmsg+0x10/0x10\n  ? do_fault+0x2cc/0x6f0\n  ? handle_pte_fault+0x2e3/0x3d0\n  ? __pfx_handle_pte_fault+0x10/0x10\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22080",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfs/ntfs3: Prevent integer overflow in hdr_first_de()\n\nThe \"de_off\" and \"used\" variables come from the disk so they both need to\ncheck.  The problem is that on 32bit systems if they're both greater than\nUINT_MAX - 16 then the check does work as intended because of an integer\noverflow.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22083",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvhost-scsi: Fix handling of multiple calls to vhost_scsi_set_endpoint\n\nIf vhost_scsi_set_endpoint is called multiple times without a\nvhost_scsi_clear_endpoint between them, we can hit multiple bugs\nfound by Haoran Zhang:\n\n1. Use-after-free when no tpgs are found:\n\nThis fixes a use after free that occurs when vhost_scsi_set_endpoint is\ncalled more than once and calls after the first call do not find any\ntpgs to add to the vs_tpg. When vhost_scsi_set_endpoint first finds\ntpgs to add to the vs_tpg array match=true, so we will do:\n\nvhost_vq_set_backend(vq, vs_tpg);\n...\n\nkfree(vs-\u003evs_tpg);\nvs-\u003evs_tpg = vs_tpg;\n\nIf vhost_scsi_set_endpoint is called again and no tpgs are found\nmatch=false so we skip the vhost_vq_set_backend call leaving the\npointer to the vs_tpg we then free via:\n\nkfree(vs-\u003evs_tpg);\nvs-\u003evs_tpg = vs_tpg;\n\nIf a scsi request is then sent we do:\n\nvhost_scsi_handle_vq -\u003e vhost_scsi_get_req -\u003e vhost_vq_get_backend\n\nwhich sees the vs_tpg we just did a kfree on.\n\n2. Tpg dir removal hang:\n\nThis patch fixes an issue where we cannot remove a LIO/target layer\ntpg (and structs above it like the target) dir due to the refcount\ndropping to -1.\n\nThe problem is that if vhost_scsi_set_endpoint detects a tpg is already\nin the vs-\u003evs_tpg array or if the tpg has been removed so\ntarget_depend_item fails, the undepend goto handler will do\ntarget_undepend_item on all tpgs in the vs_tpg array dropping their\nrefcount to 0. At this time vs_tpg contains both the tpgs we have added\nin the current vhost_scsi_set_endpoint call as well as tpgs we added in\nprevious calls which are also in vs-\u003evs_tpg.\n\nLater, when vhost_scsi_clear_endpoint runs it will do\ntarget_undepend_item on all the tpgs in the vs-\u003evs_tpg which will drop\ntheir refcount to -1. Userspace will then not be able to remove the tpg\nand will hang when it tries to do rmdir on the tpg dir.\n\n3. Tpg leak:\n\nThis fixes a bug where we can leak tpgs and cause them to be\nun-removable because the target name is overwritten when\nvhost_scsi_set_endpoint is called multiple times but with different\ntarget names.\n\nThe bug occurs if a user has called VHOST_SCSI_SET_ENDPOINT and setup\na vhost-scsi device to target/tpg mapping, then calls\nVHOST_SCSI_SET_ENDPOINT again with a new target name that has tpgs we\nhaven't seen before (target1 has tpg1 but target2 has tpg2). When this\nhappens we don't teardown the old target tpg mapping and just overwrite\nthe target name and the vs-\u003evs_tpg array. Later when we do\nvhost_scsi_clear_endpoint, we are passed in either target1 or target2's\nname and we will only match that target's tpgs when we loop over the\nvs-\u003evs_tpg. We will then return from the function without doing\ntarget_undepend_item on the tpgs.\n\nBecause of all these bugs, it looks like being able to call\nvhost_scsi_set_endpoint multiple times was never supported. The major\nuser, QEMU, already has checks to prevent this use case. So to fix the\nissues, this patch prevents vhost_scsi_set_endpoint from being called\nif it's already successfully added tpgs. To add, remove or change the\ntpg config or target name, you must do a vhost_scsi_clear_endpoint\nfirst.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22086",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/mlx5: Fix mlx5_poll_one() cur_qp update flow\n\nWhen cur_qp isn't NULL, in order to avoid fetching the QP from\nthe radix tree again we check if the next cqe QP is identical to\nthe one we already have.\n\nThe bug however is that we are checking if the QP is identical by\nchecking the QP number inside the CQE against the QP number inside the\nmlx5_ib_qp, but that's wrong since the QP number from the CQE is from\nFW so it should be matched against mlx5_core_qp which is our FW QP\nnumber.\n\nOtherwise we could use the wrong QP when handling a CQE which could\ncause the kernel trace below.\n\nThis issue is mainly noticeable over QPs 0 \u0026 1, since for now they are\nthe only QPs in our driver whereas the QP number inside mlx5_ib_qp\ndoesn't match the QP number inside mlx5_core_qp.\n\nBUG: kernel NULL pointer dereference, address: 0000000000000012\n #PF: supervisor read access in kernel mode\n #PF: error_code(0x0000) - not-present page\n PGD 0 P4D 0\n Oops: Oops: 0000 [#1] SMP\n CPU: 0 UID: 0 PID: 7927 Comm: kworker/u62:1 Not tainted 6.14.0-rc3+ #189\n Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014\n Workqueue: ib-comp-unb-wq ib_cq_poll_work [ib_core]\n RIP: 0010:mlx5_ib_poll_cq+0x4c7/0xd90 [mlx5_ib]\n Code: 03 00 00 8d 58 ff 21 cb 66 39 d3 74 39 48 c7 c7 3c 89 6e a0 0f b7 db e8 b7 d2 b3 e0 49 8b 86 60 03 00 00 48 c7 c7 4a 89 6e a0 \u003c0f\u003e b7 5c 98 02 e8 9f d2 b3 e0 41 0f b7 86 78 03 00 00 83 e8 01 21\n RSP: 0018:ffff88810511bd60 EFLAGS: 00010046\n RAX: 0000000000000010 RBX: 0000000000000000 RCX: 0000000000000000\n RDX: 0000000000000000 RSI: ffff88885fa1b3c0 RDI: ffffffffa06e894a\n RBP: 00000000000000b0 R08: 0000000000000000 R09: ffff88810511bc10\n R10: 0000000000000001 R11: 0000000000000001 R12: ffff88810d593000\n R13: ffff88810e579108 R14: ffff888105146000 R15: 00000000000000b0\n FS:  0000000000000000(0000) GS:ffff88885fa00000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 0000000000000012 CR3: 00000001077e6001 CR4: 0000000000370eb0\n Call Trace:\n  \u003cTASK\u003e\n  ? __die+0x20/0x60\n  ? page_fault_oops+0x150/0x3e0\n  ? exc_page_fault+0x74/0x130\n  ? asm_exc_page_fault+0x22/0x30\n  ? mlx5_ib_poll_cq+0x4c7/0xd90 [mlx5_ib]\n  __ib_process_cq+0x5a/0x150 [ib_core]\n  ib_cq_poll_work+0x31/0x90 [ib_core]\n  process_one_work+0x169/0x320\n  worker_thread+0x288/0x3a0\n  ? work_busy+0xb0/0xb0\n  kthread+0xd7/0x1f0\n  ? kthreads_online_cpu+0x130/0x130\n  ? kthreads_online_cpu+0x130/0x130\n  ret_from_fork+0x2d/0x50\n  ? kthreads_online_cpu+0x130/0x130\n  ret_from_fork_asm+0x11/0x20\n  \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22088",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/erdma: Prevent use-after-free in erdma_accept_newconn()\n\nAfter the erdma_cep_put(new_cep) being called, new_cep will be freed,\nand the following dereference will cause a UAF problem. Fix this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22089",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/core: Don't expose hw_counters outside of init net namespace\n\nCommit 467f432a521a (\"RDMA/core: Split port and device counter sysfs\nattributes\") accidentally almost exposed hw counters to non-init net\nnamespaces. It didn't expose them fully, as an attempt to read any of\nthose counters leads to a crash like this one:\n\n[42021.807566] BUG: kernel NULL pointer dereference, address: 0000000000000028\n[42021.814463] #PF: supervisor read access in kernel mode\n[42021.819549] #PF: error_code(0x0000) - not-present page\n[42021.824636] PGD 0 P4D 0\n[42021.827145] Oops: 0000 [#1] SMP PTI\n[42021.830598] CPU: 82 PID: 2843922 Comm: switchto-defaul Kdump: loaded Tainted: G S      W I        XXX\n[42021.841697] Hardware name: XXX\n[42021.849619] RIP: 0010:hw_stat_device_show+0x1e/0x40 [ib_core]\n[42021.855362] Code: 90 90 90 90 90 90 90 90 90 90 90 90 f3 0f 1e fa 0f 1f 44 00 00 49 89 d0 4c 8b 5e 20 48 8b 8f b8 04 00 00 48 81 c7 f0 fa ff ff \u003c48\u003e 8b 41 28 48 29 ce 48 83 c6 d0 48 c1 ee 04 69 d6 ab aa aa aa 48\n[42021.873931] RSP: 0018:ffff97fe90f03da0 EFLAGS: 00010287\n[42021.879108] RAX: ffff9406988a8c60 RBX: ffff940e1072d438 RCX: 0000000000000000\n[42021.886169] RDX: ffff94085f1aa000 RSI: ffff93c6cbbdbcb0 RDI: ffff940c7517aef0\n[42021.893230] RBP: ffff97fe90f03e70 R08: ffff94085f1aa000 R09: 0000000000000000\n[42021.900294] R10: ffff94085f1aa000 R11: ffffffffc0775680 R12: ffffffff87ca2530\n[42021.907355] R13: ffff940651602840 R14: ffff93c6cbbdbcb0 R15: ffff94085f1aa000\n[42021.914418] FS:  00007fda1a3b9700(0000) GS:ffff94453fb80000(0000) knlGS:0000000000000000\n[42021.922423] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[42021.928130] CR2: 0000000000000028 CR3: 00000042dcfb8003 CR4: 00000000003726f0\n[42021.935194] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[42021.942257] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[42021.949324] Call Trace:\n[42021.951756]  \u003cTASK\u003e\n[42021.953842]  [\u003cffffffff86c58674\u003e] ? show_regs+0x64/0x70\n[42021.959030]  [\u003cffffffff86c58468\u003e] ? __die+0x78/0xc0\n[42021.963874]  [\u003cffffffff86c9ef75\u003e] ? page_fault_oops+0x2b5/0x3b0\n[42021.969749]  [\u003cffffffff87674b92\u003e] ? exc_page_fault+0x1a2/0x3c0\n[42021.975549]  [\u003cffffffff87801326\u003e] ? asm_exc_page_fault+0x26/0x30\n[42021.981517]  [\u003cffffffffc0775680\u003e] ? __pfx_show_hw_stats+0x10/0x10 [ib_core]\n[42021.988482]  [\u003cffffffffc077564e\u003e] ? hw_stat_device_show+0x1e/0x40 [ib_core]\n[42021.995438]  [\u003cffffffff86ac7f8e\u003e] dev_attr_show+0x1e/0x50\n[42022.000803]  [\u003cffffffff86a3eeb1\u003e] sysfs_kf_seq_show+0x81/0xe0\n[42022.006508]  [\u003cffffffff86a11134\u003e] seq_read_iter+0xf4/0x410\n[42022.011954]  [\u003cffffffff869f4b2e\u003e] vfs_read+0x16e/0x2f0\n[42022.017058]  [\u003cffffffff869f50ee\u003e] ksys_read+0x6e/0xe0\n[42022.022073]  [\u003cffffffff8766f1ca\u003e] do_syscall_64+0x6a/0xa0\n[42022.027441]  [\u003cffffffff8780013b\u003e] entry_SYSCALL_64_after_hwframe+0x78/0xe2\n\nThe problem can be reproduced using the following steps:\n  ip netns add foo\n  ip netns exec foo bash\n  cat /sys/class/infiniband/mlx4_0/hw_counters/*\n\nThe panic occurs because of casting the device pointer into an\nib_device pointer using container_of() in hw_stat_device_show() is\nwrong and leads to a memory corruption.\n\nHowever the real problem is that hw counters should never been exposed\noutside of the non-init net namespace.\n\nFix this by saving the index of the corresponding attribute group\n(it might be 1 or 2 depending on the presence of driver-specific\nattributes) and zeroing the pointer to hw_counters group for compat\ndevices during the initialization.\n\nWith this fix applied hw_counters are not available in a non-init\nnet namespace:\n  find /sys/class/infiniband/mlx4_0/ -name hw_counters\n    /sys/class/infiniband/mlx4_0/ports/1/hw_counters\n    /sys/class/infiniband/mlx4_0/ports/2/hw_counters\n    /sys/class/infiniband/mlx4_0/hw_counters\n\n  ip netns add foo\n  ip netns exec foo bash\n  find /sys/class/infiniband/mlx4_0/ -name hw_counters",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22090",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/mm/pat: Fix VM_PAT handling when fork() fails in copy_page_range()\n\nIf track_pfn_copy() fails, we already added the dst VMA to the maple\ntree. As fork() fails, we'll cleanup the maple tree, and stumble over\nthe dst VMA for which we neither performed any reservation nor copied\nany page tables.\n\nConsequently untrack_pfn() will see VM_PAT and try obtaining the\nPAT information from the page table -- which fails because the page\ntable was not copied.\n\nThe easiest fix would be to simply clear the VM_PAT flag of the dst VMA\nif track_pfn_copy() fails. However, the whole thing is about \"simply\"\nclearing the VM_PAT flag is shaky as well: if we passed track_pfn_copy()\nand performed a reservation, but copying the page tables fails, we'll\nsimply clear the VM_PAT flag, not properly undoing the reservation ...\nwhich is also wrong.\n\nSo let's fix it properly: set the VM_PAT flag only if the reservation\nsucceeded (leaving it clear initially), and undo the reservation if\nanything goes wrong while copying the page tables: clearing the VM_PAT\nflag after undoing the reservation.\n\nNote that any copied page table entries will get zapped when the VMA will\nget removed later, after copy_page_range() succeeded; as VM_PAT is not set\nthen, we won't try cleaning VM_PAT up once more and untrack_pfn() will be\nhappy. Note that leaving these page tables in place without a reservation\nis not a problem, as we are aborting fork(); this process will never run.\n\nA reproducer can trigger this usually at the first try:\n\n  https://gitlab.com/davidhildenbrand/scratchspace/-/raw/main/reproducers/pat_fork.c\n\n  WARNING: CPU: 26 PID: 11650 at arch/x86/mm/pat/memtype.c:983 get_pat_info+0xf6/0x110\n  Modules linked in: ...\n  CPU: 26 UID: 0 PID: 11650 Comm: repro3 Not tainted 6.12.0-rc5+ #92\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-2.fc40 04/01/2014\n  RIP: 0010:get_pat_info+0xf6/0x110\n  ...\n  Call Trace:\n   \u003cTASK\u003e\n   ...\n   untrack_pfn+0x52/0x110\n   unmap_single_vma+0xa6/0xe0\n   unmap_vmas+0x105/0x1f0\n   exit_mmap+0xf6/0x460\n   __mmput+0x4b/0x120\n   copy_process+0x1bf6/0x2aa0\n   kernel_clone+0xab/0x440\n   __do_sys_clone+0x66/0x90\n   do_syscall_64+0x95/0x180\n\nLikely this case was missed in:\n\n  d155df53f310 (\"x86/mm/pat: clear VM_PAT if copy_p4d_range failed\")\n\n... and instead of undoing the reservation we simply cleared the VM_PAT flag.\n\nKeep the documentation of these functions in include/linux/pgtable.h,\none place is more than sufficient -- we should clean that up for the other\nfunctions like track_pfn_remap/untrack_pfn separately.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22093",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: avoid NPD when ASIC does not support DMUB\n\nctx-\u003edmub_srv will de NULL if the ASIC does not support DMUB, which is\ntested in dm_dmub_sw_init.\n\nHowever, it will be dereferenced in dmub_hw_lock_mgr_cmd if\nshould_use_dmub_lock returns true.\n\nThis has been the case since dmub support has been added for PSR1.\n\nFix this by checking for dmub_srv in should_use_dmub_lock.\n\n[   37.440832] BUG: kernel NULL pointer dereference, address: 0000000000000058\n[   37.447808] #PF: supervisor read access in kernel mode\n[   37.452959] #PF: error_code(0x0000) - not-present page\n[   37.458112] PGD 0 P4D 0\n[   37.460662] Oops: Oops: 0000 [#1] PREEMPT SMP NOPTI\n[   37.465553] CPU: 2 UID: 1000 PID: 1745 Comm: DrmThread Not tainted 6.14.0-rc1-00003-gd62e938120f0 #23 99720e1cb1e0fc4773b8513150932a07de3c6e88\n[   37.478324] Hardware name: Google Morphius/Morphius, BIOS Google_Morphius.13434.858.0 10/26/2023\n[   37.487103] RIP: 0010:dmub_hw_lock_mgr_cmd+0x77/0xb0\n[   37.492074] Code: 44 24 0e 00 00 00 00 48 c7 04 24 45 00 00 0c 40 88 74 24 0d 0f b6 02 88 44 24 0c 8b 01 89 44 24 08 85 f6 75 05 c6 44 24 0e 01 \u003c48\u003e 8b 7f 58 48 89 e6 ba 01 00 00 00 e8 08 3c 2a 00 65 48 8b 04 5\n[   37.510822] RSP: 0018:ffff969442853300 EFLAGS: 00010202\n[   37.516052] RAX: 0000000000000000 RBX: ffff92db03000000 RCX: ffff969442853358\n[   37.523185] RDX: ffff969442853368 RSI: 0000000000000001 RDI: 0000000000000000\n[   37.530322] RBP: 0000000000000001 R08: 00000000000004a7 R09: 00000000000004a5\n[   37.537453] R10: 0000000000000476 R11: 0000000000000062 R12: ffff92db0ade8000\n[   37.544589] R13: ffff92da01180ae0 R14: ffff92da011802a8 R15: ffff92db03000000\n[   37.551725] FS:  0000784a9cdfc6c0(0000) GS:ffff92db2af00000(0000) knlGS:0000000000000000\n[   37.559814] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   37.565562] CR2: 0000000000000058 CR3: 0000000112b1c000 CR4: 00000000003506f0\n[   37.572697] Call Trace:\n[   37.575152]  \u003cTASK\u003e\n[   37.577258]  ? __die_body+0x66/0xb0\n[   37.580756]  ? page_fault_oops+0x3e7/0x4a0\n[   37.584861]  ? exc_page_fault+0x3e/0xe0\n[   37.588706]  ? exc_page_fault+0x5c/0xe0\n[   37.592550]  ? asm_exc_page_fault+0x22/0x30\n[   37.596742]  ? dmub_hw_lock_mgr_cmd+0x77/0xb0\n[   37.601107]  dcn10_cursor_lock+0x1e1/0x240\n[   37.605211]  program_cursor_attributes+0x81/0x190\n[   37.609923]  commit_planes_for_stream+0x998/0x1ef0\n[   37.614722]  update_planes_and_stream_v2+0x41e/0x5c0\n[   37.619703]  dc_update_planes_and_stream+0x78/0x140\n[   37.624588]  amdgpu_dm_atomic_commit_tail+0x4362/0x49f0\n[   37.629832]  ? srso_return_thunk+0x5/0x5f\n[   37.633847]  ? mark_held_locks+0x6d/0xd0\n[   37.637774]  ? _raw_spin_unlock_irq+0x24/0x50\n[   37.642135]  ? srso_return_thunk+0x5/0x5f\n[   37.646148]  ? lockdep_hardirqs_on+0x95/0x150\n[   37.650510]  ? srso_return_thunk+0x5/0x5f\n[   37.654522]  ? _raw_spin_unlock_irq+0x2f/0x50\n[   37.658883]  ? srso_return_thunk+0x5/0x5f\n[   37.662897]  ? wait_for_common+0x186/0x1c0\n[   37.666998]  ? srso_return_thunk+0x5/0x5f\n[   37.671009]  ? drm_crtc_next_vblank_start+0xc3/0x170\n[   37.675983]  commit_tail+0xf5/0x1c0\n[   37.679478]  drm_atomic_helper_commit+0x2a2/0x2b0\n[   37.684186]  drm_atomic_commit+0xd6/0x100\n[   37.688199]  ? __cfi___drm_printfn_info+0x10/0x10\n[   37.692911]  drm_atomic_helper_update_plane+0xe5/0x130\n[   37.698054]  drm_mode_cursor_common+0x501/0x670\n[   37.702600]  ? __cfi_drm_mode_cursor_ioctl+0x10/0x10\n[   37.707572]  drm_mode_cursor_ioctl+0x48/0x70\n[   37.711851]  drm_ioctl_kernel+0xf2/0x150\n[   37.715781]  drm_ioctl+0x363/0x590\n[   37.719189]  ? __cfi_drm_mode_cursor_ioctl+0x10/0x10\n[   37.724165]  amdgpu_drm_ioctl+0x41/0x80\n[   37.728013]  __se_sys_ioctl+0x7f/0xd0\n[   37.731685]  do_syscall_64+0x87/0x100\n[   37.735355]  ? vma_end_read+0x12/0xe0\n[   37.739024]  ? srso_return_thunk+0x5/0x5f\n[   37.743041]  ? find_held_lock+0x47/0xf0\n[   37.746884]  ? vma_end_read+0x12/0xe0\n[   37.750552]  ? srso_return_thunk+0x5/0\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22095",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nPCI: brcmstb: Fix error path after a call to regulator_bulk_get()\n\nIf the regulator_bulk_get() returns an error and no regulators\nare created, we need to set their number to zero.\n\nIf we don't do this and the PCIe link up fails, a call to the\nregulator_bulk_free() will result in a kernel panic.\n\nWhile at it, print the error value, as we cannot return an error\nupwards as the kernel will WARN() on an error from add_bus().\n\n[kwilczynski: commit log, use comma in the message to match style with\nother similar messages]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22097",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/vkms: Fix use after free and double free on init error\n\nIf the driver initialization fails, the vkms_exit() function might\naccess an uninitialized or freed default_config pointer and it might\ndouble free it.\n\nFix both possible errors by initializing default_config only when the\ndriver initialization succeeded.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22102",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: btnxpuart: Fix kernel panic during FW release\n\nThis fixes a kernel panic seen during release FW in a stress test\nscenario where WLAN and BT FW download occurs simultaneously, and due to\na HW bug, chip sends out only 1 bootloader signatures.\n\nWhen driver receives the bootloader signature, it enters FW download\nmode, but since no consequtive bootloader signatures seen, FW file is\nnot requested.\n\nAfter 60 seconds, when FW download times out, release_firmware causes a\nkernel panic.\n\n[ 2601.949184] Unable to handle kernel paging request at virtual address 0000312e6f006573\n[ 2601.992076] user pgtable: 4k pages, 48-bit VAs, pgdp=0000000111802000\n[ 2601.992080] [0000312e6f006573] pgd=0000000000000000, p4d=0000000000000000\n[ 2601.992087] Internal error: Oops: 0000000096000021 [#1] PREEMPT SMP\n[ 2601.992091] Modules linked in: algif_hash algif_skcipher af_alg btnxpuart(O) pciexxx(O) mlan(O) overlay fsl_jr_uio caam_jr caamkeyblob_desc caamhash_desc caamalg_desc crypto_engine authenc libdes crct10dif_ce polyval_ce snd_soc_fsl_easrc snd_soc_fsl_asoc_card imx8_media_dev(C) snd_soc_fsl_micfil polyval_generic snd_soc_fsl_xcvr snd_soc_fsl_sai snd_soc_imx_audmux snd_soc_fsl_asrc snd_soc_imx_card snd_soc_imx_hdmi snd_soc_fsl_aud2htx snd_soc_fsl_utils imx_pcm_dma dw_hdmi_cec flexcan can_dev\n[ 2602.001825] CPU: 2 PID: 20060 Comm: hciconfig Tainted: G         C O       6.6.23-lts-next-06236-gb586a521770e #1\n[ 2602.010182] Hardware name: NXP i.MX8MPlus EVK board (DT)\n[ 2602.010185] pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[ 2602.010191] pc : _raw_spin_lock+0x34/0x68\n[ 2602.010201] lr : free_fw_priv+0x20/0xfc\n[ 2602.020561] sp : ffff800089363b30\n[ 2602.020563] x29: ffff800089363b30 x28: ffff0000d0eb5880 x27: 0000000000000000\n[ 2602.020570] x26: 0000000000000000 x25: ffff0000d728b330 x24: 0000000000000000\n[ 2602.020577] x23: ffff0000dc856f38\n[ 2602.033797] x22: ffff800089363b70 x21: ffff0000dc856000\n[ 2602.033802] x20: ff00312e6f006573 x19: ffff0000d0d9ea80 x18: 0000000000000000\n[ 2602.033809] x17: 0000000000000000 x16: 0000000000000000 x15: 0000aaaad80dd480\n[ 2602.083320] x14: 0000000000000000 x13: 00000000000001b9 x12: 0000000000000002\n[ 2602.083326] x11: 0000000000000000 x10: 0000000000000a60 x9 : ffff800089363a30\n[ 2602.083333] x8 : ffff0001793d75c0 x7 : ffff0000d6dbc400 x6 : 0000000000000000\n[ 2602.083339] x5 : 00000000410fd030 x4 : 0000000000000000 x3 : 0000000000000001\n[ 2602.083346] x2 : 0000000000000000 x1 : 0000000000000001 x0 : ff00312e6f006573\n[ 2602.083354] Call trace:\n[ 2602.083356]  _raw_spin_lock+0x34/0x68\n[ 2602.083364]  release_firmware+0x48/0x6c\n[ 2602.083370]  nxp_setup+0x3c4/0x540 [btnxpuart]\n[ 2602.083383]  hci_dev_open_sync+0xf0/0xa34\n[ 2602.083391]  hci_dev_open+0xd8/0x178\n[ 2602.083399]  hci_sock_ioctl+0x3b0/0x590\n[ 2602.083405]  sock_do_ioctl+0x60/0x118\n[ 2602.083413]  sock_ioctl+0x2f4/0x374\n[ 2602.091430]  __arm64_sys_ioctl+0xac/0xf0\n[ 2602.091437]  invoke_syscall+0x48/0x110\n[ 2602.091445]  el0_svc_common.constprop.0+0xc0/0xe0\n[ 2602.091452]  do_el0_svc+0x1c/0x28\n[ 2602.091457]  el0_svc+0x40/0xe4\n[ 2602.091465]  el0t_64_sync_handler+0x120/0x12c\n[ 2602.091470]  el0t_64_sync+0x190/0x194",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22103",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: fix NULL pointer dereference in l3mdev_l3_rcv\n\nWhen delete l3s ipvlan:\n\n    ip link del link eth0 ipvlan1 type ipvlan mode l3s\n\nThis may cause a null pointer dereference:\n\n    Call trace:\n     ip_rcv_finish+0x48/0xd0\n     ip_rcv+0x5c/0x100\n     __netif_receive_skb_one_core+0x64/0xb0\n     __netif_receive_skb+0x20/0x80\n     process_backlog+0xb4/0x204\n     napi_poll+0xe8/0x294\n     net_rx_action+0xd8/0x22c\n     __do_softirq+0x12c/0x354\n\nThis is because l3mdev_l3_rcv() visit dev-\u003el3mdev_ops after\nipvlan_l3s_unregister() assign the dev-\u003el3mdev_ops to NULL. The process\nlike this:\n\n    (CPU1)                     | (CPU2)\n    l3mdev_l3_rcv()            |\n      check dev-\u003epriv_flags:   |\n        master = skb-\u003edev;     |\n                               |\n                               | ipvlan_l3s_unregister()\n                               |   set dev-\u003epriv_flags\n                               |   dev-\u003el3mdev_ops = NULL;\n                               |\n      visit master-\u003el3mdev_ops |\n\nTo avoid this by do not set dev-\u003el3mdev_ops when unregister l3s ipvlan.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22104",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nibmvnic: Use kernel helpers for hex dumps\n\nPreviously, when the driver was printing hex dumps, the buffer was cast\nto an 8 byte long and printed using string formatters. If the buffer\nsize was not a multiple of 8 then a read buffer overflow was possible.\n\nTherefore, create a new ibmvnic function that loops over a buffer and\ncalls hex_dump_to_buffer instead.\n\nThis patch address KASAN reports like the one below:\n  ibmvnic 30000003 env3: Login Buffer:\n  ibmvnic 30000003 env3: 01000000af000000\n  \u003c...\u003e\n  ibmvnic 30000003 env3: 2e6d62692e736261\n  ibmvnic 30000003 env3: 65050003006d6f63\n  ==================================================================\n  BUG: KASAN: slab-out-of-bounds in ibmvnic_login+0xacc/0xffc [ibmvnic]\n  Read of size 8 at addr c0000001331a9aa8 by task ip/17681\n  \u003c...\u003e\n  Allocated by task 17681:\n  \u003c...\u003e\n  ibmvnic_login+0x2f0/0xffc [ibmvnic]\n  ibmvnic_open+0x148/0x308 [ibmvnic]\n  __dev_open+0x1ac/0x304\n  \u003c...\u003e\n  The buggy address is located 168 bytes inside of\n                allocated 175-byte region [c0000001331a9a00, c0000001331a9aaf)\n  \u003c...\u003e\n  =================================================================\n  ibmvnic 30000003 env3: 000000000033766e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22105",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbonding: check xdp prog when set bond mode\n\nFollowing operations can trigger a warning[1]:\n\n    ip netns add ns1\n    ip netns exec ns1 ip link add bond0 type bond mode balance-rr\n    ip netns exec ns1 ip link set dev bond0 xdp obj af_xdp_kern.o sec xdp\n    ip netns exec ns1 ip link set bond0 type bond mode broadcast\n    ip netns del ns1\n\nWhen delete the namespace, dev_xdp_uninstall() is called to remove xdp\nprogram on bond dev, and bond_xdp_set() will check the bond mode. If bond\nmode is changed after attaching xdp program, the warning may occur.\n\nSome bond modes (broadcast, etc.) do not support native xdp. Set bond mode\nwith xdp program attached is not good. Add check for xdp program when set\nbond mode.\n\n    [1]\n    ------------[ cut here ]------------\n    WARNING: CPU: 0 PID: 11 at net/core/dev.c:9912 unregister_netdevice_many_notify+0x8d9/0x930\n    Modules linked in:\n    CPU: 0 UID: 0 PID: 11 Comm: kworker/u4:0 Not tainted 6.14.0-rc4 #107\n    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.15.0-0-g2dd4b9b3f840-prebuilt.qemu.org 04/01/2014\n    Workqueue: netns cleanup_net\n    RIP: 0010:unregister_netdevice_many_notify+0x8d9/0x930\n    Code: 00 00 48 c7 c6 6f e3 a2 82 48 c7 c7 d0 b3 96 82 e8 9c 10 3e ...\n    RSP: 0018:ffffc90000063d80 EFLAGS: 00000282\n    RAX: 00000000ffffffa1 RBX: ffff888004959000 RCX: 00000000ffffdfff\n    RDX: 0000000000000000 RSI: 00000000ffffffea RDI: ffffc90000063b48\n    RBP: ffffc90000063e28 R08: ffffffff82d39b28 R09: 0000000000009ffb\n    R10: 0000000000000175 R11: ffffffff82d09b40 R12: ffff8880049598e8\n    R13: 0000000000000001 R14: dead000000000100 R15: ffffc90000045000\n    FS:  0000000000000000(0000) GS:ffff888007a00000(0000) knlGS:0000000000000000\n    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n    CR2: 000000000d406b60 CR3: 000000000483e000 CR4: 00000000000006f0\n    Call Trace:\n     \u003cTASK\u003e\n     ? __warn+0x83/0x130\n     ? unregister_netdevice_many_notify+0x8d9/0x930\n     ? report_bug+0x18e/0x1a0\n     ? handle_bug+0x54/0x90\n     ? exc_invalid_op+0x18/0x70\n     ? asm_exc_invalid_op+0x1a/0x20\n     ? unregister_netdevice_many_notify+0x8d9/0x930\n     ? bond_net_exit_batch_rtnl+0x5c/0x90\n     cleanup_net+0x237/0x3d0\n     process_one_work+0x163/0x390\n     worker_thread+0x293/0x3b0\n     ? __pfx_worker_thread+0x10/0x10\n     kthread+0xec/0x1e0\n     ? __pfx_kthread+0x10/0x10\n     ? __pfx_kthread+0x10/0x10\n     ret_from_fork+0x2f/0x50\n     ? __pfx_kthread+0x10/0x10\n     ret_from_fork_asm+0x1a/0x30\n     \u003c/TASK\u003e\n    ---[ end trace 0000000000000000 ]---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22106",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvmxnet3: unregister xdp rxq info in the reset path\n\nvmxnet3 does not unregister xdp rxq info in the\nvmxnet3_reset_work() code path as vmxnet3_rq_destroy()\nis not invoked in this code path. So, we get below message with a\nbacktrace.\n\nMissing unregister, handled but fix driver\nWARNING: CPU:48 PID: 500 at net/core/xdp.c:182\n__xdp_rxq_info_reg+0x93/0xf0\n\nThis patch fixes the problem by moving the unregister\ncode of XDP from vmxnet3_rq_destroy() to vmxnet3_rq_cleanup().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22107",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: sja1105: fix kasan out-of-bounds warning in sja1105_table_delete_entry()\n\nThere are actually 2 problems:\n- deleting the last element doesn't require the memmove of elements\n  [i + 1, end) over it. Actually, element i+1 is out of bounds.\n- The memmove itself should move size - i - 1 elements, because the last\n  element is out of bounds.\n\nThe out-of-bounds element still remains out of bounds after being\naccessed, so the problem is only that we touch it, not that it becomes\nin active use. But I suppose it can lead to issues if the out-of-bounds\nelement is part of an unmapped page.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22108",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbnxt_en: Mask the bd_cnt field in the TX BD properly\n\nThe bd_cnt field in the TX BD specifies the total number of BDs for\nthe TX packet.  The bd_cnt field has 5 bits and the maximum number\nsupported is 32 with the value 0.\n\nCONFIG_MAX_SKB_FRAGS can be modified and the total number of SKB\nfragments can approach or exceed the maximum supported by the chip.\nAdd a macro to properly mask the bd_cnt field so that the value 32\nwill be properly masked and set to 0 in the bd_cnd field.\n\nWithout this patch, the out-of-range bd_cnt value will corrupt the\nTX BD and may cause TX timeout.\n\nThe next patch will check for values exceeding 32.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22109",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nax25: Remove broken autobind\n\nBinding AX25 socket by using the autobind feature leads to memory leaks\nin ax25_connect() and also refcount leaks in ax25_release(). Memory\nleak was detected with kmemleak:\n\n================================================================\nunreferenced object 0xffff8880253cd680 (size 96):\nbacktrace:\n__kmalloc_node_track_caller_noprof (./include/linux/kmemleak.h:43)\nkmemdup_noprof (mm/util.c:136)\nax25_rt_autobind (net/ax25/ax25_route.c:428)\nax25_connect (net/ax25/af_ax25.c:1282)\n__sys_connect_file (net/socket.c:2045)\n__sys_connect (net/socket.c:2064)\n__x64_sys_connect (net/socket.c:2067)\ndo_syscall_64 (arch/x86/entry/common.c:52 arch/x86/entry/common.c:83)\nentry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)\n================================================================\n\nWhen socket is bound, refcounts must be incremented the way it is done\nin ax25_bind() and ax25_setsockopt() (SO_BINDTODEVICE). In case of\nautobind, the refcounts are not incremented.\n\nThis bug leads to the following issue reported by Syzkaller:\n\n================================================================\nax25_connect(): syz-executor318 uses autobind, please contact jreuter@yaina.de\n------------[ cut here ]------------\nrefcount_t: decrement hit 0; leaking memory.\nWARNING: CPU: 0 PID: 5317 at lib/refcount.c:31 refcount_warn_saturate+0xfa/0x1d0 lib/refcount.c:31\nModules linked in:\nCPU: 0 UID: 0 PID: 5317 Comm: syz-executor318 Not tainted 6.14.0-rc4-syzkaller-00278-gece144f151ac #0\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2~bpo12+1 04/01/2014\nRIP: 0010:refcount_warn_saturate+0xfa/0x1d0 lib/refcount.c:31\n...\nCall Trace:\n \u003cTASK\u003e\n __refcount_dec include/linux/refcount.h:336 [inline]\n refcount_dec include/linux/refcount.h:351 [inline]\n ref_tracker_free+0x6af/0x7e0 lib/ref_tracker.c:236\n netdev_tracker_free include/linux/netdevice.h:4302 [inline]\n netdev_put include/linux/netdevice.h:4319 [inline]\n ax25_release+0x368/0x960 net/ax25/af_ax25.c:1080\n __sock_release net/socket.c:647 [inline]\n sock_close+0xbc/0x240 net/socket.c:1398\n __fput+0x3e9/0x9f0 fs/file_table.c:464\n __do_sys_close fs/open.c:1580 [inline]\n __se_sys_close fs/open.c:1565 [inline]\n __x64_sys_close+0x7f/0x110 fs/open.c:1565\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n ...\n \u003c/TASK\u003e\n================================================================\n\nConsidering the issues above and the comments left in the code that say:\n\"check if we can remove this feature. It is broken.\"; \"autobinding in this\nmay or may not work\"; - it is better to completely remove this feature than\nto fix it because it is broken and leads to various kinds of memory bugs.\n\nNow calling connect() without first binding socket will result in an\nerror (-EINVAL). Userspace software that relies on the autobind feature\nmight get broken. However, this feature does not seem widely used with\nthis specific driver as it was not reliable at any point of time, and it\nis already broken anyway. E.g. ax25-tools and ax25-apps packages for\npopular distributions do not use the autobind feature for AF_AX25.\n\nFound by Linux Verification Center (linuxtesting.org) with Syzkaller.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22111",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: Remove RTNL dance for SIOCBRADDIF and SIOCBRDELIF.\n\nSIOCBRDELIF is passed to dev_ioctl() first and later forwarded to\nbr_ioctl_call(), which causes unnecessary RTNL dance and the splat\nbelow [0] under RTNL pressure.\n\nLet's say Thread A is trying to detach a device from a bridge and\nThread B is trying to remove the bridge.\n\nIn dev_ioctl(), Thread A bumps the bridge device's refcnt by\nnetdev_hold() and releases RTNL because the following br_ioctl_call()\nalso re-acquires RTNL.\n\nIn the race window, Thread B could acquire RTNL and try to remove\nthe bridge device.  Then, rtnl_unlock() by Thread B will release RTNL\nand wait for netdev_put() by Thread A.\n\nThread A, however, must hold RTNL after the unlock in dev_ifsioc(),\nwhich may take long under RTNL pressure, resulting in the splat by\nThread B.\n\n  Thread A (SIOCBRDELIF)           Thread B (SIOCBRDELBR)\n  ----------------------           ----------------------\n  sock_ioctl                       sock_ioctl\n  `- sock_do_ioctl                 `- br_ioctl_call\n     `- dev_ioctl                     `- br_ioctl_stub\n        |- rtnl_lock                     |\n        |- dev_ifsioc                    '\n        '  |- dev = __dev_get_by_name(...)\n           |- netdev_hold(dev, ...)      .\n       /   |- rtnl_unlock  ------.       |\n       |   |- br_ioctl_call       `---\u003e  |- rtnl_lock\n  Race |   |  `- br_ioctl_stub           |- br_del_bridge\n  Window   |     |                       |  |- dev = __dev_get_by_name(...)\n       |   |     |  May take long        |  `- br_dev_delete(dev, ...)\n       |   |     |  under RTNL pressure  |     `- unregister_netdevice_queue(dev, ...)\n       |   |     |               |       `- rtnl_unlock\n       \\   |     |- rtnl_lock  \u003c-'          `- netdev_run_todo\n           |     |- ...                        `- netdev_run_todo\n           |     `- rtnl_unlock                   |- __rtnl_unlock\n           |                                      |- netdev_wait_allrefs_any\n           |- netdev_put(dev, ...)  \u003c----------------'\n                                                Wait refcnt decrement\n                                                and log splat below\n\nTo avoid blocking SIOCBRDELBR unnecessarily, let's not call\ndev_ioctl() for SIOCBRADDIF and SIOCBRDELIF.\n\nIn the dev_ioctl() path, we do the following:\n\n  1. Copy struct ifreq by get_user_ifreq in sock_do_ioctl()\n  2. Check CAP_NET_ADMIN in dev_ioctl()\n  3. Call dev_load() in dev_ioctl()\n  4. Fetch the master dev from ifr.ifr_name in dev_ifsioc()\n\n3. can be done by request_module() in br_ioctl_call(), so we move\n1., 2., and 4. to br_ioctl_stub().\n\nNote that 2. is also checked later in add_del_if(), but it's better\nperformed before RTNL.\n\nSIOCBRADDIF and SIOCBRDELIF have been processed in dev_ioctl() since\nthe pre-git era, and there seems to be no specific reason to process\nthem there.\n\n[0]:\nunregister_netdevice: waiting for wpan3 to become free. Usage count = 2\nref_tracker: wpan3@ffff8880662d8608 has 1/1 users at\n     __netdev_tracker_alloc include/linux/netdevice.h:4282 [inline]\n     netdev_hold include/linux/netdevice.h:4311 [inline]\n     dev_ifsioc+0xc6a/0x1160 net/core/dev_ioctl.c:624\n     dev_ioctl+0x255/0x10c0 net/core/dev_ioctl.c:826\n     sock_do_ioctl+0x1ca/0x260 net/socket.c:1213\n     sock_ioctl+0x23a/0x6c0 net/socket.c:1318\n     vfs_ioctl fs/ioctl.c:51 [inline]\n     __do_sys_ioctl fs/ioctl.c:906 [inline]\n     __se_sys_ioctl fs/ioctl.c:892 [inline]\n     __x64_sys_ioctl+0x1a4/0x210 fs/ioctl.c:892\n     do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n     do_syscall_64+0xcb/0x250 arch/x86/entry/common.c:83\n     entry_SYSCALL_64_after_hwframe+0x77/0x7f",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22113",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: avoid journaling sb update on error if journal is destroying\n\nPresently we always BUG_ON if trying to start a transaction on a journal marked\nwith JBD2_UNMOUNT, since this should never happen. However, while ltp running\nstress tests, it was observed that in case of some error handling paths, it is\npossible for update_super_work to start a transaction after the journal is\ndestroyed eg:\n\n(umount)\next4_kill_sb\n  kill_block_super\n    generic_shutdown_super\n      sync_filesystem /* commits all txns */\n      evict_inodes\n        /* might start a new txn */\n      ext4_put_super\n\tflush_work(\u0026sbi-\u003es_sb_upd_work) /* flush the workqueue */\n        jbd2_journal_destroy\n          journal_kill_thread\n            journal-\u003ej_flags |= JBD2_UNMOUNT;\n          jbd2_journal_commit_transaction\n            jbd2_journal_get_descriptor_buffer\n              jbd2_journal_bmap\n                ext4_journal_bmap\n                  ext4_map_blocks\n                    ...\n                    ext4_inode_error\n                      ext4_handle_error\n                        schedule_work(\u0026sbi-\u003es_sb_upd_work)\n\n                                               /* work queue kicks in */\n                                               update_super_work\n                                                 jbd2_journal_start\n                                                   start_this_handle\n                                                     BUG_ON(journal-\u003ej_flags \u0026\n                                                            JBD2_UNMOUNT)\n\nHence, introduce a new mount flag to indicate journal is destroying and only do\na journaled (and deferred) update of sb if this flag is not set. Otherwise, just\nfallback to an un-journaled commit.\n\nFurther, in the journal destroy path, we have the following sequence:\n\n  1. Set mount flag indicating journal is destroying\n  2. force a commit and wait for it\n  3. flush pending sb updates\n\nThis sequence is important as it ensures that, after this point, there is no sb\nupdate that might be journaled so it is safe to update the sb outside the\njournal. (To avoid race discussed in 2d01ddc86606)\n\nAlso, we don't need a similar check in ext4_grp_locked_error since it is only\ncalled from mballoc and AFAICT it would be always valid to schedule work here.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22115",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix block group refcount race in btrfs_create_pending_block_groups()\n\nBlock group creation is done in two phases, which results in a slightly\nunintuitive property: a block group can be allocated/deallocated from\nafter btrfs_make_block_group() adds it to the space_info with\nbtrfs_add_bg_to_space_info(), but before creation is completely completed\nin btrfs_create_pending_block_groups(). As a result, it is possible for a\nblock group to go unused and have 'btrfs_mark_bg_unused' called on it\nconcurrently with 'btrfs_create_pending_block_groups'. This causes a\nnumber of issues, which were fixed with the block group flag\n'BLOCK_GROUP_FLAG_NEW'.\n\nHowever, this fix is not quite complete. Since it does not use the\nunused_bg_lock, it is possible for the following race to occur:\n\nbtrfs_create_pending_block_groups            btrfs_mark_bg_unused\n                                           if list_empty // false\n        list_del_init\n        clear_bit\n                                           else if (test_bit) // true\n                                                list_move_tail\n\nAnd we get into the exact same broken ref count and invalid new_bgs\nstate for transaction cleanup that BLOCK_GROUP_FLAG_NEW was designed to\nprevent.\n\nThe broken refcount aspect will result in a warning like:\n\n  [1272.943527] refcount_t: underflow; use-after-free.\n  [1272.943967] WARNING: CPU: 1 PID: 61 at lib/refcount.c:28 refcount_warn_saturate+0xba/0x110\n  [1272.944731] Modules linked in: btrfs virtio_net xor zstd_compress raid6_pq null_blk [last unloaded: btrfs]\n  [1272.945550] CPU: 1 UID: 0 PID: 61 Comm: kworker/u32:1 Kdump: loaded Tainted: G        W          6.14.0-rc5+ #108\n  [1272.946368] Tainted: [W]=WARN\n  [1272.946585] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Arch Linux 1.16.3-1-1 04/01/2014\n  [1272.947273] Workqueue: btrfs_discard btrfs_discard_workfn [btrfs]\n  [1272.947788] RIP: 0010:refcount_warn_saturate+0xba/0x110\n  [1272.949532] RSP: 0018:ffffbf1200247df0 EFLAGS: 00010282\n  [1272.949901] RAX: 0000000000000000 RBX: ffffa14b00e3f800 RCX: 0000000000000000\n  [1272.950437] RDX: 0000000000000000 RSI: ffffbf1200247c78 RDI: 00000000ffffdfff\n  [1272.950986] RBP: ffffa14b00dc2860 R08: 00000000ffffdfff R09: ffffffff90526268\n  [1272.951512] R10: ffffffff904762c0 R11: 0000000063666572 R12: ffffa14b00dc28c0\n  [1272.952024] R13: 0000000000000000 R14: ffffa14b00dc2868 R15: 000001285dcd12c0\n  [1272.952850] FS:  0000000000000000(0000) GS:ffffa14d33c40000(0000) knlGS:0000000000000000\n  [1272.953458] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n  [1272.953931] CR2: 00007f838cbda000 CR3: 000000010104e000 CR4: 00000000000006f0\n  [1272.954474] Call Trace:\n  [1272.954655]  \u003cTASK\u003e\n  [1272.954812]  ? refcount_warn_saturate+0xba/0x110\n  [1272.955173]  ? __warn.cold+0x93/0xd7\n  [1272.955487]  ? refcount_warn_saturate+0xba/0x110\n  [1272.955816]  ? report_bug+0xe7/0x120\n  [1272.956103]  ? handle_bug+0x53/0x90\n  [1272.956424]  ? exc_invalid_op+0x13/0x60\n  [1272.956700]  ? asm_exc_invalid_op+0x16/0x20\n  [1272.957011]  ? refcount_warn_saturate+0xba/0x110\n  [1272.957399]  btrfs_discard_cancel_work.cold+0x26/0x2b [btrfs]\n  [1272.957853]  btrfs_put_block_group.cold+0x5d/0x8e [btrfs]\n  [1272.958289]  btrfs_discard_workfn+0x194/0x380 [btrfs]\n  [1272.958729]  process_one_work+0x130/0x290\n  [1272.959026]  worker_thread+0x2ea/0x420\n  [1272.959335]  ? __pfx_worker_thread+0x10/0x10\n  [1272.959644]  kthread+0xd7/0x1c0\n  [1272.959872]  ? __pfx_kthread+0x10/0x10\n  [1272.960172]  ret_from_fork+0x30/0x50\n  [1272.960474]  ? __pfx_kthread+0x10/0x10\n  [1272.960745]  ret_from_fork_asm+0x1a/0x30\n  [1272.961035]  \u003c/TASK\u003e\n  [1272.961238] ---[ end trace 0000000000000000 ]---\n\nThough we have seen them in the async discard workfn as well. It is\nmost likely to happen after a relocation finishes which cancels discard,\ntears down the block group, etc.\n\nFix this fully by taking the lock arou\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22116",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nidpf: check error for register_netdev() on init\n\nCurrent init logic ignores the error code from register_netdev(),\nwhich will cause WARN_ON() on attempt to unregister it, if there was one,\nand there is no info for the user that the creation of the netdev failed.\n\nWARNING: CPU: 89 PID: 6902 at net/core/dev.c:11512 unregister_netdevice_many_notify+0x211/0x1a10\n...\n[ 3707.563641]  unregister_netdev+0x1c/0x30\n[ 3707.563656]  idpf_vport_dealloc+0x5cf/0xce0 [idpf]\n[ 3707.563684]  idpf_deinit_task+0xef/0x160 [idpf]\n[ 3707.563712]  idpf_vc_core_deinit+0x84/0x320 [idpf]\n[ 3707.563739]  idpf_remove+0xbf/0x780 [idpf]\n[ 3707.563769]  pci_device_remove+0xab/0x1e0\n[ 3707.563786]  device_release_driver_internal+0x371/0x530\n[ 3707.563803]  driver_detach+0xbf/0x180\n[ 3707.563816]  bus_remove_driver+0x11b/0x2a0\n[ 3707.563829]  pci_unregister_driver+0x2a/0x250\n\nIntroduce an error check and log the vport number and error code.\nOn removal make sure to check VPORT_REG_NETDEV flag prior to calling\nunregister and free on the netdev.\n\nAdd local variables for idx, vport_config and netdev for readability.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22119",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: cfg80211: init wiphy_work before allocating rfkill fails\n\nsyzbort reported a uninitialize wiphy_work_lock in cfg80211_dev_free. [1]\n\nAfter rfkill allocation fails, the wiphy release process will be performed,\nwhich will cause cfg80211_dev_free to access the uninitialized wiphy_work\nrelated data.\n\nMove the initialization of wiphy_work to before rfkill initialization to\navoid this issue.\n\n[1]\nINFO: trying to register non-static key.\nThe code is fine but needs lockdep annotation, or maybe\nyou didn't initialize this object before use?\nturning off the locking correctness validator.\nCPU: 0 UID: 0 PID: 5935 Comm: syz-executor550 Not tainted 6.14.0-rc6-syzkaller-00103-g4003c9e78778 #0\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2~bpo12+1 04/01/2014\nCall Trace:\n \u003cTASK\u003e\n __dump_stack lib/dump_stack.c:94 [inline]\n dump_stack_lvl+0x116/0x1f0 lib/dump_stack.c:120\n assign_lock_key kernel/locking/lockdep.c:983 [inline]\n register_lock_class+0xc39/0x1240 kernel/locking/lockdep.c:1297\n __lock_acquire+0x135/0x3c40 kernel/locking/lockdep.c:5103\n lock_acquire.part.0+0x11b/0x380 kernel/locking/lockdep.c:5851\n __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:110 [inline]\n _raw_spin_lock_irqsave+0x3a/0x60 kernel/locking/spinlock.c:162\n cfg80211_dev_free+0x30/0x3d0 net/wireless/core.c:1196\n device_release+0xa1/0x240 drivers/base/core.c:2568\n kobject_cleanup lib/kobject.c:689 [inline]\n kobject_release lib/kobject.c:720 [inline]\n kref_put include/linux/kref.h:65 [inline]\n kobject_put+0x1e4/0x5a0 lib/kobject.c:737\n put_device+0x1f/0x30 drivers/base/core.c:3774\n wiphy_free net/wireless/core.c:1224 [inline]\n wiphy_new_nm+0x1c1f/0x2160 net/wireless/core.c:562\n ieee80211_alloc_hw_nm+0x1b7a/0x2260 net/mac80211/main.c:835\n mac80211_hwsim_new_radio+0x1d6/0x54e0 drivers/net/wireless/virtual/mac80211_hwsim.c:5185\n hwsim_new_radio_nl+0xb42/0x12b0 drivers/net/wireless/virtual/mac80211_hwsim.c:6242\n genl_family_rcv_msg_doit+0x202/0x2f0 net/netlink/genetlink.c:1115\n genl_family_rcv_msg net/netlink/genetlink.c:1195 [inline]\n genl_rcv_msg+0x565/0x800 net/netlink/genetlink.c:1210\n netlink_rcv_skb+0x16b/0x440 net/netlink/af_netlink.c:2533\n genl_rcv+0x28/0x40 net/netlink/genetlink.c:1219\n netlink_unicast_kernel net/netlink/af_netlink.c:1312 [inline]\n netlink_unicast+0x53c/0x7f0 net/netlink/af_netlink.c:1338\n netlink_sendmsg+0x8b8/0xd70 net/netlink/af_netlink.c:1882\n sock_sendmsg_nosec net/socket.c:718 [inline]\n __sock_sendmsg net/socket.c:733 [inline]\n ____sys_sendmsg+0xaaf/0xc90 net/socket.c:2573\n ___sys_sendmsg+0x135/0x1e0 net/socket.c:2627\n __sys_sendmsg+0x16e/0x220 net/socket.c:2659\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xcd/0x250 arch/x86/entry/common.c:83\n\nClose: https://syzkaller.appspot.com/bug?extid=aaf0488c83d1d5f4f029",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22120",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: goto right label 'out_mmap_sem' in ext4_setattr()\n\nOtherwise, if ext4_inode_attach_jinode() fails, a hung task will\nhappen because filemap_invalidate_unlock() isn't called to unlock\nmapping-\u003einvalidate_lock. Like this:\n\nEXT4-fs error (device sda) in ext4_setattr:5557: Out of memory\nINFO: task fsstress:374 blocked for more than 122 seconds.\n      Not tainted 6.14.0-rc1-next-20250206-xfstests-dirty #726\n\"echo 0 \u003e /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\ntask:fsstress state:D stack:0     pid:374   tgid:374   ppid:373\n                                  task_flags:0x440140 flags:0x00000000\nCall Trace:\n \u003cTASK\u003e\n __schedule+0x2c9/0x7f0\n schedule+0x27/0xa0\n schedule_preempt_disabled+0x15/0x30\n rwsem_down_read_slowpath+0x278/0x4c0\n down_read+0x59/0xb0\n page_cache_ra_unbounded+0x65/0x1b0\n filemap_get_pages+0x124/0x3e0\n filemap_read+0x114/0x3d0\n vfs_read+0x297/0x360\n ksys_read+0x6c/0xe0\n do_syscall_64+0x4b/0x110\n entry_SYSCALL_64_after_hwframe+0x76/0x7e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22121",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix out-of-bound read in ext4_xattr_inode_dec_ref_all()\n\nThere's issue as follows:\nBUG: KASAN: use-after-free in ext4_xattr_inode_dec_ref_all+0x6ff/0x790\nRead of size 4 at addr ffff88807b003000 by task syz-executor.0/15172\n\nCPU: 3 PID: 15172 Comm: syz-executor.0\nCall Trace:\n __dump_stack lib/dump_stack.c:82 [inline]\n dump_stack+0xbe/0xfd lib/dump_stack.c:123\n print_address_description.constprop.0+0x1e/0x280 mm/kasan/report.c:400\n __kasan_report.cold+0x6c/0x84 mm/kasan/report.c:560\n kasan_report+0x3a/0x50 mm/kasan/report.c:585\n ext4_xattr_inode_dec_ref_all+0x6ff/0x790 fs/ext4/xattr.c:1137\n ext4_xattr_delete_inode+0x4c7/0xda0 fs/ext4/xattr.c:2896\n ext4_evict_inode+0xb3b/0x1670 fs/ext4/inode.c:323\n evict+0x39f/0x880 fs/inode.c:622\n iput_final fs/inode.c:1746 [inline]\n iput fs/inode.c:1772 [inline]\n iput+0x525/0x6c0 fs/inode.c:1758\n ext4_orphan_cleanup fs/ext4/super.c:3298 [inline]\n ext4_fill_super+0x8c57/0xba40 fs/ext4/super.c:5300\n mount_bdev+0x355/0x410 fs/super.c:1446\n legacy_get_tree+0xfe/0x220 fs/fs_context.c:611\n vfs_get_tree+0x8d/0x2f0 fs/super.c:1576\n do_new_mount fs/namespace.c:2983 [inline]\n path_mount+0x119a/0x1ad0 fs/namespace.c:3316\n do_mount+0xfc/0x110 fs/namespace.c:3329\n __do_sys_mount fs/namespace.c:3540 [inline]\n __se_sys_mount+0x219/0x2e0 fs/namespace.c:3514\n do_syscall_64+0x33/0x40 arch/x86/entry/common.c:46\n entry_SYSCALL_64_after_hwframe+0x67/0xd1\n\nMemory state around the buggy address:\n ffff88807b002f00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n ffff88807b002f80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n\u003effff88807b003000: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\n                   ^\n ffff88807b003080: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\n ffff88807b003100: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\n\nAbove issue happens as ext4_xattr_delete_inode() isn't check xattr\nis valid if xattr is in inode.\nTo solve above issue call xattr_check_inode() check if xattr if valid\nin inode. In fact, we can directly verify in ext4_iget_extra_inode(),\nso that there is no divergent verification.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22124",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmd/md-bitmap: fix wrong bitmap_limit for clustermd when write sb\n\nIn clustermd, separate write-intent-bitmaps are used for each cluster\nnode:\n\n0                    4k                     8k                    12k\n-------------------------------------------------------------------\n| idle                | md super            | bm super [0] + bits |\n| bm bits[0, contd]   | bm super[1] + bits  | bm bits[1, contd]   |\n| bm super[2] + bits  | bm bits [2, contd]  | bm super[3] + bits  |\n| bm bits [3, contd]  |                     |                     |\n\nSo in node 1, pg_index in __write_sb_page() could equal to\nbitmap-\u003estorage.file_pages. Then bitmap_limit will be calculated to\n0. md_super_write() will be called with 0 size.\nThat means the first 4k sb area of node 1 will never be updated\nthrough filemap_write_page().\nThis bug causes hang of mdadm/clustermd_tests/01r1_Grow_resize.\n\nHere use (pg_index % bitmap-\u003estorage.file_pages) to make calculation\nof bitmap_limit correct.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22125",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmd/raid1,raid10: don't ignore IO flags\n\nIf blk-wbt is enabled by default, it's found that raid write performance\nis quite bad because all IO are throttled by wbt of underlying disks,\ndue to flag REQ_IDLE is ignored. And turns out this behaviour exist since\nblk-wbt is introduced.\n\nOther than REQ_IDLE, other flags should not be ignored as well, for\nexample REQ_META can be set for filesystems, clearing it can cause priority\nreverse problems; And REQ_NOWAIT should not be cleared as well, because\nio will wait instead of failing directly in underlying disks.\n\nFix those problems by keep IO flags from master bio.\n\nFises: f51d46d0e7cb (\"md: add support for REQ_NOWAIT\")",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22126",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmd: fix mddev uaf while iterating all_mddevs list\n\nWhile iterating all_mddevs list from md_notify_reboot() and md_exit(),\nlist_for_each_entry_safe is used, and this can race with deletint the\nnext mddev, causing UAF:\n\nt1:\nspin_lock\n//list_for_each_entry_safe(mddev, n, ...)\n mddev_get(mddev1)\n // assume mddev2 is the next entry\n spin_unlock\n            t2:\n            //remove mddev2\n            ...\n            mddev_free\n            spin_lock\n            list_del\n            spin_unlock\n            kfree(mddev2)\n mddev_put(mddev1)\n spin_lock\n //continue dereference mddev2-\u003eall_mddevs\n\nThe old helper for_each_mddev() actually grab the reference of mddev2\nwhile holding the lock, to prevent from being freed. This problem can be\nfixed the same way, however, the code will be complex.\n\nHence switch to use list_for_each_entry, in this case mddev_put() can free\nthe mddev1 and it's not safe as well. Refer to md_seq_show(), also factor\nout a helper mddev_put_locked() to fix this problem.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22128",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: Clear affinity hint before calling ath12k_pci_free_irq() in error path\n\nIf a shared IRQ is used by the driver due to platform limitation, then the\nIRQ affinity hint is set right after the allocation of IRQ vectors in\nath12k_pci_msi_alloc(). This does no harm unless one of the functions\nrequesting the IRQ fails and attempt to free the IRQ.\n\nThis may end up with a warning from the IRQ core that is expecting the\naffinity hint to be cleared before freeing the IRQ:\n\nkernel/irq/manage.c:\n\n\t/* make sure affinity_hint is cleaned up */\n\tif (WARN_ON_ONCE(desc-\u003eaffinity_hint))\n\t\tdesc-\u003eaffinity_hint = NULL;\n\nSo to fix this issue, clear the IRQ affinity hint before calling\nath12k_pci_free_irq() in the error path. The affinity will be cleared once\nagain further down the error path due to code organization, but that does\nno harm.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22868",
      "Description": "An attacker can pass a malicious malformed token which causes unexpected memory to be consumed during parsing.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22869",
      "Description": "SSH servers which implement file transfer protocols are vulnerable to a denial of service attack from clients which complete the key exchange slowly, or not at all, causing pending content to be read into memory, but never transmitted.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-22872",
      "Description": "The tokenizer incorrectly interprets tags with unquoted attribute values that end with a solidus character (/) as self-closing. When directly using Tokenizer, this can result in such tags incorrectly being marked as self-closing, and when using the Parse functions, this can result in content following such tags as being placed in the wrong scope during DOM construction, but only when tags are in foreign content (e.g. \u003cmath\u003e, \u003csvg\u003e, etc contexts).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-23129",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath11k: Clear affinity hint before calling ath11k_pcic_free_irq() in error path\n\nIf a shared IRQ is used by the driver due to platform limitation, then the\nIRQ affinity hint is set right after the allocation of IRQ vectors in\nath11k_pci_alloc_msi(). This does no harm unless one of the functions\nrequesting the IRQ fails and attempt to free the IRQ. This results in the\nbelow warning:\n\nWARNING: CPU: 7 PID: 349 at kernel/irq/manage.c:1929 free_irq+0x278/0x29c\nCall trace:\n free_irq+0x278/0x29c\n ath11k_pcic_free_irq+0x70/0x10c [ath11k]\n ath11k_pci_probe+0x800/0x820 [ath11k_pci]\n local_pci_probe+0x40/0xbc\n\nThe warning is due to not clearing the affinity hint before freeing the\nIRQs.\n\nSo to fix this issue, clear the IRQ affinity hint before calling\nath11k_pcic_free_irq() in the error path. The affinity will be cleared once\nagain further down the error path due to code organization, but that does\nno harm.\n\nTested-on: QCA6390 hw2.0 PCI WLAN.HST.1.0.1-05266-QCAHSTSWPLZ_V2_TO_X86-1",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-23131",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndlm: prevent NPD when writing a positive value to event_done\n\ndo_uevent returns the value written to event_done. In case it is a\npositive value, new_lockspace would undo all the work, and lockspace\nwould not be set. __dlm_new_lockspace, however, would treat that\npositive value as a success due to commit 8511a2728ab8 (\"dlm: fix use\ncount with multiple joins\").\n\nDown the line, device_create_lockspace would pass that NULL lockspace to\ndlm_find_lockspace_local, leading to a NULL pointer dereference.\n\nTreating such positive values as successes prevents the problem. Given\nthis has been broken for so long, this is unlikely to break userspace\nexpectations.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-23133",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath11k: update channel list in reg notifier instead reg worker\n\nCurrently when ath11k gets a new channel list, it will be processed\naccording to the following steps:\n1. update new channel list to cfg80211 and queue reg_work.\n2. cfg80211 handles new channel list during reg_work.\n3. update cfg80211's handled channel list to firmware by\nath11k_reg_update_chan_list().\n\nBut ath11k will immediately execute step 3 after reg_work is just\nqueued. Since step 2 is asynchronous, cfg80211 may not have completed\nhandling the new channel list, which may leading to an out-of-bounds\nwrite error:\nBUG: KASAN: slab-out-of-bounds in ath11k_reg_update_chan_list\nCall Trace:\n    ath11k_reg_update_chan_list+0xbfe/0xfe0 [ath11k]\n    kfree+0x109/0x3a0\n    ath11k_regd_update+0x1cf/0x350 [ath11k]\n    ath11k_regd_update_work+0x14/0x20 [ath11k]\n    process_one_work+0xe35/0x14c0\n\nShould ensure step 2 is completely done before executing step 3. Thus\nWen raised patch[1]. When flag NL80211_REGDOM_SET_BY_DRIVER is set,\ncfg80211 will notify ath11k after step 2 is done.\n\nSo enable the flag NL80211_REGDOM_SET_BY_DRIVER then cfg80211 will\nnotify ath11k after step 2 is done. At this time, there will be no\nKASAN bug during the execution of the step 3.\n\n[1] https://patchwork.kernel.org/project/linux-wireless/patch/20230201065313.27203-1-quic_wgong@quicinc.com/\n\nTested-on: WCN6855 hw2.0 PCI WLAN.HSP.1.1-03125-QCAHSPSWPL_V1_V2_SILICONZ_LITE-3",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-23136",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nthermal: int340x: Add NULL check for adev\n\nNot all devices have an ACPI companion fwnode, so adev might be NULL.\nThis is similar to the commit cd2fd6eab480\n(\"platform/x86: int3472: Check for adev == NULL\").\n\nAdd a check for adev not being set and return -ENODEV in that case to\navoid a possible NULL pointer deref in int3402_thermal_probe().\n\nNote, under the same directory, int3400_thermal_probe() has such a\ncheck.\n\n[ rjw: Subject edit, added Fixes: ]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-23138",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwatch_queue: fix pipe accounting mismatch\n\nCurrently, watch_queue_set_size() modifies the pipe buffers charged to\nuser-\u003epipe_bufs without updating the pipe-\u003enr_accounted on the pipe\nitself, due to the if (!pipe_has_watch_queue()) test in\npipe_resize_ring(). This means that when the pipe is ultimately freed,\nwe decrement user-\u003epipe_bufs by something other than what than we had\ncharged to it, potentially leading to an underflow. This in turn can\ncause subsequent too_many_pipe_buffers_soft() tests to fail with -EPERM.\n\nTo remedy this, explicitly account for the pipe usage in\nwatch_queue_set_size() to match the number set via account_pipe_buffers()\n\n(It's unclear why watch_queue_set_size() does not update nr_accounted;\nit may be due to intentional overprovisioning in watch_queue_set_size()?)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-23140",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmisc: pci_endpoint_test: Avoid issue of interrupts remaining after request_irq error\n\nAfter devm_request_irq() fails with error in pci_endpoint_test_request_irq(),\nthe pci_endpoint_test_free_irq_vectors() is called assuming that all IRQs\nhave been released.\n\nHowever, some requested IRQs remain unreleased, so there are still\n/proc/irq/* entries remaining, and this results in WARN() with the\nfollowing message:\n\n  remove_proc_entry: removing non-empty directory 'irq/30', leaking at least 'pci-endpoint-test.0'\n  WARNING: CPU: 0 PID: 202 at fs/proc/generic.c:719 remove_proc_entry +0x190/0x19c\n\nTo solve this issue, set the number of remaining IRQs to test-\u003enum_irqs,\nand release IRQs in advance by calling pci_endpoint_test_release_irq().\n\n[kwilczynski: commit log]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-23141",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: x86: Acquire SRCU in KVM_GET_MP_STATE to protect guest memory accesses\n\nAcquire a lock on kvm-\u003esrcu when userspace is getting MP state to handle a\nrather extreme edge case where \"accepting\" APIC events, i.e. processing\npending INIT or SIPI, can trigger accesses to guest memory.  If the vCPU\nis in L2 with INIT *and* a TRIPLE_FAULT request pending, then getting MP\nstate will trigger a nested VM-Exit by way of -\u003echeck_nested_events(), and\nemuating the nested VM-Exit can access guest memory.\n\nThe splat was originally hit by syzkaller on a Google-internal kernel, and\nreproduced on an upstream kernel by hacking the triple_fault_event_test\nselftest to stuff a pending INIT, store an MSR on VM-Exit (to generate a\nmemory access on VMX), and do vcpu_mp_state_get() to trigger the scenario.\n\n  =============================\n  WARNING: suspicious RCU usage\n  6.14.0-rc3-b112d356288b-vmx/pi_lockdep_false_pos-lock #3 Not tainted\n  -----------------------------\n  include/linux/kvm_host.h:1058 suspicious rcu_dereference_check() usage!\n\n  other info that might help us debug this:\n\n  rcu_scheduler_active = 2, debug_locks = 1\n  1 lock held by triple_fault_ev/1256:\n   #0: ffff88810df5a330 (\u0026vcpu-\u003emutex){+.+.}-{4:4}, at: kvm_vcpu_ioctl+0x8b/0x9a0 [kvm]\n\n  stack backtrace:\n  CPU: 11 UID: 1000 PID: 1256 Comm: triple_fault_ev Not tainted 6.14.0-rc3-b112d356288b-vmx #3\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02/06/2015\n  Call Trace:\n   \u003cTASK\u003e\n   dump_stack_lvl+0x7f/0x90\n   lockdep_rcu_suspicious+0x144/0x190\n   kvm_vcpu_gfn_to_memslot+0x156/0x180 [kvm]\n   kvm_vcpu_read_guest+0x3e/0x90 [kvm]\n   read_and_check_msr_entry+0x2e/0x180 [kvm_intel]\n   __nested_vmx_vmexit+0x550/0xde0 [kvm_intel]\n   kvm_check_nested_events+0x1b/0x30 [kvm]\n   kvm_apic_accept_events+0x33/0x100 [kvm]\n   kvm_arch_vcpu_ioctl_get_mpstate+0x30/0x1d0 [kvm]\n   kvm_vcpu_ioctl+0x33e/0x9a0 [kvm]\n   __x64_sys_ioctl+0x8b/0xb0\n   do_syscall_64+0x6c/0x170\n   entry_SYSCALL_64_after_hwframe+0x4b/0x53\n   \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-23142",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsctp: detect and prevent references to a freed transport in sendmsg\n\nsctp_sendmsg() re-uses associations and transports when possible by\ndoing a lookup based on the socket endpoint and the message destination\naddress, and then sctp_sendmsg_to_asoc() sets the selected transport in\nall the message chunks to be sent.\n\nThere's a possible race condition if another thread triggers the removal\nof that selected transport, for instance, by explicitly unbinding an\naddress with setsockopt(SCTP_SOCKOPT_BINDX_REM), after the chunks have\nbeen set up and before the message is sent. This can happen if the send\nbuffer is full, during the period when the sender thread temporarily\nreleases the socket lock in sctp_wait_for_sndbuf().\n\nThis causes the access to the transport data in\nsctp_outq_select_transport(), when the association outqueue is flushed,\nto result in a use-after-free read.\n\nThis change avoids this scenario by having sctp_transport_free() signal\nthe freeing of the transport, tagging it as \"dead\". In order to do this,\nthe patch restores the \"dead\" bit in struct sctp_transport, which was\nremoved in\ncommit 47faa1e4c50e (\"sctp: remove the dead field of sctp_transport\").\n\nThen, in the scenario where the sender thread has released the socket\nlock in sctp_wait_for_sndbuf(), the bit is checked again after\nre-acquiring the socket lock to detect the deletion. This is done while\nholding a reference to the transport to prevent it from being freed in\nthe process.\n\nIf the transport was deleted while the socket lock was relinquished,\nsctp_sendmsg_to_asoc() will return -EAGAIN to let userspace retry the\nsend.\n\nThe bug was found by a private syzbot instance (see the error report [1]\nand the C reproducer that triggers it [2]).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-23144",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbacklight: led_bl: Hold led_access lock when calling led_sysfs_disable()\n\nLockdep detects the following issue on led-backlight removal:\n  [  142.315935] ------------[ cut here ]------------\n  [  142.315954] WARNING: CPU: 2 PID: 292 at drivers/leds/led-core.c:455 led_sysfs_enable+0x54/0x80\n  ...\n  [  142.500725] Call trace:\n  [  142.503176]  led_sysfs_enable+0x54/0x80 (P)\n  [  142.507370]  led_bl_remove+0x80/0xa8 [led_bl]\n  [  142.511742]  platform_remove+0x30/0x58\n  [  142.515501]  device_remove+0x54/0x90\n  ...\n\nIndeed, led_sysfs_enable() has to be called with the led_access\nlock held.\n\nHold the lock when calling led_sysfs_disable().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-23145",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: fix NULL pointer in can_accept_new_subflow\n\nWhen testing valkey benchmark tool with MPTCP, the kernel panics in\n'mptcp_can_accept_new_subflow' because subflow_req-\u003emsk is NULL.\n\nCall trace:\n\n  mptcp_can_accept_new_subflow (./net/mptcp/subflow.c:63 (discriminator 4)) (P)\n  subflow_syn_recv_sock (./net/mptcp/subflow.c:854)\n  tcp_check_req (./net/ipv4/tcp_minisocks.c:863)\n  tcp_v4_rcv (./net/ipv4/tcp_ipv4.c:2268)\n  ip_protocol_deliver_rcu (./net/ipv4/ip_input.c:207)\n  ip_local_deliver_finish (./net/ipv4/ip_input.c:234)\n  ip_local_deliver (./net/ipv4/ip_input.c:254)\n  ip_rcv_finish (./net/ipv4/ip_input.c:449)\n  ...\n\nAccording to the debug log, the same req received two SYN-ACK in a very\nshort time, very likely because the client retransmits the syn ack due\nto multiple reasons.\n\nEven if the packets are transmitted with a relevant time interval, they\ncan be processed by the server on different CPUs concurrently). The\n'subflow_req-\u003emsk' ownership is transferred to the subflow the first,\nand there will be a risk of a null pointer dereference here.\n\nThis patch fixes this issue by moving the 'subflow_req-\u003emsk' under the\n`own_req == true` conditional.\n\nNote that the !msk check in subflow_hmac_valid() can be dropped, because\nthe same check already exists under the own_req mpj branch where the\ncode has been moved to.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-23146",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmfd: ene-kb3930: Fix a potential NULL pointer dereference\n\nThe off_gpios could be NULL. Add missing check in the kb3930_probe().\nThis is similar to the issue fixed in commit b1ba8bcb2d1f\n(\"backlight: hx8357: Fix potential NULL pointer dereference\").\n\nThis was detected by our static analysis tool.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-23147",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni3c: Add NULL pointer check in i3c_master_queue_ibi()\n\nThe I3C master driver may receive an IBI from a target device that has not\nbeen probed yet. In such cases, the master calls `i3c_master_queue_ibi()`\nto queue an IBI work task, leading to \"Unable to handle kernel read from\nunreadable memory\" and resulting in a kernel panic.\n\nTypical IBI handling flow:\n1. The I3C master scans target devices and probes their respective drivers.\n2. The target device driver calls `i3c_device_request_ibi()` to enable IBI\n   and assigns `dev-\u003eibi = ibi`.\n3. The I3C master receives an IBI from the target device and calls\n   `i3c_master_queue_ibi()` to queue the target device driver's IBI\n   handler task.\n\nHowever, since target device events are asynchronous to the I3C probe\nsequence, step 3 may occur before step 2, causing `dev-\u003eibi` to be `NULL`,\nleading to a kernel panic.\n\nAdd a NULL pointer check in `i3c_master_queue_ibi()` to prevent accessing\nan uninitialized `dev-\u003eibi`, ensuring stability.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-23148",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsoc: samsung: exynos-chipid: Add NULL pointer check in exynos_chipid_probe()\n\nsoc_dev_attr-\u003erevision could be NULL, thus,\na pointer check is added to prevent potential NULL pointer dereference.\nThis is similar to the fix in commit 3027e7b15b02\n(\"ice: Fix some null pointer dereference issues in ice_ptp.c\").\n\nThis issue is found by our static analysis tool.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-23149",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntpm: do not start chip while suspended\n\nChecking TPM_CHIP_FLAG_SUSPENDED after the call to tpm_find_get_ops() can\nlead to a spurious tpm_chip_start() call:\n\n[35985.503771] i2c i2c-1: Transfer while suspended\n[35985.503796] WARNING: CPU: 0 PID: 74 at drivers/i2c/i2c-core.h:56 __i2c_transfer+0xbe/0x810\n[35985.503802] Modules linked in:\n[35985.503808] CPU: 0 UID: 0 PID: 74 Comm: hwrng Tainted: G        W          6.13.0-next-20250203-00005-gfa0cb5642941 #19 9c3d7f78192f2d38e32010ac9c90fdc71109ef6f\n[35985.503814] Tainted: [W]=WARN\n[35985.503817] Hardware name: Google Morphius/Morphius, BIOS Google_Morphius.13434.858.0 10/26/2023\n[35985.503819] RIP: 0010:__i2c_transfer+0xbe/0x810\n[35985.503825] Code: 30 01 00 00 4c 89 f7 e8 40 fe d8 ff 48 8b 93 80 01 00 00 48 85 d2 75 03 49 8b 16 48 c7 c7 0a fb 7c a7 48 89 c6 e8 32 ad b0 fe \u003c0f\u003e 0b b8 94 ff ff ff e9 33 04 00 00 be 02 00 00 00 83 fd 02 0f 5\n[35985.503828] RSP: 0018:ffffa106c0333d30 EFLAGS: 00010246\n[35985.503833] RAX: 074ba64aa20f7000 RBX: ffff8aa4c1167120 RCX: 0000000000000000\n[35985.503836] RDX: 0000000000000000 RSI: ffffffffa77ab0e4 RDI: 0000000000000001\n[35985.503838] RBP: 0000000000000001 R08: 0000000000000001 R09: 0000000000000000\n[35985.503841] R10: 0000000000000004 R11: 00000001000313d5 R12: ffff8aa4c10f1820\n[35985.503843] R13: ffff8aa4c0e243c0 R14: ffff8aa4c1167250 R15: ffff8aa4c1167120\n[35985.503846] FS:  0000000000000000(0000) GS:ffff8aa4eae00000(0000) knlGS:0000000000000000\n[35985.503849] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[35985.503852] CR2: 00007fab0aaf1000 CR3: 0000000105328000 CR4: 00000000003506f0\n[35985.503855] Call Trace:\n[35985.503859]  \u003cTASK\u003e\n[35985.503863]  ? __warn+0xd4/0x260\n[35985.503868]  ? __i2c_transfer+0xbe/0x810\n[35985.503874]  ? report_bug+0xf3/0x210\n[35985.503882]  ? handle_bug+0x63/0xb0\n[35985.503887]  ? exc_invalid_op+0x16/0x50\n[35985.503892]  ? asm_exc_invalid_op+0x16/0x20\n[35985.503904]  ? __i2c_transfer+0xbe/0x810\n[35985.503913]  tpm_cr50_i2c_transfer_message+0x24/0xf0\n[35985.503920]  tpm_cr50_i2c_read+0x8e/0x120\n[35985.503928]  tpm_cr50_request_locality+0x75/0x170\n[35985.503935]  tpm_chip_start+0x116/0x160\n[35985.503942]  tpm_try_get_ops+0x57/0x90\n[35985.503948]  tpm_find_get_ops+0x26/0xd0\n[35985.503955]  tpm_get_random+0x2d/0x80\n\nDon't move forward with tpm_chip_start() inside tpm_try_get_ops(), unless\nTPM_CHIP_FLAG_SUSPENDED is not set. tpm_find_get_ops() will return NULL in\nsuch a failure case.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-23150",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix off-by-one error in do_split\n\nSyzkaller detected a use-after-free issue in ext4_insert_dentry that was\ncaused by out-of-bounds access due to incorrect splitting in do_split.\n\nBUG: KASAN: use-after-free in ext4_insert_dentry+0x36a/0x6d0 fs/ext4/namei.c:2109\nWrite of size 251 at addr ffff888074572f14 by task syz-executor335/5847\n\nCPU: 0 UID: 0 PID: 5847 Comm: syz-executor335 Not tainted 6.12.0-rc6-syzkaller-00318-ga9cda7c0ffed #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 10/30/2024\nCall Trace:\n \u003cTASK\u003e\n __dump_stack lib/dump_stack.c:94 [inline]\n dump_stack_lvl+0x241/0x360 lib/dump_stack.c:120\n print_address_description mm/kasan/report.c:377 [inline]\n print_report+0x169/0x550 mm/kasan/report.c:488\n kasan_report+0x143/0x180 mm/kasan/report.c:601\n kasan_check_range+0x282/0x290 mm/kasan/generic.c:189\n __asan_memcpy+0x40/0x70 mm/kasan/shadow.c:106\n ext4_insert_dentry+0x36a/0x6d0 fs/ext4/namei.c:2109\n add_dirent_to_buf+0x3d9/0x750 fs/ext4/namei.c:2154\n make_indexed_dir+0xf98/0x1600 fs/ext4/namei.c:2351\n ext4_add_entry+0x222a/0x25d0 fs/ext4/namei.c:2455\n ext4_add_nondir+0x8d/0x290 fs/ext4/namei.c:2796\n ext4_symlink+0x920/0xb50 fs/ext4/namei.c:3431\n vfs_symlink+0x137/0x2e0 fs/namei.c:4615\n do_symlinkat+0x222/0x3a0 fs/namei.c:4641\n __do_sys_symlink fs/namei.c:4662 [inline]\n __se_sys_symlink fs/namei.c:4660 [inline]\n __x64_sys_symlink+0x7a/0x90 fs/namei.c:4660\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n \u003c/TASK\u003e\n\nThe following loop is located right above 'if' statement.\n\nfor (i = count-1; i \u003e= 0; i--) {\n\t/* is more than half of this entry in 2nd half of the block? */\n\tif (size + map[i].size/2 \u003e blocksize/2)\n\t\tbreak;\n\tsize += map[i].size;\n\tmove++;\n}\n\n'i' in this case could go down to -1, in which case sum of active entries\nwouldn't exceed half the block size, but previous behaviour would also do\nsplit in half if sum would exceed at the very last block, which in case of\nhaving too many long name files in a single block could lead to\nout-of-bounds access and following use-after-free.\n\nFound by Linux Verification Center (linuxtesting.org) with Syzkaller.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-23151",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbus: mhi: host: Fix race between unprepare and queue_buf\n\nA client driver may use mhi_unprepare_from_transfer() to quiesce\nincoming data during the client driver's tear down. The client driver\nmight also be processing data at the same time, resulting in a call to\nmhi_queue_buf() which will invoke mhi_gen_tre(). If mhi_gen_tre() runs\nafter mhi_unprepare_from_transfer() has torn down the channel, a panic\nwill occur due to an invalid dereference leading to a page fault.\n\nThis occurs because mhi_gen_tre() does not verify the channel state\nafter locking it. Fix this by having mhi_gen_tre() confirm the channel\nstate is valid, or return error to avoid accessing deinitialized data.\n\n[mani: added stable tag]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-23155",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: stmmac: Fix accessing freed irq affinity_hint\n\nIn stmmac_request_irq_multi_msi(), a pointer to the stack variable\ncpu_mask is passed to irq_set_affinity_hint(). This value is stored in\nirq_desc-\u003eaffinity_hint, but once stmmac_request_irq_multi_msi()\nreturns, the pointer becomes dangling.\n\nThe affinity_hint is exposed via procfs with S_IRUGO permissions,\nallowing any unprivileged process to read it. Accessing this stale\npointer can lead to:\n\n- a kernel oops or panic if the referenced memory has been released and\n  unmapped, or\n- leakage of kernel data into userspace if the memory is re-used for\n  other purposes.\n\nAll platforms that use stmmac with PCI MSI (Intel, Loongson, etc) are\naffected.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-23156",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: venus: hfi_parser: refactor hfi packet parsing logic\n\nwords_count denotes the number of words in total payload, while data\npoints to payload of various property within it. When words_count\nreaches last word, data can access memory beyond the total payload. This\ncan lead to OOB access. With this patch, the utility api for handling\nindividual properties now returns the size of data consumed. Accordingly\nremaining bytes are calculated before parsing the payload, thereby\neliminates the OOB access possibilities.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-23157",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: venus: hfi_parser: add check to avoid out of bound access\n\nThere is a possibility that init_codecs is invoked multiple times during\nmanipulated payload from video firmware. In such case, if codecs_count\ncan get incremented to value more than MAX_CODEC_NUM, there can be OOB\naccess. Reset the count so that it always starts from beginning.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-23158",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: venus: hfi: add check to handle incorrect queue size\n\nqsize represents size of shared queued between driver and video\nfirmware. Firmware can modify this value to an invalid large value. In\nsuch situation, empty_space will be bigger than the space actually\navailable. Since new_wr_idx is not checked, so the following code will\nresult in an OOB write.\n...\nqsize = qhdr-\u003eq_size\n\nif (wr_idx \u003e= rd_idx)\n empty_space = qsize - (wr_idx - rd_idx)\n....\nif (new_wr_idx \u003c qsize) {\n memcpy(wr_ptr, packet, dwords \u003c\u003c 2) --\u003e OOB write\n\nAdd check to ensure qsize is within the allocated size while\nreading and writing packets into the queue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-23159",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: venus: hfi: add a check to handle OOB in sfr region\n\nsfr-\u003ebuf_size is in shared memory and can be modified by malicious user.\nOOB write is possible when the size is made higher than actual sfr data\nbuffer. Cap the size to allocated size for such cases.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-23160",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: mediatek: vcodec: Fix a resource leak related to the scp device in FW initialization\n\nOn Mediatek devices with a system companion processor (SCP) the mtk_scp\nstructure has to be removed explicitly to avoid a resource leak.\nFree the structure in case the allocation of the firmware structure fails\nduring the firmware initialization.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-23161",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nPCI: vmd: Make vmd_dev::cfg_lock a raw_spinlock_t type\n\nThe access to the PCI config space via pci_ops::read and pci_ops::write is\na low-level hardware access. The functions can be accessed with disabled\ninterrupts even on PREEMPT_RT. The pci_lock is a raw_spinlock_t for this\npurpose.\n\nA spinlock_t becomes a sleeping lock on PREEMPT_RT, so it cannot be\nacquired with disabled interrupts. The vmd_dev::cfg_lock is accessed in\nthe same context as the pci_lock.\n\nMake vmd_dev::cfg_lock a raw_spinlock_t type so it can be used with\ninterrupts disabled.\n\nThis was reported as:\n\n  BUG: sleeping function called from invalid context at kernel/locking/spinlock_rt.c:48\n  Call Trace:\n   rt_spin_lock+0x4e/0x130\n   vmd_pci_read+0x8d/0x100 [vmd]\n   pci_user_read_config_byte+0x6f/0xe0\n   pci_read_config+0xfe/0x290\n   sysfs_kf_bin_read+0x68/0x90\n\n[bigeasy: reword commit message]\nTested-off-by: Luis Claudio R. Goncalves \u003clgoncalv@redhat.com\u003e\n[kwilczynski: commit log]\n[bhelgaas: add back report info from\nhttps://lore.kernel.org/lkml/20241218115951.83062-1-ryotkkr98@gmail.com/]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-2588",
      "Description": "A vulnerability has been found in Hercules Augeas 1.14.1 and classified as problematic. This vulnerability affects the function re_case_expand of the file src/fa.c. The manipulation of the argument re leads to null pointer dereference. Attacking locally is a requirement. The exploit has been disclosed to the public and may be used.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-27587",
      "Description": "OpenSSL 3.0.0 through 3.3.2 on the PowerPC architecture is vulnerable to a Minerva attack, exploitable by measuring the time of signing of random messages using the EVP_DigestSign API, and then using the private key to extract the K value (nonce) from the signatures. Next, based on the bit size of the extracted nonce, one can compare the signing time of full-sized nonces to signatures that used smaller nonces, via statistical tests. There is a side-channel in the P-364 curve that allows private key extraction (also, there is a dependency between the bit size of K and the size of the side channel). NOTE: This CVE is disputed because the OpenSSL security policy explicitly notes that any side channels which require same physical system to be detected are outside of the threat model for the software. The timing signal is so small that it is infeasible to be detected without having the attacking process running on the same physical system.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-29087",
      "Description": "In SQLite 3.44.0 through 3.49.0 before 3.49.1, the concat_ws() SQL function can cause memory to be written beyond the end of a malloc-allocated buffer. If the separator argument is attacker-controlled and has a large string (e.g., 2MB or more), an integer overflow occurs in calculating the size of the result buffer, and thus malloc may not allocate enough memory.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-29088",
      "Description": "In SQLite 3.49.0 before 3.49.1, certain argument values to sqlite3_db_config (in the C-language API) can cause a denial of service (application crash). An sz*nBig multiplication is not cast to a 64-bit integer, and consequently some memory allocations may be incorrect.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-30258",
      "Description": "In GnuPG before 2.5.5, if a user chooses to import a certificate with certain crafted subkey data that lacks a valid backsig or that has incorrect usage flags, the user loses the ability to verify signatures made from certain other signing keys, aka a \"verification DoS.\"",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-31115",
      "Description": "XZ Utils provide a general-purpose data-compression library plus command-line tools. In XZ Utils 5.3.3alpha to 5.8.0, the multithreaded .xz decoder in liblzma has a bug where invalid input can at least result in a crash. The effects include heap use after free and writing to an address based on the null pointer plus an offset. Applications and libraries that use the lzma_stream_decoder_mt function are affected. The bug has been fixed in XZ Utils 5.8.1, and the fix has been committed to the v5.4, v5.6, v5.8, and master branches in the xz Git repository. No new release packages will be made from the old stable branches, but a standalone patch is available that applies to all affected releases.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-32414",
      "Description": "In libxml2 before 2.13.8 and 2.14.x before 2.14.2, out-of-bounds memory access can occur in the Python API (Python bindings) because of an incorrect return value. This occurs in xmlPythonFileRead and xmlPythonFileReadRaw because of a difference between bytes and characters.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-32415",
      "Description": "In libxml2 before 2.13.8 and 2.14.x before 2.14.2, xmlSchemaIDCFillNodeTables in xmlschemas.c has a heap-based buffer under-read. To exploit this, a crafted XML document must be validated against an XML schema with certain identity constraints, or a crafted XML schema must be used.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-32462",
      "Description": "Sudo before 1.9.17p1, when used with a sudoers file that specifies a host that is neither the current host nor ALL, allows listed users to execute commands on unintended machines.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-32463",
      "Description": "Sudo before 1.9.17p1 allows local users to obtain root access because /etc/nsswitch.conf from a user-controlled directory is used with the --chroot option.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-3360",
      "Description": "A flaw was found in GLib. An integer overflow and buffer under-read occur when parsing a long invalid ISO 8601 timestamp with the g_date_time_new_from_iso8601() function.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-3416",
      "Description": "A flaw was found in OpenSSL's handling of the properties argument in certain functions. This vulnerability can allow use-after-free exploitation, which may result in undefined behavior or incorrect property parsing, leading to OpenSSL treating the input as an empty string.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37738",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: ignore xattrs past end\n\nOnce inside 'ext4_xattr_inode_dec_ref_all' we should\nignore xattrs entries past the 'end' entry.\n\nThis fixes the following KASAN reported issue:\n\n==================================================================\nBUG: KASAN: slab-use-after-free in ext4_xattr_inode_dec_ref_all+0xb8c/0xe90\nRead of size 4 at addr ffff888012c120c4 by task repro/2065\n\nCPU: 1 UID: 0 PID: 2065 Comm: repro Not tainted 6.13.0-rc2+ #11\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl+0x1fd/0x300\n ? tcp_gro_dev_warn+0x260/0x260\n ? _printk+0xc0/0x100\n ? read_lock_is_recursive+0x10/0x10\n ? irq_work_queue+0x72/0xf0\n ? __virt_addr_valid+0x17b/0x4b0\n print_address_description+0x78/0x390\n print_report+0x107/0x1f0\n ? __virt_addr_valid+0x17b/0x4b0\n ? __virt_addr_valid+0x3ff/0x4b0\n ? __phys_addr+0xb5/0x160\n ? ext4_xattr_inode_dec_ref_all+0xb8c/0xe90\n kasan_report+0xcc/0x100\n ? ext4_xattr_inode_dec_ref_all+0xb8c/0xe90\n ext4_xattr_inode_dec_ref_all+0xb8c/0xe90\n ? ext4_xattr_delete_inode+0xd30/0xd30\n ? __ext4_journal_ensure_credits+0x5f0/0x5f0\n ? __ext4_journal_ensure_credits+0x2b/0x5f0\n ? inode_update_timestamps+0x410/0x410\n ext4_xattr_delete_inode+0xb64/0xd30\n ? ext4_truncate+0xb70/0xdc0\n ? ext4_expand_extra_isize_ea+0x1d20/0x1d20\n ? __ext4_mark_inode_dirty+0x670/0x670\n ? ext4_journal_check_start+0x16f/0x240\n ? ext4_inode_is_fast_symlink+0x2f2/0x3a0\n ext4_evict_inode+0xc8c/0xff0\n ? ext4_inode_is_fast_symlink+0x3a0/0x3a0\n ? do_raw_spin_unlock+0x53/0x8a0\n ? ext4_inode_is_fast_symlink+0x3a0/0x3a0\n evict+0x4ac/0x950\n ? proc_nr_inodes+0x310/0x310\n ? trace_ext4_drop_inode+0xa2/0x220\n ? _raw_spin_unlock+0x1a/0x30\n ? iput+0x4cb/0x7e0\n do_unlinkat+0x495/0x7c0\n ? try_break_deleg+0x120/0x120\n ? 0xffffffff81000000\n ? __check_object_size+0x15a/0x210\n ? strncpy_from_user+0x13e/0x250\n ? getname_flags+0x1dc/0x530\n __x64_sys_unlinkat+0xc8/0xf0\n do_syscall_64+0x65/0x110\n entry_SYSCALL_64_after_hwframe+0x67/0x6f\nRIP: 0033:0x434ffd\nCode: 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 8\nRSP: 002b:00007ffc50fa7b28 EFLAGS: 00000246 ORIG_RAX: 0000000000000107\nRAX: ffffffffffffffda RBX: 00007ffc50fa7e18 RCX: 0000000000434ffd\nRDX: 0000000000000000 RSI: 0000000020000240 RDI: 0000000000000005\nRBP: 00007ffc50fa7be0 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000001\nR13: 00007ffc50fa7e08 R14: 00000000004bbf30 R15: 0000000000000001\n \u003c/TASK\u003e\n\nThe buggy address belongs to the object at ffff888012c12000\n which belongs to the cache filp of size 360\nThe buggy address is located 196 bytes inside of\n freed 360-byte region [ffff888012c12000, ffff888012c12168)\n\nThe buggy address belongs to the physical page:\npage: refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x12c12\nhead: order:1 mapcount:0 entire_mapcount:0 nr_pages_mapped:0 pincount:0\nflags: 0x40(head|node=0|zone=0)\npage_type: f5(slab)\nraw: 0000000000000040 ffff888000ad7640 ffffea0000497a00 dead000000000004\nraw: 0000000000000000 0000000000100010 00000001f5000000 0000000000000000\nhead: 0000000000000040 ffff888000ad7640 ffffea0000497a00 dead000000000004\nhead: 0000000000000000 0000000000100010 00000001f5000000 0000000000000000\nhead: 0000000000000001 ffffea00004b0481 ffffffffffffffff 0000000000000000\nhead: 0000000000000002 0000000000000000 00000000ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\n\nMemory state around the buggy address:\n ffff888012c11f80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n ffff888012c12000: fa fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n\u003e ffff888012c12080: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n                                           ^\n ffff888012c12100: fb fb fb fb fb fb fb fb fb fb fb fb fb fc fc fc\n ffff888012c12180: fc fc fc fc fc fc fc fc fc\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37740",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\njfs: add sanity check for agwidth in dbMount\n\nThe width in dmapctl of the AG is zero, it trigger a divide error when\ncalculating the control page level in dbAllocAG.\n\nTo avoid this issue, add a check for agwidth in dbAllocAG.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37741",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\njfs: Prevent copying of nlink with value 0 from disk inode\n\nsyzbot report a deadlock in diFree. [1]\n\nWhen calling \"ioctl$LOOP_SET_STATUS64\", the offset value passed in is 4,\nwhich does not match the mounted loop device, causing the mapping of the\nmounted loop device to be invalidated.\n\nWhen creating the directory and creating the inode of iag in diReadSpecial(),\nread the page of fixed disk inode (AIT) in raw mode in read_metapage(), the\nmetapage data it returns is corrupted, which causes the nlink value of 0 to be\nassigned to the iag inode when executing copy_from_dinode(), which ultimately\ncauses a deadlock when entering diFree().\n\nTo avoid this, first check the nlink value of dinode before setting iag inode.\n\n[1]\nWARNING: possible recursive locking detected\n6.12.0-rc7-syzkaller-00212-g4a5df3796467 #0 Not tainted\n--------------------------------------------\nsyz-executor301/5309 is trying to acquire lock:\nffff888044548920 (\u0026(imap-\u003eim_aglock[index])){+.+.}-{3:3}, at: diFree+0x37c/0x2fb0 fs/jfs/jfs_imap.c:889\n\nbut task is already holding lock:\nffff888044548920 (\u0026(imap-\u003eim_aglock[index])){+.+.}-{3:3}, at: diAlloc+0x1b6/0x1630\n\nother info that might help us debug this:\n Possible unsafe locking scenario:\n\n       CPU0\n       ----\n  lock(\u0026(imap-\u003eim_aglock[index]));\n  lock(\u0026(imap-\u003eim_aglock[index]));\n\n *** DEADLOCK ***\n\n May be due to missing lock nesting notation\n\n5 locks held by syz-executor301/5309:\n #0: ffff8880422a4420 (sb_writers#9){.+.+}-{0:0}, at: mnt_want_write+0x3f/0x90 fs/namespace.c:515\n #1: ffff88804755b390 (\u0026type-\u003ei_mutex_dir_key#6/1){+.+.}-{3:3}, at: inode_lock_nested include/linux/fs.h:850 [inline]\n #1: ffff88804755b390 (\u0026type-\u003ei_mutex_dir_key#6/1){+.+.}-{3:3}, at: filename_create+0x260/0x540 fs/namei.c:4026\n #2: ffff888044548920 (\u0026(imap-\u003eim_aglock[index])){+.+.}-{3:3}, at: diAlloc+0x1b6/0x1630\n #3: ffff888044548890 (\u0026imap-\u003eim_freelock){+.+.}-{3:3}, at: diNewIAG fs/jfs/jfs_imap.c:2460 [inline]\n #3: ffff888044548890 (\u0026imap-\u003eim_freelock){+.+.}-{3:3}, at: diAllocExt fs/jfs/jfs_imap.c:1905 [inline]\n #3: ffff888044548890 (\u0026imap-\u003eim_freelock){+.+.}-{3:3}, at: diAllocAG+0x4b7/0x1e50 fs/jfs/jfs_imap.c:1669\n #4: ffff88804755a618 (\u0026jfs_ip-\u003erdwrlock/1){++++}-{3:3}, at: diNewIAG fs/jfs/jfs_imap.c:2477 [inline]\n #4: ffff88804755a618 (\u0026jfs_ip-\u003erdwrlock/1){++++}-{3:3}, at: diAllocExt fs/jfs/jfs_imap.c:1905 [inline]\n #4: ffff88804755a618 (\u0026jfs_ip-\u003erdwrlock/1){++++}-{3:3}, at: diAllocAG+0x869/0x1e50 fs/jfs/jfs_imap.c:1669\n\nstack backtrace:\nCPU: 0 UID: 0 PID: 5309 Comm: syz-executor301 Not tainted 6.12.0-rc7-syzkaller-00212-g4a5df3796467 #0\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2~bpo12+1 04/01/2014\nCall Trace:\n \u003cTASK\u003e\n __dump_stack lib/dump_stack.c:94 [inline]\n dump_stack_lvl+0x241/0x360 lib/dump_stack.c:120\n print_deadlock_bug+0x483/0x620 kernel/locking/lockdep.c:3037\n check_deadlock kernel/locking/lockdep.c:3089 [inline]\n validate_chain+0x15e2/0x5920 kernel/locking/lockdep.c:3891\n __lock_acquire+0x1384/0x2050 kernel/locking/lockdep.c:5202\n lock_acquire+0x1ed/0x550 kernel/locking/lockdep.c:5825\n __mutex_lock_common kernel/locking/mutex.c:608 [inline]\n __mutex_lock+0x136/0xd70 kernel/locking/mutex.c:752\n diFree+0x37c/0x2fb0 fs/jfs/jfs_imap.c:889\n jfs_evict_inode+0x32d/0x440 fs/jfs/inode.c:156\n evict+0x4e8/0x9b0 fs/inode.c:725\n diFreeSpecial fs/jfs/jfs_imap.c:552 [inline]\n duplicateIXtree+0x3c6/0x550 fs/jfs/jfs_imap.c:3022\n diNewIAG fs/jfs/jfs_imap.c:2597 [inline]\n diAllocExt fs/jfs/jfs_imap.c:1905 [inline]\n diAllocAG+0x17dc/0x1e50 fs/jfs/jfs_imap.c:1669\n diAlloc+0x1d2/0x1630 fs/jfs/jfs_imap.c:1590\n ialloc+0x8f/0x900 fs/jfs/jfs_inode.c:56\n jfs_mkdir+0x1c5/0xba0 fs/jfs/namei.c:225\n vfs_mkdir+0x2f9/0x4f0 fs/namei.c:4257\n do_mkdirat+0x264/0x3a0 fs/namei.c:4280\n __do_sys_mkdirat fs/namei.c:4295 [inline]\n __se_sys_mkdirat fs/namei.c:4293 [inline]\n __x64_sys_mkdirat+0x87/0xa0 fs/namei.c:4293\n do_syscall_x64 arch/x86/en\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37742",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\njfs: Fix uninit-value access of imap allocated in the diMount() function\n\nsyzbot reports that hex_dump_to_buffer is using uninit-value:\n\n=====================================================\nBUG: KMSAN: uninit-value in hex_dump_to_buffer+0x888/0x1100 lib/hexdump.c:171\nhex_dump_to_buffer+0x888/0x1100 lib/hexdump.c:171\nprint_hex_dump+0x13d/0x3e0 lib/hexdump.c:276\ndiFree+0x5ba/0x4350 fs/jfs/jfs_imap.c:876\njfs_evict_inode+0x510/0x550 fs/jfs/inode.c:156\nevict+0x723/0xd10 fs/inode.c:796\niput_final fs/inode.c:1946 [inline]\niput+0x97b/0xdb0 fs/inode.c:1972\ntxUpdateMap+0xf3e/0x1150 fs/jfs/jfs_txnmgr.c:2367\ntxLazyCommit fs/jfs/jfs_txnmgr.c:2664 [inline]\njfs_lazycommit+0x627/0x11d0 fs/jfs/jfs_txnmgr.c:2733\nkthread+0x6b9/0xef0 kernel/kthread.c:464\nret_from_fork+0x6d/0x90 arch/x86/kernel/process.c:148\nret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244\n\nUninit was created at:\nslab_post_alloc_hook mm/slub.c:4121 [inline]\nslab_alloc_node mm/slub.c:4164 [inline]\n__kmalloc_cache_noprof+0x8e3/0xdf0 mm/slub.c:4320\nkmalloc_noprof include/linux/slab.h:901 [inline]\ndiMount+0x61/0x7f0 fs/jfs/jfs_imap.c:105\njfs_mount+0xa8e/0x11d0 fs/jfs/jfs_mount.c:176\njfs_fill_super+0xa47/0x17c0 fs/jfs/super.c:523\nget_tree_bdev_flags+0x6ec/0x910 fs/super.c:1636\nget_tree_bdev+0x37/0x50 fs/super.c:1659\njfs_get_tree+0x34/0x40 fs/jfs/super.c:635\nvfs_get_tree+0xb1/0x5a0 fs/super.c:1814\ndo_new_mount+0x71f/0x15e0 fs/namespace.c:3560\npath_mount+0x742/0x1f10 fs/namespace.c:3887\ndo_mount fs/namespace.c:3900 [inline]\n__do_sys_mount fs/namespace.c:4111 [inline]\n__se_sys_mount+0x71f/0x800 fs/namespace.c:4088\n__x64_sys_mount+0xe4/0x150 fs/namespace.c:4088\nx64_sys_call+0x39bf/0x3c30 arch/x86/include/generated/asm/syscalls_64.h:166\ndo_syscall_x64 arch/x86/entry/common.c:52 [inline]\ndo_syscall_64+0xcd/0x1e0 arch/x86/entry/common.c:83\nentry_SYSCALL_64_after_hwframe+0x77/0x7f\n=====================================================\n\nThe reason is that imap is not properly initialized after memory\nallocation. It will cause the snprintf() function to write uninitialized\ndata into linebuf within hex_dump_to_buffer().\n\nFix this by using kzalloc instead of kmalloc to clear its content at the\nbeginning in diMount().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37743",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: Avoid memory leak while enabling statistics\n\nDriver uses monitor destination rings for extended statistics mode and\nstandalone monitor mode. In extended statistics mode, TLVs are parsed from\nthe buffer received from the monitor destination ring and assigned to the\nppdu_info structure to update per-packet statistics. In standalone monitor\nmode, along with per-packet statistics, the packet data (payload) is\ncaptured, and the driver updates per MSDU to mac80211.\n\nWhen the AP interface is enabled, only extended statistics mode is\nactivated. As part of enabling monitor rings for collecting statistics,\nthe driver subscribes to HAL_RX_MPDU_START TLV in the filter\nconfiguration. This TLV is received from the monitor destination ring, and\nkzalloc for the mon_mpdu object occurs, which is not freed, leading to a\nmemory leak. The kzalloc for the mon_mpdu object is only required while\nenabling the standalone monitor interface. This causes a memory leak while\nenabling extended statistics mode in the driver.\n\nFix this memory leak by removing the kzalloc for the mon_mpdu object in\nthe HAL_RX_MPDU_START TLV handling. Additionally, remove the standalone\nmonitor mode handlings in the HAL_MON_BUF_ADDR and HAL_RX_MSDU_END TLVs.\nThese TLV tags will be handled properly when enabling standalone monitor\nmode in the future.\n\nTested-on: QCN9274 hw2.0 PCI WLAN.WBE.1.3.1-00173-QCAHKSWPL_SILICONZ-1\nTested-on: WCN7850 hw2.0 PCI WLAN.HMT.1.0.c5-00481-QCAHMTSWPL_V1.0_V2.0_SILICONZ-3",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37748",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niommu/mediatek: Fix NULL pointer deference in mtk_iommu_device_group\n\nCurrently, mtk_iommu calls during probe iommu_device_register before\nthe hw_list from driver data is initialized. Since iommu probing issue\nfix, it leads to NULL pointer dereference in mtk_iommu_device_group when\nhw_list is accessed with list_first_entry (not null safe).\n\nSo, change the call order to ensure iommu_device_register is called\nafter the driver data are initialized.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37749",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ppp: Add bound checking for skb data on ppp_sync_txmung\n\nEnsure we have enough data in linear buffer from skb before accessing\ninitial bytes. This prevents potential out-of-bounds accesses\nwhen processing short packets.\n\nWhen ppp_sync_txmung receives an incoming package with an empty\npayload:\n(remote) gef\u003e\u003e  p *(struct pppoe_hdr *) (skb-\u003ehead + skb-\u003enetwork_header)\n$18 = {\n\ttype = 0x1,\n\tver = 0x1,\n\tcode = 0x0,\n\tsid = 0x2,\n        length = 0x0,\n\ttag = 0xffff8880371cdb96\n}\n\nfrom the skb struct (trimmed)\n      tail = 0x16,\n      end = 0x140,\n      head = 0xffff88803346f400 \"4\",\n      data = 0xffff88803346f416 \":\\377\",\n      truesize = 0x380,\n      len = 0x0,\n      data_len = 0x0,\n      mac_len = 0xe,\n      hdr_len = 0x0,\n\nit is not safe to access data[2].\n\n[pabeni@redhat.com: fixed subj typo]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37750",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix UAF in decryption with multichannel\n\nAfter commit f7025d861694 (\"smb: client: allocate crypto only for\nprimary server\") and commit b0abcd65ec54 (\"smb: client: fix UAF in\nasync decryption\"), the channels started reusing AEAD TFM from primary\nchannel to perform synchronous decryption, but that can't done as\nthere could be multiple cifsd threads (one per channel) simultaneously\naccessing it to perform decryption.\n\nThis fixes the following KASAN splat when running fstest generic/249\nwith 'vers=3.1.1,multichannel,max_channels=4,seal' against Windows\nServer 2022:\n\nBUG: KASAN: slab-use-after-free in gf128mul_4k_lle+0xba/0x110\nRead of size 8 at addr ffff8881046c18a0 by task cifsd/986\nCPU: 3 UID: 0 PID: 986 Comm: cifsd Not tainted 6.15.0-rc1 #1\nPREEMPT(voluntary)\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-3.fc41\n04/01/2014\nCall Trace:\n \u003cTASK\u003e\n dump_stack_lvl+0x5d/0x80\n print_report+0x156/0x528\n ? gf128mul_4k_lle+0xba/0x110\n ? __virt_addr_valid+0x145/0x300\n ? __phys_addr+0x46/0x90\n ? gf128mul_4k_lle+0xba/0x110\n kasan_report+0xdf/0x1a0\n ? gf128mul_4k_lle+0xba/0x110\n gf128mul_4k_lle+0xba/0x110\n ghash_update+0x189/0x210\n shash_ahash_update+0x295/0x370\n ? __pfx_shash_ahash_update+0x10/0x10\n ? __pfx_shash_ahash_update+0x10/0x10\n ? __pfx_extract_iter_to_sg+0x10/0x10\n ? ___kmalloc_large_node+0x10e/0x180\n ? __asan_memset+0x23/0x50\n crypto_ahash_update+0x3c/0xc0\n gcm_hash_assoc_remain_continue+0x93/0xc0\n crypt_message+0xe09/0xec0 [cifs]\n ? __pfx_crypt_message+0x10/0x10 [cifs]\n ? _raw_spin_unlock+0x23/0x40\n ? __pfx_cifs_readv_from_socket+0x10/0x10 [cifs]\n decrypt_raw_data+0x229/0x380 [cifs]\n ? __pfx_decrypt_raw_data+0x10/0x10 [cifs]\n ? __pfx_cifs_read_iter_from_socket+0x10/0x10 [cifs]\n smb3_receive_transform+0x837/0xc80 [cifs]\n ? __pfx_smb3_receive_transform+0x10/0x10 [cifs]\n ? __pfx___might_resched+0x10/0x10\n ? __pfx_smb3_is_transform_hdr+0x10/0x10 [cifs]\n cifs_demultiplex_thread+0x692/0x1570 [cifs]\n ? __pfx_cifs_demultiplex_thread+0x10/0x10 [cifs]\n ? rcu_is_watching+0x20/0x50\n ? rcu_lockdep_current_cpu_online+0x62/0xb0\n ? find_held_lock+0x32/0x90\n ? kvm_sched_clock_read+0x11/0x20\n ? local_clock_noinstr+0xd/0xd0\n ? trace_irq_enable.constprop.0+0xa8/0xe0\n ? __pfx_cifs_demultiplex_thread+0x10/0x10 [cifs]\n kthread+0x1fe/0x380\n ? kthread+0x10f/0x380\n ? __pfx_kthread+0x10/0x10\n ? local_clock_noinstr+0xd/0xd0\n ? ret_from_fork+0x1b/0x60\n ? local_clock+0x15/0x30\n ? lock_release+0x29b/0x390\n ? rcu_is_watching+0x20/0x50\n ? __pfx_kthread+0x10/0x10\n ret_from_fork+0x31/0x60\n ? __pfx_kthread+0x10/0x10\n ret_from_fork_asm+0x1a/0x30\n \u003c/TASK\u003e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37752",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: sch_sfq: move the limit validation\n\nIt is not sufficient to directly validate the limit on the data that\nthe user passes as it can be updated based on how the other parameters\nare changed.\n\nMove the check at the end of the configuration update process to also\ncatch scenarios where the limit is indirectly updated, for example\nwith the following configurations:\n\ntc qdisc add dev dummy0 handle 1: root sfq limit 2 flows 1 depth 1\ntc qdisc add dev dummy0 handle 1: root sfq limit 2 flows 1 divisor 1\n\nThis fixes the following syzkaller reported crash:\n\n------------[ cut here ]------------\nUBSAN: array-index-out-of-bounds in net/sched/sch_sfq.c:203:6\nindex 65535 is out of range for type 'struct sfq_head[128]'\nCPU: 1 UID: 0 PID: 3037 Comm: syz.2.16 Not tainted 6.14.0-rc2-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 12/27/2024\nCall Trace:\n \u003cTASK\u003e\n __dump_stack lib/dump_stack.c:94 [inline]\n dump_stack_lvl+0x201/0x300 lib/dump_stack.c:120\n ubsan_epilogue lib/ubsan.c:231 [inline]\n __ubsan_handle_out_of_bounds+0xf5/0x120 lib/ubsan.c:429\n sfq_link net/sched/sch_sfq.c:203 [inline]\n sfq_dec+0x53c/0x610 net/sched/sch_sfq.c:231\n sfq_dequeue+0x34e/0x8c0 net/sched/sch_sfq.c:493\n sfq_reset+0x17/0x60 net/sched/sch_sfq.c:518\n qdisc_reset+0x12e/0x600 net/sched/sch_generic.c:1035\n tbf_reset+0x41/0x110 net/sched/sch_tbf.c:339\n qdisc_reset+0x12e/0x600 net/sched/sch_generic.c:1035\n dev_reset_queue+0x100/0x1b0 net/sched/sch_generic.c:1311\n netdev_for_each_tx_queue include/linux/netdevice.h:2590 [inline]\n dev_deactivate_many+0x7e5/0xe70 net/sched/sch_generic.c:1375",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37754",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/i915/huc: Fix fence not released on early probe errors\n\nHuC delayed loading fence, introduced with commit 27536e03271da\n(\"drm/i915/huc: track delayed HuC load with a fence\"), is registered with\nobject tracker early on driver probe but unregistered only from driver\nremove, which is not called on early probe errors.  Since its memory is\nallocated under devres, then released anyway, it may happen to be\nallocated again to the fence and reused on future driver probes, resulting\nin kernel warnings that taint the kernel:\n\n\u003c4\u003e [309.731371] ------------[ cut here ]------------\n\u003c3\u003e [309.731373] ODEBUG: init destroyed (active state 0) object: ffff88813d7dd2e0 object type: i915_sw_fence hint: sw_fence_dummy_notify+0x0/0x20 [i915]\n\u003c4\u003e [309.731575] WARNING: CPU: 2 PID: 3161 at lib/debugobjects.c:612 debug_print_object+0x93/0xf0\n...\n\u003c4\u003e [309.731693] CPU: 2 UID: 0 PID: 3161 Comm: i915_module_loa Tainted: G     U             6.14.0-CI_DRM_16362-gf0fd77956987+ #1\n...\n\u003c4\u003e [309.731700] RIP: 0010:debug_print_object+0x93/0xf0\n...\n\u003c4\u003e [309.731728] Call Trace:\n\u003c4\u003e [309.731730]  \u003cTASK\u003e\n...\n\u003c4\u003e [309.731949]  __debug_object_init+0x17b/0x1c0\n\u003c4\u003e [309.731957]  debug_object_init+0x34/0x50\n\u003c4\u003e [309.732126]  __i915_sw_fence_init+0x34/0x60 [i915]\n\u003c4\u003e [309.732256]  intel_huc_init_early+0x4b/0x1d0 [i915]\n\u003c4\u003e [309.732468]  intel_uc_init_early+0x61/0x680 [i915]\n\u003c4\u003e [309.732667]  intel_gt_common_init_early+0x105/0x130 [i915]\n\u003c4\u003e [309.732804]  intel_root_gt_init_early+0x63/0x80 [i915]\n\u003c4\u003e [309.732938]  i915_driver_probe+0x1fa/0xeb0 [i915]\n\u003c4\u003e [309.733075]  i915_pci_probe+0xe6/0x220 [i915]\n\u003c4\u003e [309.733198]  local_pci_probe+0x44/0xb0\n\u003c4\u003e [309.733203]  pci_device_probe+0xf4/0x270\n\u003c4\u003e [309.733209]  really_probe+0xee/0x3c0\n\u003c4\u003e [309.733215]  __driver_probe_device+0x8c/0x180\n\u003c4\u003e [309.733219]  driver_probe_device+0x24/0xd0\n\u003c4\u003e [309.733223]  __driver_attach+0x10f/0x220\n\u003c4\u003e [309.733230]  bus_for_each_dev+0x7d/0xe0\n\u003c4\u003e [309.733236]  driver_attach+0x1e/0x30\n\u003c4\u003e [309.733239]  bus_add_driver+0x151/0x290\n\u003c4\u003e [309.733244]  driver_register+0x5e/0x130\n\u003c4\u003e [309.733247]  __pci_register_driver+0x7d/0x90\n\u003c4\u003e [309.733251]  i915_pci_register_driver+0x23/0x30 [i915]\n\u003c4\u003e [309.733413]  i915_init+0x34/0x120 [i915]\n\u003c4\u003e [309.733655]  do_one_initcall+0x62/0x3f0\n\u003c4\u003e [309.733667]  do_init_module+0x97/0x2a0\n\u003c4\u003e [309.733671]  load_module+0x25ff/0x2890\n\u003c4\u003e [309.733688]  init_module_from_file+0x97/0xe0\n\u003c4\u003e [309.733701]  idempotent_init_module+0x118/0x330\n\u003c4\u003e [309.733711]  __x64_sys_finit_module+0x77/0x100\n\u003c4\u003e [309.733715]  x64_sys_call+0x1f37/0x2650\n\u003c4\u003e [309.733719]  do_syscall_64+0x91/0x180\n\u003c4\u003e [309.733763]  entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\u003c4\u003e [309.733792]  \u003c/TASK\u003e\n...\n\u003c4\u003e [309.733806] ---[ end trace 0000000000000000 ]---\n\nThat scenario is most easily reproducible with\nigt@i915_module_load@reload-with-fault-injection.\n\nFix the issue by moving the cleanup step to driver release path.\n\n(cherry picked from commit 795dbde92fe5c6996a02a5b579481de73035e7bf)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37755",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: libwx: handle page_pool_dev_alloc_pages error\n\npage_pool_dev_alloc_pages could return NULL. There was a WARN_ON(!page)\nbut it would still proceed to use the NULL pointer and then crash.\n\nThis is similar to commit 001ba0902046\n(\"net: fec: handle page_pool_dev_alloc_pages error\").\n\nThis is found by our static analysis tool KNighter.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37756",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: tls: explicitly disallow disconnect\n\nsyzbot discovered that it can disconnect a TLS socket and then\nrun into all sort of unexpected corner cases. I have a vague\nrecollection of Eric pointing this out to us a long time ago.\nSupporting disconnect is really hard, for one thing if offload\nis enabled we'd need to wait for all packets to be _acked_.\nDisconnect is not commonly used, disallow it.\n\nThe immediate problem syzbot run into is the warning in the strp,\nbut that's just the easiest bug to trigger:\n\n  WARNING: CPU: 0 PID: 5834 at net/tls/tls_strp.c:486 tls_strp_msg_load+0x72e/0xa80 net/tls/tls_strp.c:486\n  RIP: 0010:tls_strp_msg_load+0x72e/0xa80 net/tls/tls_strp.c:486\n  Call Trace:\n   \u003cTASK\u003e\n   tls_rx_rec_wait+0x280/0xa60 net/tls/tls_sw.c:1363\n   tls_sw_recvmsg+0x85c/0x1c30 net/tls/tls_sw.c:2043\n   inet6_recvmsg+0x2c9/0x730 net/ipv6/af_inet6.c:678\n   sock_recvmsg_nosec net/socket.c:1023 [inline]\n   sock_recvmsg+0x109/0x280 net/socket.c:1045\n   __sys_recvfrom+0x202/0x380 net/socket.c:2237",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37757",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: fix memory leak in tipc_link_xmit\n\nIn case the backlog transmit queue for system-importance messages is overloaded,\ntipc_link_xmit() returns -ENOBUFS but the skb list is not purged. This leads to\nmemory leak and failure when a skb is allocated.\n\nThis commit fixes this issue by purging the skb list before tipc_link_xmit()\nreturns.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37758",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nata: pata_pxa: Fix potential NULL pointer dereference in pxa_ata_probe()\n\ndevm_ioremap() returns NULL on error. Currently, pxa_ata_probe() does\nnot check for this case, which can result in a NULL pointer dereference.\n\nAdd NULL check after devm_ioremap() to prevent this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37765",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/nouveau: prime: fix ttm_bo_delayed_delete oops\n\nFix an oops in ttm_bo_delayed_delete which results from dererencing a\ndangling pointer:\n\nOops: general protection fault, probably for non-canonical address 0x6b6b6b6b6b6b6b7b: 0000 [#1] PREEMPT SMP\nCPU: 4 UID: 0 PID: 1082 Comm: kworker/u65:2 Not tainted 6.14.0-rc4-00267-g505460b44513-dirty #216\nHardware name: LENOVO 82N6/LNVNB161216, BIOS GKCN65WW 01/16/2024\nWorkqueue: ttm ttm_bo_delayed_delete [ttm]\nRIP: 0010:dma_resv_iter_first_unlocked+0x55/0x290\nCode: 31 f6 48 c7 c7 00 2b fa aa e8 97 bd 52 ff e8 a2 c1 53 00 5a 85 c0 74 48 e9 88 01 00 00 4c 89 63 20 4d 85 e4 0f 84 30 01 00 00 \u003c41\u003e 8b 44 24 10 c6 43 2c 01 48 89 df 89 43 28 e8 97 fd ff ff 4c 8b\nRSP: 0018:ffffbf9383473d60 EFLAGS: 00010202\nRAX: 0000000000000001 RBX: ffffbf9383473d88 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000\nRBP: ffffbf9383473d78 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000000 R12: 6b6b6b6b6b6b6b6b\nR13: ffffa003bbf78580 R14: ffffa003a6728040 R15: 00000000000383cc\nFS:  0000000000000000(0000) GS:ffffa00991c00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000758348024dd0 CR3: 000000012c259000 CR4: 0000000000f50ef0\nPKRU: 55555554\nCall Trace:\n \u003cTASK\u003e\n ? __die_body.cold+0x19/0x26\n ? die_addr+0x3d/0x70\n ? exc_general_protection+0x159/0x460\n ? asm_exc_general_protection+0x27/0x30\n ? dma_resv_iter_first_unlocked+0x55/0x290\n dma_resv_wait_timeout+0x56/0x100\n ttm_bo_delayed_delete+0x69/0xb0 [ttm]\n process_one_work+0x217/0x5c0\n worker_thread+0x1c8/0x3d0\n ? apply_wqattrs_cleanup.part.0+0xc0/0xc0\n kthread+0x10b/0x240\n ? kthreads_online_cpu+0x140/0x140\n ret_from_fork+0x40/0x70\n ? kthreads_online_cpu+0x140/0x140\n ret_from_fork_asm+0x11/0x20\n \u003c/TASK\u003e\n\nThe cause of this is:\n\n- drm_prime_gem_destroy calls dma_buf_put(dma_buf) which releases the\n  reference to the shared dma_buf. The reference count is 0, so the\n  dma_buf is destroyed, which in turn decrements the corresponding\n  amdgpu_bo reference count to 0, and the amdgpu_bo is destroyed -\n  calling drm_gem_object_release then dma_resv_fini (which destroys the\n  reservation object), then finally freeing the amdgpu_bo.\n\n- nouveau_bo obj-\u003ebo.base.resv is now a dangling pointer to the memory\n  formerly allocated to the amdgpu_bo.\n\n- nouveau_gem_object_del calls ttm_bo_put(\u0026nvbo-\u003ebo) which calls\n  ttm_bo_release, which schedules ttm_bo_delayed_delete.\n\n- ttm_bo_delayed_delete runs and dereferences the dangling resv pointer,\n  resulting in a general protection fault.\n\nFix this by moving the drm_prime_gem_destroy call from\nnouveau_gem_object_del to nouveau_bo_del_ttm. This ensures that it will\nbe run after ttm_bo_delayed_delete.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37766",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/pm: Prevent division by zero\n\nThe user can set any speed value.\nIf speed is greater than UINT_MAX/8, division by zero is possible.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37767",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/pm: Prevent division by zero\n\nThe user can set any speed value.\nIf speed is greater than UINT_MAX/8, division by zero is possible.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37768",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/pm: Prevent division by zero\n\nThe user can set any speed value.\nIf speed is greater than UINT_MAX/8, division by zero is possible.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37769",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/pm/smu11: Prevent division by zero\n\nThe user can set any speed value.\nIf speed is greater than UINT_MAX/8, division by zero is possible.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.\n\n(cherry picked from commit da7dc714a8f8e1c9fc33c57cd63583779a3bef71)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37770",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/pm: Prevent division by zero\n\nThe user can set any speed value.\nIf speed is greater than UINT_MAX/8, division by zero is possible.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37771",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/pm: Prevent division by zero\n\nThe user can set any speed value.\nIf speed is greater than UINT_MAX/8, division by zero is possible.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37772",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/cma: Fix workqueue crash in cma_netevent_work_handler\n\nstruct rdma_cm_id has member \"struct work_struct net_work\"\nthat is reused for enqueuing cma_netevent_work_handler()s\nonto cma_wq.\n\nBelow crash[1] can occur if more than one call to\ncma_netevent_callback() occurs in quick succession,\nwhich further enqueues cma_netevent_work_handler()s for the\nsame rdma_cm_id, overwriting any previously queued work-item(s)\nthat was just scheduled to run i.e. there is no guarantee\nthe queued work item may run between two successive calls\nto cma_netevent_callback() and the 2nd INIT_WORK would overwrite\nthe 1st work item (for the same rdma_cm_id), despite grabbing\nid_table_lock during enqueue.\n\nAlso drgn analysis [2] indicates the work item was likely overwritten.\n\nFix this by moving the INIT_WORK() to __rdma_create_id(),\nso that it doesn't race with any existing queue_work() or\nits worker thread.\n\n[1] Trimmed crash stack:\n=============================================\nBUG: kernel NULL pointer dereference, address: 0000000000000008\nkworker/u256:6 ... 6.12.0-0...\nWorkqueue:  cma_netevent_work_handler [rdma_cm] (rdma_cm)\nRIP: 0010:process_one_work+0xba/0x31a\nCall Trace:\n worker_thread+0x266/0x3a0\n kthread+0xcf/0x100\n ret_from_fork+0x31/0x50\n ret_from_fork_asm+0x1a/0x30\n=============================================\n\n[2] drgn crash analysis:\n\n\u003e\u003e\u003e trace = prog.crashed_thread().stack_trace()\n\u003e\u003e\u003e trace\n(0)  crash_setup_regs (./arch/x86/include/asm/kexec.h:111:15)\n(1)  __crash_kexec (kernel/crash_core.c:122:4)\n(2)  panic (kernel/panic.c:399:3)\n(3)  oops_end (arch/x86/kernel/dumpstack.c:382:3)\n...\n(8)  process_one_work (kernel/workqueue.c:3168:2)\n(9)  process_scheduled_works (kernel/workqueue.c:3310:3)\n(10) worker_thread (kernel/workqueue.c:3391:4)\n(11) kthread (kernel/kthread.c:389:9)\n\nLine workqueue.c:3168 for this kernel version is in process_one_work():\n3168\tstrscpy(worker-\u003edesc, pwq-\u003ewq-\u003ename, WORKER_DESC_LEN);\n\n\u003e\u003e\u003e trace[8][\"work\"]\n*(struct work_struct *)0xffff92577d0a21d8 = {\n\t.data = (atomic_long_t){\n\t\t.counter = (s64)536870912,    \u003c=== Note\n\t},\n\t.entry = (struct list_head){\n\t\t.next = (struct list_head *)0xffff924d075924c0,\n\t\t.prev = (struct list_head *)0xffff924d075924c0,\n\t},\n\t.func = (work_func_t)cma_netevent_work_handler+0x0 = 0xffffffffc2cec280,\n}\n\nSuspicion is that pwq is NULL:\n\u003e\u003e\u003e trace[8][\"pwq\"]\n(struct pool_workqueue *)\u003cabsent\u003e\n\nIn process_one_work(), pwq is assigned from:\nstruct pool_workqueue *pwq = get_work_pwq(work);\n\nand get_work_pwq() is:\nstatic struct pool_workqueue *get_work_pwq(struct work_struct *work)\n{\n \tunsigned long data = atomic_long_read(\u0026work-\u003edata);\n\n \tif (data \u0026 WORK_STRUCT_PWQ)\n \t\treturn work_struct_pwq(data);\n \telse\n \t\treturn NULL;\n}\n\nWORK_STRUCT_PWQ is 0x4:\n\u003e\u003e\u003e print(repr(prog['WORK_STRUCT_PWQ']))\nObject(prog, 'enum work_flags', value=4)\n\nBut work-\u003edata is 536870912 which is 0x20000000.\nSo, get_work_pwq() returns NULL and we crash in process_one_work():\n3168\tstrscpy(worker-\u003edesc, pwq-\u003ewq-\u003ename, WORKER_DESC_LEN);\n=============================================",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37773",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvirtiofs: add filesystem context source name check\n\nIn certain scenarios, for example, during fuzz testing, the source\nname may be NULL, which could lead to a kernel panic. Therefore, an\nextra check for the source name should be added.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37780",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nisofs: Prevent the use of too small fid\n\nsyzbot reported a slab-out-of-bounds Read in isofs_fh_to_parent. [1]\n\nThe handle_bytes value passed in by the reproducing program is equal to 12.\nIn handle_to_path(), only 12 bytes of memory are allocated for the structure\nfile_handle-\u003ef_handle member, which causes an out-of-bounds access when\naccessing the member parent_block of the structure isofs_fid in isofs,\nbecause accessing parent_block requires at least 16 bytes of f_handle.\nHere, fh_len is used to indirectly confirm that the value of handle_bytes\nis greater than 3 before accessing parent_block.\n\n[1]\nBUG: KASAN: slab-out-of-bounds in isofs_fh_to_parent+0x1b8/0x210 fs/isofs/export.c:183\nRead of size 4 at addr ffff0000cc030d94 by task syz-executor215/6466\nCPU: 1 UID: 0 PID: 6466 Comm: syz-executor215 Not tainted 6.14.0-rc7-syzkaller-ga2392f333575 #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 02/12/2025\nCall trace:\n show_stack+0x2c/0x3c arch/arm64/kernel/stacktrace.c:466 (C)\n __dump_stack lib/dump_stack.c:94 [inline]\n dump_stack_lvl+0xe4/0x150 lib/dump_stack.c:120\n print_address_description mm/kasan/report.c:408 [inline]\n print_report+0x198/0x550 mm/kasan/report.c:521\n kasan_report+0xd8/0x138 mm/kasan/report.c:634\n __asan_report_load4_noabort+0x20/0x2c mm/kasan/report_generic.c:380\n isofs_fh_to_parent+0x1b8/0x210 fs/isofs/export.c:183\n exportfs_decode_fh_raw+0x2dc/0x608 fs/exportfs/expfs.c:523\n do_handle_to_path+0xa0/0x198 fs/fhandle.c:257\n handle_to_path fs/fhandle.c:385 [inline]\n do_handle_open+0x8cc/0xb8c fs/fhandle.c:403\n __do_sys_open_by_handle_at fs/fhandle.c:443 [inline]\n __se_sys_open_by_handle_at fs/fhandle.c:434 [inline]\n __arm64_sys_open_by_handle_at+0x80/0x94 fs/fhandle.c:434\n __invoke_syscall arch/arm64/kernel/syscall.c:35 [inline]\n invoke_syscall+0x98/0x2b8 arch/arm64/kernel/syscall.c:49\n el0_svc_common+0x130/0x23c arch/arm64/kernel/syscall.c:132\n do_el0_svc+0x48/0x58 arch/arm64/kernel/syscall.c:151\n el0_svc+0x54/0x168 arch/arm64/kernel/entry-common.c:744\n el0t_64_sync_handler+0x84/0x108 arch/arm64/kernel/entry-common.c:762\n el0t_64_sync+0x198/0x19c arch/arm64/kernel/entry.S:600\n\nAllocated by task 6466:\n kasan_save_stack mm/kasan/common.c:47 [inline]\n kasan_save_track+0x40/0x78 mm/kasan/common.c:68\n kasan_save_alloc_info+0x40/0x50 mm/kasan/generic.c:562\n poison_kmalloc_redzone mm/kasan/common.c:377 [inline]\n __kasan_kmalloc+0xac/0xc4 mm/kasan/common.c:394\n kasan_kmalloc include/linux/kasan.h:260 [inline]\n __do_kmalloc_node mm/slub.c:4294 [inline]\n __kmalloc_noprof+0x32c/0x54c mm/slub.c:4306\n kmalloc_noprof include/linux/slab.h:905 [inline]\n handle_to_path fs/fhandle.c:357 [inline]\n do_handle_open+0x5a4/0xb8c fs/fhandle.c:403\n __do_sys_open_by_handle_at fs/fhandle.c:443 [inline]\n __se_sys_open_by_handle_at fs/fhandle.c:434 [inline]\n __arm64_sys_open_by_handle_at+0x80/0x94 fs/fhandle.c:434\n __invoke_syscall arch/arm64/kernel/syscall.c:35 [inline]\n invoke_syscall+0x98/0x2b8 arch/arm64/kernel/syscall.c:49\n el0_svc_common+0x130/0x23c arch/arm64/kernel/syscall.c:132\n do_el0_svc+0x48/0x58 arch/arm64/kernel/syscall.c:151\n el0_svc+0x54/0x168 arch/arm64/kernel/entry-common.c:744\n el0t_64_sync_handler+0x84/0x108 arch/arm64/kernel/entry-common.c:762\n el0t_64_sync+0x198/0x19c arch/arm64/kernel/entry.S:600",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37781",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ni2c: cros-ec-tunnel: defer probe if parent EC is not present\n\nWhen i2c-cros-ec-tunnel and the EC driver are built-in, the EC parent\ndevice will not be found, leading to NULL pointer dereference.\n\nThat can also be reproduced by unbinding the controller driver and then\nloading i2c-cros-ec-tunnel module (or binding the device).\n\n[  271.991245] BUG: kernel NULL pointer dereference, address: 0000000000000058\n[  271.998215] #PF: supervisor read access in kernel mode\n[  272.003351] #PF: error_code(0x0000) - not-present page\n[  272.008485] PGD 0 P4D 0\n[  272.011022] Oops: Oops: 0000 [#1] SMP NOPTI\n[  272.015207] CPU: 0 UID: 0 PID: 3859 Comm: insmod Tainted: G S                  6.15.0-rc1-00004-g44722359ed83 #30 PREEMPT(full)  3c7fb39a552e7d949de2ad921a7d6588d3a4fdc5\n[  272.030312] Tainted: [S]=CPU_OUT_OF_SPEC\n[  272.034233] Hardware name: HP Berknip/Berknip, BIOS Google_Berknip.13434.356.0 05/17/2021\n[  272.042400] RIP: 0010:ec_i2c_probe+0x2b/0x1c0 [i2c_cros_ec_tunnel]\n[  272.048577] Code: 1f 44 00 00 41 57 41 56 41 55 41 54 53 48 83 ec 10 65 48 8b 05 06 a0 6c e7 48 89 44 24 08 4c 8d 7f 10 48 8b 47 50 4c 8b 60 78 \u003c49\u003e 83 7c 24 58 00 0f 84 2f 01 00 00 48 89 fb be 30 06 00 00 4c 9\n[  272.067317] RSP: 0018:ffffa32082a03940 EFLAGS: 00010282\n[  272.072541] RAX: ffff969580b6a810 RBX: ffff969580b68c10 RCX: 0000000000000000\n[  272.079672] RDX: 0000000000000000 RSI: 0000000000000282 RDI: ffff969580b68c00\n[  272.086804] RBP: 00000000fffffdfb R08: 0000000000000000 R09: 0000000000000000\n[  272.093936] R10: 0000000000000000 R11: ffffffffc0600000 R12: 0000000000000000\n[  272.101067] R13: ffffffffa666fbb8 R14: ffffffffc05b5528 R15: ffff969580b68c10\n[  272.108198] FS:  00007b930906fc40(0000) GS:ffff969603149000(0000) knlGS:0000000000000000\n[  272.116282] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  272.122024] CR2: 0000000000000058 CR3: 000000012631c000 CR4: 00000000003506f0\n[  272.129155] Call Trace:\n[  272.131606]  \u003cTASK\u003e\n[  272.133709]  ? acpi_dev_pm_attach+0xdd/0x110\n[  272.137985]  platform_probe+0x69/0xa0\n[  272.141652]  really_probe+0x152/0x310\n[  272.145318]  __driver_probe_device+0x77/0x110\n[  272.149678]  driver_probe_device+0x1e/0x190\n[  272.153864]  __driver_attach+0x10b/0x1e0\n[  272.157790]  ? driver_attach+0x20/0x20\n[  272.161542]  bus_for_each_dev+0x107/0x150\n[  272.165553]  bus_add_driver+0x15d/0x270\n[  272.169392]  driver_register+0x65/0x110\n[  272.173232]  ? cleanup_module+0xa80/0xa80 [i2c_cros_ec_tunnel 3a00532f3f4af4a9eade753f86b0f8dd4e4e5698]\n[  272.182617]  do_one_initcall+0x110/0x350\n[  272.186543]  ? security_kernfs_init_security+0x49/0xd0\n[  272.191682]  ? __kernfs_new_node+0x1b9/0x240\n[  272.195954]  ? security_kernfs_init_security+0x49/0xd0\n[  272.201093]  ? __kernfs_new_node+0x1b9/0x240\n[  272.205365]  ? kernfs_link_sibling+0x105/0x130\n[  272.209810]  ? kernfs_next_descendant_post+0x1c/0xa0\n[  272.214773]  ? kernfs_activate+0x57/0x70\n[  272.218699]  ? kernfs_add_one+0x118/0x160\n[  272.222710]  ? __kernfs_create_file+0x71/0xa0\n[  272.227069]  ? sysfs_add_bin_file_mode_ns+0xd6/0x110\n[  272.232033]  ? internal_create_group+0x453/0x4a0\n[  272.236651]  ? __vunmap_range_noflush+0x214/0x2d0\n[  272.241355]  ? __free_frozen_pages+0x1dc/0x420\n[  272.245799]  ? free_vmap_area_noflush+0x10a/0x1c0\n[  272.250505]  ? load_module+0x1509/0x16f0\n[  272.254431]  do_init_module+0x60/0x230\n[  272.258181]  __se_sys_finit_module+0x27a/0x370\n[  272.262627]  do_syscall_64+0x6a/0xf0\n[  272.266206]  ? do_syscall_64+0x76/0xf0\n[  272.269956]  ? irqentry_exit_to_user_mode+0x79/0x90\n[  272.274836]  entry_SYSCALL_64_after_hwframe+0x55/0x5d\n[  272.279887] RIP: 0033:0x7b9309168d39\n[  272.283466] Code: 5b 41 5c 5d c3 66 2e 0f 1f 84 00 00 00 00 00 66 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 \u003c48\u003e 3d 01 f0 ff ff 73 01 c3 48 8b 0d af 40 0c 00 f7 d8 64 89 01 8\n[  272.302210] RSP: 002b:00007fff50f1a288 EFLAGS: 00000246 ORIG_RAX: 000\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37782",
      "Description": "This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37785",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix OOB read when checking dotdot dir\n\nMounting a corrupted filesystem with directory which contains '.' dir\nentry with rec_len == block size results in out-of-bounds read (later\non, when the corrupted directory is removed).\n\next4_empty_dir() assumes every ext4 directory contains at least '.'\nand '..' as directory entries in the first data block. It first loads\nthe '.' dir entry, performs sanity checks by calling ext4_check_dir_entry()\nand then uses its rec_len member to compute the location of '..' dir\nentry (in ext4_next_entry). It assumes the '..' dir entry fits into the\nsame data block.\n\nIf the rec_len of '.' is precisely one block (4KB), it slips through the\nsanity checks (it is considered the last directory entry in the data\nblock) and leaves \"struct ext4_dir_entry_2 *de\" point exactly past the\nmemory slot allocated to the data block. The following call to\next4_check_dir_entry() on new value of de then dereferences this pointer\nwhich results in out-of-bounds mem access.\n\nFix this by extending __ext4_check_dir_entry() to check for '.' dir\nentries that reach the end of data block. Make sure to ignore the phony\ndir entries for checksum (by checking name_len for non-zero).\n\nNote: This is reported by KASAN as use-after-free in case another\nstructure was recently freed from the slot past the bound, but it is\nreally an OOB read.\n\nThis issue was found by syzkaller tool.\n\nCall Trace:\n[   38.594108] BUG: KASAN: slab-use-after-free in __ext4_check_dir_entry+0x67e/0x710\n[   38.594649] Read of size 2 at addr ffff88802b41a004 by task syz-executor/5375\n[   38.595158]\n[   38.595288] CPU: 0 UID: 0 PID: 5375 Comm: syz-executor Not tainted 6.14.0-rc7 #1\n[   38.595298] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014\n[   38.595304] Call Trace:\n[   38.595308]  \u003cTASK\u003e\n[   38.595311]  dump_stack_lvl+0xa7/0xd0\n[   38.595325]  print_address_description.constprop.0+0x2c/0x3f0\n[   38.595339]  ? __ext4_check_dir_entry+0x67e/0x710\n[   38.595349]  print_report+0xaa/0x250\n[   38.595359]  ? __ext4_check_dir_entry+0x67e/0x710\n[   38.595368]  ? kasan_addr_to_slab+0x9/0x90\n[   38.595378]  kasan_report+0xab/0xe0\n[   38.595389]  ? __ext4_check_dir_entry+0x67e/0x710\n[   38.595400]  __ext4_check_dir_entry+0x67e/0x710\n[   38.595410]  ext4_empty_dir+0x465/0x990\n[   38.595421]  ? __pfx_ext4_empty_dir+0x10/0x10\n[   38.595432]  ext4_rmdir.part.0+0x29a/0xd10\n[   38.595441]  ? __dquot_initialize+0x2a7/0xbf0\n[   38.595455]  ? __pfx_ext4_rmdir.part.0+0x10/0x10\n[   38.595464]  ? __pfx___dquot_initialize+0x10/0x10\n[   38.595478]  ? down_write+0xdb/0x140\n[   38.595487]  ? __pfx_down_write+0x10/0x10\n[   38.595497]  ext4_rmdir+0xee/0x140\n[   38.595506]  vfs_rmdir+0x209/0x670\n[   38.595517]  ? lookup_one_qstr_excl+0x3b/0x190\n[   38.595529]  do_rmdir+0x363/0x3c0\n[   38.595537]  ? __pfx_do_rmdir+0x10/0x10\n[   38.595544]  ? strncpy_from_user+0x1ff/0x2e0\n[   38.595561]  __x64_sys_unlinkat+0xf0/0x130\n[   38.595570]  do_syscall_64+0x5b/0x180\n[   38.595583]  entry_SYSCALL_64_after_hwframe+0x76/0x7e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37786",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: free routing table on probe failure\n\nIf complete = true in dsa_tree_setup(), it means that we are the last\nswitch of the tree which is successfully probing, and we should be\nsetting up all switches from our probe path.\n\nAfter \"complete\" becomes true, dsa_tree_setup_cpu_ports() or any\nsubsequent function may fail. If that happens, the entire tree setup is\nin limbo: the first N-1 switches have successfully finished probing\n(doing nothing but having allocated persistent memory in the tree's\ndst-\u003eports, and maybe dst-\u003ertable), and switch N failed to probe, ending\nthe tree setup process before anything is tangible from the user's PoV.\n\nIf switch N fails to probe, its memory (ports) will be freed and removed\nfrom dst-\u003eports. However, the dst-\u003ertable elements pointing to its ports,\nas created by dsa_link_touch(), will remain there, and will lead to\nuse-after-free if dereferenced.\n\nIf dsa_tree_setup_switches() returns -EPROBE_DEFER, which is entirely\npossible because that is where ds-\u003eops-\u003esetup() is, we get a kasan\nreport like this:\n\n==================================================================\nBUG: KASAN: slab-use-after-free in mv88e6xxx_setup_upstream_port+0x240/0x568\nRead of size 8 at addr ffff000004f56020 by task kworker/u8:3/42\n\nCall trace:\n __asan_report_load8_noabort+0x20/0x30\n mv88e6xxx_setup_upstream_port+0x240/0x568\n mv88e6xxx_setup+0xebc/0x1eb0\n dsa_register_switch+0x1af4/0x2ae0\n mv88e6xxx_register_switch+0x1b8/0x2a8\n mv88e6xxx_probe+0xc4c/0xf60\n mdio_probe+0x78/0xb8\n really_probe+0x2b8/0x5a8\n __driver_probe_device+0x164/0x298\n driver_probe_device+0x78/0x258\n __device_attach_driver+0x274/0x350\n\nAllocated by task 42:\n __kasan_kmalloc+0x84/0xa0\n __kmalloc_cache_noprof+0x298/0x490\n dsa_switch_touch_ports+0x174/0x3d8\n dsa_register_switch+0x800/0x2ae0\n mv88e6xxx_register_switch+0x1b8/0x2a8\n mv88e6xxx_probe+0xc4c/0xf60\n mdio_probe+0x78/0xb8\n really_probe+0x2b8/0x5a8\n __driver_probe_device+0x164/0x298\n driver_probe_device+0x78/0x258\n __device_attach_driver+0x274/0x350\n\nFreed by task 42:\n __kasan_slab_free+0x48/0x68\n kfree+0x138/0x418\n dsa_register_switch+0x2694/0x2ae0\n mv88e6xxx_register_switch+0x1b8/0x2a8\n mv88e6xxx_probe+0xc4c/0xf60\n mdio_probe+0x78/0xb8\n really_probe+0x2b8/0x5a8\n __driver_probe_device+0x164/0x298\n driver_probe_device+0x78/0x258\n __device_attach_driver+0x274/0x350\n\nThe simplest way to fix the bug is to delete the routing table in its\nentirety. dsa_tree_setup_routing_table() has no problem in regenerating\nit even if we deleted links between ports other than those of switch N,\nbecause dsa_link_touch() first checks whether the port pair already\nexists in dst-\u003ertable, allocating if not.\n\nThe deletion of the routing table in its entirety already exists in\ndsa_tree_teardown(), so refactor that into a function that can also be\ncalled from the tree setup error path.\n\nIn my analysis of the commit to blame, it is the one which added\ndsa_link elements to dst-\u003ertable. Prior to that, each switch had its own\nds-\u003ertable which is freed when the switch fails to probe. But the tree\nis potentially persistent memory.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37787",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: mv88e6xxx: avoid unregistering devlink regions which were never registered\n\nRussell King reports that a system with mv88e6xxx dereferences a NULL\npointer when unbinding this driver:\nhttps://lore.kernel.org/netdev/Z_lRkMlTJ1KQ0kVX@shell.armlinux.org.uk/\n\nThe crash seems to be in devlink_region_destroy(), which is not NULL\ntolerant but is given a NULL devlink global region pointer.\n\nAt least on some chips, some devlink regions are conditionally registered\nsince the blamed commit, see mv88e6xxx_setup_devlink_regions_global():\n\n\t\tif (cond \u0026\u0026 !cond(chip))\n\t\t\tcontinue;\n\nThese are MV88E6XXX_REGION_STU and MV88E6XXX_REGION_PVT. If the chip\ndoes not have an STU or PVT, it should crash like this.\n\nTo fix the issue, avoid unregistering those regions which are NULL, i.e.\nwere skipped at mv88e6xxx_setup_devlink_regions_global() time.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37788",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncxgb4: fix memory leak in cxgb4_init_ethtool_filters() error path\n\nIn the for loop used to allocate the loc_array and bmap for each port, a\nmemory leak is possible when the allocation for loc_array succeeds,\nbut the allocation for bmap fails. This is because when the control flow\ngoes to the label free_eth_finfo, only the allocations starting from\n(i-1)th iteration are freed.\n\nFix that by freeing the loc_array in the bmap allocation error path.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37789",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: openvswitch: fix nested key length validation in the set() action\n\nIt's not safe to access nla_len(ovs_key) if the data is smaller than\nthe netlink header.  Check that the attribute is OK first.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37790",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mctp: Set SOCK_RCU_FREE\n\nBind lookup runs under RCU, so ensure that a socket doesn't go away in\nthe middle of a lookup.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37792",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: btrtl: Prevent potential NULL dereference\n\nThe btrtl_initialize() function checks that rtl_load_file() either\nhad an error or it loaded a zero length file.  However, if it loaded\na zero length file then the error code is not set correctly.  It\nresults in an error pointer vs NULL bug, followed by a NULL pointer\ndereference.  This was detected by Smatch:\n\ndrivers/bluetooth/btrtl.c:592 btrtl_initialize() warn: passing zero to 'ERR_PTR'",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37793",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: Intel: avs: Fix null-ptr-deref in avs_component_probe()\n\ndevm_kasprintf() returns NULL when memory allocation fails. Currently,\navs_component_probe() does not check for this case, which results in a\nNULL pointer dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37794",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: Purge vif txq in ieee80211_do_stop()\n\nAfter ieee80211_do_stop() SKB from vif's txq could still be processed.\nIndeed another concurrent vif schedule_and_wake_txq call could cause\nthose packets to be dequeued (see ieee80211_handle_wake_tx_queue())\nwithout checking the sdata current state.\n\nBecause vif.drv_priv is now cleared in this function, this could lead to\ndriver crash.\n\nFor example in ath12k, ahvif is store in vif.drv_priv. Thus if\nath12k_mac_op_tx() is called after ieee80211_do_stop(), ahvif-\u003eah can be\nNULL, leading the ath12k_warn(ahvif-\u003eah,...) call in this function to\ntrigger the NULL deref below.\n\n  Unable to handle kernel paging request at virtual address dfffffc000000001\n  KASAN: null-ptr-deref in range [0x0000000000000008-0x000000000000000f]\n  batman_adv: bat0: Interface deactivated: brbh1337\n  Mem abort info:\n    ESR = 0x0000000096000004\n    EC = 0x25: DABT (current EL), IL = 32 bits\n    SET = 0, FnV = 0\n    EA = 0, S1PTW = 0\n    FSC = 0x04: level 0 translation fault\n  Data abort info:\n    ISV = 0, ISS = 0x00000004, ISS2 = 0x00000000\n    CM = 0, WnR = 0, TnD = 0, TagAccess = 0\n    GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0\n  [dfffffc000000001] address between user and kernel address ranges\n  Internal error: Oops: 0000000096000004 [#1] SMP\n  CPU: 1 UID: 0 PID: 978 Comm: lbd Not tainted 6.13.0-g633f875b8f1e #114\n  Hardware name: HW (DT)\n  pstate: 10000005 (nzcV daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n  pc : ath12k_mac_op_tx+0x6cc/0x29b8 [ath12k]\n  lr : ath12k_mac_op_tx+0x174/0x29b8 [ath12k]\n  sp : ffffffc086ace450\n  x29: ffffffc086ace450 x28: 0000000000000000 x27: 1ffffff810d59ca4\n  x26: ffffff801d05f7c0 x25: 0000000000000000 x24: 000000004000001e\n  x23: ffffff8009ce4926 x22: ffffff801f9c0800 x21: ffffff801d05f7f0\n  x20: ffffff8034a19f40 x19: 0000000000000000 x18: ffffff801f9c0958\n  x17: ffffff800bc0a504 x16: dfffffc000000000 x15: ffffffc086ace4f8\n  x14: ffffff801d05f83c x13: 0000000000000000 x12: ffffffb003a0bf03\n  x11: 0000000000000000 x10: ffffffb003a0bf02 x9 : ffffff8034a19f40\n  x8 : ffffff801d05f818 x7 : 1ffffff0069433dc x6 : ffffff8034a19ee0\n  x5 : ffffff801d05f7f0 x4 : 0000000000000000 x3 : 0000000000000001\n  x2 : 0000000000000000 x1 : dfffffc000000000 x0 : 0000000000000008\n  Call trace:\n   ath12k_mac_op_tx+0x6cc/0x29b8 [ath12k] (P)\n   ieee80211_handle_wake_tx_queue+0x16c/0x260\n   ieee80211_queue_skb+0xeec/0x1d20\n   ieee80211_tx+0x200/0x2c8\n   ieee80211_xmit+0x22c/0x338\n   __ieee80211_subif_start_xmit+0x7e8/0xc60\n   ieee80211_subif_start_xmit+0xc4/0xee0\n   __ieee80211_subif_start_xmit_8023.isra.0+0x854/0x17a0\n   ieee80211_subif_start_xmit_8023+0x124/0x488\n   dev_hard_start_xmit+0x160/0x5a8\n   __dev_queue_xmit+0x6f8/0x3120\n   br_dev_queue_push_xmit+0x120/0x4a8\n   __br_forward+0xe4/0x2b0\n   deliver_clone+0x5c/0xd0\n   br_flood+0x398/0x580\n   br_dev_xmit+0x454/0x9f8\n   dev_hard_start_xmit+0x160/0x5a8\n   __dev_queue_xmit+0x6f8/0x3120\n   ip6_finish_output2+0xc28/0x1b60\n   __ip6_finish_output+0x38c/0x638\n   ip6_output+0x1b4/0x338\n   ip6_local_out+0x7c/0xa8\n   ip6_send_skb+0x7c/0x1b0\n   ip6_push_pending_frames+0x94/0xd0\n   rawv6_sendmsg+0x1a98/0x2898\n   inet_sendmsg+0x94/0xe0\n   __sys_sendto+0x1e4/0x308\n   __arm64_sys_sendto+0xc4/0x140\n   do_el0_svc+0x110/0x280\n   el0_svc+0x20/0x60\n   el0t_64_sync_handler+0x104/0x138\n   el0t_64_sync+0x154/0x158\n\nTo avoid that, empty vif's txq at ieee80211_do_stop() so no packet could\nbe dequeued after ieee80211_do_stop() (new packets cannot be queued\nbecause SDATA_STATE_RUNNING is cleared at this point).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37796",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: at76c50x: fix use after free access in at76_disconnect\n\nThe memory pointed to by priv is freed at the end of at76_delete_device\nfunction (using ieee80211_free_hw). But the code then accesses the udev\nfield of the freed object to put the USB device. This may also lead to a\nmemory leak of the usb device. Fix this by using udev from interface.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37797",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: hfsc: Fix a UAF vulnerability in class handling\n\nThis patch fixes a Use-After-Free vulnerability in the HFSC qdisc class\nhandling. The issue occurs due to a time-of-check/time-of-use condition\nin hfsc_change_class() when working with certain child qdiscs like netem\nor codel.\n\nThe vulnerability works as follows:\n1. hfsc_change_class() checks if a class has packets (q.qlen != 0)\n2. It then calls qdisc_peek_len(), which for certain qdiscs (e.g.,\n   codel, netem) might drop packets and empty the queue\n3. The code continues assuming the queue is still non-empty, adding\n   the class to vttree\n4. This breaks HFSC scheduler assumptions that only non-empty classes\n   are in vttree\n5. Later, when the class is destroyed, this can lead to a Use-After-Free\n\nThe fix adds a second queue length check after qdisc_peek_len() to verify\nthe queue wasn't emptied.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37798",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncodel: remove sch-\u003eq.qlen check before qdisc_tree_reduce_backlog()\n\nAfter making all -\u003eqlen_notify() callbacks idempotent, now it is safe to\nremove the check of qlen!=0 from both fq_codel_dequeue() and\ncodel_qdisc_dequeue().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37799",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvmxnet3: Fix malformed packet sizing in vmxnet3_process_xdp\n\nvmxnet3 driver's XDP handling is buggy for packet sizes using ring0 (that\nis, packet sizes between 128 - 3k bytes).\n\nWe noticed MTU-related connectivity issues with Cilium's service load-\nbalancing in case of vmxnet3 as NIC underneath. A simple curl to a HTTP\nbackend service where the XDP LB was doing IPIP encap led to overly large\npacket sizes but only for *some* of the packets (e.g. HTTP GET request)\nwhile others (e.g. the prior TCP 3WHS) looked completely fine on the wire.\n\nIn fact, the pcap recording on the backend node actually revealed that the\nnode with the XDP LB was leaking uninitialized kernel data onto the wire\nfor the affected packets, for example, while the packets should have been\n152 bytes their actual size was 1482 bytes, so the remainder after 152 bytes\nwas padded with whatever other data was in that page at the time (e.g. we\nsaw user/payload data from prior processed packets).\n\nWe only noticed this through an MTU issue, e.g. when the XDP LB node and\nthe backend node both had the same MTU (e.g. 1500) then the curl request\ngot dropped on the backend node's NIC given the packet was too large even\nthough the IPIP-encapped packet normally would never even come close to\nthe MTU limit. Lowering the MTU on the XDP LB (e.g. 1480) allowed to let\nthe curl request succeed (which also indicates that the kernel ignored the\npadding, and thus the issue wasn't very user-visible).\n\nCommit e127ce7699c1 (\"vmxnet3: Fix missing reserved tailroom\") was too eager\nto also switch xdp_prepare_buff() from rcd-\u003elen to rbi-\u003elen. It really needs\nto stick to rcd-\u003elen which is the actual packet length from the descriptor.\nThe latter we also feed into vmxnet3_process_xdp_small(), by the way, and\nit indicates the correct length needed to initialize the xdp-\u003e{data,data_end}\nparts. For e127ce7699c1 (\"vmxnet3: Fix missing reserved tailroom\") the\nrelevant part was adapting xdp_init_buff() to address the warning given the\nxdp_data_hard_end() depends on xdp-\u003eframe_sz. With that fixed, traffic on\nthe wire looks good again.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37800",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndriver core: fix potential NULL pointer dereference in dev_uevent()\n\nIf userspace reads \"uevent\" device attribute at the same time as another\nthreads unbinds the device from its driver, change to dev-\u003edriver from a\nvalid pointer to NULL may result in crash. Fix this by using READ_ONCE()\nwhen fetching the pointer, and take bus' drivers klist lock to make sure\ndriver instance will not disappear while we access it.\n\nUse WRITE_ONCE() when setting the driver pointer to ensure there is no\ntearing.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37801",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: spi-imx: Add check for spi_imx_setupxfer()\n\nAdd check for the return value of spi_imx_setupxfer().\nspi_imx-\u003erx and spi_imx-\u003etx function pointer can be NULL when\nspi_imx_setupxfer() return error, and make NULL pointer dereference.\n\n Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000\n Call trace:\n  0x0\n  spi_imx_pio_transfer+0x50/0xd8\n  spi_imx_transfer_one+0x18c/0x858\n  spi_transfer_one_message+0x43c/0x790\n  __spi_pump_transfer_message+0x238/0x5d4\n  __spi_sync+0x2b0/0x454\n  spi_write_then_read+0x11c/0x200",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37803",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nudmabuf: fix a buf size overflow issue during udmabuf creation\n\nby casting size_limit_mb to u64  when calculate pglimit.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37804",
      "Description": "This CVE ID has been rejected or withdrawn by its CVE Numbering Authority.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37805",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsound/virtio: Fix cancel_sync warnings on uninitialized work_structs\n\nBetty reported hitting the following warning:\n\n[    8.709131][  T221] WARNING: CPU: 2 PID: 221 at kernel/workqueue.c:4182\n...\n[    8.713282][  T221] Call trace:\n[    8.713365][  T221]  __flush_work+0x8d0/0x914\n[    8.713468][  T221]  __cancel_work_sync+0xac/0xfc\n[    8.713570][  T221]  cancel_work_sync+0x24/0x34\n[    8.713667][  T221]  virtsnd_remove+0xa8/0xf8 [virtio_snd ab15f34d0dd772f6d11327e08a81d46dc9c36276]\n[    8.713868][  T221]  virtsnd_probe+0x48c/0x664 [virtio_snd ab15f34d0dd772f6d11327e08a81d46dc9c36276]\n[    8.714035][  T221]  virtio_dev_probe+0x28c/0x390\n[    8.714139][  T221]  really_probe+0x1bc/0x4c8\n...\n\nIt seems we're hitting the error path in virtsnd_probe(), which\ntriggers a virtsnd_remove() which iterates over the substreams\ncalling cancel_work_sync() on the elapsed_period work_struct.\n\nLooking at the code, from earlier in:\nvirtsnd_probe()-\u003evirtsnd_build_devs()-\u003evirtsnd_pcm_parse_cfg()\n\nWe set snd-\u003ensubstreams, allocate the snd-\u003esubstreams, and if\nwe then hit an error on the info allocation or something in\nvirtsnd_ctl_query_info() fails, we will exit without having\ninitialized the elapsed_period work_struct.\n\nWhen that error path unwinds we then call virtsnd_remove()\nwhich as long as the substreams array is allocated, will iterate\nthrough calling cancel_work_sync() on the uninitialized work\nstruct hitting this warning.\n\nTakashi Iwai suggested this fix, which initializes the substreams\nstructure right after allocation, so that if we hit the error\npaths we avoid trying to cleanup uninitialized data.\n\nNote: I have not yet managed to reproduce the issue myself, so\nthis patch has had limited testing.\n\nFeedback or thoughts would be appreciated!",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37809",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: typec: class: Fix NULL pointer access\n\nConcurrent calls to typec_partner_unlink_device can lead to a NULL pointer\ndereference. This patch adds a mutex to protect USB device pointers and\nprevent this issue. The same mutex protects both the device pointers and\nthe partner device registration.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37810",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: dwc3: gadget: check that event count does not exceed event buffer length\n\nThe event count is read from register DWC3_GEVNTCOUNT.\nThere is a check for the count being zero, but not for exceeding the\nevent buffer length.\nCheck that event count does not exceed event buffer length,\navoiding an out-of-bounds access when memcpy'ing the event.\nCrash log:\nUnable to handle kernel paging request at virtual address ffffffc0129be000\npc : __memcpy+0x114/0x180\nlr : dwc3_check_event_buf+0xec/0x348\nx3 : 0000000000000030 x2 : 000000000000dfc4\nx1 : ffffffc0129be000 x0 : ffffff87aad60080\nCall trace:\n__memcpy+0x114/0x180\ndwc3_interrupt+0x24/0x34",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37811",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: chipidea: ci_hdrc_imx: fix usbmisc handling\n\nusbmisc is an optional device property so it is totally valid for the\ncorresponding data-\u003eusbmisc_data to have a NULL value.\n\nCheck that before dereferencing the pointer.\n\nFound by Linux Verification Center (linuxtesting.org) with Svace static\nanalysis tool.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37812",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: cdns3: Fix deadlock when using NCM gadget\n\nThe cdns3 driver has the same NCM deadlock as fixed in cdnsp by commit\n58f2fcb3a845 (\"usb: cdnsp: Fix deadlock issue during using NCM gadget\").\n\nUnder PREEMPT_RT the deadlock can be readily triggered by heavy network\ntraffic, for example using \"iperf --bidir\" over NCM ethernet link.\n\nThe deadlock occurs because the threaded interrupt handler gets\npreempted by a softirq, but both are protected by the same spinlock.\nPrevent deadlock by disabling softirq during threaded irq handler.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37815",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmisc: microchip: pci1xxxx: Fix Kernel panic during IRQ handler registration\n\nResolve kernel panic while accessing IRQ handler associated with the\ngenerated IRQ. This is done by acquiring the spinlock and storing the\ncurrent interrupt state before handling the interrupt request using\ngeneric_handle_irq.\n\nA previous fix patch was submitted where 'generic_handle_irq' was\nreplaced with 'handle_nested_irq'. However, this change also causes\nthe kernel panic where after determining which GPIO triggered the\ninterrupt and attempting to call handle_nested_irq with the mapped\nIRQ number, leads to a failure in locating the registered handler.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37819",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nirqchip/gic-v2m: Prevent use after free of gicv2m_get_fwnode()\n\nWith ACPI in place, gicv2m_get_fwnode() is registered with the pci\nsubsystem as pci_msi_get_fwnode_cb(), which may get invoked at runtime\nduring a PCI host bridge probe. But, the call back is wrongly marked as\n__init, causing it to be freed, while being registered with the PCI\nsubsystem and could trigger:\n\n Unable to handle kernel paging request at virtual address ffff8000816c0400\n  gicv2m_get_fwnode+0x0/0x58 (P)\n  pci_set_bus_msi_domain+0x74/0x88\n  pci_register_host_bridge+0x194/0x548\n\nThis is easily reproducible on a Juno board with ACPI boot.\n\nRetain the function for later use.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37820",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxen-netfront: handle NULL returned by xdp_convert_buff_to_frame()\n\nThe function xdp_convert_buff_to_frame() may return NULL if it fails\nto correctly convert the XDP buffer into an XDP frame due to memory\nconstraints, internal errors, or invalid data. Failing to check for NULL\nmay lead to a NULL pointer dereference if the result is used later in\nprocessing, potentially causing crashes, data corruption, or undefined\nbehavior.\n\nOn XDP redirect failure, the associated page must be released explicitly\nif it was previously retained via get_page(). Failing to do so may result\nin a memory leak, as the pages reference count is not decremented.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37823",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: hfsc: Fix a potential UAF in hfsc_dequeue() too\n\nSimilarly to the previous patch, we need to safe guard hfsc_dequeue()\ntoo. But for this one, we don't have a reliable reproducer.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37824",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntipc: fix NULL pointer dereference in tipc_mon_reinit_self()\n\nsyzbot reported:\n\ntipc: Node number set to 1055423674\nOops: general protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] SMP KASAN NOPTI\nKASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]\nCPU: 3 UID: 0 PID: 6017 Comm: kworker/3:5 Not tainted 6.15.0-rc1-syzkaller-00246-g900241a5cc15 #0 PREEMPT(full)\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2~bpo12+1 04/01/2014\nWorkqueue: events tipc_net_finalize_work\nRIP: 0010:tipc_mon_reinit_self+0x11c/0x210 net/tipc/monitor.c:719\n...\nRSP: 0018:ffffc9000356fb68 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: 0000000000000000 RCX: 000000003ee87cba\nRDX: 0000000000000000 RSI: ffffffff8dbc56a7 RDI: ffff88804c2cc010\nRBP: dffffc0000000000 R08: 0000000000000001 R09: 0000000000000000\nR10: 0000000000000001 R11: 0000000000000000 R12: 0000000000000007\nR13: fffffbfff2111097 R14: ffff88804ead8000 R15: ffff88804ead9010\nFS:  0000000000000000(0000) GS:ffff888097ab9000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00000000f720eb00 CR3: 000000000e182000 CR4: 0000000000352ef0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n \u003cTASK\u003e\n tipc_net_finalize+0x10b/0x180 net/tipc/net.c:140\n process_one_work+0x9cc/0x1b70 kernel/workqueue.c:3238\n process_scheduled_works kernel/workqueue.c:3319 [inline]\n worker_thread+0x6c8/0xf10 kernel/workqueue.c:3400\n kthread+0x3c2/0x780 kernel/kthread.c:464\n ret_from_fork+0x45/0x80 arch/x86/kernel/process.c:153\n ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:245\n \u003c/TASK\u003e\n...\nRIP: 0010:tipc_mon_reinit_self+0x11c/0x210 net/tipc/monitor.c:719\n...\nRSP: 0018:ffffc9000356fb68 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: 0000000000000000 RCX: 000000003ee87cba\nRDX: 0000000000000000 RSI: ffffffff8dbc56a7 RDI: ffff88804c2cc010\nRBP: dffffc0000000000 R08: 0000000000000001 R09: 0000000000000000\nR10: 0000000000000001 R11: 0000000000000000 R12: 0000000000000007\nR13: fffffbfff2111097 R14: ffff88804ead8000 R15: ffff88804ead9010\nFS:  0000000000000000(0000) GS:ffff888097ab9000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00000000f720eb00 CR3: 000000000e182000 CR4: 0000000000352ef0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n\nThere is a racing condition between workqueue created when enabling\nbearer and another thread created when disabling bearer right after\nthat as follow:\n\nenabling_bearer                          | disabling_bearer\n---------------                          | ----------------\ntipc_disc_timeout()                      |\n{                                        | bearer_disable()\n ...                                     | {\n schedule_work(\u0026tn-\u003ework);               |  tipc_mon_delete()\n ...                                     |  {\n}                                        |   ...\n                                         |   write_lock_bh(\u0026mon-\u003elock);\n                                         |   mon-\u003eself = NULL;\n                                         |   write_unlock_bh(\u0026mon-\u003elock);\n                                         |   ...\n                                         |  }\ntipc_net_finalize_work()                 | }\n{                                        |\n ...                                     |\n tipc_net_finalize()                     |\n {                                       |\n  ...                                    |\n  tipc_mon_reinit_self()                 |\n  {                                      |\n   ...                                   |\n   write_lock_bh(\u0026mon-\u003elock);            |\n   mon-\u003eself-\u003eaddr = tipc_own_addr(net); |\n   write_unlock_bh(\u0026mon-\u003elock);          |\n   ...             \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37829",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncpufreq: scpi: Fix null-ptr-deref in scpi_cpufreq_get_rate()\n\ncpufreq_cpu_get_raw() can return NULL when the target CPU is not present\nin the policy-\u003ecpus mask. scpi_cpufreq_get_rate() does not check for\nthis case, which results in a NULL pointer dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37830",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncpufreq: scmi: Fix null-ptr-deref in scmi_cpufreq_get_rate()\n\ncpufreq_cpu_get_raw() can return NULL when the target CPU is not present\nin the policy-\u003ecpus mask. scmi_cpufreq_get_rate() does not check for\nthis case, which results in a NULL pointer dereference.\n\nAdd NULL check after cpufreq_cpu_get_raw() to prevent this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37831",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncpufreq: apple-soc: Fix null-ptr-deref in apple_soc_cpufreq_get_rate()\n\ncpufreq_cpu_get_raw() can return NULL when the target CPU is not present\nin the policy-\u003ecpus mask. apple_soc_cpufreq_get_rate() does not check\nfor this case, which results in a NULL pointer dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37833",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/niu: Niu requires MSIX ENTRY_DATA fields touch before entry reads\n\nFix niu_try_msix() to not cause a fatal trap on sparc systems.\n\nSet PCI_DEV_FLAGS_MSIX_TOUCH_ENTRY_DATA_FIRST on the struct pci_dev to\nwork around a bug in the hardware or firmware.\n\nFor each vector entry in the msix table, niu chips will cause a fatal\ntrap if any registers in that entry are read before that entries'\nENTRY_DATA register is written to. Testing indicates writes to other\nregisters are not sufficient to prevent the fatal trap, however the value\ndoes not appear to matter. This only needs to happen once after power up,\nso simply rebooting into a kernel lacking this fix will NOT cause the\ntrap.\n\nNON-RESUMABLE ERROR: Reporting on cpu 64\nNON-RESUMABLE ERROR: TPC [0x00000000005f6900] \u003cmsix_prepare_msi_desc+0x90/0xa0\u003e\nNON-RESUMABLE ERROR: RAW [4010000000000016:00000e37f93e32ff:0000000202000080:ffffffffffffffff\nNON-RESUMABLE ERROR:      0000000800000000:0000000000000000:0000000000000000:0000000000000000]\nNON-RESUMABLE ERROR: handle [0x4010000000000016] stick [0x00000e37f93e32ff]\nNON-RESUMABLE ERROR: type [precise nonresumable]\nNON-RESUMABLE ERROR: attrs [0x02000080] \u003c ASI sp-faulted priv \u003e\nNON-RESUMABLE ERROR: raddr [0xffffffffffffffff]\nNON-RESUMABLE ERROR: insn effective address [0x000000c50020000c]\nNON-RESUMABLE ERROR: size [0x8]\nNON-RESUMABLE ERROR: asi [0x00]\nCPU: 64 UID: 0 PID: 745 Comm: kworker/64:1 Not tainted 6.11.5 #63\nWorkqueue: events work_for_cpu_fn\nTSTATE: 0000000011001602 TPC: 00000000005f6900 TNPC: 00000000005f6904 Y: 00000000    Not tainted\nTPC: \u003cmsix_prepare_msi_desc+0x90/0xa0\u003e\ng0: 00000000000002e9 g1: 000000000000000c g2: 000000c50020000c g3: 0000000000000100\ng4: ffff8000470307c0 g5: ffff800fec5be000 g6: ffff800047a08000 g7: 0000000000000000\no0: ffff800014feb000 o1: ffff800047a0b620 o2: 0000000000000011 o3: ffff800047a0b620\no4: 0000000000000080 o5: 0000000000000011 sp: ffff800047a0ad51 ret_pc: 00000000005f7128\nRPC: \u003c__pci_enable_msix_range+0x3cc/0x460\u003e\nl0: 000000000000000d l1: 000000000000c01f l2: ffff800014feb0a8 l3: 0000000000000020\nl4: 000000000000c000 l5: 0000000000000001 l6: 0000000020000000 l7: ffff800047a0b734\ni0: ffff800014feb000 i1: ffff800047a0b730 i2: 0000000000000001 i3: 000000000000000d\ni4: 0000000000000000 i5: 0000000000000000 i6: ffff800047a0ae81 i7: 00000000101888b0\nI7: \u003cniu_try_msix.constprop.0+0xc0/0x130 [niu]\u003e\nCall Trace:\n[\u003c00000000101888b0\u003e] niu_try_msix.constprop.0+0xc0/0x130 [niu]\n[\u003c000000001018f840\u003e] niu_get_invariants+0x183c/0x207c [niu]\n[\u003c00000000101902fc\u003e] niu_pci_init_one+0x27c/0x2fc [niu]\n[\u003c00000000005ef3e4\u003e] local_pci_probe+0x28/0x74\n[\u003c0000000000469240\u003e] work_for_cpu_fn+0x8/0x1c\n[\u003c000000000046b008\u003e] process_scheduled_works+0x144/0x210\n[\u003c000000000046b518\u003e] worker_thread+0x13c/0x1c0\n[\u003c00000000004710e0\u003e] kthread+0xb8/0xc8\n[\u003c00000000004060c8\u003e] ret_from_fork+0x1c/0x2c\n[\u003c0000000000000000\u003e] 0x0\nKernel panic - not syncing: Non-resumable error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37836",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nPCI: Fix reference leak in pci_register_host_bridge()\n\nIf device_register() fails, call put_device() to give up the reference to\navoid a memory leak, per the comment at device_register().\n\nFound by code review.\n\n[bhelgaas: squash Dan Carpenter's double free fix from\nhttps://lore.kernel.org/r/db806a6c-a91b-4e5a-a84b-6b7e01bdac85@stanley.mountain]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37839",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\njbd2: remove wrong sb-\u003es_sequence check\n\nJournal emptiness is not determined by sb-\u003es_sequence == 0 but rather by\nsb-\u003es_start == 0 (which is set a few lines above). Furthermore 0 is a\nvalid transaction ID so the check can spuriously trigger. Remove the\ninvalid WARN_ON.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37840",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmtd: rawnand: brcmnand: fix PM resume warning\n\nFixed warning on PM resume as shown below caused due to uninitialized\nstruct nand_operation that checks chip select field :\nWARN_ON(op-\u003ecs \u003e= nanddev_ntargets(\u0026chip-\u003ebase)\n\n[   14.588522] ------------[ cut here ]------------\n[   14.588529] WARNING: CPU: 0 PID: 1392 at drivers/mtd/nand/raw/internals.h:139 nand_reset_op+0x1e0/0x1f8\n[   14.588553] Modules linked in: bdc udc_core\n[   14.588579] CPU: 0 UID: 0 PID: 1392 Comm: rtcwake Tainted: G        W          6.14.0-rc4-g5394eea10651 #16\n[   14.588590] Tainted: [W]=WARN\n[   14.588593] Hardware name: Broadcom STB (Flattened Device Tree)\n[   14.588598] Call trace:\n[   14.588604]  dump_backtrace from show_stack+0x18/0x1c\n[   14.588622]  r7:00000009 r6:0000008b r5:60000153 r4:c0fa558c\n[   14.588625]  show_stack from dump_stack_lvl+0x70/0x7c\n[   14.588639]  dump_stack_lvl from dump_stack+0x18/0x1c\n[   14.588653]  r5:c08d40b0 r4:c1003cb0\n[   14.588656]  dump_stack from __warn+0x84/0xe4\n[   14.588668]  __warn from warn_slowpath_fmt+0x18c/0x194\n[   14.588678]  r7:c08d40b0 r6:c1003cb0 r5:00000000 r4:00000000\n[   14.588681]  warn_slowpath_fmt from nand_reset_op+0x1e0/0x1f8\n[   14.588695]  r8:70c40dff r7:89705f41 r6:36b4a597 r5:c26c9444 r4:c26b0048\n[   14.588697]  nand_reset_op from brcmnand_resume+0x13c/0x150\n[   14.588714]  r9:00000000 r8:00000000 r7:c24f8010 r6:c228a3f8 r5:c26c94bc r4:c26b0040\n[   14.588717]  brcmnand_resume from platform_pm_resume+0x34/0x54\n[   14.588735]  r5:00000010 r4:c0840a50\n[   14.588738]  platform_pm_resume from dpm_run_callback+0x5c/0x14c\n[   14.588757]  dpm_run_callback from device_resume+0xc0/0x324\n[   14.588776]  r9:c24f8054 r8:c24f80a0 r7:00000000 r6:00000000 r5:00000010 r4:c24f8010\n[   14.588779]  device_resume from dpm_resume+0x130/0x160\n[   14.588799]  r9:c22539e4 r8:00000010 r7:c22bebb0 r6:c24f8010 r5:c22539dc r4:c22539b0\n[   14.588802]  dpm_resume from dpm_resume_end+0x14/0x20\n[   14.588822]  r10:c2204e40 r9:00000000 r8:c228a3fc r7:00000000 r6:00000003 r5:c228a414\n[   14.588826]  r4:00000010\n[   14.588828]  dpm_resume_end from suspend_devices_and_enter+0x274/0x6f8\n[   14.588848]  r5:c228a414 r4:00000000\n[   14.588851]  suspend_devices_and_enter from pm_suspend+0x228/0x2bc\n[   14.588868]  r10:c3502910 r9:c3501f40 r8:00000004 r7:c228a438 r6:c0f95e18 r5:00000000\n[   14.588871]  r4:00000003\n[   14.588874]  pm_suspend from state_store+0x74/0xd0\n[   14.588889]  r7:c228a438 r6:c0f934c8 r5:00000003 r4:00000003\n[   14.588892]  state_store from kobj_attr_store+0x1c/0x28\n[   14.588913]  r9:00000000 r8:00000000 r7:f09f9f08 r6:00000004 r5:c3502900 r4:c0283250\n[   14.588916]  kobj_attr_store from sysfs_kf_write+0x40/0x4c\n[   14.588936]  r5:c3502900 r4:c0d92a48\n[   14.588939]  sysfs_kf_write from kernfs_fop_write_iter+0x104/0x1f0\n[   14.588956]  r5:c3502900 r4:c3501f40\n[   14.588960]  kernfs_fop_write_iter from vfs_write+0x250/0x420\n[   14.588980]  r10:c0e14b48 r9:00000000 r8:c25f5780 r7:00443398 r6:f09f9f68 r5:c34f7f00\n[   14.588983]  r4:c042a88c\n[   14.588987]  vfs_write from ksys_write+0x74/0xe4\n[   14.589005]  r10:00000004 r9:c25f5780 r8:c02002fA0 r7:00000000 r6:00000000 r5:c34f7f00\n[   14.589008]  r4:c34f7f00\n[   14.589011]  ksys_write from sys_write+0x10/0x14\n[   14.589029]  r7:00000004 r6:004421c0 r5:00443398 r4:00000004\n[   14.589032]  sys_write from ret_fast_syscall+0x0/0x5c\n[   14.589044] Exception stack(0xf09f9fa8 to 0xf09f9ff0)\n[   14.589050] 9fa0:                   00000004 00443398 00000004 00443398 00000004 00000001\n[   14.589056] 9fc0: 00000004 00443398 004421c0 00000004 b6ecbd58 00000008 bebfbc38 0043eb78\n[   14.589062] 9fe0: 00440eb0 bebfbaf8 b6de18a0 b6e579e8\n[   14.589065] ---[ end trace 0000000000000000 ]---\n\nThe fix uses the higher level nand_reset(chip, chipnr); where chipnr = 0, when\ndoing PM resume operation in compliance with the controller support for single\ndie nand chip. Switching from nand_reset_op() to nan\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37841",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npm: cpupower: bench: Prevent NULL dereference on malloc failure\n\nIf malloc returns NULL due to low memory, 'config' pointer can be NULL.\nAdd a check to prevent NULL dereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37842",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: fsl-qspi: use devm function instead of driver remove\n\nDriver use devm APIs to manage clk/irq/resources and register the spi\ncontroller, but the legacy remove function will be called first during\ndevice detach and trigger kernel panic. Drop the remove function and use\ndevm_add_action_or_reset() for driver cleanup to ensure the release\nsequence.\n\nTrigger kernel panic on i.MX8MQ by\necho 30bb0000.spi \u003e/sys/bus/platform/drivers/fsl-quadspi/unbind",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37844",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncifs: avoid NULL pointer dereference in dbg call\n\ncifs_server_dbg() implies server to be non-NULL so\nmove call under condition to avoid NULL pointer dereference.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37849",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: arm64: Tear down vGIC on failed vCPU creation\n\nIf kvm_arch_vcpu_create() fails to share the vCPU page with the\nhypervisor, we propagate the error back to the ioctl but leave the\nvGIC vCPU data initialised. Note only does this leak the corresponding\nmemory when the vCPU is destroyed but it can also lead to use-after-free\nif the redistributor device handling tries to walk into the vCPU.\n\nAdd the missing cleanup to kvm_arch_vcpu_create(), ensuring that the\nvGIC vCPU structures are destroyed on error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37850",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npwm: mediatek: Prevent divide-by-zero in pwm_mediatek_config()\n\nWith CONFIG_COMPILE_TEST \u0026\u0026 !CONFIG_HAVE_CLK, pwm_mediatek_config() has a\ndivide-by-zero in the following line:\n\n\tdo_div(resolution, clk_get_rate(pc-\u003eclk_pwms[pwm-\u003ehwpwm]));\n\ndue to the fact that the !CONFIG_HAVE_CLK version of clk_get_rate()\nreturns zero.\n\nThis is presumably just a theoretical problem: COMPILE_TEST overrides\nthe dependency on RALINK which would select COMMON_CLK.  Regardless it's\na good idea to check for the error explicitly to avoid divide-by-zero.\n\nFixes the following warning:\n\n  drivers/pwm/pwm-mediatek.o: warning: objtool: .text: unexpected end of section\n\n[ukleinek: s/CONFIG_CLK/CONFIG_HAVE_CLK/]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37851",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfbdev: omapfb: Add 'plane' value check\n\nFunction dispc_ovl_setup is not intended to work with the value OMAP_DSS_WB\nof the enum parameter plane.\n\nThe value of this parameter is initialized in dss_init_overlays and in the\ncurrent state of the code it cannot take this value so it's not a real\nproblem.\n\nFor the purposes of defensive coding it wouldn't be superfluous to check\nthe parameter value, because some functions down the call stack process\nthis value correctly and some not.\n\nFor example, in dispc_ovl_setup_global_alpha it may lead to buffer\noverflow.\n\nAdd check for this value.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE static\nanalysis tool.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37852",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: handle amdgpu_cgs_create_device() errors in amd_powerplay_create()\n\nAdd error handling to propagate amdgpu_cgs_create_device() failures\nto the caller. When amdgpu_cgs_create_device() fails, release hwmgr\nand return -ENOMEM to prevent null pointer dereference.\n\n[v1]-\u003e[v2]: Change error code from -EINVAL to -ENOMEM. Free hwmgr.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37853",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdkfd: debugfs hang_hws skip GPU with MES\n\ndebugfs hang_hws is used by GPU reset test with HWS, for MES this crash\nthe kernel with NULL pointer access because dqm-\u003epacket_mgr is not setup\nfor MES path.\n\nSkip GPU with MES for now, MES hang_hws debugfs interface will be\nsupported later.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37854",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdkfd: Fix mode1 reset crash issue\n\nIf HW scheduler hangs and mode1 reset is used to recover GPU, KFD signal\nuser space to abort the processes. After process abort exit, user queues\nstill use the GPU to access system memory before h/w is reset while KFD\ncleanup worker free system memory and free VRAM.\n\nThere is use-after-free race bug that KFD allocate and reuse the freed\nsystem memory, and user queue write to the same system memory to corrupt\nthe data structure and cause driver crash.\n\nTo fix this race, KFD cleanup worker terminate user queues, then flush\nreset_domain wq to wait for any GPU ongoing reset complete, and then\nfree outstanding BOs.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37858",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfs/jfs: Prevent integer overflow in AG size calculation\n\nThe JFS filesystem calculates allocation group (AG) size using 1 \u003c\u003c\nl2agsize in dbExtendFS(). When l2agsize exceeds 31 (possible with \u003e2TB\naggregates on 32-bit systems), this 32-bit shift operation causes undefined\nbehavior and improper AG sizing.\n\nOn 32-bit architectures:\n- Left-shifting 1 by 32+ bits results in 0 due to integer overflow\n- This creates invalid AG sizes (0 or garbage values) in\nsbi-\u003ebmap-\u003edb_agsize\n- Subsequent block allocations would reference invalid AG structures\n- Could lead to:\n  - Filesystem corruption during extend operations\n  - Kernel crashes due to invalid memory accesses\n  - Security vulnerabilities via malformed on-disk structures\n\nFix by casting to s64 before shifting:\nbmp-\u003edb_agsize = (s64)1 \u003c\u003c l2agsize;\n\nThis ensures 64-bit arithmetic even on 32-bit architectures. The cast\nmatches the data type of db_agsize (s64) and follows similar patterns in\nJFS block calculation code.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37859",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npage_pool: avoid infinite loop to schedule delayed worker\n\nWe noticed the kworker in page_pool_release_retry() was waken\nup repeatedly and infinitely in production because of the\nbuggy driver causing the inflight less than 0 and warning\nus in page_pool_inflight()[1].\n\nSince the inflight value goes negative, it means we should\nnot expect the whole page_pool to get back to work normally.\n\nThis patch mitigates the adverse effect by not rescheduling\nthe kworker when detecting the inflight negative in\npage_pool_release_retry().\n\n[1]\n[Mon Feb 10 20:36:11 2025] ------------[ cut here ]------------\n[Mon Feb 10 20:36:11 2025] Negative(-51446) inflight packet-pages\n...\n[Mon Feb 10 20:36:11 2025] Call Trace:\n[Mon Feb 10 20:36:11 2025]  page_pool_release_retry+0x23/0x70\n[Mon Feb 10 20:36:11 2025]  process_one_work+0x1b1/0x370\n[Mon Feb 10 20:36:11 2025]  worker_thread+0x37/0x3a0\n[Mon Feb 10 20:36:11 2025]  kthread+0x11a/0x140\n[Mon Feb 10 20:36:11 2025]  ? process_one_work+0x370/0x370\n[Mon Feb 10 20:36:11 2025]  ? __kthread_cancel_work+0x40/0x40\n[Mon Feb 10 20:36:11 2025]  ret_from_fork+0x35/0x40\n[Mon Feb 10 20:36:11 2025] ---[ end trace ebffe800f33e7e34 ]---\nNote: before this patch, the above calltrace would flood the\ndmesg due to repeated reschedule of release_dw kworker.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37860",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsfc: fix NULL dereferences in ef100_process_design_param()\n\nSince cited commit, ef100_probe_main() and hence also\n ef100_check_design_params() run before efx-\u003enet_dev is created;\n consequently, we cannot netif_set_tso_max_size() or _segs() at this\n point.\nMove those netif calls to ef100_probe_netdev(), and also replace\n netif_err within the design params code with pci_err.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37862",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: pidff: Fix null pointer dereference in pidff_find_fields\n\nThis function triggered a null pointer dereference if used to search for\na report that isn't implemented on the device. This happened both for\noptional and required reports alike.\n\nThe same logic was applied to pidff_find_special_field and although\npidff_init_fields should return an error earlier if one of the required\nreports is missing, future modifications could change this logic and\nresurface this possible null pointer dereference again.\n\nLKML bug report:\nhttps://lore.kernel.org/all/CAL-gK7f5=R0nrrQdPtaZZr1fd-cdAMbDMuZ_NLA8vM0SX+nGSw@mail.gmail.com",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37865",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: dsa: mv88e6xxx: fix -ENOENT when deleting VLANs and MST is unsupported\n\nRussell King reports that on the ZII dev rev B, deleting a bridge VLAN\nfrom a user port fails with -ENOENT:\nhttps://lore.kernel.org/netdev/Z_lQXNP0s5-IiJzd@shell.armlinux.org.uk/\n\nThis comes from mv88e6xxx_port_vlan_leave() -\u003e mv88e6xxx_mst_put(),\nwhich tries to find an MST entry in \u0026chip-\u003emsts associated with the SID,\nbut fails and returns -ENOENT as such.\n\nBut we know that this chip does not support MST at all, so that is not\nsurprising. The question is why does the guard in mv88e6xxx_mst_put()\nnot exit early:\n\n\tif (!sid)\n\t\treturn 0;\n\nAnd the answer seems to be simple: the sid comes from vlan.sid which\nsupposedly was previously populated by mv88e6xxx_vtu_get().\nBut some chip-\u003einfo-\u003eops-\u003evtu_getnext() implementations do not populate\nvlan.sid, for example see mv88e6185_g1_vtu_getnext(). In that case,\nlater in mv88e6xxx_port_vlan_leave() we are using a garbage sid which is\njust residual stack memory.\n\nTesting for sid == 0 covers all cases of a non-bridge VLAN or a bridge\nVLAN mapped to the default MSTI. For some chips, SID 0 is valid and\ninstalled by mv88e6xxx_stu_setup(). A chip which does not support the\nSTU would implicitly only support mapping all VLANs to the default MSTI,\nso although SID 0 is not valid, it would be sufficient, if we were to\nzero-initialize the vlan structure, to fix the bug, due to the\ncoincidence that a test for vlan.sid == 0 already exists and leads to\nthe same (correct) behavior.\n\nAnother option which would be sufficient would be to add a test for\nmv88e6xxx_has_stu() inside mv88e6xxx_mst_put(), symmetric to the one\nwhich already exists in mv88e6xxx_mst_get(). But that placement means\nthe caller will have to dereference vlan.sid, which means it will access\nuninitialized memory, which is not nice even if it ignores it later.\n\nSo we end up making both modifications, in order to not rely just on the\nsid == 0 coincidence, but also to avoid having uninitialized structure\nfields which might get temporarily accessed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37867",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/core: Silence oversized kvmalloc() warning\n\nsyzkaller triggered an oversized kvmalloc() warning.\nSilence it by adding __GFP_NOWARN.\n\nsyzkaller log:\n WARNING: CPU: 7 PID: 518 at mm/util.c:665 __kvmalloc_node_noprof+0x175/0x180\n CPU: 7 UID: 0 PID: 518 Comm: c_repro Not tainted 6.11.0-rc6+ #6\n Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014\n RIP: 0010:__kvmalloc_node_noprof+0x175/0x180\n RSP: 0018:ffffc90001e67c10 EFLAGS: 00010246\n RAX: 0000000000000100 RBX: 0000000000000400 RCX: ffffffff8149d46b\n RDX: 0000000000000000 RSI: ffff8881030fae80 RDI: 0000000000000002\n RBP: 000000712c800000 R08: 0000000000000100 R09: 0000000000000000\n R10: ffffc90001e67c10 R11: 0030ae0601000000 R12: 0000000000000000\n R13: 0000000000000000 R14: 00000000ffffffff R15: 0000000000000000\n FS:  00007fde79159740(0000) GS:ffff88813bdc0000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n CR2: 0000000020000180 CR3: 0000000105eb4005 CR4: 00000000003706b0\n DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n Call Trace:\n  \u003cTASK\u003e\n  ib_umem_odp_get+0x1f6/0x390\n  mlx5_ib_reg_user_mr+0x1e8/0x450\n  ib_uverbs_reg_mr+0x28b/0x440\n  ib_uverbs_write+0x7d3/0xa30\n  vfs_write+0x1ac/0x6c0\n  ksys_write+0x134/0x170\n  ? __sanitizer_cov_trace_pc+0x1c/0x50\n  do_syscall_64+0x50/0x110\n  entry_SYSCALL_64_after_hwframe+0x76/0x7e",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37870",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: prevent hang on link training fail\n\n[Why]\nWhen link training fails, the phy clock will be disabled. However, in\nenable_streams, it is assumed that link training succeeded and the\nmux selects the phy clock, causing a hang when a register write is made.\n\n[How]\nWhen enable_stream is hit, check if link training failed. If it did, fall\nback to the ref clock to avoid a hang and keep the system in a recoverable\nstate.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37871",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfsd: decrease sc_count directly if fail to queue dl_recall\n\nA deadlock warning occurred when invoking nfs4_put_stid following a failed\ndl_recall queue operation:\n            T1                            T2\n                                nfs4_laundromat\n                                 nfs4_get_client_reaplist\n                                  nfs4_anylock_blockers\n__break_lease\n spin_lock // ctx-\u003eflc_lock\n                                   spin_lock // clp-\u003ecl_lock\n                                   nfs4_lockowner_has_blockers\n                                    locks_owner_has_blockers\n                                     spin_lock // flctx-\u003eflc_lock\n nfsd_break_deleg_cb\n  nfsd_break_one_deleg\n   nfs4_put_stid\n    refcount_dec_and_lock\n     spin_lock // clp-\u003ecl_lock\n\nWhen a file is opened, an nfs4_delegation is allocated with sc_count\ninitialized to 1, and the file_lease holds a reference to the delegation.\nThe file_lease is then associated with the file through kernel_setlease.\n\nThe disassociation is performed in nfsd4_delegreturn via the following\ncall chain:\nnfsd4_delegreturn --\u003e destroy_delegation --\u003e destroy_unhashed_deleg --\u003e\nnfs4_unlock_deleg_lease --\u003e kernel_setlease --\u003e generic_delete_lease\nThe corresponding sc_count reference will be released after this\ndisassociation.\n\nSince nfsd_break_one_deleg executes while holding the flc_lock, the\ndisassociation process becomes blocked when attempting to acquire flc_lock\nin generic_delete_lease. This means:\n1) sc_count in nfsd_break_one_deleg will not be decremented to 0;\n2) The nfs4_put_stid called by nfsd_break_one_deleg will not attempt to\nacquire cl_lock;\n3) Consequently, no deadlock condition is created.\n\nGiven that sc_count in nfsd_break_one_deleg remains non-zero, we can\nsafely perform refcount_dec on sc_count directly. This approach\neffectively avoids triggering deadlock warnings.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37873",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\neth: bnxt: fix missing ring index trim on error path\n\nCommit under Fixes converted tx_prod to be free running but missed\nmasking it on the Tx error path. This crashes on error conditions,\nfor example when DMA mapping fails.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37874",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ngbe: fix memory leak in ngbe_probe() error path\n\nWhen ngbe_sw_init() is called, memory is allocated for wx-\u003erss_key\nin wx_init_rss_key(). However, in ngbe_probe() function, the subsequent\nerror paths after ngbe_sw_init() don't free the rss_key. Fix that by\nfreeing it in error path along with wx-\u003emac_table.\n\nAlso change the label to which execution jumps when ngbe_sw_init()\nfails, because otherwise, it could lead to a double free for rss_key,\nwhen the mac_table allocation fails in wx_sw_init().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37875",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nigc: fix PTM cycle trigger logic\n\nWriting to clear the PTM status 'valid' bit while the PTM cycle is\ntriggered results in unreliable PTM operation. To fix this, clear the\nPTM 'trigger' and status after each PTM transaction.\n\nThe issue can be reproduced with the following:\n\n$ sudo phc2sys -R 1000 -O 0 -i tsn0 -m\n\nNote: 1000 Hz (-R 1000) is unrealistically large, but provides a way to\nquickly reproduce the issue.\n\nPHC2SYS exits with:\n\n\"ioctl PTP_OFFSET_PRECISE: Connection timed out\" when the PTM transaction\n  fails\n\nThis patch also fixes a hang in igc_probe() when loading the igc\ndriver in the kdump kernel on systems supporting PTM.\n\nThe igc driver running in the base kernel enables PTM trigger in\nigc_probe().  Therefore the driver is always in PTM trigger mode,\nexcept in brief periods when manually triggering a PTM cycle.\n\nWhen a crash occurs, the NIC is reset while PTM trigger is enabled.\nDue to a hardware problem, the NIC is subsequently in a bad busmaster\nstate and doesn't handle register reads/writes.  When running\nigc_probe() in the kdump kernel, the first register access to a NIC\nregister hangs driver probing and ultimately breaks kdump.\n\nWith this patch, igc has PTM trigger disabled most of the time,\nand the trigger is only enabled for very brief (10 - 100 us) periods\nwhen manually triggering a PTM cycle.  Chances that a crash occurs\nduring a PTM trigger are not 0, but extremely reduced.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37879",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\n9p/net: fix improper handling of bogus negative read/write replies\n\nIn p9_client_write() and p9_client_read_once(), if the server\nincorrectly replies with success but a negative write/read count then we\nwould consider written (negative) \u003c= rsize (positive) because both\nvariables were signed.\n\nMake variables unsigned to avoid this problem.\n\nThe reproducer linked below now fails with the following error instead\nof a null pointer deref:\n9pnet: bogus RWRITE count (4294967295 \u003e 3)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37881",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: gadget: aspeed: Add NULL pointer check in ast_vhub_init_dev()\n\nThe variable d-\u003ename, returned by devm_kasprintf(), could be NULL.\nA pointer check is added to prevent potential NULL pointer dereference.\nThis is similar to the fix in commit 3027e7b15b02\n(\"ice: Fix some null pointer dereference issues in ice_ptp.c\").\n\nThis issue is found by our static analysis tool",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37884",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix deadlock between rcu_tasks_trace and event_mutex.\n\nFix the following deadlock:\nCPU A\n_free_event()\n  perf_kprobe_destroy()\n    mutex_lock(\u0026event_mutex)\n      perf_trace_event_unreg()\n        synchronize_rcu_tasks_trace()\n\nThere are several paths where _free_event() grabs event_mutex\nand calls sync_rcu_tasks_trace. Above is one such case.\n\nCPU B\nbpf_prog_test_run_syscall()\n  rcu_read_lock_trace()\n    bpf_prog_run_pin_on_cpu()\n      bpf_prog_load()\n        bpf_tracing_func_proto()\n          trace_set_clr_event()\n            mutex_lock(\u0026event_mutex)\n\nDelegate trace_set_clr_event() to workqueue to avoid\nsuch lock dependency.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37886",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npds_core: make wait_context part of q_info\n\nMake the wait_context a full part of the q_info struct rather\nthan a stack variable that goes away after pdsc_adminq_post()\nis done so that the context is still available after the wait\nloop has given up.\n\nThere was a case where a slow development firmware caused\nthe adminq request to time out, but then later the FW finally\nfinished the request and sent the interrupt.  The handler tried\nto complete_all() the completion context that had been created\non the stack in pdsc_adminq_post() but no longer existed.\nThis caused bad pointer usage, kernel crashes, and much wailing\nand gnashing of teeth.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37887",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npds_core: handle unsupported PDS_CORE_CMD_FW_CONTROL result\n\nIf the FW doesn't support the PDS_CORE_CMD_FW_CONTROL command\nthe driver might at the least print garbage and at the worst\ncrash when the user runs the \"devlink dev info\" devlink command.\n\nThis happens because the stack variable fw_list is not 0\ninitialized which results in fw_list.num_fw_slots being a\ngarbage value from the stack.  Then the driver tries to access\nfw_list.fw_names[i] with i \u003e= ARRAY_SIZE and runs off the end\nof the array.\n\nFix this by initializing the fw_list and by not failing\ncompletely if the devcmd fails because other useful information\nis printed via devlink dev info even if the devcmd fails.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37889",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: ops: Consistently treat platform_max as control value\n\nThis reverts commit 9bdd10d57a88 (\"ASoC: ops: Shift tested values in\nsnd_soc_put_volsw() by +min\"), and makes some additional related\nupdates.\n\nThere are two ways the platform_max could be interpreted; the maximum\nregister value, or the maximum value the control can be set to. The\npatch moved from treating the value as a control value to a register\none. When the patch was applied it was technically correct as\nsnd_soc_limit_volume() also used the register interpretation. However,\neven then most of the other usages treated platform_max as a\ncontrol value, and snd_soc_limit_volume() has since been updated to\nalso do so in commit fb9ad24485087 (\"ASoC: ops: add correct range\ncheck for limiting volume\"). That patch however, missed updating\nsnd_soc_put_volsw() back to the control interpretation, and fixing\nsnd_soc_info_volsw_range(). The control interpretation makes more\nsense as limiting is typically done from the machine driver, so it is\nappropriate to use the customer facing representation rather than the\ninternal codec representation. Update all the code to consistently use\nthis interpretation of platform_max.\n\nFinally, also add some comments to the soc_mixer_control struct to\nhopefully avoid further patches switching between the two approaches.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37890",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: hfsc: Fix a UAF vulnerability in class with netem as child qdisc\n\nAs described in Gerrard's report [1], we have a UAF case when an hfsc class\nhas a netem child qdisc. The crux of the issue is that hfsc is assuming\nthat checking for cl-\u003eqdisc-\u003eq.qlen == 0 guarantees that it hasn't inserted\nthe class in the vttree or eltree (which is not true for the netem\nduplicate case).\n\nThis patch checks the n_active class variable to make sure that the code\nwon't insert the class in the vttree or eltree twice, catering for the\nreentrant case.\n\n[1] https://lore.kernel.org/netdev/CAHcdcOm+03OD2j6R0=YHKqmy=VgJ8xEOKuP6c7mSgnp-TEJJbw@mail.gmail.com/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37891",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: ump: Fix buffer overflow at UMP SysEx message conversion\n\nThe conversion function from MIDI 1.0 to UMP packet contains an\ninternal buffer to keep the incoming MIDI bytes, and its size is 4, as\nit was supposed to be the max size for a MIDI1 UMP packet data.\nHowever, the implementation overlooked that SysEx is handled in a\ndifferent format, and it can be up to 6 bytes, as found in\ndo_convert_to_ump().  It leads eventually to a buffer overflow, and\nmay corrupt the memory when a longer SysEx message is received.\n\nThe fix is simply to extend the buffer size to 6 to fit with the SysEx\nUMP message.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37892",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmtd: inftlcore: Add error check for inftl_read_oob()\n\nIn INFTL_findwriteunit(), the return value of inftl_read_oob()\nneed to be checked. A proper implementation can be\nfound in INFTL_deleteblock(). The status will be set as\nSECTOR_IGNORE to break from the while-loop correctly\nif the inftl_read_oob() fails.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37897",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: plfxlc: Remove erroneous assert in plfxlc_mac_release\n\nplfxlc_mac_release() asserts that mac-\u003elock is held. This assertion is\nincorrect, because even if it was possible, it would not be the valid\nbehaviour. The function is used when probe fails or after the device is\ndisconnected. In both cases mac-\u003elock can not be held as the driver is\nnot working with the device at the moment. All functions that use mac-\u003elock\nunlock it just after it was held. There is also no need to hold mac-\u003elock\nfor plfxlc_mac_release() itself, as mac data is not affected, except for\nmac-\u003eflags, which is modified atomically.\n\nThis bug leads to the following warning:\n================================================================\nWARNING: CPU: 0 PID: 127 at drivers/net/wireless/purelifi/plfxlc/mac.c:106 plfxlc_mac_release+0x7d/0xa0\nModules linked in:\nCPU: 0 PID: 127 Comm: kworker/0:2 Not tainted 6.1.124-syzkaller #0\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 09/13/2024\nWorkqueue: usb_hub_wq hub_event\nRIP: 0010:plfxlc_mac_release+0x7d/0xa0 drivers/net/wireless/purelifi/plfxlc/mac.c:106\nCall Trace:\n \u003cTASK\u003e\n probe+0x941/0xbd0 drivers/net/wireless/purelifi/plfxlc/usb.c:694\n usb_probe_interface+0x5c0/0xaf0 drivers/usb/core/driver.c:396\n really_probe+0x2ab/0xcb0 drivers/base/dd.c:639\n __driver_probe_device+0x1a2/0x3d0 drivers/base/dd.c:785\n driver_probe_device+0x50/0x420 drivers/base/dd.c:815\n __device_attach_driver+0x2cf/0x510 drivers/base/dd.c:943\n bus_for_each_drv+0x183/0x200 drivers/base/bus.c:429\n __device_attach+0x359/0x570 drivers/base/dd.c:1015\n bus_probe_device+0xba/0x1e0 drivers/base/bus.c:489\n device_add+0xb48/0xfd0 drivers/base/core.c:3696\n usb_set_configuration+0x19dd/0x2020 drivers/usb/core/message.c:2165\n usb_generic_driver_probe+0x84/0x140 drivers/usb/core/generic.c:238\n usb_probe_device+0x130/0x260 drivers/usb/core/driver.c:293\n really_probe+0x2ab/0xcb0 drivers/base/dd.c:639\n __driver_probe_device+0x1a2/0x3d0 drivers/base/dd.c:785\n driver_probe_device+0x50/0x420 drivers/base/dd.c:815\n __device_attach_driver+0x2cf/0x510 drivers/base/dd.c:943\n bus_for_each_drv+0x183/0x200 drivers/base/bus.c:429\n __device_attach+0x359/0x570 drivers/base/dd.c:1015\n bus_probe_device+0xba/0x1e0 drivers/base/bus.c:489\n device_add+0xb48/0xfd0 drivers/base/core.c:3696\n usb_new_device+0xbdd/0x18f0 drivers/usb/core/hub.c:2620\n hub_port_connect drivers/usb/core/hub.c:5477 [inline]\n hub_port_connect_change drivers/usb/core/hub.c:5617 [inline]\n port_event drivers/usb/core/hub.c:5773 [inline]\n hub_event+0x2efe/0x5730 drivers/usb/core/hub.c:5855\n process_one_work+0x8a9/0x11d0 kernel/workqueue.c:2292\n worker_thread+0xa47/0x1200 kernel/workqueue.c:2439\n kthread+0x28d/0x320 kernel/kthread.c:376\n ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:295\n \u003c/TASK\u003e\n================================================================\n\nFound by Linux Verification Center (linuxtesting.org) with Syzkaller.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37900",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niommu: Fix two issues in iommu_copy_struct_from_user()\n\nIn the review for iommu_copy_struct_to_user() helper, Matt pointed out that\na NULL pointer should be rejected prior to dereferencing it:\nhttps://lore.kernel.org/all/86881827-8E2D-461C-BDA3-FA8FD14C343C@nvidia.com\n\nAnd Alok pointed out a typo at the same time:\nhttps://lore.kernel.org/all/480536af-6830-43ce-a327-adbd13dc3f1d@oracle.com\n\nSince both issues were copied from iommu_copy_struct_from_user(), fix them\nfirst in the current header.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37901",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nirqchip/qcom-mpm: Prevent crash when trying to handle non-wake GPIOs\n\nOn Qualcomm chipsets not all GPIOs are wakeup capable. Those GPIOs do not\nhave a corresponding MPM pin and should not be handled inside the MPM\ndriver. The IRQ domain hierarchy is always applied, so it's required to\nexplicitly disconnect the hierarchy for those. The pinctrl-msm driver marks\nthese with GPIO_NO_WAKE_IRQ. qcom-pdc has a check for this, but\nirq-qcom-mpm is currently missing the check. This is causing crashes when\nsetting up interrupts for non-wake GPIOs:\n\n root@rb1:~# gpiomon -c gpiochip1 10\n   irq: IRQ159: trimming hierarchy from :soc@0:interrupt-controller@f200000-1\n   Unable to handle kernel paging request at virtual address ffff8000a1dc3820\n   Hardware name: Qualcomm Technologies, Inc. Robotics RB1 (DT)\n   pc : mpm_set_type+0x80/0xcc\n   lr : mpm_set_type+0x5c/0xcc\n   Call trace:\n    mpm_set_type+0x80/0xcc (P)\n    qcom_mpm_set_type+0x64/0x158\n    irq_chip_set_type_parent+0x20/0x38\n    msm_gpio_irq_set_type+0x50/0x530\n    __irq_set_trigger+0x60/0x184\n    __setup_irq+0x304/0x6bc\n    request_threaded_irq+0xc8/0x19c\n    edge_detector_setup+0x260/0x364\n    linereq_create+0x420/0x5a8\n    gpio_ioctl+0x2d4/0x6c0\n\nFix this by copying the check for GPIO_NO_WAKE_IRQ from qcom-pdc.c, so that\nMPM is removed entirely from the hierarchy for non-wake GPIOs.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37903",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Fix slab-use-after-free in hdcp\n\nThe HDCP code in amdgpu_dm_hdcp.c copies pointers to amdgpu_dm_connector\nobjects without incrementing the kref reference counts. When using a\nUSB-C dock, and the dock is unplugged, the corresponding\namdgpu_dm_connector objects are freed, creating dangling pointers in the\nHDCP code. When the dock is plugged back, the dangling pointers are\ndereferenced, resulting in a slab-use-after-free:\n\n[   66.775837] BUG: KASAN: slab-use-after-free in event_property_validate+0x42f/0x6c0 [amdgpu]\n[   66.776171] Read of size 4 at addr ffff888127804120 by task kworker/0:1/10\n\n[   66.776179] CPU: 0 UID: 0 PID: 10 Comm: kworker/0:1 Not tainted 6.14.0-rc7-00180-g54505f727a38-dirty #233\n[   66.776183] Hardware name: HP HP Pavilion Aero Laptop 13-be0xxx/8916, BIOS F.17 12/18/2024\n[   66.776186] Workqueue: events event_property_validate [amdgpu]\n[   66.776494] Call Trace:\n[   66.776496]  \u003cTASK\u003e\n[   66.776497]  dump_stack_lvl+0x70/0xa0\n[   66.776504]  print_report+0x175/0x555\n[   66.776507]  ? __virt_addr_valid+0x243/0x450\n[   66.776510]  ? kasan_complete_mode_report_info+0x66/0x1c0\n[   66.776515]  kasan_report+0xeb/0x1c0\n[   66.776518]  ? event_property_validate+0x42f/0x6c0 [amdgpu]\n[   66.776819]  ? event_property_validate+0x42f/0x6c0 [amdgpu]\n[   66.777121]  __asan_report_load4_noabort+0x14/0x20\n[   66.777124]  event_property_validate+0x42f/0x6c0 [amdgpu]\n[   66.777342]  ? __lock_acquire+0x6b40/0x6b40\n[   66.777347]  ? enable_assr+0x250/0x250 [amdgpu]\n[   66.777571]  process_one_work+0x86b/0x1510\n[   66.777575]  ? pwq_dec_nr_in_flight+0xcf0/0xcf0\n[   66.777578]  ? assign_work+0x16b/0x280\n[   66.777580]  ? lock_is_held_type+0xa3/0x130\n[   66.777583]  worker_thread+0x5c0/0xfa0\n[   66.777587]  ? process_one_work+0x1510/0x1510\n[   66.777588]  kthread+0x3a2/0x840\n[   66.777591]  ? kthread_is_per_cpu+0xd0/0xd0\n[   66.777594]  ? trace_hardirqs_on+0x4f/0x60\n[   66.777597]  ? _raw_spin_unlock_irq+0x27/0x60\n[   66.777599]  ? calculate_sigpending+0x77/0xa0\n[   66.777602]  ? kthread_is_per_cpu+0xd0/0xd0\n[   66.777605]  ret_from_fork+0x40/0x90\n[   66.777607]  ? kthread_is_per_cpu+0xd0/0xd0\n[   66.777609]  ret_from_fork_asm+0x11/0x20\n[   66.777614]  \u003c/TASK\u003e\n\n[   66.777643] Allocated by task 10:\n[   66.777646]  kasan_save_stack+0x39/0x60\n[   66.777649]  kasan_save_track+0x14/0x40\n[   66.777652]  kasan_save_alloc_info+0x37/0x50\n[   66.777655]  __kasan_kmalloc+0xbb/0xc0\n[   66.777658]  __kmalloc_cache_noprof+0x1c8/0x4b0\n[   66.777661]  dm_dp_add_mst_connector+0xdd/0x5c0 [amdgpu]\n[   66.777880]  drm_dp_mst_port_add_connector+0x47e/0x770 [drm_display_helper]\n[   66.777892]  drm_dp_send_link_address+0x1554/0x2bf0 [drm_display_helper]\n[   66.777901]  drm_dp_check_and_send_link_address+0x187/0x1f0 [drm_display_helper]\n[   66.777909]  drm_dp_mst_link_probe_work+0x2b8/0x410 [drm_display_helper]\n[   66.777917]  process_one_work+0x86b/0x1510\n[   66.777919]  worker_thread+0x5c0/0xfa0\n[   66.777922]  kthread+0x3a2/0x840\n[   66.777925]  ret_from_fork+0x40/0x90\n[   66.777927]  ret_from_fork_asm+0x11/0x20\n\n[   66.777932] Freed by task 1713:\n[   66.777935]  kasan_save_stack+0x39/0x60\n[   66.777938]  kasan_save_track+0x14/0x40\n[   66.777940]  kasan_save_free_info+0x3b/0x60\n[   66.777944]  __kasan_slab_free+0x52/0x70\n[   66.777946]  kfree+0x13f/0x4b0\n[   66.777949]  dm_dp_mst_connector_destroy+0xfa/0x150 [amdgpu]\n[   66.778179]  drm_connector_free+0x7d/0xb0\n[   66.778184]  drm_mode_object_put.part.0+0xee/0x160\n[   66.778188]  drm_mode_object_put+0x37/0x50\n[   66.778191]  drm_atomic_state_default_clear+0x220/0xd60\n[   66.778194]  __drm_atomic_state_free+0x16e/0x2a0\n[   66.778197]  drm_mode_atomic_ioctl+0x15ed/0x2ba0\n[   66.778200]  drm_ioctl_kernel+0x17a/0x310\n[   66.778203]  drm_ioctl+0x584/0xd10\n[   66.778206]  amdgpu_drm_ioctl+0xd2/0x1c0 [amdgpu]\n[   66.778375]  __x64_sys_ioctl+0x139/0x1a0\n[   66.778378]  x64_sys_call+0xee7/0xfb0\n[   66.778381] \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37905",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: arm_scmi: Balance device refcount when destroying devices\n\nUsing device_find_child() to lookup the proper SCMI device to destroy\ncauses an unbalance in device refcount, since device_find_child() calls an\nimplicit get_device(): this, in turns, inhibits the call of the provided\nrelease methods upon devices destruction.\n\nAs a consequence, one of the structures that is not freed properly upon\ndestruction is the internal struct device_private dev-\u003ep populated by the\ndrivers subsystem core.\n\nKMemleak detects this situation since loading/unloding some SCMI driver\ncauses related devices to be created/destroyed without calling any\ndevice_release method.\n\nunreferenced object 0xffff00000f583800 (size 512):\n  comm \"insmod\", pid 227, jiffies 4294912190\n  hex dump (first 32 bytes):\n    00 00 00 00 ad 4e ad de ff ff ff ff 00 00 00 00  .....N..........\n    ff ff ff ff ff ff ff ff 60 36 1d 8a 00 80 ff ff  ........`6......\n  backtrace (crc 114e2eed):\n    kmemleak_alloc+0xbc/0xd8\n    __kmalloc_cache_noprof+0x2dc/0x398\n    device_add+0x954/0x12d0\n    device_register+0x28/0x40\n    __scmi_device_create.part.0+0x1bc/0x380\n    scmi_device_create+0x2d0/0x390\n    scmi_create_protocol_devices+0x74/0xf8\n    scmi_device_request_notifier+0x1f8/0x2a8\n    notifier_call_chain+0x110/0x3b0\n    blocking_notifier_call_chain+0x70/0xb0\n    scmi_driver_register+0x350/0x7f0\n    0xffff80000a3b3038\n    do_one_initcall+0x12c/0x730\n    do_init_module+0x1dc/0x640\n    load_module+0x4b20/0x5b70\n    init_module_from_file+0xec/0x158\n\n$ ./scripts/faddr2line ./vmlinux device_add+0x954/0x12d0\ndevice_add+0x954/0x12d0:\nkmalloc_noprof at include/linux/slab.h:901\n(inlined by) kzalloc_noprof at include/linux/slab.h:1037\n(inlined by) device_private_init at drivers/base/core.c:3510\n(inlined by) device_add at drivers/base/core.c:3561\n\nBalance device refcount by issuing a put_device() on devices found via\ndevice_find_child().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37909",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: lan743x: Fix memleak issue when GSO enabled\n\nAlways map the `skb` to the LS descriptor. Previously skb was\nmapped to EXT descriptor when the number of fragments is zero with\nGSO enabled. Mapping the skb to EXT descriptor prevents it from\nbeing freed, leading to a memory leak",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37911",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbnxt_en: Fix out-of-bound memcpy() during ethtool -w\n\nWhen retrieving the FW coredump using ethtool, it can sometimes cause\nmemory corruption:\n\nBUG: KFENCE: memory corruption in __bnxt_get_coredump+0x3ef/0x670 [bnxt_en]\nCorrupted memory at 0x000000008f0f30e8 [ ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ] (in kfence-#45):\n__bnxt_get_coredump+0x3ef/0x670 [bnxt_en]\nethtool_get_dump_data+0xdc/0x1a0\n__dev_ethtool+0xa1e/0x1af0\ndev_ethtool+0xa8/0x170\ndev_ioctl+0x1b5/0x580\nsock_do_ioctl+0xab/0xf0\nsock_ioctl+0x1ce/0x2e0\n__x64_sys_ioctl+0x87/0xc0\ndo_syscall_64+0x5c/0xf0\nentry_SYSCALL_64_after_hwframe+0x78/0x80\n\n...\n\nThis happens when copying the coredump segment list in\nbnxt_hwrm_dbg_dma_data() with the HWRM_DBG_COREDUMP_LIST FW command.\nThe info-\u003edest_buf buffer is allocated based on the number of coredump\nsegments returned by the FW.  The segment list is then DMA'ed by\nthe FW and the length of the DMA is returned by FW.  The driver then\ncopies this DMA'ed segment list to info-\u003edest_buf.\n\nIn some cases, this DMA length may exceed the info-\u003edest_buf length\nand cause the above BUG condition.  Fix it by capping the copy\nlength to not exceed the length of info-\u003edest_buf.  The extra\nDMA data contains no useful information.\n\nThis code path is shared for the HWRM_DBG_COREDUMP_LIST and the\nHWRM_DBG_COREDUMP_RETRIEVE FW commands.  The buffering is different\nfor these 2 FW commands.  To simplify the logic, we need to move\nthe line to adjust the buffer length for HWRM_DBG_COREDUMP_RETRIEVE\nup, so that the new check to cap the copy length will work for both\ncommands.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37912",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nice: Check VF VSI Pointer Value in ice_vc_add_fdir_fltr()\n\nAs mentioned in the commit baeb705fd6a7 (\"ice: always check VF VSI\npointer values\"), we need to perform a null pointer check on the return\nvalue of ice_get_vf_vsi() before using it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37913",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: qfq: Fix double list add in class with netem as child qdisc\n\nAs described in Gerrard's report [1], there are use cases where a netem\nchild qdisc will make the parent qdisc's enqueue callback reentrant.\nIn the case of qfq, there won't be a UAF, but the code will add the same\nclassifier to the list twice, which will cause memory corruption.\n\nThis patch checks whether the class was already added to the agg-\u003eactive\nlist (cl_is_active) before doing the addition to cater for the reentrant\ncase.\n\n[1] https://lore.kernel.org/netdev/CAHcdcOm+03OD2j6R0=YHKqmy=VgJ8xEOKuP6c7mSgnp-TEJJbw@mail.gmail.com/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37914",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: ets: Fix double list add in class with netem as child qdisc\n\nAs described in Gerrard's report [1], there are use cases where a netem\nchild qdisc will make the parent qdisc's enqueue callback reentrant.\nIn the case of ets, there won't be a UAF, but the code will add the same\nclassifier to the list twice, which will cause memory corruption.\n\nIn addition to checking for qlen being zero, this patch checks whether\nthe class was already added to the active_list (cl_is_active) before\ndoing the addition to cater for the reentrant case.\n\n[1] https://lore.kernel.org/netdev/CAHcdcOm+03OD2j6R0=YHKqmy=VgJ8xEOKuP6c7mSgnp-TEJJbw@mail.gmail.com/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37915",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: drr: Fix double list add in class with netem as child qdisc\n\nAs described in Gerrard's report [1], there are use cases where a netem\nchild qdisc will make the parent qdisc's enqueue callback reentrant.\nIn the case of drr, there won't be a UAF, but the code will add the same\nclassifier to the list twice, which will cause memory corruption.\n\nIn addition to checking for qlen being zero, this patch checks whether the\nclass was already added to the active_list (cl_is_active) before adding\nto the list to cover for the reentrant case.\n\n[1] https://lore.kernel.org/netdev/CAHcdcOm+03OD2j6R0=YHKqmy=VgJ8xEOKuP6c7mSgnp-TEJJbw@mail.gmail.com/",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37917",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ethernet: mtk-star-emac: fix spinlock recursion issues on rx/tx poll\n\nUse spin_lock_irqsave and spin_unlock_irqrestore instead of spin_lock\nand spin_unlock in mtk_star_emac driver to avoid spinlock recursion\noccurrence that can happen when enabling the DMA interrupts again in\nrx/tx poll.\n\n```\nBUG: spinlock recursion on CPU#0, swapper/0/0\n lock: 0xffff00000db9cf20, .magic: dead4ead, .owner: swapper/0/0,\n    .owner_cpu: 0\nCPU: 0 UID: 0 PID: 0 Comm: swapper/0 Not tainted\n    6.15.0-rc2-next-20250417-00001-gf6a27738686c-dirty #28 PREEMPT\nHardware name: MediaTek MT8365 Open Platform EVK (DT)\nCall trace:\n show_stack+0x18/0x24 (C)\n dump_stack_lvl+0x60/0x80\n dump_stack+0x18/0x24\n spin_dump+0x78/0x88\n do_raw_spin_lock+0x11c/0x120\n _raw_spin_lock+0x20/0x2c\n mtk_star_handle_irq+0xc0/0x22c [mtk_star_emac]\n __handle_irq_event_percpu+0x48/0x140\n handle_irq_event+0x4c/0xb0\n handle_fasteoi_irq+0xa0/0x1bc\n handle_irq_desc+0x34/0x58\n generic_handle_domain_irq+0x1c/0x28\n gic_handle_irq+0x4c/0x120\n do_interrupt_handler+0x50/0x84\n el1_interrupt+0x34/0x68\n el1h_64_irq_handler+0x18/0x24\n el1h_64_irq+0x6c/0x70\n regmap_mmio_read32le+0xc/0x20 (P)\n _regmap_bus_reg_read+0x6c/0xac\n _regmap_read+0x60/0xdc\n regmap_read+0x4c/0x80\n mtk_star_rx_poll+0x2f4/0x39c [mtk_star_emac]\n __napi_poll+0x38/0x188\n net_rx_action+0x164/0x2c0\n handle_softirqs+0x100/0x244\n __do_softirq+0x14/0x20\n ____do_softirq+0x10/0x20\n call_on_irq_stack+0x24/0x64\n do_softirq_own_stack+0x1c/0x40\n __irq_exit_rcu+0xd4/0x10c\n irq_exit_rcu+0x10/0x1c\n el1_interrupt+0x38/0x68\n el1h_64_irq_handler+0x18/0x24\n el1h_64_irq+0x6c/0x70\n cpuidle_enter_state+0xac/0x320 (P)\n cpuidle_enter+0x38/0x50\n do_idle+0x1e4/0x260\n cpu_startup_entry+0x34/0x3c\n rest_init+0xdc/0xe0\n console_on_rootfs+0x0/0x6c\n __primary_switched+0x88/0x90\n```",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37918",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: btusb: avoid NULL pointer dereference in skb_dequeue()\n\nA NULL pointer dereference can occur in skb_dequeue() when processing a\nQCA firmware crash dump on WCN7851 (0489:e0f3).\n\n[ 93.672166] Bluetooth: hci0: ACL memdump size(589824)\n\n[ 93.672475] BUG: kernel NULL pointer dereference, address: 0000000000000008\n[ 93.672517] Workqueue: hci0 hci_devcd_rx [bluetooth]\n[ 93.672598] RIP: 0010:skb_dequeue+0x50/0x80\n\nThe issue stems from handle_dump_pkt_qca() returning 0 even when a dump\npacket is successfully processed. This is because it incorrectly\nforwards the return value of hci_devcd_init() (which returns 0 on\nsuccess). As a result, the caller (btusb_recv_acl_qca() or\nbtusb_recv_evt_qca()) assumes the packet was not handled and passes it\nto hci_recv_frame(), leading to premature kfree() of the skb.\n\nLater, hci_devcd_rx() attempts to dequeue the same skb from the dump\nqueue, resulting in a NULL pointer dereference.\n\nFix this by:\n1. Making handle_dump_pkt_qca() return 0 on success and negative errno\n   on failure, consistent with kernel conventions.\n2. Splitting dump packet detection into separate functions for ACL\n   and event packets for better structure and readability.\n\nThis ensures dump packets are properly identified and consumed, avoiding\ndouble handling and preventing NULL pointer access.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37921",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nvxlan: vnifilter: Fix unlocked deletion of default FDB entry\n\nWhen a VNI is deleted from a VXLAN device in 'vnifilter' mode, the FDB\nentry associated with the default remote (assuming one was configured)\nis deleted without holding the hash lock. This is wrong and will result\nin a warning [1] being generated by the lockdep annotation that was\nadded by commit ebe642067455 (\"vxlan: Create wrappers for FDB lookup\").\n\nReproducer:\n\n # ip link add vx0 up type vxlan dstport 4789 external vnifilter local 192.0.2.1\n # bridge vni add vni 10010 remote 198.51.100.1 dev vx0\n # bridge vni del vni 10010 dev vx0\n\nFix by acquiring the hash lock before the deletion and releasing it\nafterwards. Blame the original commit that introduced the issue rather\nthan the one that exposed it.\n\n[1]\nWARNING: CPU: 3 PID: 392 at drivers/net/vxlan/vxlan_core.c:417 vxlan_find_mac+0x17f/0x1a0\n[...]\nRIP: 0010:vxlan_find_mac+0x17f/0x1a0\n[...]\nCall Trace:\n \u003cTASK\u003e\n __vxlan_fdb_delete+0xbe/0x560\n vxlan_vni_delete_group+0x2ba/0x940\n vxlan_vni_del.isra.0+0x15f/0x580\n vxlan_process_vni_filter+0x38b/0x7b0\n vxlan_vnifilter_process+0x3bb/0x510\n rtnetlink_rcv_msg+0x2f7/0xb70\n netlink_rcv_skb+0x131/0x360\n netlink_unicast+0x426/0x710\n netlink_sendmsg+0x75a/0xc20\n __sock_sendmsg+0xc1/0x150\n ____sys_sendmsg+0x5aa/0x7b0\n ___sys_sendmsg+0xfc/0x180\n __sys_sendmsg+0x121/0x1b0\n do_syscall_64+0xbb/0x1d0\n entry_SYSCALL_64_after_hwframe+0x4b/0x53",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37923",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Fix oob write in trace_seq_to_buffer()\n\nsyzbot reported this bug:\n==================================================================\nBUG: KASAN: slab-out-of-bounds in trace_seq_to_buffer kernel/trace/trace.c:1830 [inline]\nBUG: KASAN: slab-out-of-bounds in tracing_splice_read_pipe+0x6be/0xdd0 kernel/trace/trace.c:6822\nWrite of size 4507 at addr ffff888032b6b000 by task syz.2.320/7260\n\nCPU: 1 UID: 0 PID: 7260 Comm: syz.2.320 Not tainted 6.15.0-rc1-syzkaller-00301-g3bde70a2c827 #0 PREEMPT(full)\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 02/12/2025\nCall Trace:\n \u003cTASK\u003e\n __dump_stack lib/dump_stack.c:94 [inline]\n dump_stack_lvl+0x116/0x1f0 lib/dump_stack.c:120\n print_address_description mm/kasan/report.c:408 [inline]\n print_report+0xc3/0x670 mm/kasan/report.c:521\n kasan_report+0xe0/0x110 mm/kasan/report.c:634\n check_region_inline mm/kasan/generic.c:183 [inline]\n kasan_check_range+0xef/0x1a0 mm/kasan/generic.c:189\n __asan_memcpy+0x3c/0x60 mm/kasan/shadow.c:106\n trace_seq_to_buffer kernel/trace/trace.c:1830 [inline]\n tracing_splice_read_pipe+0x6be/0xdd0 kernel/trace/trace.c:6822\n ....\n==================================================================\n\nIt has been reported that trace_seq_to_buffer() tries to copy more data\nthan PAGE_SIZE to buf. Therefore, to prevent this, we should use the\nsmaller of trace_seq_used(\u0026iter-\u003eseq) and PAGE_SIZE as an argument.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37925",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\njfs: reject on-disk inodes of an unsupported type\n\nSyzbot has reported the following BUG:\n\nkernel BUG at fs/inode.c:668!\nOops: invalid opcode: 0000 [#1] PREEMPT SMP KASAN PTI\nCPU: 3 UID: 0 PID: 139 Comm: jfsCommit Not tainted 6.12.0-rc4-syzkaller-00085-g4e46774408d9 #0\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-3.fc41 04/01/2014\nRIP: 0010:clear_inode+0x168/0x190\nCode: 4c 89 f7 e8 ba fe e5 ff e9 61 ff ff ff 44 89 f1 80 e1 07 80 c1 03 38 c1 7c c1 4c 89 f7 e8 90 ff e5 ff eb b7\n 0b e8 01 5d 7f ff 90 0f 0b e8 f9 5c 7f ff 90 0f 0b e8 f1 5c 7f\nRSP: 0018:ffffc900027dfae8 EFLAGS: 00010093\nRAX: ffffffff82157a87 RBX: 0000000000000001 RCX: ffff888104d4b980\nRDX: 0000000000000000 RSI: 0000000000000001 RDI: 0000000000000000\nRBP: ffffc900027dfc90 R08: ffffffff82157977 R09: fffff520004fbf38\nR10: dffffc0000000000 R11: fffff520004fbf38 R12: dffffc0000000000\nR13: ffff88811315bc00 R14: ffff88811315bda8 R15: ffff88811315bb80\nFS:  0000000000000000(0000) GS:ffff888135f00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00005565222e0578 CR3: 0000000026ef0000 CR4: 00000000000006f0\nCall Trace:\n \u003cTASK\u003e\n ? __die_body+0x5f/0xb0\n ? die+0x9e/0xc0\n ? do_trap+0x15a/0x3a0\n ? clear_inode+0x168/0x190\n ? do_error_trap+0x1dc/0x2c0\n ? clear_inode+0x168/0x190\n ? __pfx_do_error_trap+0x10/0x10\n ? report_bug+0x3cd/0x500\n ? handle_invalid_op+0x34/0x40\n ? clear_inode+0x168/0x190\n ? exc_invalid_op+0x38/0x50\n ? asm_exc_invalid_op+0x1a/0x20\n ? clear_inode+0x57/0x190\n ? clear_inode+0x167/0x190\n ? clear_inode+0x168/0x190\n ? clear_inode+0x167/0x190\n jfs_evict_inode+0xb5/0x440\n ? __pfx_jfs_evict_inode+0x10/0x10\n evict+0x4ea/0x9b0\n ? __pfx_evict+0x10/0x10\n ? iput+0x713/0xa50\n txUpdateMap+0x931/0xb10\n ? __pfx_txUpdateMap+0x10/0x10\n jfs_lazycommit+0x49a/0xb80\n ? _raw_spin_unlock_irqrestore+0x8f/0x140\n ? lockdep_hardirqs_on+0x99/0x150\n ? __pfx_jfs_lazycommit+0x10/0x10\n ? __pfx_default_wake_function+0x10/0x10\n ? __kthread_parkme+0x169/0x1d0\n ? __pfx_jfs_lazycommit+0x10/0x10\n kthread+0x2f2/0x390\n ? __pfx_jfs_lazycommit+0x10/0x10\n ? __pfx_kthread+0x10/0x10\n ret_from_fork+0x4d/0x80\n ? __pfx_kthread+0x10/0x10\n ret_from_fork_asm+0x1a/0x30\n \u003c/TASK\u003e\n\nThis happens when 'clear_inode()' makes an attempt to finalize an underlying\nJFS inode of unknown type. According to JFS layout description from\nhttps://jfs.sourceforge.net/project/pub/jfslayout.pdf, inode types from 5 to\n15 are reserved for future extensions and should not be encountered on a valid\nfilesystem. So add an extra check for valid inode type in 'copy_from_dinode()'.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37927",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niommu/amd: Fix potential buffer overflow in parse_ivrs_acpihid\n\nThere is a string parsing logic error which can lead to an overflow of hid\nor uid buffers. Comparing ACPIID_LEN against a total string length doesn't\ntake into account the lengths of individual hid and uid buffers so the\ncheck is insufficient in some cases. For example if the length of hid\nstring is 4 and the length of the uid string is 260, the length of str\nwill be equal to ACPIID_LEN + 1 but uid string will overflow uid buffer\nwhich size is 256.\n\nThe same applies to the hid string with length 13 and uid string with\nlength 250.\n\nCheck the length of hid and uid strings separately to prevent\nbuffer overflow.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37928",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndm-bufio: don't schedule in atomic context\n\nA BUG was reported as below when CONFIG_DEBUG_ATOMIC_SLEEP and\ntry_verify_in_tasklet are enabled.\n[  129.444685][  T934] BUG: sleeping function called from invalid context at drivers/md/dm-bufio.c:2421\n[  129.444723][  T934] in_atomic(): 1, irqs_disabled(): 0, non_block: 0, pid: 934, name: kworker/1:4\n[  129.444740][  T934] preempt_count: 201, expected: 0\n[  129.444756][  T934] RCU nest depth: 0, expected: 0\n[  129.444781][  T934] Preemption disabled at:\n[  129.444789][  T934] [\u003cffffffd816231900\u003e] shrink_work+0x21c/0x248\n[  129.445167][  T934] kernel BUG at kernel/sched/walt/walt_debug.c:16!\n[  129.445183][  T934] Internal error: Oops - BUG: 00000000f2000800 [#1] PREEMPT SMP\n[  129.445204][  T934] Skip md ftrace buffer dump for: 0x1609e0\n[  129.447348][  T934] CPU: 1 PID: 934 Comm: kworker/1:4 Tainted: G        W  OE      6.6.56-android15-8-o-g6f82312b30b9-debug #1 1400000003000000474e5500b3187743670464e8\n[  129.447362][  T934] Hardware name: Qualcomm Technologies, Inc. Parrot QRD, Alpha-M (DT)\n[  129.447373][  T934] Workqueue: dm_bufio_cache shrink_work\n[  129.447394][  T934] pstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[  129.447406][  T934] pc : android_rvh_schedule_bug+0x0/0x8 [sched_walt_debug]\n[  129.447435][  T934] lr : __traceiter_android_rvh_schedule_bug+0x44/0x6c\n[  129.447451][  T934] sp : ffffffc0843dbc90\n[  129.447459][  T934] x29: ffffffc0843dbc90 x28: ffffffffffffffff x27: 0000000000000c8b\n[  129.447479][  T934] x26: 0000000000000040 x25: ffffff804b3d6260 x24: ffffffd816232b68\n[  129.447497][  T934] x23: ffffff805171c5b4 x22: 0000000000000000 x21: ffffffd816231900\n[  129.447517][  T934] x20: ffffff80306ba898 x19: 0000000000000000 x18: ffffffc084159030\n[  129.447535][  T934] x17: 00000000d2b5dd1f x16: 00000000d2b5dd1f x15: ffffffd816720358\n[  129.447554][  T934] x14: 0000000000000004 x13: ffffff89ef978000 x12: 0000000000000003\n[  129.447572][  T934] x11: ffffffd817a823c4 x10: 0000000000000202 x9 : 7e779c5735de9400\n[  129.447591][  T934] x8 : ffffffd81560d004 x7 : 205b5d3938373434 x6 : ffffffd8167397c8\n[  129.447610][  T934] x5 : 0000000000000000 x4 : 0000000000000001 x3 : ffffffc0843db9e0\n[  129.447629][  T934] x2 : 0000000000002f15 x1 : 0000000000000000 x0 : 0000000000000000\n[  129.447647][  T934] Call trace:\n[  129.447655][  T934]  android_rvh_schedule_bug+0x0/0x8 [sched_walt_debug 1400000003000000474e550080cce8a8a78606b6]\n[  129.447681][  T934]  __might_resched+0x190/0x1a8\n[  129.447694][  T934]  shrink_work+0x180/0x248\n[  129.447706][  T934]  process_one_work+0x260/0x624\n[  129.447718][  T934]  worker_thread+0x28c/0x454\n[  129.447729][  T934]  kthread+0x118/0x158\n[  129.447742][  T934]  ret_from_fork+0x10/0x20\n[  129.447761][  T934] Code: ???????? ???????? ???????? d2b5dd1f (d4210000)\n[  129.447772][  T934] ---[ end trace 0000000000000000 ]---\n\ndm_bufio_lock will call spin_lock_bh when try_verify_in_tasklet\nis enabled, and __scan will be called in atomic context.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37929",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\narm64: errata: Add missing sentinels to Spectre-BHB MIDR arrays\n\nCommit a5951389e58d (\"arm64: errata: Add newer ARM cores to the\nspectre_bhb_loop_affected() lists\") added some additional CPUs to the\nSpectre-BHB workaround, including some new arrays for designs that\nrequire new 'k' values for the workaround to be effective.\n\nUnfortunately, the new arrays omitted the sentinel entry and so\nis_midr_in_range_list() will walk off the end when it doesn't find a\nmatch. With UBSAN enabled, this leads to a crash during boot when\nis_midr_in_range_list() is inlined (which was more common prior to\nc8c2647e69be (\"arm64: Make   _midr_in_range_list() an exported\nfunction\")):\n\n |  Internal error: aarch64 BRK: 00000000f2000001 [#1] PREEMPT SMP\n |  pstate: 804000c5 (Nzcv daIF +PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n |  pc : spectre_bhb_loop_affected+0x28/0x30\n |  lr : is_spectre_bhb_affected+0x170/0x190\n | [...]\n |  Call trace:\n |   spectre_bhb_loop_affected+0x28/0x30\n |   update_cpu_capabilities+0xc0/0x184\n |   init_cpu_features+0x188/0x1a4\n |   cpuinfo_store_boot_cpu+0x4c/0x60\n |   smp_prepare_boot_cpu+0x38/0x54\n |   start_kernel+0x8c/0x478\n |   __primary_switched+0xc8/0xd4\n |  Code: 6b09011f 54000061 52801080 d65f03c0 (d4200020)\n |  ---[ end trace 0000000000000000 ]---\n |  Kernel panic - not syncing: aarch64 BRK: Fatal exception\n\nAdd the missing sentinel entries.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37930",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/nouveau: Fix WARN_ON in nouveau_fence_context_kill()\n\nNouveau is mostly designed in a way that it's expected that fences only\never get signaled through nouveau_fence_signal(). However, in at least\none other place, nouveau_fence_done(), can signal fences, too. If that\nhappens (race) a signaled fence remains in the pending list for a while,\nuntil it gets removed by nouveau_fence_update().\n\nShould nouveau_fence_context_kill() run in the meantime, this would be\na bug because the function would attempt to set an error code on an\nalready signaled fence.\n\nHave nouveau_fence_context_kill() check for a fence being signaled.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37931",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: adjust subpage bit start based on sectorsize\n\nWhen running machines with 64k page size and a 16k nodesize we started\nseeing tree log corruption in production.  This turned out to be because\nwe were not writing out dirty blocks sometimes, so this in fact affects\nall metadata writes.\n\nWhen writing out a subpage EB we scan the subpage bitmap for a dirty\nrange.  If the range isn't dirty we do\n\n\tbit_start++;\n\nto move onto the next bit.  The problem is the bitmap is based on the\nnumber of sectors that an EB has.  So in this case, we have a 64k\npagesize, 16k nodesize, but a 4k sectorsize.  This means our bitmap is 4\nbits for every node.  With a 64k page size we end up with 4 nodes per\npage.\n\nTo make this easier this is how everything looks\n\n[0         16k       32k       48k     ] logical address\n[0         4         8         12      ] radix tree offset\n[               64k page               ] folio\n[ 16k eb ][ 16k eb ][ 16k eb ][ 16k eb ] extent buffers\n[ | | | |  | | | |   | | | |   | | | | ] bitmap\n\nNow we use all of our addressing based on fs_info-\u003esectorsize_bits, so\nas you can see the above our 16k eb-\u003estart turns into radix entry 4.\n\nWhen we find a dirty range for our eb, we correctly do bit_start +=\nsectors_per_node, because if we start at bit 0, the next bit for the\nnext eb is 4, to correspond to eb-\u003estart 16k.\n\nHowever if our range is clean, we will do bit_start++, which will now\nput us offset from our radix tree entries.\n\nIn our case, assume that the first time we check the bitmap the block is\nnot dirty, we increment bit_start so now it == 1, and then we loop\naround and check again.  This time it is dirty, and we go to find that\nstart using the following equation\n\n\tstart = folio_start + bit_start * fs_info-\u003esectorsize;\n\nso in the case above, eb-\u003estart 0 is now dirty, and we calculate start\nas\n\n\t0 + 1 * fs_info-\u003esectorsize = 4096\n\t4096 \u003e\u003e 12 = 1\n\nNow we're looking up the radix tree for 1, and we won't find an eb.\nWhat's worse is now we're using bit_start == 1, so we do bit_start +=\nsectors_per_node, which is now 5.  If that eb is dirty we will run into\nthe same thing, we will look at an offset that is not populated in the\nradix tree, and now we're skipping the writeout of dirty extent buffers.\n\nThe best fix for this is to not use sectorsize_bits to address nodes,\nbut that's a larger change.  Since this is a fs corruption problem fix\nit simply by always using sectors_per_node to increment the start bit.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37933",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nocteon_ep: Fix host hang issue during device reboot\n\nWhen the host loses heartbeat messages from the device,\nthe driver calls the device-specific ndo_stop function,\nwhich frees the resources. If the driver is unloaded in\nthis scenario, it calls ndo_stop again, attempting to free\nresources that have already been freed, leading to a host\nhang issue. To resolve this, dev_close should be called\ninstead of the device-specific stop function.dev_close\ninternally calls ndo_stop to stop the network interface\nand performs additional cleanup tasks. During the driver\nunload process, if the device is already down, ndo_stop\nis not called.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37936",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nperf/x86/intel: KVM: Mask PEBS_ENABLE loaded for guest with vCPU's value.\n\nWhen generating the MSR_IA32_PEBS_ENABLE value that will be loaded on\nVM-Entry to a KVM guest, mask the value with the vCPU's desired PEBS_ENABLE\nvalue.  Consulting only the host kernel's host vs. guest masks results in\nrunning the guest with PEBS enabled even when the guest doesn't want to use\nPEBS.  Because KVM uses perf events to proxy the guest virtual PMU, simply\nlooking at exclude_host can't differentiate between events created by host\nuserspace, and events created by KVM on behalf of the guest.\n\nRunning the guest with PEBS unexpectedly enabled typically manifests as\ncrashes due to a near-infinite stream of #PFs.  E.g. if the guest hasn't\nwritten MSR_IA32_DS_AREA, the CPU will hit page faults on address '0' when\ntrying to record PEBS events.\n\nThe issue is most easily reproduced by running `perf kvm top` from before\ncommit 7b100989b4f6 (\"perf evlist: Remove __evlist__add_default\") (after\nwhich, `perf kvm top` effectively stopped using PEBS).\tThe userspace side\nof perf creates a guest-only PEBS event, which intel_guest_get_msrs()\nmisconstrues a guest-*owned* PEBS event.\n\nArguably, this is a userspace bug, as enabling PEBS on guest-only events\nsimply cannot work, and userspace can kill VMs in many other ways (there\nis no danger to the host).  However, even if this is considered to be bad\nuserspace behavior, there's zero downside to perf/KVM restricting PEBS to\nguest-owned events.\n\nNote, commit 854250329c02 (\"KVM: x86/pmu: Disable guest PEBS temporarily\nin two rare situations\") fixed the case where host userspace is profiling\nKVM *and* userspace, but missed the case where userspace is profiling only\nKVM.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37937",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nobjtool, media: dib8000: Prevent divide-by-zero in dib8000_set_dds()\n\nIf dib8000_set_dds()'s call to dib8000_read32() returns zero, the result\nis a divide-by-zero.  Prevent that from happening.\n\nFixes the following warning with an UBSAN kernel:\n\n  drivers/media/dvb-frontends/dib8000.o: warning: objtool: dib8000_tune() falls through to next function dib8096p_cfg_DibRx()",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37938",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntracing: Verify event formats that have \"%*p..\"\n\nThe trace event verifier checks the formats of trace events to make sure\nthat they do not point at memory that is not in the trace event itself or\nin data that will never be freed. If an event references data that was\nallocated when the event triggered and that same data is freed before the\nevent is read, then the kernel can crash by reading freed memory.\n\nThe verifier runs at boot up (or module load) and scans the print formats\nof the events and checks their arguments to make sure that dereferenced\npointers are safe. If the format uses \"%*p..\" the verifier will ignore it,\nand that could be dangerous. Cover this case as well.\n\nAlso add to the sample code a use case of \"%*pbl\".",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37943",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: Fix invalid data access in ath12k_dp_rx_h_undecap_nwifi\n\nIn certain cases, hardware might provide packets with a\nlength greater than the maximum native Wi-Fi header length.\nThis can lead to accessing and modifying fields in the header\nwithin the ath12k_dp_rx_h_undecap_nwifi function for\nDP_RX_DECAP_TYPE_NATIVE_WIFI decap type and\npotentially resulting in invalid data access and memory corruption.\n\nAdd a sanity check before processing the SKB to prevent invalid\ndata access in the undecap native Wi-Fi function for the\nDP_RX_DECAP_TYPE_NATIVE_WIFI decap type.\n\nTested-on: QCN9274 hw2.0 PCI WLAN.WBE.1.3.1-00173-QCAHKSWPL_SILICONZ-1",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37944",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: ath12k: Fix invalid entry fetch in ath12k_dp_mon_srng_process\n\nCurrently, ath12k_dp_mon_srng_process uses ath12k_hal_srng_src_get_next_entry\nto fetch the next entry from the destination ring. This is incorrect because\nath12k_hal_srng_src_get_next_entry is intended for source rings, not destination\nrings. This leads to invalid entry fetches, causing potential data corruption or\ncrashes due to accessing incorrect memory locations. This happens because the\nsource ring and destination ring have different handling mechanisms and using\nthe wrong function results in incorrect pointer arithmetic and ring management.\n\nTo fix this issue, replace the call to ath12k_hal_srng_src_get_next_entry with\nath12k_hal_srng_dst_get_next_entry in ath12k_dp_mon_srng_process. This ensures\nthat the correct function is used for fetching entries from the destination\nring, preventing invalid memory accesses.\n\nTested-on: QCN9274 hw2.0 PCI WLAN.WBE.1.3.1-00173-QCAHKSWPL_SILICONZ-1\nTested-on: WCN7850 hw2.0 WLAN.HMT.1.0.c5-00481-QCAHMTSWPL_V1.0_V2.0_SILICONZ-3",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37945",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: phy: allow MDIO bus PM ops to start/stop state machine for phylink-controlled PHY\n\nDSA has 2 kinds of drivers:\n\n1. Those who call dsa_switch_suspend() and dsa_switch_resume() from\n   their device PM ops: qca8k-8xxx, bcm_sf2, microchip ksz\n2. Those who don't: all others. The above methods should be optional.\n\nFor type 1, dsa_switch_suspend() calls dsa_user_suspend() -\u003e phylink_stop(),\nand dsa_switch_resume() calls dsa_user_resume() -\u003e phylink_start().\nThese seem good candidates for setting mac_managed_pm = true because\nthat is essentially its definition [1], but that does not seem to be the\nbiggest problem for now, and is not what this change focuses on.\n\nTalking strictly about the 2nd category of DSA drivers here (which\ndo not have MAC managed PM, meaning that for their attached PHYs,\nmdio_bus_phy_suspend() and mdio_bus_phy_resume() should run in full),\nI have noticed that the following warning from mdio_bus_phy_resume() is\ntriggered:\n\n\tWARN_ON(phydev-\u003estate != PHY_HALTED \u0026\u0026 phydev-\u003estate != PHY_READY \u0026\u0026\n\t\tphydev-\u003estate != PHY_UP);\n\nbecause the PHY state machine is running.\n\nIt's running as a result of a previous dsa_user_open() -\u003e ... -\u003e\nphylink_start() -\u003e phy_start() having been initiated by the user.\n\nThe previous mdio_bus_phy_suspend() was supposed to have called\nphy_stop_machine(), but it didn't. So this is why the PHY is in state\nPHY_NOLINK by the time mdio_bus_phy_resume() runs.\n\nmdio_bus_phy_suspend() did not call phy_stop_machine() because for\nphylink, the phydev-\u003eadjust_link function pointer is NULL. This seems a\ntechnicality introduced by commit fddd91016d16 (\"phylib: fix PAL state\nmachine restart on resume\"). That commit was written before phylink\nexisted, and was intended to avoid crashing with consumer drivers which\ndon't use the PHY state machine - phylink always does, when using a PHY.\nBut phylink itself has historically not been developed with\nsuspend/resume in mind, and apparently not tested too much in that\nscenario, allowing this bug to exist unnoticed for so long. Plus, prior\nto the WARN_ON(), it would have likely been invisible.\n\nThis issue is not in fact restricted to type 2 DSA drivers (according to\nthe above ad-hoc classification), but can be extrapolated to any MAC\ndriver with phylink and MDIO-bus-managed PHY PM ops. DSA is just where\nthe issue was reported. Assuming mac_managed_pm is set correctly, a\nquick search indicates the following other drivers might be affected:\n\n$ grep -Zlr PHYLINK_NETDEV drivers/ | xargs -0 grep -L mac_managed_pm\ndrivers/net/ethernet/atheros/ag71xx.c\ndrivers/net/ethernet/microchip/sparx5/sparx5_main.c\ndrivers/net/ethernet/microchip/lan966x/lan966x_main.c\ndrivers/net/ethernet/freescale/dpaa2/dpaa2-mac.c\ndrivers/net/ethernet/freescale/fs_enet/fs_enet-main.c\ndrivers/net/ethernet/freescale/dpaa/dpaa_eth.c\ndrivers/net/ethernet/freescale/ucc_geth.c\ndrivers/net/ethernet/freescale/enetc/enetc_pf_common.c\ndrivers/net/ethernet/marvell/mvpp2/mvpp2_main.c\ndrivers/net/ethernet/marvell/mvneta.c\ndrivers/net/ethernet/marvell/prestera/prestera_main.c\ndrivers/net/ethernet/mediatek/mtk_eth_soc.c\ndrivers/net/ethernet/altera/altera_tse_main.c\ndrivers/net/ethernet/wangxun/txgbe/txgbe_phy.c\ndrivers/net/ethernet/meta/fbnic/fbnic_phylink.c\ndrivers/net/ethernet/tehuti/tn40_phy.c\ndrivers/net/ethernet/mscc/ocelot_net.c\n\nMake the existing conditions dependent on the PHY device having a\nphydev-\u003ephy_link_change() implementation equal to the default\nphy_link_change() provided by phylib. Otherwise, we implicitly know that\nthe phydev has the phylink-provided phylink_phy_change() callback, and\nwhen phylink is used, the PHY state machine always needs to be stopped/\nstarted on the suspend/resume path. The code is structured as such that\nif phydev-\u003ephy_link_change() is absent, it is a matter of time until the\nkernel will crash - no need to further complicate the test.\n\nThus, for the situation where the PM is not managed b\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37946",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/pci: Fix duplicate pci_dev_put() in disable_slot() when PF has child VFs\n\nWith commit bcb5d6c76903 (\"s390/pci: introduce lock to synchronize state\nof zpci_dev's\") the code to ignore power off of a PF that has child VFs\nwas changed from a direct return to a goto to the unlock and\npci_dev_put() section. The change however left the existing pci_dev_put()\nuntouched resulting in a doubple put. This can subsequently cause a use\nafter free if the struct pci_dev is released in an unexpected state.\nFix this by removing the extra pci_dev_put().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37948",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\narm64: bpf: Add BHB mitigation to the epilogue for cBPF programs\n\nA malicious BPF program may manipulate the branch history to influence\nwhat the hardware speculates will happen next.\n\nOn exit from a BPF program, emit the BHB mititgation sequence.\n\nThis is only applied for 'classic' cBPF programs that are loaded by\nseccomp.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37949",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxenbus: Use kref to track req lifetime\n\nMarek reported seeing a NULL pointer fault in the xenbus_thread\ncallstack:\nBUG: kernel NULL pointer dereference, address: 0000000000000000\nRIP: e030:__wake_up_common+0x4c/0x180\nCall Trace:\n \u003cTASK\u003e\n __wake_up_common_lock+0x82/0xd0\n process_msg+0x18e/0x2f0\n xenbus_thread+0x165/0x1c0\n\nprocess_msg+0x18e is req-\u003ecb(req).  req-\u003ecb is set to xs_wake_up(), a\nthin wrapper around wake_up(), or xenbus_dev_queue_reply().  It seems\nlike it was xs_wake_up() in this case.\n\nIt seems like req may have woken up the xs_wait_for_reply(), which\nkfree()ed the req.  When xenbus_thread resumes, it faults on the zero-ed\ndata.\n\nLinux Device Drivers 2nd edition states:\n\"Normally, a wake_up call can cause an immediate reschedule to happen,\nmeaning that other processes might run before wake_up returns.\"\n... which would match the behaviour observed.\n\nChange to keeping two krefs on each request.  One for the caller, and\none for xenbus_thread.  Each will kref_put() when finished, and the last\nwill free it.\n\nThis use of kref matches the description in\nDocumentation/core-api/kref.rst",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37951",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/v3d: Add job to pending list if the reset was skipped\n\nWhen a CL/CSD job times out, we check if the GPU has made any progress\nsince the last timeout. If so, instead of resetting the hardware, we skip\nthe reset and let the timer get rearmed. This gives long-running jobs a\nchance to complete.\n\nHowever, when `timedout_job()` is called, the job in question is removed\nfrom the pending list, which means it won't be automatically freed through\n`free_job()`. Consequently, when we skip the reset and keep the job\nrunning, the job won't be freed when it finally completes.\n\nThis situation leads to a memory leak, as exposed in [1] and [2].\n\nSimilarly to commit 704d3d60fec4 (\"drm/etnaviv: don't block scheduler when\nGPU is still active\"), this patch ensures the job is put back on the\npending list when extending the timeout.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37954",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: Avoid race in open_cached_dir with lease breaks\n\nA pre-existing valid cfid returned from find_or_create_cached_dir might\nrace with a lease break, meaning open_cached_dir doesn't consider it\nvalid, and thinks it's newly-constructed. This leaks a dentry reference\nif the allocation occurs before the queued lease break work runs.\n\nAvoid the race by extending holding the cfid_list_lock across\nfind_or_create_cached_dir and when the result is checked.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37957",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: SVM: Forcibly leave SMM mode on SHUTDOWN interception\n\nPreviously, commit ed129ec9057f (\"KVM: x86: forcibly leave nested mode\non vCPU reset\") addressed an issue where a triple fault occurring in\nnested mode could lead to use-after-free scenarios. However, the commit\ndid not handle the analogous situation for System Management Mode (SMM).\n\nThis omission results in triggering a WARN when KVM forces a vCPU INIT\nafter SHUTDOWN interception while the vCPU is in SMM. This situation was\nreprodused using Syzkaller by:\n\n  1) Creating a KVM VM and vCPU\n  2) Sending a KVM_SMI ioctl to explicitly enter SMM\n  3) Executing invalid instructions causing consecutive exceptions and\n     eventually a triple fault\n\nThe issue manifests as follows:\n\n  WARNING: CPU: 0 PID: 25506 at arch/x86/kvm/x86.c:12112\n  kvm_vcpu_reset+0x1d2/0x1530 arch/x86/kvm/x86.c:12112\n  Modules linked in:\n  CPU: 0 PID: 25506 Comm: syz-executor.0 Not tainted\n  6.1.130-syzkaller-00157-g164fe5dde9b6 #0\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996),\n  BIOS 1.12.0-1 04/01/2014\n  RIP: 0010:kvm_vcpu_reset+0x1d2/0x1530 arch/x86/kvm/x86.c:12112\n  Call Trace:\n   \u003cTASK\u003e\n   shutdown_interception+0x66/0xb0 arch/x86/kvm/svm/svm.c:2136\n   svm_invoke_exit_handler+0x110/0x530 arch/x86/kvm/svm/svm.c:3395\n   svm_handle_exit+0x424/0x920 arch/x86/kvm/svm/svm.c:3457\n   vcpu_enter_guest arch/x86/kvm/x86.c:10959 [inline]\n   vcpu_run+0x2c43/0x5a90 arch/x86/kvm/x86.c:11062\n   kvm_arch_vcpu_ioctl_run+0x50f/0x1cf0 arch/x86/kvm/x86.c:11283\n   kvm_vcpu_ioctl+0x570/0xf00 arch/x86/kvm/../../../virt/kvm/kvm_main.c:4122\n   vfs_ioctl fs/ioctl.c:51 [inline]\n   __do_sys_ioctl fs/ioctl.c:870 [inline]\n   __se_sys_ioctl fs/ioctl.c:856 [inline]\n   __x64_sys_ioctl+0x19a/0x210 fs/ioctl.c:856\n   do_syscall_x64 arch/x86/entry/common.c:51 [inline]\n   do_syscall_64+0x35/0x80 arch/x86/entry/common.c:81\n   entry_SYSCALL_64_after_hwframe+0x6e/0xd8\n\nArchitecturally, INIT is blocked when the CPU is in SMM, hence KVM's WARN()\nin kvm_vcpu_reset() to guard against KVM bugs, e.g. to detect improper\nemulation of INIT.  SHUTDOWN on SVM is a weird edge case where KVM needs to\ndo _something_ sane with the VMCB, since it's technically undefined, and\nINIT is the least awful choice given KVM's ABI.\n\nSo, double down on stuffing INIT on SHUTDOWN, and force the vCPU out of\nSMM to avoid any weirdness (and the WARN).\n\nFound by Linux Verification Center (linuxtesting.org) with Syzkaller.\n\n[sean: massage changelog, make it clear this isn't architectural behavior]",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37958",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/huge_memory: fix dereferencing invalid pmd migration entry\n\nWhen migrating a THP, concurrent access to the PMD migration entry during\na deferred split scan can lead to an invalid address access, as\nillustrated below.  To prevent this invalid access, it is necessary to\ncheck the PMD migration entry and return early.  In this context, there is\nno need to use pmd_to_swp_entry and pfn_swap_entry_to_page to verify the\nequality of the target folio.  Since the PMD migration entry is locked, it\ncannot be served as the target.\n\nMailing list discussion and explanation from Hugh Dickins: \"An anon_vma\nlookup points to a location which may contain the folio of interest, but\nmight instead contain another folio: and weeding out those other folios is\nprecisely what the \"folio != pmd_folio((*pmd)\" check (and the \"risk of\nreplacing the wrong folio\" comment a few lines above it) is for.\"\n\nBUG: unable to handle page fault for address: ffffea60001db008\nCPU: 0 UID: 0 PID: 2199114 Comm: tee Not tainted 6.14.0+ #4 NONE\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2 04/01/2014\nRIP: 0010:split_huge_pmd_locked+0x3b5/0x2b60\nCall Trace:\n\u003cTASK\u003e\ntry_to_migrate_one+0x28c/0x3730\nrmap_walk_anon+0x4f6/0x770\nunmap_folio+0x196/0x1f0\nsplit_huge_page_to_list_to_order+0x9f6/0x1560\ndeferred_split_scan+0xac5/0x12a0\nshrinker_debugfs_scan_write+0x376/0x470\nfull_proxy_write+0x15c/0x220\nvfs_write+0x2fc/0xcb0\nksys_write+0x146/0x250\ndo_syscall_64+0x6a/0x120\nentry_SYSCALL_64_after_hwframe+0x76/0x7e\n\nThe bug is found by syzkaller on an internal kernel, then confirmed on\nupstream.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37959",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Scrub packet on bpf_redirect_peer\n\nWhen bpf_redirect_peer is used to redirect packets to a device in\nanother network namespace, the skb isn't scrubbed. That can lead skb\ninformation from one namespace to be \"misused\" in another namespace.\n\nAs one example, this is causing Cilium to drop traffic when using\nbpf_redirect_peer to redirect packets that just went through IPsec\ndecryption to a container namespace. The following pwru trace shows (1)\nthe packet path from the host's XFRM layer to the container's XFRM\nlayer where it's dropped and (2) the number of active skb extensions at\neach function.\n\n    NETNS       MARK  IFACE  TUPLE                                FUNC\n    4026533547  d00   eth0   10.244.3.124:35473-\u003e10.244.2.158:53  xfrm_rcv_cb\n                             .active_extensions = (__u8)2,\n    4026533547  d00   eth0   10.244.3.124:35473-\u003e10.244.2.158:53  xfrm4_rcv_cb\n                             .active_extensions = (__u8)2,\n    4026533547  d00   eth0   10.244.3.124:35473-\u003e10.244.2.158:53  gro_cells_receive\n                             .active_extensions = (__u8)2,\n    [...]\n    4026533547  0     eth0   10.244.3.124:35473-\u003e10.244.2.158:53  skb_do_redirect\n                             .active_extensions = (__u8)2,\n    4026534999  0     eth0   10.244.3.124:35473-\u003e10.244.2.158:53  ip_rcv\n                             .active_extensions = (__u8)2,\n    4026534999  0     eth0   10.244.3.124:35473-\u003e10.244.2.158:53  ip_rcv_core\n                             .active_extensions = (__u8)2,\n    [...]\n    4026534999  0     eth0   10.244.3.124:35473-\u003e10.244.2.158:53  udp_queue_rcv_one_skb\n                             .active_extensions = (__u8)2,\n    4026534999  0     eth0   10.244.3.124:35473-\u003e10.244.2.158:53  __xfrm_policy_check\n                             .active_extensions = (__u8)2,\n    4026534999  0     eth0   10.244.3.124:35473-\u003e10.244.2.158:53  __xfrm_decode_session\n                             .active_extensions = (__u8)2,\n    4026534999  0     eth0   10.244.3.124:35473-\u003e10.244.2.158:53  security_xfrm_decode_session\n                             .active_extensions = (__u8)2,\n    4026534999  0     eth0   10.244.3.124:35473-\u003e10.244.2.158:53  kfree_skb_reason(SKB_DROP_REASON_XFRM_POLICY)\n                             .active_extensions = (__u8)2,\n\nIn this case, there are no XFRM policies in the container's network\nnamespace so the drop is unexpected. When we decrypt the IPsec packet,\nthe XFRM state used for decryption is set in the skb extensions. This\ninformation is preserved across the netns switch. When we reach the\nXFRM policy check in the container's netns, __xfrm_policy_check drops\nthe packet with LINUX_MIB_XFRMINNOPOLS because a (container-side) XFRM\npolicy can't be found that matches the (host-side) XFRM state used for\ndecryption.\n\nThis patch fixes this by scrubbing the packet when using\nbpf_redirect_peer, as is done on typical netns switches via veth\ndevices except skb-\u003emark and skb-\u003etstamp are not zeroed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37960",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmemblock: Accept allocated memory before use in memblock_double_array()\n\nWhen increasing the array size in memblock_double_array() and the slab\nis not yet available, a call to memblock_find_in_range() is used to\nreserve/allocate memory. However, the range returned may not have been\naccepted, which can result in a crash when booting an SNP guest:\n\n  RIP: 0010:memcpy_orig+0x68/0x130\n  Code: ...\n  RSP: 0000:ffffffff9cc03ce8 EFLAGS: 00010006\n  RAX: ff11001ff83e5000 RBX: 0000000000000000 RCX: fffffffffffff000\n  RDX: 0000000000000bc0 RSI: ffffffff9dba8860 RDI: ff11001ff83e5c00\n  RBP: 0000000000002000 R08: 0000000000000000 R09: 0000000000002000\n  R10: 000000207fffe000 R11: 0000040000000000 R12: ffffffff9d06ef78\n  R13: ff11001ff83e5000 R14: ffffffff9dba7c60 R15: 0000000000000c00\n  memblock_double_array+0xff/0x310\n  memblock_add_range+0x1fb/0x2f0\n  memblock_reserve+0x4f/0xa0\n  memblock_alloc_range_nid+0xac/0x130\n  memblock_alloc_internal+0x53/0xc0\n  memblock_alloc_try_nid+0x3d/0xa0\n  swiotlb_init_remap+0x149/0x2f0\n  mem_init+0xb/0xb0\n  mm_core_init+0x8f/0x350\n  start_kernel+0x17e/0x5d0\n  x86_64_start_reservations+0x14/0x30\n  x86_64_start_kernel+0x92/0xa0\n  secondary_startup_64_no_verify+0x194/0x19b\n\nMitigate this by calling accept_memory() on the memory range returned\nbefore the slab is available.\n\nPrior to v6.12, the accept_memory() interface used a 'start' and 'end'\nparameter instead of 'start' and 'size', therefore the accept_memory()\ncall must be adjusted to specify 'start + size' for 'end' when applying\nto kernels prior to v6.12.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37961",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nipvs: fix uninit-value for saddr in do_output_route4\n\nsyzbot reports for uninit-value for the saddr argument [1].\ncommit 4754957f04f5 (\"ipvs: do not use random local source address for\ntunnels\") already implies that the input value of saddr\nshould be ignored but the code is still reading it which can prevent\nto connect the route. Fix it by changing the argument to ret_saddr.\n\n[1]\nBUG: KMSAN: uninit-value in do_output_route4+0x42c/0x4d0 net/netfilter/ipvs/ip_vs_xmit.c:147\n do_output_route4+0x42c/0x4d0 net/netfilter/ipvs/ip_vs_xmit.c:147\n __ip_vs_get_out_rt+0x403/0x21d0 net/netfilter/ipvs/ip_vs_xmit.c:330\n ip_vs_tunnel_xmit+0x205/0x2380 net/netfilter/ipvs/ip_vs_xmit.c:1136\n ip_vs_in_hook+0x1aa5/0x35b0 net/netfilter/ipvs/ip_vs_core.c:2063\n nf_hook_entry_hookfn include/linux/netfilter.h:154 [inline]\n nf_hook_slow+0xf7/0x400 net/netfilter/core.c:626\n nf_hook include/linux/netfilter.h:269 [inline]\n __ip_local_out+0x758/0x7e0 net/ipv4/ip_output.c:118\n ip_local_out net/ipv4/ip_output.c:127 [inline]\n ip_send_skb+0x6a/0x3c0 net/ipv4/ip_output.c:1501\n udp_send_skb+0xfda/0x1b70 net/ipv4/udp.c:1195\n udp_sendmsg+0x2fe3/0x33c0 net/ipv4/udp.c:1483\n inet_sendmsg+0x1fc/0x280 net/ipv4/af_inet.c:851\n sock_sendmsg_nosec net/socket.c:712 [inline]\n __sock_sendmsg+0x267/0x380 net/socket.c:727\n ____sys_sendmsg+0x91b/0xda0 net/socket.c:2566\n ___sys_sendmsg+0x28d/0x3c0 net/socket.c:2620\n __sys_sendmmsg+0x41d/0x880 net/socket.c:2702\n __compat_sys_sendmmsg net/compat.c:360 [inline]\n __do_compat_sys_sendmmsg net/compat.c:367 [inline]\n __se_compat_sys_sendmmsg net/compat.c:364 [inline]\n __ia32_compat_sys_sendmmsg+0xc8/0x140 net/compat.c:364\n ia32_sys_call+0x3ffa/0x41f0 arch/x86/include/generated/asm/syscalls_32.h:346\n do_syscall_32_irqs_on arch/x86/entry/syscall_32.c:83 [inline]\n __do_fast_syscall_32+0xb0/0x110 arch/x86/entry/syscall_32.c:306\n do_fast_syscall_32+0x38/0x80 arch/x86/entry/syscall_32.c:331\n do_SYSENTER_32+0x1f/0x30 arch/x86/entry/syscall_32.c:369\n entry_SYSENTER_compat_after_hwframe+0x84/0x8e\n\nUninit was created at:\n slab_post_alloc_hook mm/slub.c:4167 [inline]\n slab_alloc_node mm/slub.c:4210 [inline]\n __kmalloc_cache_noprof+0x8fa/0xe00 mm/slub.c:4367\n kmalloc_noprof include/linux/slab.h:905 [inline]\n ip_vs_dest_dst_alloc net/netfilter/ipvs/ip_vs_xmit.c:61 [inline]\n __ip_vs_get_out_rt+0x35d/0x21d0 net/netfilter/ipvs/ip_vs_xmit.c:323\n ip_vs_tunnel_xmit+0x205/0x2380 net/netfilter/ipvs/ip_vs_xmit.c:1136\n ip_vs_in_hook+0x1aa5/0x35b0 net/netfilter/ipvs/ip_vs_core.c:2063\n nf_hook_entry_hookfn include/linux/netfilter.h:154 [inline]\n nf_hook_slow+0xf7/0x400 net/netfilter/core.c:626\n nf_hook include/linux/netfilter.h:269 [inline]\n __ip_local_out+0x758/0x7e0 net/ipv4/ip_output.c:118\n ip_local_out net/ipv4/ip_output.c:127 [inline]\n ip_send_skb+0x6a/0x3c0 net/ipv4/ip_output.c:1501\n udp_send_skb+0xfda/0x1b70 net/ipv4/udp.c:1195\n udp_sendmsg+0x2fe3/0x33c0 net/ipv4/udp.c:1483\n inet_sendmsg+0x1fc/0x280 net/ipv4/af_inet.c:851\n sock_sendmsg_nosec net/socket.c:712 [inline]\n __sock_sendmsg+0x267/0x380 net/socket.c:727\n ____sys_sendmsg+0x91b/0xda0 net/socket.c:2566\n ___sys_sendmsg+0x28d/0x3c0 net/socket.c:2620\n __sys_sendmmsg+0x41d/0x880 net/socket.c:2702\n __compat_sys_sendmmsg net/compat.c:360 [inline]\n __do_compat_sys_sendmmsg net/compat.c:367 [inline]\n __se_compat_sys_sendmmsg net/compat.c:364 [inline]\n __ia32_compat_sys_sendmmsg+0xc8/0x140 net/compat.c:364\n ia32_sys_call+0x3ffa/0x41f0 arch/x86/include/generated/asm/syscalls_32.h:346\n do_syscall_32_irqs_on arch/x86/entry/syscall_32.c:83 [inline]\n __do_fast_syscall_32+0xb0/0x110 arch/x86/entry/syscall_32.c:306\n do_fast_syscall_32+0x38/0x80 arch/x86/entry/syscall_32.c:331\n do_SYSENTER_32+0x1f/0x30 arch/x86/entry/syscall_32.c:369\n entry_SYSENTER_compat_after_hwframe+0x84/0x8e\n\nCPU: 0 UID: 0 PID: 22408 Comm: syz.4.5165 Not tainted 6.15.0-rc3-syzkaller-00019-gbc3372351d0c #0 PREEMPT(undef)\nHardware name: Google Google Compute Engi\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37963",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\narm64: bpf: Only mitigate cBPF programs loaded by unprivileged users\n\nSupport for eBPF programs loaded by unprivileged users is typically\ndisabled. This means only cBPF programs need to be mitigated for BHB.\n\nIn addition, only mitigate cBPF programs that were loaded by an\nunprivileged user. Privileged users can also load the same program\nvia eBPF, making the mitigation pointless.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37967",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: typec: ucsi: displayport: Fix deadlock\n\nThis patch introduces the ucsi_con_mutex_lock / ucsi_con_mutex_unlock\nfunctions to the UCSI driver. ucsi_con_mutex_lock ensures the connector\nmutex is only locked if a connection is established and the partner pointer\nis valid. This resolves a deadlock scenario where\nucsi_displayport_remove_partner holds con-\u003emutex waiting for\ndp_altmode_work to complete while dp_altmode_work attempts to acquire it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37968",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niio: light: opt3001: fix deadlock due to concurrent flag access\n\nThe threaded IRQ function in this driver is reading the flag twice: once to\nlock a mutex and once to unlock it. Even though the code setting the flag\nis designed to prevent it, there are subtle cases where the flag could be\ntrue at the mutex_lock stage and false at the mutex_unlock stage. This\nresults in the mutex not being unlocked, resulting in a deadlock.\n\nFix it by making the opt3001_irq() code generally more robust, reading the\nflag into a variable and using the variable value at both stages.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37969",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niio: imu: st_lsm6dsx: fix possible lockup in st_lsm6dsx_read_tagged_fifo\n\nPrevent st_lsm6dsx_read_tagged_fifo from falling in an infinite loop in\ncase pattern_len is equal to zero and the device FIFO is not empty.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37970",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\niio: imu: st_lsm6dsx: fix possible lockup in st_lsm6dsx_read_fifo\n\nPrevent st_lsm6dsx_read_fifo from falling in an infinite loop in case\npattern_len is equal to zero and the device FIFO is not empty.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37972",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nInput: mtk-pmic-keys - fix possible null pointer dereference\n\nIn mtk_pmic_keys_probe, the regs parameter is only set if the button is\nparsed in the device tree. However, on hardware where the button is left\nfloating, that node will most likely be removed not to enable that\ninput. In that case the code will try to dereference a null pointer.\n\nLet's use the regs struct instead as it is defined for all supported\nplatforms. Note that it is ok setting the key reg even if that latter is\ndisabled as the interrupt won't be enabled anyway.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37973",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: cfg80211: fix out-of-bounds access during multi-link element defragmentation\n\nCurrently during the multi-link element defragmentation process, the\nmulti-link element length added to the total IEs length when calculating\nthe length of remaining IEs after the multi-link element in\ncfg80211_defrag_mle(). This could lead to out-of-bounds access if the\nmulti-link element or its corresponding fragment elements are the last\nelements in the IEs buffer.\n\nTo address this issue, correctly calculate the remaining IEs length by\ndeducting the multi-link element end offset from total IEs end offset.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37974",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/pci: Fix missing check for zpci_create_device() error return\n\nThe zpci_create_device() function returns an error pointer that needs to\nbe checked before dereferencing it as a struct zpci_dev pointer. Add the\nmissing check in __clp_add() where it was missed when adding the\nscan_list in the fixed commit. Simply not adding the device to the scan\nlist results in the previous behavior.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37978",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock: integrity: Do not call set_page_dirty_lock()\n\nPlacing multiple protection information buffers inside the same page\ncan lead to oopses because set_page_dirty_lock() can't be called from\ninterrupt context.\n\nSince a protection information buffer is not backed by a file there is\nno point in setting its page dirty, there is nothing to synchronize.\nDrop the call to set_page_dirty_lock() and remove the last argument to\nbio_integrity_unpin_bvec().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37979",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: qcom: Fix sc7280 lpass potential buffer overflow\n\nCase values introduced in commit\n5f78e1fb7a3e (\"ASoC: qcom: Add driver support for audioreach solution\")\ncause out of bounds access in arrays of sc7280 driver data (e.g. in case\nof RX_CODEC_DMA_RX_0 in sc7280_snd_hw_params()).\n\nRedefine LPASS_MAX_PORTS to consider the maximum possible port id for\nq6dsp as sc7280 driver utilizes some of those values.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37980",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nblock: fix resource leak in blk_register_queue() error path\n\nWhen registering a queue fails after blk_mq_sysfs_register() is\nsuccessful but the function later encounters an error, we need\nto clean up the blk_mq_sysfs resources.\n\nAdd the missing blk_mq_sysfs_unregister() call in the error path\nto properly clean up these resources and prevent a memory leak.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37982",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: wl1251: fix memory leak in wl1251_tx_work\n\nThe skb dequeued from tx_queue is lost when wl1251_ps_elp_wakeup fails\nwith a -ETIMEDOUT error. Fix that by queueing the skb back to tx_queue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37983",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nqibfs: fix _another_ leak\n\nfailure to allocate inode =\u003e leaked dentry...\n\nthis one had been there since the initial merge; to be fair,\nif we are that far OOM, the odds of failing at that particular\nallocation are low...",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37985",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nUSB: wdm: close race between wdm_open and wdm_wwan_port_stop\n\nClearing WDM_WWAN_IN_USE must be the last action or\nwe can open a chardev whose URBs are still poisoned",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37986",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: typec: class: Invalidate USB device pointers on partner unregistration\n\nTo avoid using invalid USB device pointers after a Type-C partner\ndisconnects, this patch clears the pointers upon partner unregistration.\nThis ensures a clean state for future connections.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37987",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npds_core: Prevent possible adminq overflow/stuck condition\n\nThe pds_core's adminq is protected by the adminq_lock, which prevents\nmore than 1 command to be posted onto it at any one time. This makes it\nso the client drivers cannot simultaneously post adminq commands.\nHowever, the completions happen in a different context, which means\nmultiple adminq commands can be posted sequentially and all waiting\non completion.\n\nOn the FW side, the backing adminq request queue is only 16 entries\nlong and the retry mechanism and/or overflow/stuck prevention is\nlacking. This can cause the adminq to get stuck, so commands are no\nlonger processed and completions are no longer sent by the FW.\n\nAs an initial fix, prevent more than 16 outstanding adminq commands so\nthere's no way to cause the adminq from getting stuck. This works\nbecause the backing adminq request queue will never have more than 16\npending adminq commands, so it will never overflow. This is done by\nreducing the adminq depth to 16.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37989",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: phy: leds: fix memory leak\n\nA network restart test on a router led to an out-of-memory condition,\nwhich was traced to a memory leak in the PHY LED trigger code.\n\nThe root cause is misuse of the devm API. The registration function\n(phy_led_triggers_register) is called from phy_attach_direct, not\nphy_probe, and the unregister function (phy_led_triggers_unregister)\nis called from phy_detach, not phy_remove. This means the register and\nunregister functions can be called multiple times for the same PHY\ndevice, but devm-allocated memory is not freed until the driver is\nunbound.\n\nThis also prevents kmemleak from detecting the leak, as the devm API\ninternally stores the allocated pointer.\n\nFix this by replacing devm_kzalloc/devm_kcalloc with standard\nkzalloc/kcalloc, and add the corresponding kfree calls in the unregister\npath.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37990",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: brcm80211: fmac: Add error handling for brcmf_usb_dl_writeimage()\n\nThe function brcmf_usb_dl_writeimage() calls the function\nbrcmf_usb_dl_cmd() but dose not check its return value. The\n'state.state' and the 'state.bytes' are uninitialized if the\nfunction brcmf_usb_dl_cmd() fails. It is dangerous to use\nuninitialized variables in the conditions.\n\nAdd error handling for brcmf_usb_dl_cmd() to jump to error\nhandling path if the brcmf_usb_dl_cmd() fails and the\n'state.state' and the 'state.bytes' are uninitialized.\n\nImprove the error message to report more detailed error\ninformation.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37992",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: Flush gso_skb list too during -\u003echange()\n\nPreviously, when reducing a qdisc's limit via the -\u003echange() operation, only\nthe main skb queue was trimmed, potentially leaving packets in the gso_skb\nlist. This could result in NULL pointer dereference when we only check\nsch-\u003elimit against sch-\u003eq.qlen.\n\nThis patch introduces a new helper, qdisc_dequeue_internal(), which ensures\nboth the gso_skb list and the main queue are properly flushed when trimming\nexcess packets. All relevant qdiscs (codel, fq, fq_codel, fq_pie, hhf, pie)\nare updated to use this helper in their -\u003echange() routines.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37994",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nusb: typec: ucsi: displayport: Fix NULL pointer access\n\nThis patch ensures that the UCSI driver waits for all pending tasks in the\nucsi_displayport_work workqueue to finish executing before proceeding with\nthe partner removal.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37995",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmodule: ensure that kobject_put() is safe for module type kobjects\n\nIn 'lookup_or_create_module_kobject()', an internal kobject is created\nusing 'module_ktype'. So call to 'kobject_put()' on error handling\npath causes an attempt to use an uninitialized completion pointer in\n'module_kobject_release()'. In this scenario, we just want to release\nkobject without an extra synchronization required for a regular module\nunloading process, so adding an extra check whether 'complete()' is\nactually required makes 'kobject_put()' safe.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37997",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: ipset: fix region locking in hash types\n\nRegion locking introduced in v5.6-rc4 contained three macros to handle\nthe region locks: ahash_bucket_start(), ahash_bucket_end() which gave\nback the start and end hash bucket values belonging to a given region\nlock and ahash_region() which should give back the region lock belonging\nto a given hash bucket. The latter was incorrect which can lead to a\nrace condition between the garbage collector and adding new elements\nwhen a hash type of set is defined with timeouts.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-37998",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nopenvswitch: Fix unsafe attribute parsing in output_userspace()\n\nThis patch replaces the manual Netlink attribute iteration in\noutput_userspace() with nla_for_each_nested(), which ensures that only\nwell-formed attributes are processed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38000",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsch_hfsc: Fix qlen accounting bug when using peek in hfsc_enqueue()\n\nWhen enqueuing the first packet to an HFSC class, hfsc_enqueue() calls the\nchild qdisc's peek() operation before incrementing sch-\u003eq.qlen and\nsch-\u003eqstats.backlog. If the child qdisc uses qdisc_peek_dequeued(), this may\ntrigger an immediate dequeue and potential packet drop. In such cases,\nqdisc_tree_reduce_backlog() is called, but the HFSC qdisc's qlen and backlog\nhave not yet been updated, leading to inconsistent queue accounting. This\ncan leave an empty HFSC class in the active list, causing further\nconsequences like use-after-free.\n\nThis patch fixes the bug by moving the increment of sch-\u003eq.qlen and\nsch-\u003eqstats.backlog before the call to the child qdisc's peek() operation.\nThis ensures that queue length and backlog are always accurate when packet\ndrops or dequeues are triggered during the peek.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38001",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: hfsc: Address reentrant enqueue adding class to eltree twice\n\nSavino says:\n    \"We are writing to report that this recent patch\n    (141d34391abbb315d68556b7c67ad97885407547) [1]\n    can be bypassed, and a UAF can still occur when HFSC is utilized with\n    NETEM.\n\n    The patch only checks the cl-\u003ecl_nactive field to determine whether\n    it is the first insertion or not [2], but this field is only\n    incremented by init_vf [3].\n\n    By using HFSC_RSC (which uses init_ed) [4], it is possible to bypass the\n    check and insert the class twice in the eltree.\n    Under normal conditions, this would lead to an infinite loop in\n    hfsc_dequeue for the reasons we already explained in this report [5].\n\n    However, if TBF is added as root qdisc and it is configured with a\n    very low rate,\n    it can be utilized to prevent packets from being dequeued.\n    This behavior can be exploited to perform subsequent insertions in the\n    HFSC eltree and cause a UAF.\"\n\nTo fix both the UAF and the infinite loop, with netem as an hfsc child,\ncheck explicitly in hfsc_enqueue whether the class is already in the eltree\nwhenever the HFSC_RSC flag is set.\n\n[1] https://web.git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=141d34391abbb315d68556b7c67ad97885407547\n[2] https://elixir.bootlin.com/linux/v6.15-rc5/source/net/sched/sch_hfsc.c#L1572\n[3] https://elixir.bootlin.com/linux/v6.15-rc5/source/net/sched/sch_hfsc.c#L677\n[4] https://elixir.bootlin.com/linux/v6.15-rc5/source/net/sched/sch_hfsc.c#L1574\n[5] https://lore.kernel.org/netdev/8DuRWwfqjoRDLDmBMlIfbrsZg9Gx50DHJc1ilxsEBNe2D6NMoigR_eIRIG0LOjMc3r10nUUZtArXx4oZBIdUfZQrwjcQhdinnMis_0G7VEk=@willsroot.io/T/#u",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38003",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncan: bcm: add missing rcu read protection for procfs content\n\nWhen the procfs content is generated for a bcm_op which is in the process\nto be removed the procfs output might show unreliable data (UAF).\n\nAs the removal of bcm_op's is already implemented with rcu handling this\npatch adds the missing rcu_read_lock() and makes sure the list entries\nare properly removed under rcu protection.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38004",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncan: bcm: add locking for bcm_op runtime updates\n\nThe CAN broadcast manager (CAN BCM) can send a sequence of CAN frames via\nhrtimer. The content and also the length of the sequence can be changed\nresp reduced at runtime where the 'currframe' counter is then set to zero.\n\nAlthough this appeared to be a safe operation the updates of 'currframe'\ncan be triggered from user space and hrtimer context in bcm_can_tx().\nAnderson Nascimento created a proof of concept that triggered a KASAN\nslab-out-of-bounds read access which can be prevented with a spin_lock_bh.\n\nAt the rework of bcm_can_tx() the 'count' variable has been moved into\nthe protected section as this variable can be modified from both contexts\ntoo.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38005",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: ti: k3-udma: Add missing locking\n\nRecent kernels complain about a missing lock in k3-udma.c when the lock\nvalidator is enabled:\n\n[    4.128073] WARNING: CPU: 0 PID: 746 at drivers/dma/ti/../virt-dma.h:169 udma_start.isra.0+0x34/0x238\n[    4.137352] CPU: 0 UID: 0 PID: 746 Comm: kworker/0:3 Not tainted 6.12.9-arm64 #28\n[    4.144867] Hardware name: pp-v12 (DT)\n[    4.148648] Workqueue: events udma_check_tx_completion\n[    4.153841] pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\n[    4.160834] pc : udma_start.isra.0+0x34/0x238\n[    4.165227] lr : udma_start.isra.0+0x30/0x238\n[    4.169618] sp : ffffffc083cabcf0\n[    4.172963] x29: ffffffc083cabcf0 x28: 0000000000000000 x27: ffffff800001b005\n[    4.180167] x26: ffffffc0812f0000 x25: 0000000000000000 x24: 0000000000000000\n[    4.187370] x23: 0000000000000001 x22: 00000000e21eabe9 x21: ffffff8000fa0670\n[    4.194571] x20: ffffff8001b6bf00 x19: ffffff8000fa0430 x18: ffffffc083b95030\n[    4.201773] x17: 0000000000000000 x16: 00000000f0000000 x15: 0000000000000048\n[    4.208976] x14: 0000000000000048 x13: 0000000000000000 x12: 0000000000000001\n[    4.216179] x11: ffffffc08151a240 x10: 0000000000003ea1 x9 : ffffffc08046ab68\n[    4.223381] x8 : ffffffc083cabac0 x7 : ffffffc081df3718 x6 : 0000000000029fc8\n[    4.230583] x5 : ffffffc0817ee6d8 x4 : 0000000000000bc0 x3 : 0000000000000000\n[    4.237784] x2 : 0000000000000000 x1 : 00000000001fffff x0 : 0000000000000000\n[    4.244986] Call trace:\n[    4.247463]  udma_start.isra.0+0x34/0x238\n[    4.251509]  udma_check_tx_completion+0xd0/0xdc\n[    4.256076]  process_one_work+0x244/0x3fc\n[    4.260129]  process_scheduled_works+0x6c/0x74\n[    4.264610]  worker_thread+0x150/0x1dc\n[    4.268398]  kthread+0xd8/0xe8\n[    4.271492]  ret_from_fork+0x10/0x20\n[    4.275107] irq event stamp: 220\n[    4.278363] hardirqs last  enabled at (219): [\u003cffffffc080a27c7c\u003e] _raw_spin_unlock_irq+0x38/0x50\n[    4.287183] hardirqs last disabled at (220): [\u003cffffffc080a1c154\u003e] el1_dbg+0x24/0x50\n[    4.294879] softirqs last  enabled at (182): [\u003cffffffc080037e68\u003e] handle_softirqs+0x1c0/0x3cc\n[    4.303437] softirqs last disabled at (177): [\u003cffffffc080010170\u003e] __do_softirq+0x1c/0x28\n[    4.311559] ---[ end trace 0000000000000000 ]---\n\nThis commit adds the missing locking.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38007",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: uclogic: Add NULL check in uclogic_input_configured()\n\ndevm_kasprintf() returns NULL when memory allocation fails. Currently,\nuclogic_input_configured() does not check for this case, which results\nin a NULL pointer dereference.\n\nAdd NULL check after devm_kasprintf() to prevent this issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38009",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mt76: disable napi on driver removal\n\nA warning on driver removal started occurring after commit 9dd05df8403b\n(\"net: warn if NAPI instance wasn't shut down\"). Disable tx napi before\ndeleting it in mt76_dma_cleanup().\n\n WARNING: CPU: 4 PID: 18828 at net/core/dev.c:7288 __netif_napi_del_locked+0xf0/0x100\n CPU: 4 UID: 0 PID: 18828 Comm: modprobe Not tainted 6.15.0-rc4 #4 PREEMPT(lazy)\n Hardware name: ASUS System Product Name/PRIME X670E-PRO WIFI, BIOS 3035 09/05/2024\n RIP: 0010:__netif_napi_del_locked+0xf0/0x100\n Call Trace:\n \u003cTASK\u003e\n mt76_dma_cleanup+0x54/0x2f0 [mt76]\n mt7921_pci_remove+0xd5/0x190 [mt7921e]\n pci_device_remove+0x47/0xc0\n device_release_driver_internal+0x19e/0x200\n driver_detach+0x48/0x90\n bus_remove_driver+0x6d/0xf0\n pci_unregister_driver+0x2e/0xb0\n __do_sys_delete_module.isra.0+0x197/0x2e0\n do_syscall_64+0x7b/0x160\n entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\nTested with mt7921e but the same pattern can be actually applied to other\nmt76 drivers calling mt76_dma_cleanup() during removal. Tx napi is enabled\nin their *_dma_init() functions and only toggled off and on again inside\ntheir suspend/resume/reset paths. So it should be okay to disable tx\nnapi in such a generic way.\n\nFound by Linux Verification Center (linuxtesting.org).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38010",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nphy: tegra: xusb: Use a bitmask for UTMI pad power state tracking\n\nThe current implementation uses bias_pad_enable as a reference count to\nmanage the shared bias pad for all UTMI PHYs. However, during system\nsuspension with connected USB devices, multiple power-down requests for\nthe UTMI pad result in a mismatch in the reference count, which in turn\nproduces warnings such as:\n\n[  237.762967] WARNING: CPU: 10 PID: 1618 at tegra186_utmi_pad_power_down+0x160/0x170\n[  237.763103] Call trace:\n[  237.763104]  tegra186_utmi_pad_power_down+0x160/0x170\n[  237.763107]  tegra186_utmi_phy_power_off+0x10/0x30\n[  237.763110]  phy_power_off+0x48/0x100\n[  237.763113]  tegra_xusb_enter_elpg+0x204/0x500\n[  237.763119]  tegra_xusb_suspend+0x48/0x140\n[  237.763122]  platform_pm_suspend+0x2c/0xb0\n[  237.763125]  dpm_run_callback.isra.0+0x20/0xa0\n[  237.763127]  __device_suspend+0x118/0x330\n[  237.763129]  dpm_suspend+0x10c/0x1f0\n[  237.763130]  dpm_suspend_start+0x88/0xb0\n[  237.763132]  suspend_devices_and_enter+0x120/0x500\n[  237.763135]  pm_suspend+0x1ec/0x270\n\nThe root cause was traced back to the dynamic power-down changes\nintroduced in commit a30951d31b25 (\"xhci: tegra: USB2 pad power controls\"),\nwhere the UTMI pad was being powered down without verifying its current\nstate. This unbalanced behavior led to discrepancies in the reference\ncount.\n\nTo rectify this issue, this patch replaces the single reference counter\nwith a bitmask, renamed to utmi_pad_enabled. Each bit in the mask\ncorresponds to one of the four USB2 PHYs, allowing us to track each pad's\nenablement status individually.\n\nWith this change:\n  - The bias pad is powered on only when the mask is clear.\n  - Each UTMI pad is powered on or down based on its corresponding bit\n    in the mask, preventing redundant operations.\n  - The overall power state of the shared bias pad is maintained\n    correctly during suspend/resume cycles.\n\nThe mutex used to prevent race conditions during UTMI pad enable/disable\noperations has been moved from the tegra186_utmi_bias_pad_power_on/off\nfunctions to the parent functions tegra186_utmi_pad_power_on/down. This\nchange ensures that there are no race conditions when updating the bitmask.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "low"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38011",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: csa unmap use uninterruptible lock\n\nAfter process exit to unmap csa and free GPU vm, if signal is accepted\nand then waiting to take vm lock is interrupted and return, it causes\nmemory leaking and below warning backtrace.\n\nChange to use uninterruptible wait lock fix the issue.\n\nWARNING: CPU: 69 PID: 167800 at amd/amdgpu/amdgpu_kms.c:1525\n amdgpu_driver_postclose_kms+0x294/0x2a0 [amdgpu]\n Call Trace:\n  \u003cTASK\u003e\n  drm_file_free.part.0+0x1da/0x230 [drm]\n  drm_close_helper.isra.0+0x65/0x70 [drm]\n  drm_release+0x6a/0x120 [drm]\n  amdgpu_drm_release+0x51/0x60 [amdgpu]\n  __fput+0x9f/0x280\n  ____fput+0xe/0x20\n  task_work_run+0x67/0xa0\n  do_exit+0x217/0x3c0\n  do_group_exit+0x3b/0xb0\n  get_signal+0x14a/0x8d0\n  arch_do_signal_or_restart+0xde/0x100\n  exit_to_user_mode_loop+0xc1/0x1a0\n  exit_to_user_mode_prepare+0xf4/0x100\n  syscall_exit_to_user_mode+0x17/0x40\n  do_syscall_64+0x69/0xc0\n\n(cherry picked from commit 7dbbfb3c171a6f63b01165958629c9c26abf38ab)",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38013",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: mac80211: Set n_channels after allocating struct cfg80211_scan_request\n\nMake sure that n_channels is set after allocating the\nstruct cfg80211_registered_device::int_scan_req member. Seen with\nsyzkaller:\n\nUBSAN: array-index-out-of-bounds in net/mac80211/scan.c:1208:5\nindex 0 is out of range for type 'struct ieee80211_channel *[] __counted_by(n_channels)' (aka 'struct ieee80211_channel *[]')\n\nThis was missed in the initial conversions because I failed to locate\nthe allocation likely due to the \"sizeof(void *)\" not matching the\n\"channels\" array type.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38014",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: idxd: Refactor remove call with idxd_cleanup() helper\n\nThe idxd_cleanup() helper cleans up perfmon, interrupts, internals and\nso on. Refactor remove call with the idxd_cleanup() helper to avoid code\nduplication. Note, this also fixes the missing put_device() for idxd\ngroups, enginces and wqs.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38015",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndmaengine: idxd: fix memory leak in error handling path of idxd_alloc\n\nMemory allocated for idxd is not freed if an error occurs during\nidxd_alloc(). To fix it, free the allocated memory in the reverse order\nof allocation before exiting the function in case of an error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38018",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/tls: fix kernel panic when alloc_page failed\n\nWe cannot set frag_list to NULL pointer when alloc_page failed.\nIt will be used in tls_strp_check_queue_ok when the next time\ntls_strp_read_sock is called.\n\nThis is because we don't reset full_len in tls_strp_flush_anchor_copy()\nso the recv path will try to continue handling the partial record\non the next call but we dettached the rcvq from the frag list.\nAlternative fix would be to reset full_len.\n\nUnable to handle kernel NULL pointer dereference\nat virtual address 0000000000000028\n Call trace:\n tls_strp_check_rcv+0x128/0x27c\n tls_strp_data_ready+0x34/0x44\n tls_data_ready+0x3c/0x1f0\n tcp_data_ready+0x9c/0xe4\n tcp_data_queue+0xf6c/0x12d0\n tcp_rcv_established+0x52c/0x798",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38020",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet/mlx5e: Disable MACsec offload for uplink representor profile\n\nMACsec offload is not supported in switchdev mode for uplink\nrepresentors. When switching to the uplink representor profile, the\nMACsec offload feature must be cleared from the netdevice's features.\n\nIf left enabled, attempts to add offloads result in a null pointer\ndereference, as the uplink representor does not support MACsec offload\neven though the feature bit remains set.\n\nClear NETIF_F_HW_MACSEC in mlx5e_fix_uplink_rep_features().\n\nKernel log:\n\nOops: general protection fault, probably for non-canonical address 0xdffffc000000000f: 0000 [#1] SMP KASAN\nKASAN: null-ptr-deref in range [0x0000000000000078-0x000000000000007f]\nCPU: 29 UID: 0 PID: 4714 Comm: ip Not tainted 6.14.0-rc4_for_upstream_debug_2025_03_02_17_35 #1\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.0-0-gd239552ce722-prebuilt.qemu.org 04/01/2014\nRIP: 0010:__mutex_lock+0x128/0x1dd0\nCode: d0 7c 08 84 d2 0f 85 ad 15 00 00 8b 35 91 5c fe 03 85 f6 75 29 49 8d 7e 60 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03 \u003c80\u003e 3c 02 00 0f 85 a6 15 00 00 4d 3b 76 60 0f 85 fd 0b 00 00 65 ff\nRSP: 0018:ffff888147a4f160 EFLAGS: 00010206\nRAX: dffffc0000000000 RBX: 0000000000000000 RCX: 0000000000000001\nRDX: 000000000000000f RSI: 0000000000000000 RDI: 0000000000000078\nRBP: ffff888147a4f2e0 R08: ffffffffa05d2c19 R09: 0000000000000000\nR10: 0000000000000001 R11: 0000000000000000 R12: 0000000000000000\nR13: dffffc0000000000 R14: 0000000000000018 R15: ffff888152de0000\nFS:  00007f855e27d800(0000) GS:ffff88881ee80000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00000000004e5768 CR3: 000000013ae7c005 CR4: 0000000000372eb0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe07f0 DR7: 0000000000000400\nCall Trace:\n \u003cTASK\u003e\n ? die_addr+0x3d/0xa0\n ? exc_general_protection+0x144/0x220\n ? asm_exc_general_protection+0x22/0x30\n ? mlx5e_macsec_add_secy+0xf9/0x700 [mlx5_core]\n ? __mutex_lock+0x128/0x1dd0\n ? lockdep_set_lock_cmp_fn+0x190/0x190\n ? mlx5e_macsec_add_secy+0xf9/0x700 [mlx5_core]\n ? mutex_lock_io_nested+0x1ae0/0x1ae0\n ? lock_acquire+0x1c2/0x530\n ? macsec_upd_offload+0x145/0x380\n ? lockdep_hardirqs_on_prepare+0x400/0x400\n ? kasan_save_stack+0x30/0x40\n ? kasan_save_stack+0x20/0x40\n ? kasan_save_track+0x10/0x30\n ? __kasan_kmalloc+0x77/0x90\n ? __kmalloc_noprof+0x249/0x6b0\n ? genl_family_rcv_msg_attrs_parse.constprop.0+0xb5/0x240\n ? mlx5e_macsec_add_secy+0xf9/0x700 [mlx5_core]\n mlx5e_macsec_add_secy+0xf9/0x700 [mlx5_core]\n ? mlx5e_macsec_add_rxsa+0x11a0/0x11a0 [mlx5_core]\n macsec_update_offload+0x26c/0x820\n ? macsec_set_mac_address+0x4b0/0x4b0\n ? lockdep_hardirqs_on_prepare+0x284/0x400\n ? _raw_spin_unlock_irqrestore+0x47/0x50\n macsec_upd_offload+0x2c8/0x380\n ? macsec_update_offload+0x820/0x820\n ? __nla_parse+0x22/0x30\n ? genl_family_rcv_msg_attrs_parse.constprop.0+0x15e/0x240\n genl_family_rcv_msg_doit+0x1cc/0x2a0\n ? genl_family_rcv_msg_attrs_parse.constprop.0+0x240/0x240\n ? cap_capable+0xd4/0x330\n genl_rcv_msg+0x3ea/0x670\n ? genl_family_rcv_msg_dumpit+0x2a0/0x2a0\n ? lockdep_set_lock_cmp_fn+0x190/0x190\n ? macsec_update_offload+0x820/0x820\n netlink_rcv_skb+0x12b/0x390\n ? genl_family_rcv_msg_dumpit+0x2a0/0x2a0\n ? netlink_ack+0xd80/0xd80\n ? rwsem_down_read_slowpath+0xf90/0xf90\n ? netlink_deliver_tap+0xcd/0xac0\n ? netlink_deliver_tap+0x155/0xac0\n ? _copy_from_iter+0x1bb/0x12c0\n genl_rcv+0x24/0x40\n netlink_unicast+0x440/0x700\n ? netlink_attachskb+0x760/0x760\n ? lock_acquire+0x1c2/0x530\n ? __might_fault+0xbb/0x170\n netlink_sendmsg+0x749/0xc10\n ? netlink_unicast+0x700/0x700\n ? __might_fault+0xbb/0x170\n ? netlink_unicast+0x700/0x700\n __sock_sendmsg+0xc5/0x190\n ____sys_sendmsg+0x53f/0x760\n ? import_iovec+0x7/0x10\n ? kernel_sendmsg+0x30/0x30\n ? __copy_msghdr+0x3c0/0x3c0\n ? filter_irq_stacks+0x90/0x90\n ? stack_depot_save_flags+0x28/0xa30\n ___sys_sen\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38022",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/core: Fix \"KASAN: slab-use-after-free Read in ib_register_device\" problem\n\nCall Trace:\n\n __dump_stack lib/dump_stack.c:94 [inline]\n dump_stack_lvl+0x116/0x1f0 lib/dump_stack.c:120\n print_address_description mm/kasan/report.c:408 [inline]\n print_report+0xc3/0x670 mm/kasan/report.c:521\n kasan_report+0xe0/0x110 mm/kasan/report.c:634\n strlen+0x93/0xa0 lib/string.c:420\n __fortify_strlen include/linux/fortify-string.h:268 [inline]\n get_kobj_path_length lib/kobject.c:118 [inline]\n kobject_get_path+0x3f/0x2a0 lib/kobject.c:158\n kobject_uevent_env+0x289/0x1870 lib/kobject_uevent.c:545\n ib_register_device drivers/infiniband/core/device.c:1472 [inline]\n ib_register_device+0x8cf/0xe00 drivers/infiniband/core/device.c:1393\n rxe_register_device+0x275/0x320 drivers/infiniband/sw/rxe/rxe_verbs.c:1552\n rxe_net_add+0x8e/0xe0 drivers/infiniband/sw/rxe/rxe_net.c:550\n rxe_newlink+0x70/0x190 drivers/infiniband/sw/rxe/rxe.c:225\n nldev_newlink+0x3a3/0x680 drivers/infiniband/core/nldev.c:1796\n rdma_nl_rcv_msg+0x387/0x6e0 drivers/infiniband/core/netlink.c:195\n rdma_nl_rcv_skb.constprop.0.isra.0+0x2e5/0x450\n netlink_unicast_kernel net/netlink/af_netlink.c:1313 [inline]\n netlink_unicast+0x53a/0x7f0 net/netlink/af_netlink.c:1339\n netlink_sendmsg+0x8d1/0xdd0 net/netlink/af_netlink.c:1883\n sock_sendmsg_nosec net/socket.c:712 [inline]\n __sock_sendmsg net/socket.c:727 [inline]\n ____sys_sendmsg+0xa95/0xc70 net/socket.c:2566\n ___sys_sendmsg+0x134/0x1d0 net/socket.c:2620\n __sys_sendmsg+0x16d/0x220 net/socket.c:2652\n do_syscall_x64 arch/x86/entry/syscall_64.c:63 [inline]\n do_syscall_64+0xcd/0x260 arch/x86/entry/syscall_64.c:94\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nThis problem is similar to the problem that the\ncommit 1d6a9e7449e2 (\"RDMA/core: Fix use-after-free when rename device name\")\nfixes.\n\nThe root cause is: the function ib_device_rename() renames the name with\nlock. But in the function kobject_uevent(), this name is accessed without\nlock protection at the same time.\n\nThe solution is to add the lock protection when this name is accessed in\nthe function kobject_uevent().",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38023",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnfs: handle failure of nfs_get_lock_context in unlock path\n\nWhen memory is insufficient, the allocation of nfs_lock_context in\nnfs_get_lock_context() fails and returns -ENOMEM. If we mistakenly treat\nan nfs4_unlockdata structure (whose l_ctx member has been set to -ENOMEM)\nas valid and proceed to execute rpc_run_task(), this will trigger a NULL\npointer dereference in nfs4_locku_prepare. For example:\n\nBUG: kernel NULL pointer dereference, address: 000000000000000c\nPGD 0 P4D 0\nOops: Oops: 0000 [#1] SMP PTI\nCPU: 15 UID: 0 PID: 12 Comm: kworker/u64:0 Not tainted 6.15.0-rc2-dirty #60\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-2.fc40\nWorkqueue: rpciod rpc_async_schedule\nRIP: 0010:nfs4_locku_prepare+0x35/0xc2\nCode: 89 f2 48 89 fd 48 c7 c7 68 69 ef b5 53 48 8b 8e 90 00 00 00 48 89 f3\nRSP: 0018:ffffbbafc006bdb8 EFLAGS: 00010246\nRAX: 000000000000004b RBX: ffff9b964fc1fa00 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: fffffffffffffff4 RDI: ffff9ba53fddbf40\nRBP: ffff9ba539934000 R08: 0000000000000000 R09: ffffbbafc006bc38\nR10: ffffffffb6b689c8 R11: 0000000000000003 R12: ffff9ba539934030\nR13: 0000000000000001 R14: 0000000004248060 R15: ffffffffb56d1c30\nFS: 0000000000000000(0000) GS:ffff9ba5881f0000(0000) knlGS:00000000\nCS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 000000000000000c CR3: 000000093f244000 CR4: 00000000000006f0\nCall Trace:\n \u003cTASK\u003e\n __rpc_execute+0xbc/0x480\n rpc_async_schedule+0x2f/0x40\n process_one_work+0x232/0x5d0\n worker_thread+0x1da/0x3d0\n ? __pfx_worker_thread+0x10/0x10\n kthread+0x10d/0x240\n ? __pfx_kthread+0x10/0x10\n ret_from_fork+0x34/0x50\n ? __pfx_kthread+0x10/0x10\n ret_from_fork_asm+0x1a/0x30\n \u003c/TASK\u003e\nModules linked in:\nCR2: 000000000000000c\n---[ end trace 0000000000000000 ]---\n\nFree the allocated nfs4_unlockdata when nfs_get_lock_context() fails and\nreturn NULL to terminate subsequent rpc_run_task, preventing NULL pointer\ndereference.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38024",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/rxe: Fix slab-use-after-free Read in rxe_queue_cleanup bug\n\nCall Trace:\n \u003cTASK\u003e\n __dump_stack lib/dump_stack.c:94 [inline]\n dump_stack_lvl+0x7d/0xa0 lib/dump_stack.c:120\n print_address_description mm/kasan/report.c:378 [inline]\n print_report+0xcf/0x610 mm/kasan/report.c:489\n kasan_report+0xb5/0xe0 mm/kasan/report.c:602\n rxe_queue_cleanup+0xd0/0xe0 drivers/infiniband/sw/rxe/rxe_queue.c:195\n rxe_cq_cleanup+0x3f/0x50 drivers/infiniband/sw/rxe/rxe_cq.c:132\n __rxe_cleanup+0x168/0x300 drivers/infiniband/sw/rxe/rxe_pool.c:232\n rxe_create_cq+0x22e/0x3a0 drivers/infiniband/sw/rxe/rxe_verbs.c:1109\n create_cq+0x658/0xb90 drivers/infiniband/core/uverbs_cmd.c:1052\n ib_uverbs_create_cq+0xc7/0x120 drivers/infiniband/core/uverbs_cmd.c:1095\n ib_uverbs_write+0x969/0xc90 drivers/infiniband/core/uverbs_main.c:679\n vfs_write fs/read_write.c:677 [inline]\n vfs_write+0x26a/0xcc0 fs/read_write.c:659\n ksys_write+0x1b8/0x200 fs/read_write.c:731\n do_syscall_x64 arch/x86/entry/common.c:52 [inline]\n do_syscall_64+0xaa/0x1b0 arch/x86/entry/common.c:83\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\n\nIn the function rxe_create_cq, when rxe_cq_from_init fails, the function\nrxe_cleanup will be called to handle the allocated resources. In fact,\nsome memory resources have already been freed in the function\nrxe_cq_from_init. Thus, this problem will occur.\n\nThe solution is to let rxe_cleanup do all the work.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38027",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nregulator: max20086: fix invalid memory access\n\nmax20086_parse_regulators_dt() calls of_regulator_match() using an\narray of struct of_regulator_match allocated on the stack for the\nmatches argument.\n\nof_regulator_match() calls devm_of_regulator_put_matches(), which calls\ndevres_alloc() to allocate a struct devm_of_regulator_matches which will\nbe de-allocated using devm_of_regulator_put_matches().\n\nstruct devm_of_regulator_matches is populated with the stack allocated\nmatches array.\n\nIf the device fails to probe, devm_of_regulator_put_matches() will be\ncalled and will try to call of_node_put() on that stack pointer,\ngenerating the following dmesg entries:\n\nmax20086 6-0028: Failed to read DEVICE_ID reg: -121\nkobject: '\\xc0$\\xa5\\x03' (000000002cebcb7a): is not initialized, yet\nkobject_put() is being called.\n\nFollowed by a stack trace matching the call flow described above.\n\nSwitch to allocating the matches array using devm_kcalloc() to\navoid accessing the stack pointer long after it's out of scope.\n\nThis also has the advantage of allowing multiple max20086 to probe\nwithout overriding the data stored inside the global of_regulator_match.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38031",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\npadata: do not leak refcount in reorder_work\n\nA recent patch that addressed a UAF introduced a reference count leak:\nthe parallel_data refcount is incremented unconditionally, regardless\nof the return value of queue_work(). If the work item is already queued,\nthe incremented refcount is never decremented.\n\nFix this by checking the return value of queue_work() and decrementing\nthe refcount when necessary.\n\nResolves:\n\nUnreferenced object 0xffff9d9f421e3d80 (size 192):\n  comm \"cryptomgr_probe\", pid 157, jiffies 4294694003\n  hex dump (first 32 bytes):\n    80 8b cf 41 9f 9d ff ff b8 97 e0 89 ff ff ff ff  ...A............\n    d0 97 e0 89 ff ff ff ff 19 00 00 00 1f 88 23 00  ..............#.\n  backtrace (crc 838fb36):\n    __kmalloc_cache_noprof+0x284/0x320\n    padata_alloc_pd+0x20/0x1e0\n    padata_alloc_shell+0x3b/0xa0\n    0xffffffffc040a54d\n    cryptomgr_probe+0x43/0xc0\n    kthread+0xf6/0x1f0\n    ret_from_fork+0x2f/0x50\n    ret_from_fork_asm+0x1a/0x30",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38040",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: mctrl_gpio: split disable_ms into sync and no_sync APIs\n\nThe following splat has been observed on a SAMA5D27 platform using\natmel_serial:\n\nBUG: sleeping function called from invalid context at kernel/irq/manage.c:738\nin_atomic(): 1, irqs_disabled(): 128, non_block: 0, pid: 27, name: kworker/u5:0\npreempt_count: 1, expected: 0\nINFO: lockdep is turned off.\nirq event stamp: 0\nhardirqs last  enabled at (0): [\u003c00000000\u003e] 0x0\nhardirqs last disabled at (0): [\u003cc01588f0\u003e] copy_process+0x1c4c/0x7bec\nsoftirqs last  enabled at (0): [\u003cc0158944\u003e] copy_process+0x1ca0/0x7bec\nsoftirqs last disabled at (0): [\u003c00000000\u003e] 0x0\nCPU: 0 UID: 0 PID: 27 Comm: kworker/u5:0 Not tainted 6.13.0-rc7+ #74\nHardware name: Atmel SAMA5\nWorkqueue: hci0 hci_power_on [bluetooth]\nCall trace:\n  unwind_backtrace from show_stack+0x18/0x1c\n  show_stack from dump_stack_lvl+0x44/0x70\n  dump_stack_lvl from __might_resched+0x38c/0x598\n  __might_resched from disable_irq+0x1c/0x48\n  disable_irq from mctrl_gpio_disable_ms+0x74/0xc0\n  mctrl_gpio_disable_ms from atmel_disable_ms.part.0+0x80/0x1f4\n  atmel_disable_ms.part.0 from atmel_set_termios+0x764/0x11e8\n  atmel_set_termios from uart_change_line_settings+0x15c/0x994\n  uart_change_line_settings from uart_set_termios+0x2b0/0x668\n  uart_set_termios from tty_set_termios+0x600/0x8ec\n  tty_set_termios from ttyport_set_flow_control+0x188/0x1e0\n  ttyport_set_flow_control from wilc_setup+0xd0/0x524 [hci_wilc]\n  wilc_setup [hci_wilc] from hci_dev_open_sync+0x330/0x203c [bluetooth]\n  hci_dev_open_sync [bluetooth] from hci_dev_do_open+0x40/0xb0 [bluetooth]\n  hci_dev_do_open [bluetooth] from hci_power_on+0x12c/0x664 [bluetooth]\n  hci_power_on [bluetooth] from process_one_work+0x998/0x1a38\n  process_one_work from worker_thread+0x6e0/0xfb4\n  worker_thread from kthread+0x3d4/0x484\n  kthread from ret_from_fork+0x14/0x28\n\nThis warning is emitted when trying to toggle, at the highest level,\nsome flow control (with serdev_device_set_flow_control) in a device\ndriver. At the lowest level, the atmel_serial driver is using\nserial_mctrl_gpio lib to enable/disable the corresponding IRQs\naccordingly.  The warning emitted by CONFIG_DEBUG_ATOMIC_SLEEP is due to\ndisable_irq (called in mctrl_gpio_disable_ms) being possibly called in\nsome atomic context (some tty drivers perform modem lines configuration\nin regions protected by port lock).\n\nSplit mctrl_gpio_disable_ms into two differents APIs, a non-blocking one\nand a blocking one. Replace mctrl_gpio_disable_ms calls with the\nrelevant version depending on whether the call is protected by some port\nlock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38043",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: arm_ffa: Set dma_mask for ffa devices\n\nSet dma_mask for FFA devices, otherwise DMA allocation using the device pointer\nlead to following warning:\n\nWARNING: CPU: 1 PID: 1 at kernel/dma/mapping.c:597 dma_alloc_attrs+0xe0/0x124",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38044",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmedia: cx231xx: set device_caps for 417\n\nThe video_device for the MPEG encoder did not set device_caps.\n\nAdd this, otherwise the video device can't be registered (you get a\nWARN_ON instead).\n\nNot seen before since currently 417 support is disabled, but I found\nthis while experimenting with it.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38045",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: iwlwifi: fix debug actions order\n\nThe order of actions taken for debug was implemented incorrectly.\nNow we implemented the dump split and do the FW reset only in the\nmiddle of the dump (rather than the FW killing itself on error.)\nAs a result, some of the actions taken when applying the config\nwill now crash the device, so we need to fix the order.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38053",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nidpf: fix null-ptr-deref in idpf_features_check\n\nidpf_features_check is used to validate the TX packet. skb header\nlength is compared with the hardware supported value received from\nthe device control plane. The value is stored in the adapter structure\nand to access it, vport pointer is used. During reset all the vports\nare released and the vport pointer that the netdev private structure\npoints to is NULL.\n\nTo avoid null-ptr-deref, store the max header length value in netdev\nprivate structure. This also helps to cache the value and avoid\naccessing adapter pointer in hot path.\n\nBUG: kernel NULL pointer dereference, address: 0000000000000068\n...\nRIP: 0010:idpf_features_check+0x6d/0xe0 [idpf]\nCall Trace:\n \u003cTASK\u003e\n ? __die+0x23/0x70\n ? page_fault_oops+0x154/0x520\n ? exc_page_fault+0x76/0x190\n ? asm_exc_page_fault+0x26/0x30\n ? idpf_features_check+0x6d/0xe0 [idpf]\n netif_skb_features+0x88/0x310\n validate_xmit_skb+0x2a/0x2b0\n validate_xmit_skb_list+0x4c/0x70\n sch_direct_xmit+0x19d/0x3a0\n __dev_queue_xmit+0xb74/0xe70\n ...",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38057",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nespintcp: fix skb leaks\n\nA few error paths are missing a kfree_skb.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38059",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: avoid NULL pointer dereference if no valid csum tree\n\n[BUG]\nWhen trying read-only scrub on a btrfs with rescue=idatacsums mount\noption, it will crash with the following call trace:\n\n  BUG: kernel NULL pointer dereference, address: 0000000000000208\n  #PF: supervisor read access in kernel mode\n  #PF: error_code(0x0000) - not-present page\n  CPU: 1 UID: 0 PID: 835 Comm: btrfs Tainted: G           O        6.15.0-rc3-custom+ #236 PREEMPT(full)\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS unknown 02/02/2022\n  RIP: 0010:btrfs_lookup_csums_bitmap+0x49/0x480 [btrfs]\n  Call Trace:\n   \u003cTASK\u003e\n   scrub_find_fill_first_stripe+0x35b/0x3d0 [btrfs]\n   scrub_simple_mirror+0x175/0x290 [btrfs]\n   scrub_stripe+0x5f7/0x6f0 [btrfs]\n   scrub_chunk+0x9a/0x150 [btrfs]\n   scrub_enumerate_chunks+0x333/0x660 [btrfs]\n   btrfs_scrub_dev+0x23e/0x600 [btrfs]\n   btrfs_ioctl+0x1dcf/0x2f80 [btrfs]\n   __x64_sys_ioctl+0x97/0xc0\n   do_syscall_64+0x4f/0x120\n   entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\n[CAUSE]\nMount option \"rescue=idatacsums\" will completely skip loading the csum\ntree, so that any data read will not find any data csum thus we will\nignore data checksum verification.\n\nNormally call sites utilizing csum tree will check the fs state flag\nNO_DATA_CSUMS bit, but unfortunately scrub does not check that bit at all.\n\nThis results in scrub to call btrfs_search_slot() on a NULL pointer\nand triggered above crash.\n\n[FIX]\nCheck both extent and csum tree root before doing any tree search.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38060",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: copy_verifier_state() should copy 'loop_entry' field\n\nThe bpf_verifier_state.loop_entry state should be copied by\ncopy_verifier_state(). Otherwise, .loop_entry values from unrelated\nstates would poison env-\u003ecur_state.\n\nAdditionally, env-\u003estack should not contain any states with\n.loop_entry != NULL. The states in env-\u003estack are yet to be verified,\nwhile .loop_entry is set for states that reached an equivalent state.\nThis means that env-\u003ecur_state-\u003eloop_entry should always be NULL after\npop_stack().\n\nSee the selftest in the next commit for an example of the program that\nis not safe yet is accepted by verifier w/o this fix.\n\nThis change has some verification performance impact for selftests:\n\nFile                                Program                       Insns (A)  Insns (B)  Insns   (DIFF)  States (A)  States (B)  States (DIFF)\n----------------------------------  ----------------------------  ---------  ---------  --------------  ----------  ----------  -------------\narena_htab.bpf.o                    arena_htab_llvm                     717        426  -291 (-40.59%)          57          37  -20 (-35.09%)\narena_htab_asm.bpf.o                arena_htab_asm                      597        445  -152 (-25.46%)          47          37  -10 (-21.28%)\narena_list.bpf.o                    arena_list_del                      309        279    -30 (-9.71%)          23          14   -9 (-39.13%)\niters.bpf.o                         iter_subprog_check_stacksafe        155        141    -14 (-9.03%)          15          14    -1 (-6.67%)\niters.bpf.o                         iter_subprog_iters                 1094       1003    -91 (-8.32%)          88          83    -5 (-5.68%)\niters.bpf.o                         loop_state_deps2                    479        725  +246 (+51.36%)          46          63  +17 (+36.96%)\nkmem_cache_iter.bpf.o               open_coded_iter                      63         59     -4 (-6.35%)           7           6   -1 (-14.29%)\nverifier_bits_iter.bpf.o            max_words                            92         84     -8 (-8.70%)           8           7   -1 (-12.50%)\nverifier_iterating_callbacks.bpf.o  cond_break2                         113        107     -6 (-5.31%)          12          12    +0 (+0.00%)\n\nAnd significant negative impact for sched_ext:\n\nFile               Program                 Insns (A)  Insns (B)  Insns         (DIFF)  States (A)  States (B)  States      (DIFF)\n-----------------  ----------------------  ---------  ---------  --------------------  ----------  ----------  ------------------\nbpf.bpf.o          lavd_init                    7039      14723      +7684 (+109.16%)         490        1139     +649 (+132.45%)\nbpf.bpf.o          layered_dispatch            11485      10548         -937 (-8.16%)         848         762       -86 (-10.14%)\nbpf.bpf.o          layered_dump                 7422    1000001  +992579 (+13373.47%)         681       31178  +30497 (+4478.27%)\nbpf.bpf.o          layered_enqueue             16854      71127     +54273 (+322.02%)        1611        6450    +4839 (+300.37%)\nbpf.bpf.o          p2dq_dispatch                 665        791        +126 (+18.95%)          68          78       +10 (+14.71%)\nbpf.bpf.o          p2dq_init                    2343       2980        +637 (+27.19%)         201         237       +36 (+17.91%)\nbpf.bpf.o          refresh_layer_cpumasks      16487     674760   +658273 (+3992.68%)        1770       65370  +63600 (+3593.22%)\nbpf.bpf.o          rusty_select_cpu             1937      40872    +38935 (+2010.07%)         177        3210   +3033 (+1713.56%)\nscx_central.bpf.o  central_dispatch              636       2687      +2051 (+322.48%)          63         227     +164 (+260.32%)\nscx_nest.bpf.o     nest_init                     636        815        +179 (+28.14%)          60          73       +13 (+21.67%)\nscx_qmap.bpf.o     qmap_dispatch      \n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38065",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\norangefs: Do not truncate file size\n\n'len' is used to store the result of i_size_read(), so making 'len'\na size_t results in truncation to 4GiB on 32-bit systems.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38068",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: lzo - Fix compression buffer overrun\n\nUnlike the decompression code, the compression code in LZO never\nchecked for output overruns.  It instead assumes that the caller\nalways provides enough buffer space, disregarding the buffer length\nprovided by the caller.\n\nAdd a safe compression interface that checks for the end of buffer\nbefore each write.  Use the safe interface in crypto/lzo.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38072",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nlibnvdimm/labels: Fix divide error in nd_label_data_init()\n\nIf a faulty CXL memory device returns a broken zero LSA size in its\nmemory device information (Identify Memory Device (Opcode 4000h), CXL\nspec. 3.1, 8.2.9.9.1.1), a divide error occurs in the libnvdimm\ndriver:\n\n Oops: divide error: 0000 [#1] PREEMPT SMP NOPTI\n RIP: 0010:nd_label_data_init+0x10e/0x800 [libnvdimm]\n\nCode and flow:\n\n1) CXL Command 4000h returns LSA size = 0\n2) config_size is assigned to zero LSA size (CXL pmem driver):\n\ndrivers/cxl/pmem.c:             .config_size = mds-\u003elsa_size,\n\n3) max_xfer is set to zero (nvdimm driver):\n\ndrivers/nvdimm/label.c: max_xfer = min_t(size_t, ndd-\u003ensarea.max_xfer, config_size);\n\n4) A subsequent DIV_ROUND_UP() causes a division by zero:\n\ndrivers/nvdimm/label.c: /* Make our initial read size a multiple of max_xfer size */\ndrivers/nvdimm/label.c: read_size = min(DIV_ROUND_UP(read_size, max_xfer) * max_xfer,\ndrivers/nvdimm/label.c-                 config_size);\n\nFix this by checking the config size parameter by extending an\nexisting check.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38077",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nplatform/x86: dell-wmi-sysman: Avoid buffer overflow in current_password_store()\n\nIf the 'buf' array received from the user contains an empty string, the\n'length' variable will be zero. Accessing the 'buf' array element with\nindex 'length - 1' will result in a buffer overflow.\n\nAdd a check for an empty string.\n\nFound by Linux Verification Center (linuxtesting.org) with SVACE.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38078",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: pcm: Fix race of buffer access at PCM OSS layer\n\nThe PCM OSS layer tries to clear the buffer with the silence data at\ninitialization (or reconfiguration) of a stream with the explicit call\nof snd_pcm_format_set_silence() with runtime-\u003edma_area.  But this may\nlead to a UAF because the accessed runtime-\u003edma_area might be freed\nconcurrently, as it's performed outside the PCM ops.\n\nFor avoiding it, move the code into the PCM core and perform it inside\nthe buffer access lock, so that it won't be changed during the\noperation.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38079",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncrypto: algif_hash - fix double free in hash_accept\n\nIf accept(2) is called on socket type algif_hash with\nMSG_MORE flag set and crypto_ahash_import fails,\nsk2 is freed. However, it is also freed in af_alg_release,\nleading to slab-use-after-free error.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38080",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Increase block_sequence array size\n\n[Why]\nIt's possible to generate more than 50 steps in hwss_build_fast_sequence,\nfor example with a 6-pipe asic where all pipes are in one MPC chain. This\noverflows the block_sequence buffer and corrupts block_sequence_steps,\ncausing a crash.\n\n[How]\nExpand block_sequence to 100 items. A naive upper bound on the possible\nnumber of steps for a 6-pipe asic, ignoring the potential for steps to be\nmutually exclusive, is 91 with current code, therefore 100 is sufficient.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38081",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi-rockchip: Fix register out of bounds access\n\nDo not write native chip select stuff for GPIO chip selects.\nGPIOs can be numbered much higher than native CS.\nAlso, it makes no sense.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38083",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: prio: fix a race in prio_tune()\n\nGerrard Tai reported a race condition in PRIO, whenever SFQ perturb timer\nfires at the wrong time.\n\nThe race is as follows:\n\nCPU 0                                 CPU 1\n[1]: lock root\n[2]: qdisc_tree_flush_backlog()\n[3]: unlock root\n |\n |                                    [5]: lock root\n |                                    [6]: rehash\n |                                    [7]: qdisc_tree_reduce_backlog()\n |\n[4]: qdisc_put()\n\nThis can be abused to underflow a parent's qlen.\n\nCalling qdisc_purge_queue() instead of qdisc_tree_flush_backlog()\nshould fix the race, because all packets will be purged from the qdisc\nbefore releasing the lock.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38104",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: Replace Mutex with Spinlock for RLCG register access to avoid Priority Inversion in SRIOV\n\nRLCG Register Access is a way for virtual functions to safely access GPU\nregisters in a virtualized environment., including TLB flushes and\nregister reads. When multiple threads or VFs try to access the same\nregisters simultaneously, it can lead to race conditions. By using the\nRLCG interface, the driver can serialize access to the registers. This\nmeans that only one thread can access the registers at a time,\npreventing conflicts and ensuring that operations are performed\ncorrectly. Additionally, when a low-priority task holds a mutex that a\nhigh-priority task needs, ie., If a thread holding a spinlock tries to\nacquire a mutex, it can lead to priority inversion. register access in\namdgpu_virt_rlcg_reg_rw especially in a fast code path is critical.\n\nThe call stack shows that the function amdgpu_virt_rlcg_reg_rw is being\ncalled, which attempts to acquire the mutex. This function is invoked\nfrom amdgpu_sriov_wreg, which in turn is called from\ngmc_v11_0_flush_gpu_tlb.\n\nThe [ BUG: Invalid wait context ] indicates that a thread is trying to\nacquire a mutex while it is in a context that does not allow it to sleep\n(like holding a spinlock).\n\nFixes the below:\n\n[  253.013423] =============================\n[  253.013434] [ BUG: Invalid wait context ]\n[  253.013446] 6.12.0-amdstaging-drm-next-lol-050225 #14 Tainted: G     U     OE\n[  253.013464] -----------------------------\n[  253.013475] kworker/0:1/10 is trying to lock:\n[  253.013487] ffff9f30542e3cf8 (\u0026adev-\u003evirt.rlcg_reg_lock){+.+.}-{3:3}, at: amdgpu_virt_rlcg_reg_rw+0xf6/0x330 [amdgpu]\n[  253.013815] other info that might help us debug this:\n[  253.013827] context-{4:4}\n[  253.013835] 3 locks held by kworker/0:1/10:\n[  253.013847]  #0: ffff9f3040050f58 ((wq_completion)events){+.+.}-{0:0}, at: process_one_work+0x3f5/0x680\n[  253.013877]  #1: ffffb789c008be40 ((work_completion)(\u0026wfc.work)){+.+.}-{0:0}, at: process_one_work+0x1d6/0x680\n[  253.013905]  #2: ffff9f3054281838 (\u0026adev-\u003egmc.invalidate_lock){+.+.}-{2:2}, at: gmc_v11_0_flush_gpu_tlb+0x198/0x4f0 [amdgpu]\n[  253.014154] stack backtrace:\n[  253.014164] CPU: 0 UID: 0 PID: 10 Comm: kworker/0:1 Tainted: G     U     OE      6.12.0-amdstaging-drm-next-lol-050225 #14\n[  253.014189] Tainted: [U]=USER, [O]=OOT_MODULE, [E]=UNSIGNED_MODULE\n[  253.014203] Hardware name: Microsoft Corporation Virtual Machine/Virtual Machine, BIOS Hyper-V UEFI Release v4.1 11/18/2024\n[  253.014224] Workqueue: events work_for_cpu_fn\n[  253.014241] Call Trace:\n[  253.014250]  \u003cTASK\u003e\n[  253.014260]  dump_stack_lvl+0x9b/0xf0\n[  253.014275]  dump_stack+0x10/0x20\n[  253.014287]  __lock_acquire+0xa47/0x2810\n[  253.014303]  ? srso_alias_return_thunk+0x5/0xfbef5\n[  253.014321]  lock_acquire+0xd1/0x300\n[  253.014333]  ? amdgpu_virt_rlcg_reg_rw+0xf6/0x330 [amdgpu]\n[  253.014562]  ? __lock_acquire+0xa6b/0x2810\n[  253.014578]  __mutex_lock+0x85/0xe20\n[  253.014591]  ? amdgpu_virt_rlcg_reg_rw+0xf6/0x330 [amdgpu]\n[  253.014782]  ? sched_clock_noinstr+0x9/0x10\n[  253.014795]  ? srso_alias_return_thunk+0x5/0xfbef5\n[  253.014808]  ? local_clock_noinstr+0xe/0xc0\n[  253.014822]  ? amdgpu_virt_rlcg_reg_rw+0xf6/0x330 [amdgpu]\n[  253.015012]  ? srso_alias_return_thunk+0x5/0xfbef5\n[  253.015029]  mutex_lock_nested+0x1b/0x30\n[  253.015044]  ? mutex_lock_nested+0x1b/0x30\n[  253.015057]  amdgpu_virt_rlcg_reg_rw+0xf6/0x330 [amdgpu]\n[  253.015249]  amdgpu_sriov_wreg+0xc5/0xd0 [amdgpu]\n[  253.015435]  gmc_v11_0_flush_gpu_tlb+0x44b/0x4f0 [amdgpu]\n[  253.015667]  gfx_v11_0_hw_init+0x499/0x29c0 [amdgpu]\n[  253.015901]  ? __pfx_smu_v13_0_update_pcie_parameters+0x10/0x10 [amdgpu]\n[  253.016159]  ? srso_alias_return_thunk+0x5/0xfbef5\n[  253.016173]  ? smu_hw_init+0x18d/0x300 [amdgpu]\n[  253.016403]  amdgpu_device_init+0x29ad/0x36a0 [amdgpu]\n[  253.016614]  amdgpu_driver_load_kms+0x1a/0xc0 [amdgpu]\n[  253.0170\n---truncated---",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38152",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nremoteproc: core: Clear table_sz when rproc_shutdown\n\nThere is case as below could trigger kernel dump:\nUse U-Boot to start remote processor(rproc) with resource table\npublished to a fixed address by rproc. After Kernel boots up,\nstop the rproc, load a new firmware which doesn't have resource table\n,and start rproc.\n\nWhen starting rproc with a firmware not have resource table,\n`memcpy(loaded_table, rproc-\u003ecached_table, rproc-\u003etable_sz)` will\ntrigger dump, because rproc-\u003ecache_table is set to NULL during the last\nstop operation, but rproc-\u003etable_sz is still valid.\n\nThis issue is found on i.MX8MP and i.MX9.\n\nDump as below:\nUnable to handle kernel NULL pointer dereference at virtual address 0000000000000000\nMem abort info:\n  ESR = 0x0000000096000004\n  EC = 0x25: DABT (current EL), IL = 32 bits\n  SET = 0, FnV = 0\n  EA = 0, S1PTW = 0\n  FSC = 0x04: level 0 translation fault\nData abort info:\n  ISV = 0, ISS = 0x00000004, ISS2 = 0x00000000\n  CM = 0, WnR = 0, TnD = 0, TagAccess = 0\n  GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0\nuser pgtable: 4k pages, 48-bit VAs, pgdp=000000010af63000\n[0000000000000000] pgd=0000000000000000, p4d=0000000000000000\nInternal error: Oops: 0000000096000004 [#1] PREEMPT SMP\nModules linked in:\nCPU: 2 UID: 0 PID: 1060 Comm: sh Not tainted 6.14.0-rc7-next-20250317-dirty #38\nHardware name: NXP i.MX8MPlus EVK board (DT)\npstate: a0000005 (NzCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)\npc : __pi_memcpy_generic+0x110/0x22c\nlr : rproc_start+0x88/0x1e0\nCall trace:\n __pi_memcpy_generic+0x110/0x22c (P)\n rproc_boot+0x198/0x57c\n state_store+0x40/0x104\n dev_attr_store+0x18/0x2c\n sysfs_kf_write+0x7c/0x94\n kernfs_fop_write_iter+0x120/0x1cc\n vfs_write+0x240/0x378\n ksys_write+0x70/0x108\n __arm64_sys_write+0x1c/0x28\n invoke_syscall+0x48/0x10c\n el0_svc_common.constprop.0+0xc0/0xe0\n do_el0_svc+0x1c/0x28\n el0_svc+0x30/0xcc\n el0t_64_sync_handler+0x10c/0x138\n el0t_64_sync+0x198/0x19c\n\nClear rproc-\u003etable_sz to address the issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38240",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/mediatek: dp: drm_err =\u003e dev_err in HPD path to avoid NULL ptr\n\nThe function mtk_dp_wait_hpd_asserted() may be called before the\n`mtk_dp-\u003edrm_dev` pointer is assigned in mtk_dp_bridge_attach().\nSpecifically it can be called via this callpath:\n - mtk_edp_wait_hpd_asserted\n - [panel probe]\n - dp_aux_ep_probe\n\nUsing \"drm\" level prints anywhere in this callpath causes a NULL\npointer dereference. Change the error message directly in\nmtk_dp_wait_hpd_asserted() to dev_err() to avoid this. Also change the\nerror messages in mtk_dp_parse_capabilities(), which is called by\nmtk_dp_wait_hpd_asserted().\n\nWhile touching these prints, also add the error code to them to make\nfuture debugging easier.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-38637",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: skbprio: Remove overly strict queue assertions\n\nIn the current implementation, skbprio enqueue/dequeue contains an assertion\nthat fails under certain conditions when SKBPRIO is used as a child qdisc under\nTBF with specific parameters. The failure occurs because TBF sometimes peeks at\npackets in the child qdisc without actually dequeuing them when tokens are\nunavailable.\n\nThis peek operation creates a discrepancy between the parent and child qdisc\nqueue length counters. When TBF later receives a high-priority packet,\nSKBPRIO's queue length may show a different value than what's reflected in its\ninternal priority queue tracking, triggering the assertion.\n\nThe fix removes this overly strict assertions in SKBPRIO, they are not\nnecessary at all.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-39728",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: samsung: Fix UBSAN panic in samsung_clk_init()\n\nWith UBSAN_ARRAY_BOUNDS=y, I'm hitting the below panic due to\ndereferencing `ctx-\u003eclk_data.hws` before setting\n`ctx-\u003eclk_data.num = nr_clks`. Move that up to fix the crash.\n\n  UBSAN: array index out of bounds: 00000000f2005512 [#1] PREEMPT SMP\n  \u003csnip\u003e\n  Call trace:\n   samsung_clk_init+0x110/0x124 (P)\n   samsung_clk_init+0x48/0x124 (L)\n   samsung_cmu_register_one+0x3c/0xa0\n   exynos_arm64_register_cmu+0x54/0x64\n   __gs101_cmu_top_of_clk_init_declare+0x28/0x60\n   ...",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-39735",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\njfs: fix slab-out-of-bounds read in ea_get()\n\nDuring the \"size_check\" label in ea_get(), the code checks if the extended\nattribute list (xattr) size matches ea_size. If not, it logs\n\"ea_get: invalid extended attribute\" and calls print_hex_dump().\n\nHere, EALIST_SIZE(ea_buf-\u003exattr) returns 4110417968, which exceeds\nINT_MAX (2,147,483,647). Then ea_size is clamped:\n\n\tint size = clamp_t(int, ea_size, 0, EALIST_SIZE(ea_buf-\u003exattr));\n\nAlthough clamp_t aims to bound ea_size between 0 and 4110417968, the upper\nlimit is treated as an int, causing an overflow above 2^31 - 1. This leads\n\"size\" to wrap around and become negative (-184549328).\n\nThe \"size\" is then passed to print_hex_dump() (called \"len\" in\nprint_hex_dump()), it is passed as type size_t (an unsigned\ntype), this is then stored inside a variable called\n\"int remaining\", which is then assigned to \"int linelen\" which\nis then passed to hex_dump_to_buffer(). In print_hex_dump()\nthe for loop, iterates through 0 to len-1, where len is\n18446744073525002176, calling hex_dump_to_buffer()\non each iteration:\n\n\tfor (i = 0; i \u003c len; i += rowsize) {\n\t\tlinelen = min(remaining, rowsize);\n\t\tremaining -= rowsize;\n\n\t\thex_dump_to_buffer(ptr + i, linelen, rowsize, groupsize,\n\t\t\t\t   linebuf, sizeof(linebuf), ascii);\n\n\t\t...\n\t}\n\nThe expected stopping condition (i \u003c len) is effectively broken\nsince len is corrupted and very large. This eventually leads to\nthe \"ptr+i\" being passed to hex_dump_to_buffer() to get closer\nto the end of the actual bounds of \"ptr\", eventually an out of\nbounds access is done in hex_dump_to_buffer() in the following\nfor loop:\n\n\tfor (j = 0; j \u003c len; j++) {\n\t\t\tif (linebuflen \u003c lx + 2)\n\t\t\t\tgoto overflow2;\n\t\t\tch = ptr[j];\n\t\t...\n\t}\n\nTo fix this we should validate \"EALIST_SIZE(ea_buf-\u003exattr)\"\nbefore it is utilised.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-40014",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nobjtool, spi: amd: Fix out-of-bounds stack access in amd_set_spi_freq()\n\nIf speed_hz \u003c AMD_SPI_MIN_HZ, amd_set_spi_freq() iterates over the\nentire amd_spi_freq array without breaking out early, causing 'i' to go\nbeyond the array bounds.\n\nFix that by stopping the loop when it gets to the last entry, so the low\nspeed_hz value gets clamped up to AMD_SPI_MIN_HZ.\n\nFixes the following warning with an UBSAN kernel:\n\n  drivers/spi/spi-amd.o: error: objtool: amd_set_spi_freq() falls through to next function amd_spi_set_opcode()",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-40325",
      "Description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmd/raid10: wait barrier before returning discard request with REQ_NOWAIT\n\nraid10_handle_discard should wait barrier before returning a discard bio\nwhich has REQ_NOWAIT. And there is no need to print warning calltrace\nif a discard bio has REQ_NOWAIT flag. Quality engineer usually checks\ndmesg and reports error if dmesg has warning/error calltrace.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-40909",
      "Description": "Perl threads have a working directory race condition where file operations may target unintended paths.\n\nIf a directory handle is open at thread creation, the process-wide current working directory is temporarily changed in order to clone  that handle for the new thread, which is visible from any third (or  more) thread already running. \n\nThis may lead to unintended operations  such as loading code or accessing files from unexpected locations,  which a local attacker may be able to exploit.\n\nThe bug was introduced in commit  11a11ecf4bea72b17d250cfb43c897be1341861e and released in Perl version 5.13.6",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-4330",
      "Description": "Allows the extraction filter to be ignored, allowing symlink targets to point outside the destination directory, and the modification of some file metadata.\n\n\nYou are affected by this vulnerability if using the tarfile  module to extract untrusted tar archives using TarFile.extractall()  or TarFile.extract()  using the filter=  parameter with a value of \"data\"  or \"tar\". See the tarfile  extraction filters documentation https://docs.python.org/3/library/tarfile.html#tarfile-extraction-filter   for more information.\n\nNote that for Python 3.14 or later the default value of filter=  changed from \"no filtering\" to `\"data\", so if you are relying on this new default behavior then your usage is also affected.\n\nNote that none of these vulnerabilities significantly affect the installation of source distributions which are tar archives as source distributions already allow arbitrary code execution during the build process. However when evaluating source distributions it's important to avoid installing source distributions with suspicious links.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-4373",
      "Description": "A flaw was found in GLib, which is vulnerable to an integer overflow in the g_string_insert_unichar() function. When the position at which to insert the character is large, the position will overflow, leading to a buffer underwrite.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-4516",
      "Description": "There is an issue in CPython when using `bytes.decode(\"unicode_escape\", error=\"ignore|replace\")`. If you are not using the \"unicode_escape\" encoding or an error handler your usage is not affected. To work-around this issue you may stop using the error= handler and instead wrap the bytes.decode() call in a try-except catching the DecodeError.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-4517",
      "Description": "Allows arbitrary filesystem writes outside the extraction directory during extraction with filter=\"data\".\n\n\nYou are affected by this vulnerability if using the tarfile  module to extract untrusted tar archives using TarFile.extractall()  or TarFile.extract()  using the filter=  parameter with a value of \"data\"  or \"tar\". See the tarfile  extraction filters documentation https://docs.python.org/3/library/tarfile.html#tarfile-extraction-filter   for more information.\n\nNote that for Python 3.14 or later the default value of filter=  changed from \"no filtering\" to `\"data\", so if you are relying on this new default behavior then your usage is also affected.\n\nNote that none of these vulnerabilities significantly affect the installation of source distributions which are tar archives as source distributions already allow arbitrary code execution during the build process. However when evaluating source distributions it's important to avoid installing source distributions with suspicious links.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-4598",
      "Description": "A vulnerability was found in systemd-coredump. This flaw allows an attacker to force a SUID process to crash and replace it with a non-SUID binary to access the original's privileged process coredump, allowing the attacker to read sensitive data, such as /etc/shadow content, loaded by the original process.\n\nA SUID binary or process has a special type of permission, which allows the process to run with the file owner's permissions, regardless of the user executing the binary. This allows the process to access more restricted data than unprivileged users or processes would be able to. An attacker can leverage this flaw by forcing a SUID process to crash and force the Linux kernel to recycle the process PID before systemd-coredump can analyze the /proc/pid/auxv file. If the attacker wins the race condition, they gain access to the original's SUID process coredump file. They can read sensitive content loaded into memory by the original binary, affecting data confidentiality.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-47268",
      "Description": "ping in iputils before 20250602 allows a denial of service (application error or incorrect data collection) via a crafted ICMP Echo Reply packet, because of a signed 64-bit integer overflow in timestamp multiplication.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-47273",
      "Description": "setuptools is a package that allows users to download, build, install, upgrade, and uninstall Python packages. A path traversal vulnerability in `PackageIndex` is present in setuptools prior to version 78.1.1. An attacker would be allowed to write files to arbitrary locations on the filesystem with the permissions of the process running the Python code, which could escalate to remote code execution depending on the context. Version 78.1.1 fixes the issue.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-4802",
      "Description": "Untrusted LD_LIBRARY_PATH environment variable vulnerability in the GNU C Library version 2.27 to 2.38 allows attacker controlled loading of dynamically shared library in statically compiled setuid binaries that call dlopen (including internal dlopen calls after setlocale or calls to NSS functions such as getaddrinfo).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-4877",
      "Description": "There's a vulnerability in the libssh package where when a libssh consumer passes in an unexpectedly large input buffer to ssh_get_fingerprint_hash() function. In such cases the bin_to_base64() function can experience an integer overflow leading to a memory under allocation, when that happens it's possible that the program perform out of bounds write leading to a heap corruption.\nThis issue affects only 32-bits builds of libssh.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-4878",
      "Description": "A vulnerability was found in libssh, where an uninitialized variable exists under certain conditions in the privatekey_from_file() function. This flaw can be triggered if the file specified by the filename doesn't exist and may lead to possible signing failures or heap corruption.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-48964",
      "Description": "ping in iputils before 20250602 allows a denial of service (application error in adaptive ping mode or incorrect data collection) via a crafted ICMP Echo Reply packet, because a zero timestamp can lead to large intermediate values that have an integer overflow when squared during statistics calculations. NOTE: this issue exists because of an incomplete fix for CVE-2025-47268 (that fix was only about timestamp calculations, and it did not account for a specific scenario where the original timestamp in the ICMP payload is zero).",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-5318",
      "Description": "A flaw was found in the libssh library in versions less than 0.11.2. An out-of-bounds read can be triggered in the sftp_handle function due to an incorrect comparison check that permits the function to access memory beyond the valid handle list and to return an invalid pointer, which is used in further processing. This vulnerability allows an authenticated remote attacker to potentially read unintended memory regions, exposing sensitive information or affect service behavior.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-5351",
      "Description": "A flaw was found in the key export functionality of libssh. The issue occurs in the internal function responsible for converting cryptographic keys into serialized formats. During error handling, a memory structure is freed but not cleared, leading to a potential double free issue if an additional failure occurs later in the function. This condition may result in heap corruption or application instability in low-memory scenarios, posing a risk to system reliability where key export operations are performed.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-5372",
      "Description": "A flaw was found in libssh versions built with OpenSSL versions older than 3.0, specifically in the ssh_kdf() function responsible for key derivation. Due to inconsistent interpretation of return values where OpenSSL uses 0 to indicate failure and libssh uses 0 for success-the function may mistakenly return a success status even when key derivation fails. This results in uninitialized cryptographic key buffers being used in subsequent communication, potentially compromising SSH sessions' confidentiality, integrity, and availability.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-5987",
      "Description": "A flaw was found in libssh when using the ChaCha20 cipher with the OpenSSL library. If an attacker manages to exhaust the heap space, this error is not detected and may lead to libssh using a partially initialized cipher context. This occurs because the OpenSSL error code returned aliases with the SSH_OK code, resulting in libssh not properly detecting the error returned by the OpenSSL library. This issue can lead to undefined behavior, including compromised data confidentiality and integrity or crashes.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-6018",
      "Description": "A Local Privilege Escalation (LPE) vulnerability has been discovered in pam-config within Linux Pluggable Authentication Modules (PAM). This flaw allows an unprivileged local attacker (for example, a user logged in via SSH) to obtain the elevated privileges normally reserved for a physically present, \"allow_active\" user. The highest risk is that the attacker can then perform all allow_active yes Polkit actions, which are typically restricted to console users, potentially gaining unauthorized control over system configurations, services, or other sensitive operations.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-6020",
      "Description": "A flaw was found in linux-pam. The module pam_namespace may use access user-controlled paths without proper protection, allowing local users to elevate their privileges to root via multiple symlink attacks and race conditions.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "important"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    },
    {
      "CVE": "CVE-2025-6069",
      "Description": "The html.parser.HTMLParser class had worse-case quadratic complexity when processing certain crafted malformed inputs potentially leading to amplified denial-of-service.",
      "Threats": [
        {
          "Type": "Impact",
          "Severity": "moderate"
        }
      ],
      "References": null,
      "ProductStatuses": [
        {
          "Type": "Fixed",
          "ProductID": null
        }
      ],
      "CVSSScoreSets": {}
    }
  ]
}