{
  "Severity": "MODERATE",
  "UpdatedAt": "2023-06-20T16:33:23Z",
  "Package": {
    "Ecosystem": "MAVEN",
    "Name": "io.netty:netty-handler"
  },
  "Advisory": {
    "DatabaseId": 212835,
    "Id": "GSA_kwCzR0hTQS02bWpxLWg2NzQtajg0Nc4AAz9j",
    "GhsaId": "GHSA-6mjq-h674-j845",
    "References": [
      {
        "Url": "https://github.com/netty/netty/security/advisories/GHSA-6mjq-h674-j845"
      },
      {
        "Url": "https://github.com/netty/netty/commit/535da17e45201ae4278c0479e6162bb4127d4c32"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2023-34462"
      },
      {
        "Url": "https://www.debian.org/security/2023/dsa-5558"
      },
      {
        "Url": "https://security.netapp.com/advisory/ntap-20230803-0001"
      },
      {
        "Url": "https://security.netapp.com/advisory/ntap-20240621-0007"
      },
      {
        "Url": "https://github.com/advisories/GHSA-6mjq-h674-j845"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-6mjq-h674-j845"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2023-34462"
      }
    ],
    "Description": "### Summary\nThe `SniHandler` can allocate up to 16MB of heap for each channel during the TLS handshake. When the handler or the channel does not have an idle timeout, it can be used to make a TCP server using the `SniHandler` to allocate 16MB of heap.\n\n### Details\nThe `SniHandler` class is a handler that waits for the TLS handshake to configure a `SslHandler` according to the indicated server name by the `ClientHello` record. For this matter it allocates a `ByteBuf` using the value defined in the `ClientHello` record. \n\nNormally the value of the packet should be smaller than the handshake packet but there are not checks done here and the way the code is written, it is possible to craft a packet that makes the `SslClientHelloHandler`\n\n1/ allocate a 16MB `ByteBuf`\n2/ not fail `decode` method `in` buffer\n3/ get out of the loop without an exception\n\nThe combination of this without the use of a timeout makes  easy to connect to a TCP server and allocate 16MB of heap memory per connection.\n\n### Impact\nIf the user has no idle timeout handler configured it might be possible for a remote peer to send a client hello packet which lead the server to buffer up to 16MB of data per connection. This could lead to a OutOfMemoryError and so result in a DDOS.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2023-06-20T16:33:22Z",
    "Severity": "MODERATE",
    "Summary": "netty-handler SniHandler 16MB allocation",
    "UpdatedAt": "2024-06-24T21:24:22Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 6.5,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "4.1.94.Final"
      },
      "VulnerableVersionRange": "\u003c 4.1.94.Final"
    }
  ]
}