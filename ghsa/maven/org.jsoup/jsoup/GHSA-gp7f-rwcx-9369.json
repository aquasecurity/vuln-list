{
  "Severity": "MODERATE",
  "UpdatedAt": "2022-09-01T22:14:58Z",
  "Package": {
    "Ecosystem": "MAVEN",
    "Name": "org.jsoup:jsoup"
  },
  "Advisory": {
    "DatabaseId": 190792,
    "Id": "GSA_kwCzR0hTQS1ncDdmLXJ3Y3gtOTM2Oc4AAulI",
    "GhsaId": "GHSA-gp7f-rwcx-9369",
    "References": [
      {
        "Url": "https://github.com/jhy/jsoup/security/advisories/GHSA-gp7f-rwcx-9369"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2022-36033"
      },
      {
        "Url": "https://github.com/jhy/jsoup/releases/tag/jsoup-1.15.3"
      },
      {
        "Url": "https://jsoup.org/news/release-1.15.3"
      },
      {
        "Url": "https://security.netapp.com/advisory/ntap-20221104-0006/"
      },
      {
        "Url": "https://github.com/advisories/GHSA-gp7f-rwcx-9369"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-gp7f-rwcx-9369"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2022-36033"
      }
    ],
    "Description": "jsoup may incorrectly sanitize HTML including `javascript:` URL expressions, which could allow cross-site scripting (XSS) attacks when a reader subsequently clicks that link. If the non-default `SafeList.preserveRelativeLinks` option is enabled, HTML including `javascript:` URLs that have been crafted with control characters will not be sanitized. If the site that this HTML is published on does not set a Content Security Policy, an XSS attack is then possible.\n\n### Impact\nSites that accept input HTML from users and use jsoup to sanitize that HTML, may be vulnerable to cross-site scripting (XSS) attacks, if they have enabled `SafeList.preserveRelativeLinks` and do not set an appropriate Content Security Policy.\n\n### Patches\nThis issue is patched in jsoup 1.15.3.\n\nUsers should upgrade to this version. Additionally, as the unsanitized input may have been persisted, old content should be cleaned again using the updated version.\n\n### Workarounds\nTo remediate this issue without immediately upgrading:\n\n- disable `SafeList.preserveRelativeLinks`, which will rewrite input URLs as absolute URLs\n- ensure an appropriate [Content Security Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP) is defined. (This should be used regardless of upgrading, as a defence-in-depth best practice.)\n\n### Background and root cause\njsoup includes a [Cleaner](https://jsoup.org/apidocs/org/jsoup/safety/Cleaner.html) component, which is designed to [sanitize input HTML](https://jsoup.org/cookbook/cleaning-html/safelist-sanitizer) against configurable safe-lists of acceptable tags, attributes, and attribute values.\n\nThis includes removing potentially malicious attributes such as `\u003ca href=\"javascript:...\"\u003e`, which may enable XSS attacks. It does this by validating URL attributes against allowed URL protocols (e.g. `http`, `https`).\n\nHowever, an attacker may be able to bypass this check by embedding control characters into the href attribute value. This causes the Java URL class, which is used to resolve relative URLs to absolute URLs before checking the URL's protocol, to treat the URL as a relative URL. It is then resolved into an absolute URL with the configured base URI.\n\nFor example, `java\\tscript:...` would resolve to `https://example.com/java\\tscript:...`.\n\nBy default, when using a safe-list that allows `a` tags, jsoup will rewrite any relative URLs (e.g. `/foo/`) to an absolute URL (e.g. `https://example.com/foo/`). Therefore, this attack attempt would be successfully mitigated. However, if the option [SafeList.preserveRelativeLinks](https://jsoup.org/apidocs/org/jsoup/safety/Safelist.html#preserveRelativeLinks(boolean)) is enabled (which does not rewrite relative links to absolute), the input is left as-is.\n\nWhile Java will treat a path like `java\\tscript:` as a relative path, as it does not match the allowed characters of a URL spec, browsers may normalize out the control characters, and subsequently evaluate it as a `javascript:` spec inline expression. That disparity then leads to an XSS opportunity.\n\nSites defining a Content Security Policy that does not allow javascript expressions in link URLs will not be impacted, as the policy will prevent the script's execution.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [jsoup](https://github.com/jhy/jsoup)\n* Email the author of jsoup at [jonathan@hedley.net](mailto:jonathan@hedley.net)\n\n### Credits\nThanks to Jens HÃ¤derer, who reported this issue, and contributed to its resolution.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2022-09-01T22:14:57Z",
    "Severity": "MODERATE",
    "Summary": "jsoup may not sanitize code injection XSS attempts if SafeList.preserveRelativeLinks is enabled",
    "UpdatedAt": "2023-02-02T05:04:14Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 6.1,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.15.3"
      },
      "VulnerableVersionRange": "\u003c 1.15.3"
    }
  ]
}