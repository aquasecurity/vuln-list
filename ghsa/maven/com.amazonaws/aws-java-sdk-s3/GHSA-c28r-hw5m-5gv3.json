{
  "Severity": "HIGH",
  "UpdatedAt": "2022-07-15T20:44:56Z",
  "Package": {
    "Ecosystem": "MAVEN",
    "Name": "com.amazonaws:aws-java-sdk-s3"
  },
  "Advisory": {
    "DatabaseId": 185980,
    "Id": "GSA_kwCzR0hTQS1jMjhyLWh3NW0tNWd2M84AAtZ8",
    "GhsaId": "GHSA-c28r-hw5m-5gv3",
    "References": [
      {
        "Url": "https://github.com/aws/aws-sdk-java/security/advisories/GHSA-c28r-hw5m-5gv3"
      },
      {
        "Url": "https://github.com/aws/aws-sdk-java/commit/cb66c50c885566d9a7fce837a68dc48ddced8a9a"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31159"
      },
      {
        "Url": "https://github.com/advisories/GHSA-c28r-hw5m-5gv3"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-c28r-hw5m-5gv3"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2022-31159"
      }
    ],
    "Description": "### Overview\n\nA partial-path traversal issue exists within the `downloadDirectory` method in the AWS S3 TransferManager component of the AWS SDK for Java v1. Applications using the SDK control the `destinationDirectory` argument, but S3 object keys are determined by the application that uploaded the objects. The `downloadDirectory` method allows the caller to pass a filesystem object in the object key but contained an issue in the validation logic for the key name. A knowledgeable actor could bypass the validation logic by including a UNIX double-dot in the bucket key. Under certain conditions, this could permit them to retrieve a directory from their S3 bucket that is one level up in the filesystem from their working directory. \n\nThis issue’s scope is limited to directories whose name prefix matches the destinationDirectory. E.g. for destination directory`/tmp/foo`, the actor can cause a download to `/tmp/foo-bar`, but not `/tmp/bar`. \n\nVersions of the AWS Java SDK for S3 v1 before and including v1.12.260 are affected by this issue. \n\n### Impact\n\nIf `com.amazonaws.services.s3.transfer.TransferManager::downloadDirectory` is used to download an untrusted buckets contents, the contents of that bucket can be written outside of the intended destination directory.\n\n#### Root Cause\n\nThe `com.amazonaws.services.s3.transfer.TransferManager::downloadDirectory` contains a partial-path traversal vulnerability.\n\nThis is due to the guard logic in `leavesRoot` containing an insufficient protection against partial-path traversal.\n\nhttps://github.com/aws/aws-sdk-java/blob/5be0807af763b9fbf6b0a153c76dd305e407f035/aws-java-sdk-s3/src/main/java/com/amazonaws/services/s3/transfer/TransferManager.java#L1513-L1519\n\nThe application controls the `localBaseDirectory` argument, but the `key` comes from the AWS bucket entry (ie. can be attacker controlled). The above bit of logic can be bypassed with the following payloads:\n\n```java\n// The following will return 'false', although the attacker value will \"leave\" the `/usr/foo` directory\nleavesRoot(new File(\"/usr/foo\"), \"/../foo-bar/bar\")\n```\n\nThis guard is used here which should guard against path traversal, however `leavesRoot` is an insufficient guard:\n\nhttps://github.com/aws/aws-sdk-java/blob/ae88c8aa4b195047b94c154897475f85642d7eb3/aws-java-sdk-s3/src/main/java/com/amazonaws/services/s3/transfer/TransferManager.java#L1420-L1423\n\n#### True Root cause\n\n If the result of `parent.getCanonicalPath()` is not slash terminated it allows for partial path traversal.\n\n\u003e Consider `\"/usr/outnot\".startsWith(\"/usr/out\")`. The check is bypassed although `outnot` is not under the `out` directory.\nThe terminating slash may be removed in various places. On Linux `println(new File(\"/var/\"))` returns `/var`, but `println(new File(\"/var\", \"/\"))` - `/var/`, however `println(new File(\"/var\", \"/\").getCanonicalPath())` - `/var`.\n \\- [@JarLob (Jaroslav Lobačevski)](https://github.com/JarLob)\n\n### Patches\n\nUpgrade to the AWS SDK for Java \u003e= 1.12.261, if you are on a version \u003c 1.12.261.\n\n### Workarounds\n\nWhen calling `com.amazonaws.services.s3.transfer.TransferManager::downloadDirectory` pass a `KeyFilter` that forbids `S3ObjectSummary` objects that `getKey` method return a string containing the substring `..` .\n\n### References\n\nSimilar vulnerabilities:\n - ESAPI (The OWASP Enterprise Security API) - https://nvd.nist.gov/vuln/detail/CVE-2022-23457\n\n### For more information\n\nIf you have any questions or comments about this advisory, please contact [AWS's Security team](mailto:aws-security@amazon.com).\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2022-07-15T20:44:55Z",
    "Severity": "HIGH",
    "Summary": "Partial Path Traversal in com.amazonaws:aws-java-sdk-s3 ",
    "UpdatedAt": "2023-01-27T05:05:49Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.9,
      "VectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:L"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.12.261"
      },
      "VulnerableVersionRange": "\u003c 1.12.261"
    }
  ]
}