{
  "Severity": "HIGH",
  "UpdatedAt": "2023-05-23T19:54:32Z",
  "Package": {
    "Ecosystem": "MAVEN",
    "Name": "org.igniterealtime.openfire:xmppserver"
  },
  "Advisory": {
    "DatabaseId": 210707,
    "Id": "GSA_kwCzR0hTQS1ndzQyLWY5MzktZmh2bc4AAzcT",
    "GhsaId": "GHSA-gw42-f939-fhvm",
    "References": [
      {
        "Url": "https://github.com/igniterealtime/Openfire/security/advisories/GHSA-gw42-f939-fhvm"
      },
      {
        "Url": "https://github.com/igniterealtime/Openfire/commit/2ac00a1ff42f5d3547ef58e21f8cdec992bfcf97"
      },
      {
        "Url": "https://github.com/igniterealtime/Openfire/commit/71f3def2adeaac62729cf544b645c6819c3d9868"
      },
      {
        "Url": "https://github.com/igniterealtime/Openfire/commit/a3b5ebd5032ff7be9d3ada5bf52bea2df96ec881"
      },
      {
        "Url": "https://github.com/igniterealtime/Openfire/releases/tag/v4.6.8"
      },
      {
        "Url": "https://github.com/igniterealtime/Openfire/releases/tag/v4.7.5"
      },
      {
        "Url": "https://igniterealtime.atlassian.net/browse/OF-2595"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2023-32315"
      },
      {
        "Url": "http://packetstormsecurity.com/files/173607/Openfire-Authentication-Bypass-Remote-Code-Execution.html"
      },
      {
        "Url": "https://github.com/advisories/GHSA-gw42-f939-fhvm"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-gw42-f939-fhvm"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2023-32315"
      }
    ],
    "Description": "An important security issue affects a range of versions of Openfire, the cross-platform real-time collaboration server based on the XMPP protocol that is created by the Ignite Realtime community. \n\n### Impact\nOpenfire's administrative console (the Admin Console), a web-based application, was found to be vulnerable to a path traversal attack via the setup environment. This permitted an unauthenticated user to use the unauthenticated Openfire Setup Environment in an already configured Openfire environment to access restricted pages in the Openfire Admin Console reserved for administrative users.\n\n### Cause\nPath traversal protections were already in place to protect against exactly this kind of attack, but didn’t defend against certain non-standard URL encoding for UTF-16 characters, that were not supported by the embedded webserver that was in use at the time.\n\nA later upgrade of the embedded webserver included support for non-standard URL encoding of UTF-16 characters. The path traversal protections in place in Openfire were not updated to include protection against this new encoding. \n\nOpenfire's API defines a mechanism for certain URLs to be excluded from web authentication (this, for example, is used for the login page). This mechanism allows for wildcards to be used, to allow for flexible URL pattern matching.\n\nThe combination of the wildcard pattern matching and path traversal vulnerability allows a malicious user to bypass authentication requirements for Admin Console pages.\n\n### Affected versions\nThis vulnerability affects all versions of Openfire that have been released since April 2015, starting with version 3.10.0. The problem has been patched in Openfire release 4.7.5 and 4.6.8, and further improvements will be included in the yet-to-be released first version on the 4.8 branch (which is expected to be version 4.8.0).\n\n### Problem Reproduction\nTo test if an instance of Openfire is affected, follow these steps. Open a browser in incognito mode, or otherwise ensure that there is no authenticated session with the Openfire admin console. Open the following URL (possibly modified for the hostname of the server that is running Openfire):\n\n```http://localhost:9090/setup/setup-s/%u002e%u002e/%u002e%u002e/log.jsp```\n\nIf this shows part of the openfire logfiles, then the instance of Openfire is affected by this vulnerability. Note that different versions of Openfire will show a different layout. Newer versions of Openfire can be expected to show log files on a dark background, while older versions will show a largely white page. (Depending on the content of the log file, this page might be empty, apart from a header!)\n\nIf there's a redirect to the login page, the instance is likely unaffected.\n\n### Problem Resolution\nThe problem has been patched in [Openfire release 4.7.5 and 4.6.8](https://www.igniterealtime.org/downloads/#openfire), and further improvements will be included in the yet-to-be released first version on the 4.8 branch (which is expected to be version 4.8.0).\n\n- In Openfire 4.6.8, 4.7.5 and 4.8.0, Path Traversal pattern detection has been improved to include detection of non-standard URL encodings, preventing any non UTF-8 characters.\n- In Openfire 4.6.8, 4.7.5 and 4.8.0, a new configuration property (`adminConsole.access.allow-wildcards-in-excludes`) is introduced that controls the permissibility of using wildcards in URL-patterns that define exclusions to authentication.\n- In Openfire 4.6.8, 4.7.5 and 4.8.0, the existing value that uses a wildcard in URL-patterns that define exclusions to authentication has been replaced by values that do not depend on a wildcard.\n- In Openfire 4.6.8, 4.7.5 and 4.8.0, Setup-specific URL-patterns that define exclusions to authentication are no longer active after the setup process has finished.\n- In Openfire 4.8.0, the embedded webserver will be updated to a version that no longer supports the non-standard URL encoding of UTF-16 characters.\n- In Openfire 4.8.0, the embedded webserver that serves the Openfire administrative console will bind to the loopback network interface by default.\n\nBe aware that the new configuration properties can interfere with the functionality of certain Openfire plugins. This is especially true for plugins that bind a (web)endpoint to the embedded webserver that serves the Openfire administrative console, like current versions of the REST API plugin do. For these plugins to remain functional and/or reachable, it might be required to toggle the property `adminConsole.access.allow-wildcards-in-excludes` to `true`, and to avoid binding the embedded webserver to the loopback network interface only.\n\nWhen your server uses older versions of the following plugins, make sure to upgrade them:\n\n- [Random Avatar plugin](https://www.igniterealtime.org/projects/openfire/plugin-archive.jsp?plugin=randomavatar), update to version 1.1.0 or later.\n- [Monitoring Service plugin](https://www.igniterealtime.org/projects/openfire/plugin-archive.jsp?plugin=monitoring), update to version 2.5.0 or later.\n- [HTTP File Upload plugin](https://www.igniterealtime.org/projects/openfire/plugin-archive.jsp?plugin=httpfileupload), update to version 1.3.0 or later.\n\n### Mitigation\nIf an Openfire upgrade isn’t available for your release, or isn’t quickly actionable, you can take any of the following steps to mitigate the risk for your Openfire environment.\n\nBe aware: through Openfire plugins, the effectiveness of some mitigations listed below can be reduced, while other mitigations might affect the functionality of plugins. Particular care should be taken when using the Monitoring Service plugin, REST API plugin, User Service plugin and/or Random Avatar plugin.\n\n#### Restrict network access\nUse network security measures (network ACLs and/or firewalls, VPNs) to ensure only trusted members of your community have access to the Openfire Admin Console. As a general rule, never expose the Openfire Admin Console to the general internet.\n\nExamples:\n* On a linux machine running `ufw`, deny ports 9090 and 9091 on non-loopback interfaces\n* On a Windows machine, restrict the rules that open ports 9090 and 9091 to only allow traffic from the IPv4 and/or IPv6 loopback addresses\n* On AWS cloud infrastructure, use EC2 Security Groups to restrict ports 9090 and 9091 to trusted IP addresses. If the trusted range is necessarily too broad, consider opening and closing the ports only as necessary\n* If using Docker, instead of `docker run ... -p 5222:5222 -p 9090:9090 -p 9091:9091 openfire` prevent remote access to the Admin Console with `docker run ... -p 5222:5222 -p 127.0.0.1:9090:9090 -p 127.0.0.1:9091:9091 openfire`\n\n\n#### Modify runtime configuration file\nTo close the avenue of potential attack, a runtime configuration file of Openfire can be modified.\n\nIn Openfire's installation directory, find the file `plugins/admin/webapp/WEB-INF/web.xml`. After creating a backup of this file, edit the original file.\n\nThe content of this file is XML. Find a `\u003cfilter\u003e` element, that contains the `\u003cfilter-name\u003eAuthCheck\u003c/filter-name\u003e` child element. Depending on your version of Openfire, it will look similar to this:\n\n```xml\n\u003cfilter\u003e\n    \u003cfilter-name\u003eAuthCheck\u003c/filter-name\u003e\n    \u003cfilter-class\u003eorg.jivesoftware.admin.AuthCheckFilter\u003c/filter-class\u003e\n    \u003cinit-param\u003e\n        \u003cparam-name\u003eexcludes\u003c/param-name\u003e\n        \u003cparam-value\u003e\n            login.jsp,index.jsp?logout=true,setup/index.jsp,setup/setup-*,.gif,.png,error-serverdown.jsp,loginToken.jsp\n        \u003c/param-value\u003e\n    \u003c/init-param\u003e\n\u003c/filter\u003e\n```\nThe value inside of the `param-value` element is a comma-separated list of values. From this list, remove all `*` (asterisk) characters.\n\nSave the file, and restart Openfire for the change to take effect.\n\nNote that no guarantees can be given that this runtime configuration change persists over time. Ensure to monitor the presence of the fix. It is recommended to upgrade to a safe version of Openfire as soon as possible.\n\nA side-effect of this change is that the Openfire web-based setup wizard will not function properly (functionality can be restored by reverting the change). This wizard is typically used only when initially installing Openfire.\n\n#### Bind admin console to loopback interface\nThe Openfire admin console is a web-based application. By default, the corresponding webserver (that is embedded in Openfire) binds to all network interfaces of the host that it is running on.\n\nThe admin console can be configured to bind to a specific network interface. This will prevent it from being accessed through other network interfaces. By configuring the admin console to bind to the local loopback interface, it is accessible only to users on the server itself. This reduces the avenue of attack.\n\nNote that several Openfire plugins expose part or all of their functionality through the admin console webserver. The REST API plugin, for example, serves its endpoints via this webserver. Availability of this functionality will be affected by binding the webserver to a specific network interface.\n\nTo bind the webserver of the Openfire admin console to a specific network interface, the 'openfire.xml' configuration file can be used.\n\nIn Openfire's installation directory, locate the file `conf/openfire.xml`. After creating a backup of this file, edit the original file.\n\nThe content of this file is XML. Find the `\u003cadminConsole\u003e` element that is a direct child element of the root `\u003cjive\u003e` element. Add a new element, named `\u003cinterface\u003e` as a child element of `\u003cadminConsole\u003e`. The value of the `\u003cinterface\u003e` element should be the name of the loopback interface or interface address. Setting value to `127.0.0.1` works on all tested environments (using values like  `lo` on most Linux systems or `lo0` on macOS will have the same effect).\n\nThe resulting fragment of the `openfire.xml` file will look similar to this:\n\n```xml\n\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003cjive\u003e\n  \u003cadminConsole\u003e\n      \u003cinterface\u003e127.0.0.1\u003c/interface\u003e\n      \u003cport\u003e9090\u003c/port\u003e\n      \u003csecurePort\u003e9091\u003c/securePort\u003e\n  \u003c/adminConsole\u003e\n\n  ...\n```\n\nSave the file, and restart Openfire for the change to take effect.\n\n#### Use AuthFilterSanitizer plugin\n\nThe Ignite Realtime community has made available a new plugin, called the AuthFilterSanitizer plugin. The plugin can be installed from the Openfire admin console, or can be downloaded from [the plugin's archive page](https://www.igniterealtime.org/projects/openfire/plugin-archive.jsp?plugin=authfiltersanitizer) on the IgniteRealtime.org community website.\n\nThis plugin periodically removes entries for Openfire's authentication filter that are susceptible to abuse, closing the avenue of potential attack.\n\nNote that this plugin might interfere with functionality that depends on the abuse-susceptible entries in the authentication filter that might be provided by plugins.\n\n### Credit\n\nThis issue was originally reported by Siebene@ who has our gratitude for the responsible and detailed disclosure of the issue! \n\nWe are grateful for the resources made available by Surevine ltd. They were instrumental in addressing the issue listed in this advisory.\n\n### References\n- [Ignite Realtime community site](https://www.igniterealtime.org/)\n- [Openfire releases download page](https://www.igniterealtime.org/downloads/#openfire)\n- [Openfire AuthFilter Sanitizer plugin releases download page](https://www.igniterealtime.org/projects/openfire/plugin-archive.jsp?plugin=authfiltersanitizer)\n- [Openfire HTTP File Upload plugin releases download page](https://www.igniterealtime.org/projects/openfire/plugin-archive.jsp?plugin=httpfileupload)\n- [Openfire Monitoring Service plugin releases download page](https://www.igniterealtime.org/projects/openfire/plugin-archive.jsp?plugin=monitoring)\n- [Openfire Random Avatar plugin releases download page](https://www.igniterealtime.org/projects/openfire/plugin-archive.jsp?plugin=randomavatar)\n- [OWASP: Path Traversal](https://owasp.org/www-community/attacks/Path_Traversal)\n- [Wikipedia: URL encoding, section 'Non-standard implementations'](https://en.wikipedia.org/wiki/URL_encoding#Non-standard_implementations)\n- [Issue OF-2595 in Openfire's issue tracker](https://igniterealtime.atlassian.net/browse/OF-2595)\n- [Jetty CVE-2021-34429](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34429)",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2023-05-23T19:54:30Z",
    "Severity": "HIGH",
    "Summary": "Administration Console authentication bypass in openfire xmppserver",
    "UpdatedAt": "2023-11-07T05:05:02Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 8.6,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "4.7.5"
      },
      "VulnerableVersionRange": "\u003e= 4.7.0, \u003c 4.7.5"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "4.6.8"
      },
      "VulnerableVersionRange": "\u003e= 3.10.0, \u003c 4.6.8"
    }
  ]
}