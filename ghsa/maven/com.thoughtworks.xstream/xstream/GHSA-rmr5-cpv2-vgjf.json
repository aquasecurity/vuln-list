{
  "Severity": "HIGH",
  "UpdatedAt": "2022-01-31T20:12:15Z",
  "Package": {
    "Ecosystem": "MAVEN",
    "Name": "com.thoughtworks.xstream:xstream"
  },
  "Advisory": {
    "DatabaseId": 10221,
    "Id": "GSA_kwCzR0hTQS1ybXI1LWNwdjItdmdqZs0n7Q",
    "GhsaId": "GHSA-rmr5-cpv2-vgjf",
    "References": [
      {
        "Url": "https://github.com/x-stream/xstream/security/advisories/GHSA-rmr5-cpv2-vgjf"
      },
      {
        "Url": "https://github.com/x-stream/xstream/commit/e8e88621ba1c85ac3b8620337dd672e0c0c3a846"
      },
      {
        "Url": "https://x-stream.github.io/CVE-2021-43859.html"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2021-43859"
      },
      {
        "Url": "http://www.openwall.com/lists/oss-security/2022/02/09/1"
      },
      {
        "Url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VACQYG356OHUTD5WQGAQ4L2TTFTAV3SJ/"
      },
      {
        "Url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XODFRE2ZL64FICBJDOPWOLPTSSAI4U7X/"
      },
      {
        "Url": "https://lists.debian.org/debian-lts-announce/2022/02/msg00018.html"
      },
      {
        "Url": "https://www.oracle.com/security-alerts/cpuapr2022.html"
      },
      {
        "Url": "https://www.oracle.com/security-alerts/cpujul2022.html"
      },
      {
        "Url": "https://github.com/advisories/GHSA-rmr5-cpv2-vgjf"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-rmr5-cpv2-vgjf"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2021-43859"
      }
    ],
    "Description": "### Impact\nThe vulnerability may allow a remote attacker to allocate 100% CPU time on the target system depending on CPU type or parallel execution of such a payload resulting in a denial of service only by manipulating the processed input stream.\n\n### Patches\nXStream 1.4.19 monitors and accumulates the time it takes to add elements to collections and throws an exception if a set threshold is exceeded.\n\n### Workarounds\nThe attack uses the hash code implementation for collections and maps to force an exponential calculation time due to highly recursive structures with in the collection or map. Following types of the Java runtime are affected in Java versions available in December 2021:\n\n- java.util.HashMap\n- java.util.HashSet\n- java.util.Hashtable\n- java.util.LinkedHashMap\n- java.util.LinkedHashSet\n- java.util.Stack (older Java revisions only)\n- java.util.Vector (older Java revisions only)\n- Other third party collection implementations that use their element's hash code may also be affected\n\nIf your object graph does not use referenced elements at all, you may simply set the NO_REFERENCE mode:\n```Java\nXStream xstream = new XStream();\nxstream.setMode(XStream.NO_REFERENCES);\n```\n\nIf your object graph contains neither a Hashtable, HashMap nor a HashSet (or one of the linked variants of it) then you can use the security framework to deny the usage of these types:\n```Java\nXStream xstream = new XStream();\nxstream.denyTypes(new Class[]{\n java.util.HashMap.class, java.util.HashSet.class, java.util.Hashtable.class, java.util.LinkedHashMap.class, java.util.LinkedHashSet.class\n});\n```\n\nUnfortunately these types are very common. If you only use HashMap or HashSet and your XML refers these only as default map or set, you may additionally change the default implementation of java.util.Map and java.util.Set at unmarshalling time::\n```Java\nxstream.addDefaultImplementation(java.util.TreeMap.class, java.util.Map.class);\nxstream.addDefaultImplementation(java.util.TreeSet.class, java.util.Set.class);\n```\nHowever, this implies that your application does not care about the implementation of the map and all elements are comparable.\n\n### References\nSee full information about the nature of the vulnerability and the steps to reproduce it in XStream's documentation for [CVE-2021-43859](https://x-stream.github.io/CVE-2021-43859.html).\n\n### Credits\nThe vulnerability was discovered and reported by r00t4dm at Cloud-Penetrating Arrow Lab.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [XStream](https://github.com/x-stream/xstream/issues)\n* Contact us at [XStream Google Group](https://groups.google.com/group/xstream-user)\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2022-02-01T00:48:15Z",
    "Severity": "HIGH",
    "Summary": "Denial of Service by injecting highly recursive collections or maps in XStream",
    "UpdatedAt": "2023-01-29T05:00:51Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.5,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.4.19"
      },
      "VulnerableVersionRange": "\u003c 1.4.19"
    }
  ]
}