{
  "Severity": "CRITICAL",
  "UpdatedAt": "2023-02-22T19:16:08Z",
  "Package": {
    "Ecosystem": "MAVEN",
    "Name": "org.geotools:gt-jdbc"
  },
  "Advisory": {
    "DatabaseId": 203862,
    "Id": "GSA_kwCzR0hTQS05OWMzLXFjMnEtcDk0bc4AAxxW",
    "GhsaId": "GHSA-99c3-qc2q-p94m",
    "References": [
      {
        "Url": "https://github.com/geotools/geotools/security/advisories/GHSA-99c3-qc2q-p94m"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2023-25158"
      },
      {
        "Url": "https://github.com/geotools/geotools/commit/64fb4c47f43ca818c2fe96a94651bff1b3b3ed2b"
      },
      {
        "Url": "https://github.com/advisories/GHSA-99c3-qc2q-p94m"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-99c3-qc2q-p94m"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2023-25158"
      }
    ],
    "Description": "### Impact\n\nGeoTools includes support for OGC Filter expression language parsing, encoding and execution against a range of datastore.\n\nSQL Injection Vulnerabilities have been found when executing OGC Filters with JDBCDataStore implementations:\n\n1. ``PropertyIsLike`` filter\n   * Requires PostGIS DataStore with \"encode functions\" enabled\n   * Or any JDBCDataStore (all relational databases) with String field (no mitigation)\n3. ``strEndsWith`` function\n   * Requires PostGIS DataStore with \"encode functions\" enabled\n5. ``strStartsWith`` function\n   * Requires PostGIS DataStore with \"encode functions\" enabled\n6. ``FeatureId`` filter\n   * Requires JDBCDataStore (all relational databases) with prepared statements disabled and table with String primary key (Oracle not affected, SQL Server and MySQL have no settings to enabled prepared statements, PostGIS does)\n7. ``jsonArrayContains`` function\n   * Requires PostGIS and Oracle DataStore with String or JSON field\n8. ``DWithin`` filter\n   * Happens only in Oracle DataStore, no mitigation\n\n### Patches\n\n* GeoTools 28.2\n* GeoTools 27.4\n* GeoTools 26.7\n* GeoTools 25.7\n* GeoTools 24.7\n\n### Workarounds\n\nPartial mitigation:\n\n* In PostGIS DataStore disable \"encode functions\"\n* In any PostGIS enable \"prepared statements\" (only database with such settings)\n\n```java\n        Map\u003cString, Object\u003e params = new HashMap\u003c\u003e();\n        params.put(\"dbtype\", \"postgis\");\n        params.put(\"host\", \"localhost\");\n        params.put(\"port\", 5432);\n        params.put(\"schema\", \"public\");\n        params.put(\"database\", \"database\");\n        params.put(\"user\", \"postgres\");\n        params.put(\"passwd\", \"postgres\");\n        params.put(\"preparedStatements\", true ); // mitigation\n        params.put(\"encode functions\", false ); // mitigation\n\n        DataStore dataStore = DataStoreFinder.getDataStore(params);\n```\n\n### References\n\n* [OGC Filter SQL Injection Vulnerabilities](https://github.com/geoserver/geoserver/security/advisories/GHSA-7g5f-wrx8-5ccf) (GeoServer)\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2023-02-22T19:16:06Z",
    "Severity": "CRITICAL",
    "Summary": "GeoTools OGC Filter SQL Injection Vulnerabilities",
    "UpdatedAt": "2023-02-22T19:16:08Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 9.8,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "24.7"
      },
      "VulnerableVersionRange": "\u003c 24.7"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "25.7"
      },
      "VulnerableVersionRange": "\u003e= 25.0, \u003c 25.7"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "26.7"
      },
      "VulnerableVersionRange": "\u003e= 26.0, \u003c 26.7"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "27.4"
      },
      "VulnerableVersionRange": "\u003e= 27.0, \u003c 27.4"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "28.2"
      },
      "VulnerableVersionRange": "\u003e= 28.0, \u003c 28.2"
    }
  ]
}