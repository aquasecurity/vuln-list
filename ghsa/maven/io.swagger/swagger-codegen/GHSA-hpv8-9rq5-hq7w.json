{
  "Severity": "MODERATE",
  "UpdatedAt": "2021-03-11T03:08:55Z",
  "Package": {
    "Ecosystem": "MAVEN",
    "Name": "io.swagger:swagger-codegen"
  },
  "Advisory": {
    "DatabaseId": 3385,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWhwdjgtOXJxNS1ocTd3",
    "GhsaId": "GHSA-hpv8-9rq5-hq7w",
    "References": [
      {
        "Url": "https://github.com/swagger-api/swagger-codegen/security/advisories/GHSA-hpv8-9rq5-hq7w"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2021-21364"
      },
      {
        "Url": "https://github.com/swagger-api/swagger-codegen/commit/35adbd552d5f99b3ff1e0e59da228becc85190f2"
      },
      {
        "Url": "https://github.com/advisories/GHSA-hpv8-9rq5-hq7w"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-hpv8-9rq5-hq7w"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2021-21364"
      }
    ],
    "Description": "### Impact\n\n**This vulnerability impacts generated code.** If this code was generated as a one-off occasion, not as a part of an automated CI/CD process, this code will remain vulnerable until fixed manually!\n\nOn Unix-Like systems, the system temporary directory is shared between all local users. When files/directories are created, the default `umask` settings for the process are respected. As a result, by default, most processes/apis will create files/directories with the permissions `-rw-r--r--` and `drwxr-xr-x` respectively, unless an API that explicitly sets safe file permissions is used.\n\n#### Java Code\n\nThe method `File.createTempFile` from the JDK is vulnerable to this local information disclosure vulnerability.\n\n- https://github.com/swagger-api/swagger-codegen/blob/068b1ebcb7b04a48ad38f1cadd24bb3810c9f1ab/modules/swagger-codegen/src/main/resources/kotlin-client/infrastructure/ApiClient.kt.mustache#L209\n- https://github.com/swagger-api/swagger-codegen/blob/068b1ebcb7b04a48ad38f1cadd24bb3810c9f1ab/modules/swagger-codegen/src/main/resources/finch/api.mustache#L84\n- https://github.com/swagger-api/swagger-codegen/blob/068b1ebcb7b04a48ad38f1cadd24bb3810c9f1ab/modules/swagger-codegen/src/main/resources/Java/libraries/okhttp-gson/ApiClient.mustache#L831-L834\n- https://github.com/swagger-api/swagger-codegen/blob/068b1ebcb7b04a48ad38f1cadd24bb3810c9f1ab/modules/swagger-codegen/src/main/resources/Java/libraries/jersey2/ApiClient.mustache#L630-L633\n\n### Patches\n\nFix has been applied to the master branch with:\n\n* https://github.com/swagger-api/swagger-codegen/commit/35adbd552d5f99b3ff1e0e59da228becc85190f2\n\nincluded in release: 2.4.19\n\n\n### Workarounds\n\nUsers can remediate the vulnerability in non patched version by manually (or programmatically e.g. in CI) updating the generated source code to use `java.nio.files.Files` temporary file creation instead of `java.io.File`, e.g. by changing\n\n```java\n\n    if (tempFolderPath == null)\n      return File.createTempFile(prefix, suffix);\n    else\n      return File.createTempFile(prefix, suffix, new File(tempFolderPath));\n\n```\n\nto \n\n```java\n\n    if (tempFolderPath == null)\n      return Files.createTempFile(prefix, suffix).toFile();\n    else\n      return Files.createTempFile(Paths.get(tempFolderPath), prefix, suffix).toFile();\n\n```\n\nor generally changing:\n\n```java\n\nFile.createTempFile(prefix, suffix);\n\n```\n\nto \n\n```java\n\nFiles.createTempFile(prefix, suffix).toFile();\n\n```\n\n### References\n\n* [CWE-378: Creation of Temporary File With Insecure Permissions](https://cwe.mitre.org/data/definitions/378.html)\n* [CWE-200: Exposure of Sensitive Information to an Unauthorized Actor](https://cwe.mitre.org/data/definitions/200.html)\n* [CWE-732: Incorrect Permission Assignment for Critical Resource](https://cwe.mitre.org/data/definitions/732.html)\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n* Email us at [security@swagger.io](mailto:security@swagger.io)\n\n#### Original vulnerability report\n\n\u003e I'm performing OSS security research under the GitHub Security Lab Bug Bounty program.\n\u003e I've been using a custom CodeQL query to find local temporary directory vulnerabilities in OSS with three custom CodeQL queries.\n\u003e \n\u003e - https://github.com/github/codeql/pull/4388/files#diff-71d36c0f2bd0b08e32866f873f1c906cdc17277e0ad327c0c6cd2c882f30de4f\n\u003e - https://github.com/github/codeql/pull/4388/files#diff-1893a18a8bf43c011d61a7889d0139b998a5a78701a30fe7722eddd4c506aaac\n\u003e - https://github.com/github/codeql/pull/4473\n\u003e \n\u003e The code generated by the Swagger Generator contains a local information disclosure vulnerability. The system temporary directory, on unix-like systems is shared between multiple users. Information written to this directory, or directories created under this directory that do not correctly set the posix standard permissions can have these directories read/modified by other users.\n\u003e \n\u003e ---\n\u003e \n\u003e This code exists in the code generator, in the generated code.\n\u003e \n\u003e In this case, I believe this is only a local information disclosure. IE. another user can read the information, not replace it.\n\u003e \n\u003e In particular, the method `File.createTempFile` from the JDK is vulnerable to this local information disclosure vulnerability.\n\u003e \n\u003e This is because `File.createTempFile` creates a file inside of the system temporary directory with the permissions: `-rw-r--r--`. Thus the contents of this file are viewable by all other users locally on the system.\n\u003e \n\u003e - https://github.com/swagger-api/swagger-codegen/blob/068b1ebcb7b04a48ad38f1cadd24bb3810c9f1ab/modules/swagger-codegen/src/main/resources/kotlin-client/infrastructure/ApiClient.kt.mustache#L209\n\u003e - https://github.com/swagger-api/swagger-codegen/blob/068b1ebcb7b04a48ad38f1cadd24bb3810c9f1ab/modules/swagger-codegen/src/main/resources/finch/api.mustache#L84\n\u003e - https://github.com/swagger-api/swagger-codegen/blob/068b1ebcb7b04a48ad38f1cadd24bb3810c9f1ab/modules/swagger-codegen/src/main/resources/Java/libraries/okhttp-gson/ApiClient.mustache#L831-L834\n\u003e - https://github.com/swagger-api/swagger-codegen/blob/068b1ebcb7b04a48ad38f1cadd24bb3810c9f1ab/modules/swagger-codegen/src/main/resources/Java/libraries/jersey2/ApiClient.mustache#L630-L633\n\u003e \n\u003e The fix here is to switch to the `Files` API, instead of `File` as that appropriately sets the file permissions.\n\u003e ",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2021-03-11T03:09:18Z",
    "Severity": "MODERATE",
    "Summary": "Generated Code Contains Local Information Disclosure Vulnerability",
    "UpdatedAt": "2023-01-29T05:06:34Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 6.2,
      "VectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "2.4.19"
      },
      "VulnerableVersionRange": "\u003c 2.4.19"
    }
  ]
}