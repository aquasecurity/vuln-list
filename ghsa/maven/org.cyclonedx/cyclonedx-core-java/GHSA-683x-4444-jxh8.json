{
  "Severity": "HIGH",
  "UpdatedAt": "2024-06-24T20:44:49Z",
  "Package": {
    "Ecosystem": "MAVEN",
    "Name": "org.cyclonedx:cyclonedx-core-java"
  },
  "Advisory": {
    "DatabaseId": 251148,
    "Id": "GSA_kwCzR0hTQS02ODN4LTQ0NDQtanhoOM4AA9UM",
    "GhsaId": "GHSA-683x-4444-jxh8",
    "References": [
      {
        "Url": "https://github.com/CycloneDX/cyclonedx-core-java/security/advisories/GHSA-683x-4444-jxh8"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-38374"
      },
      {
        "Url": "https://github.com/CycloneDX/cyclonedx-core-java/pull/434"
      },
      {
        "Url": "https://github.com/CycloneDX/cyclonedx-core-java/pull/434/commits/ab0bc9c530d24f737970dbd0287d1190b129853d"
      },
      {
        "Url": "https://github.com/advisories/GHSA-683x-4444-jxh8"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-683x-4444-jxh8"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-38374"
      }
    ],
    "Description": "### Impact\n\nBefore deserializing CycloneDX Bill of Materials in XML format, _cyclonedx-core-java_ leverages XPath expressions to determine the schema version of the BOM. The `DocumentBuilderFactory` used to evaluate XPath expressions was not configured securely, making the library vulnerable to XML External Entity (XXE) injection.\n\nXXE injection can be exploited to exfiltrate local file content, or perform Server Side Request Forgery (SSRF) to access infrastructure adjacent to the vulnerable application.\n\n### PoC\n\n```java\nimport org.cyclonedx.parsers.XmlParser;\n\nclass Poc {\n\n    public static void main(String[] args) {\n        // Will throw org.cyclonedx.exception.ParseException: java.net.ConnectException: Connection refused\n        new XmlParser().parse(\"\"\"\n            \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n            \u003c!DOCTYPE bom [\u003c!ENTITY % sp SYSTEM \"https://localhost:1010/does-not-exist/file.dtd\"\u003e %sp;]\u003e\n            \u003cbom xmlns=\"http://cyclonedx.org/schema/bom/1.5\"/\u003e\n            \"\"\".getBytes());\n    }\n\n}\n```\n\n### Patches\n\nThe vulnerability has been fixed in _cyclonedx-core-java_ version 0.9.4.\n\n### Workarounds\n\nIf feasible, applications can reject XML documents before handing them to _cyclonedx-core-java_ for parsing.\nThis may be an option if incoming CycloneDX BOMs are known to be in JSON format.\n\n### References\n\n* Issue was fixed via \u003chttps://github.com/CycloneDX/cyclonedx-core-java/pull/434\u003e\n* Issue was introduced via \u003chttps://github.com/CycloneDX/cyclonedx-core-java/commit/162aa594f347b3f612fe0a45071693c3cd398ce9\u003e\n* \u003chttps://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing\u003e\n* \u003chttps://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html#xpathexpression\u003e\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-06-24T20:44:48Z",
    "Severity": "HIGH",
    "Summary": "Improper Restriction of XML External Entity Reference in org.cyclonedx:cyclonedx-core-java",
    "UpdatedAt": "2024-06-28T18:58:51Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.5,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "9.0.4"
      },
      "VulnerableVersionRange": "\u003e= 2.1.0, \u003c 9.0.4"
    }
  ]
}