{
  "Severity": "HIGH",
  "UpdatedAt": "2024-03-08T20:56:22Z",
  "Package": {
    "Ecosystem": "MAVEN",
    "Name": "org.clojure:clojure"
  },
  "Advisory": {
    "DatabaseId": 236095,
    "Id": "GSA_kwCzR0hTQS12cjY0LXI5cWotaDI3Zs4AA5o_",
    "GhsaId": "GHSA-vr64-r9qj-h27f",
    "References": [
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-22871"
      },
      {
        "Url": "https://hackmd.io/%40fe1w0/rymmJGida"
      },
      {
        "Url": "https://clojure.atlassian.net/browse/CLJ-2839"
      },
      {
        "Url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/SWWK2SO2MH4SXPO6L444MM6LHVLVFULV"
      },
      {
        "Url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/25FKUOYXQZGGJMFUM5HJABWMIX2TILRV"
      },
      {
        "Url": "https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/YFPGUDXMW6OXKIDGCOZFEAXO74VQIB2T"
      },
      {
        "Url": "https://github.com/advisories/GHSA-vr64-r9qj-h27f"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-vr64-r9qj-h27f"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-22871"
      }
    ],
    "Description": "Any program on the JVM may read serialized objects via [java.io.ObjectInputStream.readObject()](https://docs.oracle.com/javase/8/docs/api/java/io/ObjectInputStream.html#readObject--). Reading serialized objects from an untrusted source is **inherently unsafe** (this affects any program running on any version of the JVM) and is a prerequisite for this vulnerability.\n\nClojure classes that represent infinite seqs (Cycle, infinite Repeat, and Iterate) do not define hashCode() and use the parent ASeq.hashCode(), which walks the seq to compute the hash, yielding an infinite loop. Classes like java.util.HashMap call hashCode() on keys during deserialization of a serialized map. \n\nThe exploit requires:\n\n1. Crafting a serialized HashMap object with an infinite seq object as a key.\n2. Sending that to a program that reads serialized objects via ObjectInputStream.readObject().\n\nThis will cause the program to enter an infinite loop on the reading thread and thus a denial of service (DoS). \n\nThe affected Clojure classes (Cycle, Repeat, Iterate) exist in Clojure 1.7.0-1.11.1, 1.12.0-alpha1-1.12.0-alpha8.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-02-29T03:33:18Z",
    "Severity": "HIGH",
    "Summary": "Reading specially crafted serializable objects from an untrusted source may cause an infinite loop and denial of service",
    "UpdatedAt": "2024-08-13T21:57:28Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.5,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.12.0-alpha9"
      },
      "VulnerableVersionRange": "\u003e= 1.12.0-alpha1, \u003c 1.12.0-alpha9"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "1.11.2"
      },
      "VulnerableVersionRange": "\u003e= 1.7.0, \u003c 1.11.2"
    }
  ]
}