{
  "Severity": "LOW",
  "UpdatedAt": "2025-10-22T19:41:52Z",
  "Package": {
    "Ecosystem": "MAVEN",
    "Name": "org.sakaiproject.kernel:sakai-kernel-impl"
  },
  "Advisory": {
    "DatabaseId": 318377,
    "Id": "GSA_kwCzR0hTQS1ncjdoLXh3NGYtd2g4Ns4ABNup",
    "GhsaId": "GHSA-gr7h-xw4f-wh86",
    "References": [
      {
        "Url": "https://github.com/sakaiproject/sakai/security/advisories/GHSA-gr7h-xw4f-wh86"
      },
      {
        "Url": "https://github.com/advisories/GHSA-gr7h-xw4f-wh86"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-gr7h-xw4f-wh86"
      }
    ],
    "Description": "### Impact\nEncryptionUtilityServiceImpl initialized an AES256TextEncryptor password (serverSecretKey) using RandomStringUtils with the default java.util.Random. java.util.Random is a non‑cryptographic PRNG and can be predicted from limited state/seed information (e.g., start time window), substantially reducing the effective search space of the generated key. An attacker who can obtain ciphertexts (e.g., exported or at‑rest strings protected by this service) and approximate the PRNG seed can feasibly reconstruct the serverSecretKey and decrypt affected data.\n\n### Patches\nSAK-49866 is patched in Sakai 23.5, 25.0, and trunk. \n\n### Credits\n- Reported by [Suraj Gangwar](https://www.linkedin.com/in/surajgangwar?trk=contact-info).\n- Patched by Sam Ottenhoff (Longsight).",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-10-22T19:41:49Z",
    "Severity": "LOW",
    "Summary": "Sakai kernel-impl: predictable PRNG used to generate server‑side encryption key in EncryptionUtilityServiceImpl",
    "UpdatedAt": "2025-10-22T19:41:52Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 2.6,
      "VectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": ""
      },
      "VulnerableVersionRange": "\u003c= 23.3"
    }
  ]
}