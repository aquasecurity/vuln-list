{
  "Severity": "MODERATE",
  "UpdatedAt": "2025-05-13T20:02:24Z",
  "Package": {
    "Ecosystem": "COMPOSER",
    "Name": "getkirby/kirby"
  },
  "Advisory": {
    "DatabaseId": 294099,
    "Id": "GSA_kwCzR0hTQS1mdzgyLTg3cDgtdjZocM4ABHzT",
    "GhsaId": "GHSA-fw82-87p8-v6hp",
    "References": [
      {
        "Url": "https://github.com/getkirby/kirby/security/advisories/GHSA-fw82-87p8-v6hp"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-30159"
      },
      {
        "Url": "https://github.com/getkirby/kirby/commit/90acf7ed6d8d9d0697f938edc0940b4a563ddbe7"
      },
      {
        "Url": "https://github.com/getkirby/kirby/releases/tag/3.10.1.2"
      },
      {
        "Url": "https://github.com/getkirby/kirby/releases/tag/3.9.8.3"
      },
      {
        "Url": "https://github.com/getkirby/kirby/releases/tag/4.7.1"
      },
      {
        "Url": "https://github.com/advisories/GHSA-fw82-87p8-v6hp"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-fw82-87p8-v6hp"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-30159"
      }
    ],
    "Description": "### TL;DR\n\nThis vulnerability affects all Kirby sites that use the `snippet()` helper or `$kirby-\u003esnippet()` method with a dynamic snippet name (such as a snippet name that depends on request or user data).\n\nSites that only use fixed calls to the `snippet()` helper/`$kirby-\u003esnippet()` method (i.e. calls with a simple string for the snippet name) are *not* affected.\n\n----\n\n### Introduction\n\nKirby's `snippet()` helper and `$kirby-\u003esnippet()` method (in the following abbreviated to the `snippet()` helper) allow to load PHP snippet files that are normally stored in the `site/snippets` folder or registered by plugins through the `snippets` plugin extension.\n\nIf the `snippet()` helper is called with an arbitrary snippet name, Kirby first checks if a file with this name exists in the snippets root (which defaults to `site/snippets`).\n\nThis logic was vulnerable against path traversal attacks. By using special elements such as `..` and `/` separators, attackers can escape outside of the restricted location to access files or directories that are elsewhere on the system. One of the most common special elements is the `../` sequence, which in most modern operating systems is interpreted as the parent directory of the current location.\n\nBecause Kirby's `snippet()` helper did not protect against path traversal, the provided snippet name could include special sequences that would cause Kirby to look outside of the configured snippets root and access arbitrary files.\n\n### Impact\n\nThe missing path traversal check allowed attackers to navigate and access all files on the server that were accessible to the PHP process, including files outside of the snippets root or even outside of the Kirby installation. PHP code within such files was executed.\n\nSuch attacks first require an attack vector in the site code that is caused by dynamic snippet names, such as `snippet('tags-' . get('tags'))`. It generally also requires knowledge of the site structure and the server's file system by the attacker, although it can be possible to find vulnerable setups through automated methods such as fuzzing.\n\nIn a vulnerable setup, this could cause damage to the confidentiality and integrity of the server, for example:\n\n- it could allow the attacker to build a map of the server's file system for subsequent attacks,\n- it could allow access to configuration files that may contain sensitive information like security tokens or\n- it could cause the unintended execution of PHP scripts.\n\n### Patches\n\nThe problem has been patched in [Kirby 3.9.8.3](https://github.com/getkirby/kirby/releases/tag/3.9.8.3), [Kirby 3.10.1.2](https://github.com/getkirby/kirby/releases/tag/3.10.1.2) and [Kirby 4.7.1](https://github.com/getkirby/kirby/releases/tag/4.7.1). Please update to one of these or a [later version](https://github.com/getkirby/kirby/releases) to fix the vulnerability.\n\nIn all of the mentioned releases, we have added a check for the snippet path that ensures that the resulting path is contained within the configured snippets root. Snippet paths that point outside of the snippets root will not be loaded.\n\n### Effects on site code\n\nIf you deliberately use path traversal in your projects, these uses will break after updating to one of the patched versions.\n\nExamples of such uses include:\n\n- Aliasing a template by loading another template with `snippet('../templates/other-template')`. Robust alternatives are to use `require __DIR__ . '/other-template.php'` or to override the `$page-\u003etemplate()` method in the page model:\n  ```php\n  class AnotherPage extends Page\n  {\n    public function template(): Template\n    {\n      return $this-\u003ekirby()-\u003etemplate('other-template');\n    }\n  }\n  ```\n- Loading a snippet from a shared directory in a multisite setup. A robust alternative is to restructure the project so that all sites share a single snippets root that then branches off into subdirectories for each site. If you prefer to keep the original structure, you can use symbolic links (symlinks) in the file system to include the shared directory in the site-specific snippets roots.\n\n### Credits\n\nThanks to Bruno Meilick (@bnomei) for reporting the identified issue.\nThanks to Bruno Meilick and Tobias MÃ¶ritz (@tobimori) for their input on the effects on site code.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-05-13T20:02:23Z",
    "Severity": "MODERATE",
    "Summary": "Kirby vulnerable to path traversal of snippet names in the `snippet()` helper",
    "UpdatedAt": "2025-05-13T20:02:24Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "4.7.1"
      },
      "VulnerableVersionRange": "\u003e= 4.0.0, \u003c 4.7.1"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "3.10.1.2"
      },
      "VulnerableVersionRange": "\u003e= 3.10.0, \u003c 3.10.1.2"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "3.9.8.3"
      },
      "VulnerableVersionRange": "\u003c 3.9.8.3"
    }
  ]
}