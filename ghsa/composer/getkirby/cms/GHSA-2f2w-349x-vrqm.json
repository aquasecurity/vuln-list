{
  "Severity": "HIGH",
  "UpdatedAt": "2021-07-02T16:38:11Z",
  "Package": {
    "Ecosystem": "COMPOSER",
    "Name": "getkirby/cms"
  },
  "Advisory": {
    "DatabaseId": 4865,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTJmMnctMzQ5eC12cnFt",
    "GhsaId": "GHSA-2f2w-349x-vrqm",
    "References": [
      {
        "Url": "https://github.com/getkirby/kirby/security/advisories/GHSA-2f2w-349x-vrqm"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2021-32735"
      },
      {
        "Url": "https://github.com/getkirby/kirby/releases/tag/3.5.7"
      },
      {
        "Url": "https://github.com/getkirby/kirby/commit/f5ead62f8510158bed5baf58ca0e851875778a09"
      },
      {
        "Url": "https://github.com/advisories/GHSA-2f2w-349x-vrqm"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-2f2w-349x-vrqm"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2021-32735"
      }
    ],
    "Description": "On Saturday, @hdodov reported that the Panel's `ListItem` component (used in the pages and files section for example) displayed HTML in page titles as it is. This could be used for cross-site scripting (XSS) attacks.\n\nWe used his report as an opportunity to find and fix XSS issues related to dynamic site content throughout the Panel codebase.\n\n### Impact\n\nCross-site scripting (XSS) is a type of vulnerability that allows to execute any kind of JavaScript code inside the Panel session of other users. In the Panel, a harmful script can for example trigger requests to Kirby's API with the permissions of the victim.\n\nSuch vulnerabilities are critical if you might have potential attackers in your group of authenticated Panel users. They can escalate their privileges if they get access to the Panel session of an admin user. Depending on your site, other JavaScript-powered attacks are possible.\n\nVisitors without Panel access can only use this attack vector if your site allows changing site data from a frontend form (for example user self-registration or the creation of pages from a contact or other frontend form). If you validate or sanitize the provided form data, you are already protected against such attacks by external visitors.\n\n### Patches\n\n[Kirby 3.5.7](https://github.com/getkirby/kirby/releases/tag/3.5.7) contains patches for the following issues we found during our investigation:\n\n- Some translated error and info messages contain placeholders to dynamically insert information like page titles or filenames. While the translation strings are allowed to contain HTML formatting, the dynamic data needs to beÂ protected against XSS attacks. Kirby 3.5.7 now escapes the dynamic data.\n- Our `Box` component used to display information for the user supports HTML output for specific use-cases. We found out that the dialogs used in the `files`, `pages` and `users` fields as well as the `fields` section used it to display raw exception or error messages. These messages are now escaped.\n- The users and settings views display user and language data using the `ListItem` component that supports HTML. We now escape the dynamic data before it is passed to the `ListItem` component.\n- Some of our sections and fields support HTML for their `text`, `help` and/or `info` properties. This allows custom formatting from the blueprint, but also caused the original issue reported to us that allowed to inject HTML code from the content itself. Kirby 3.5.7 now escapes the default `text` displayed by the `files` and `pages` sections (filename/page title), the `files`, `pages` and `users` fields (filename/page title/username) and by query-based `checkboxes`, `radio`, `tags` and `multiselect` fields (default text depending on the used query).\n\n**Note:** Custom `text`, `help` and `info` queries in blueprints are *not* escaped in 3.5.7. We support HTML in these properties because there are valid use-cases for custom formatting. However there can still be XSS vulnerabilities depending on your use of these properties. In Kirby 3.6 we will provide a new feature that will make it much easier to control whether you want to allow HTML from query placeholders.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2021-07-02T19:18:43Z",
    "Severity": "HIGH",
    "Summary": "Cross-site scripting (XSS) from field and configuration text displayed in the Panel",
    "UpdatedAt": "2023-04-14T19:24:30Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.1,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:L/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "3.5.7"
      },
      "VulnerableVersionRange": "\u003c= 3.5.6"
    }
  ]
}