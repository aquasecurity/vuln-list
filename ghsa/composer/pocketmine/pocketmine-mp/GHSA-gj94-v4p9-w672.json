{
  "Severity": "MODERATE",
  "UpdatedAt": "2022-05-25T22:34:01Z",
  "Package": {
    "Ecosystem": "COMPOSER",
    "Name": "pocketmine/pocketmine-mp"
  },
  "Advisory": {
    "DatabaseId": 176964,
    "Id": "GSA_kwCzR0hTQS1najk0LXY0cDktdzY3Ms4AArNE",
    "GhsaId": "GHSA-gj94-v4p9-w672",
    "References": [
      {
        "Url": "https://github.com/pmmp/PocketMine-MP/security/advisories/GHSA-gj94-v4p9-w672"
      },
      {
        "Url": "https://github.com/advisories/GHSA-gj94-v4p9-w672"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-gj94-v4p9-w672"
      }
    ],
    "Description": "### Impact\nPocketMine-MP caps maximum chat message length at 512 Unicode characters, or about 2048 bytes. No more than 2 chat messages may be sent per tick. However, due to legacy reasons, incoming chat message blobs are split by `\\n`, and each part is treated as a separate message, the length of each part is individually checked. The length of the whole message is not checked.\n\nThis leads to an exploitable performance issue, in which a malicious client may send a chat packet of several megabytes containing nothing but `\\n` newline characters. The server will parse this into a very large array and spend a long time (several milliseconds) iterating over it for no reason.\n\nFurthermore, due to the lack of sufficient rate limit checks before parsing messages, malicious clients may bombard the server with many thousands of these malicious messages, causing lockups for a significant amount of time (seconds or minutes).\n\n### Patches\nThis bug was addressed in https://github.com/pmmp/PocketMine-MP/commit/df33e179e5d3ff13b56a2d7060bf592b0f797258 by:\n- checking the length of the incoming message as a whole before parsing it - it may not be larger than `messageCounter * maxChatMessageSize` (`messageCounter` is decremented once for every message sent)\n- limiting the maximum number of times a message may be split on newlines before giving up and discarding the message (maximum 3 parts; anything after the first 2 parts is discarded)\n\n### Workarounds\nHandle `DataPacketReceiveEvent` and check for these excessive newlines in incoming `TextPacket`.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [team@pmmp.io](mailto:team@pmmp.io)\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2022-05-25T22:34:01Z",
    "Severity": "MODERATE",
    "Summary": "Denial-of-service vulnerability processing large chat messages containing many newlines",
    "UpdatedAt": "2023-01-11T05:06:46Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 5.3,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "4.2.10"
      },
      "VulnerableVersionRange": "\u003c 4.2.10"
    }
  ]
}