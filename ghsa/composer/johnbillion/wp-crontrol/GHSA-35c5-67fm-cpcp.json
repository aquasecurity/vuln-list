{
  "Severity": "MODERATE",
  "UpdatedAt": "2025-08-19T20:41:11Z",
  "Package": {
    "Ecosystem": "COMPOSER",
    "Name": "johnbillion/wp-crontrol"
  },
  "Advisory": {
    "DatabaseId": 308100,
    "Id": "GSA_kwCzR0hTQS0zNWM1LTY3Zm0tY3BjcM4ABLOE",
    "GhsaId": "GHSA-35c5-67fm-cpcp",
    "References": [
      {
        "Url": "https://github.com/johnbillion/wp-crontrol/security/advisories/GHSA-35c5-67fm-cpcp"
      },
      {
        "Url": "https://github.com/johnbillion/wp-crontrol/commit/b085bd306588d7a9baed82de37f9d1818deafc44"
      },
      {
        "Url": "https://github.com/johnbillion/wp-crontrol/releases/tag/1.19.2"
      },
      {
        "Url": "https://github.com/advisories/GHSA-35c5-67fm-cpcp"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-35c5-67fm-cpcp"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-8678"
      }
    ],
    "Description": "### Impact\n\nThe WP Crontrol plugin for WordPress is vulnerable to Blind Server-Side Request Forgery in versions 1.17.0 to 1.19.1 via the `wp_remote_request()` function. This makes it possible for authenticated attackers, with Administrator-level access and above, to make web requests to arbitrary locations originating from the web application and can be used to query and modify information from internal services.\n\nIt is not possible for a user without Administrator level access to exploit this weakness. It is not possible for an Administrator performing an attack to see the HTTP response to the request to their chosen URL, nor is it possible for them to time the response.\n\n### Patches\n\nWP Crontrol version 1.19.2 makes the following changes to harden the URL cron event feature:\n\n* URLs are now validated for safety with the `wp_http_validate_url()` function upon saving. The user is informed if they save a cron event containing a URL that is not considered safe, and the HTTP request will not trigger when the event runs.\n* HTTP requests are now performed via the `wp_safe_remote_request()` function in place of `wp_remote_request()`. This prevents an SSRF being performed.\n\n### Workarounds\n\nUpdate the WP Crontrol plugin for WordPress to version 1.19.2 or later. If you are not able to update immediately, remove any Administrator level users who are not fully trusted.\n\n### FAQ\n\n#### Is my site at risk?\n\nYour site is only at risk if an untrustworthy Administrator on your site decides to exploit this weakness in order to blindly send HTTP requests, either to external URLs or to internal services running on your server. These requests can only be performed asynchronously, which means the HTTP response cannot be seen nor timed, which significantly restricts the practical methods of exploiting this weakness.\n\nSeparately, it is not possible for an attacker with database level access on your server to tamper with a URL cron event and perform an SSRF due to [the anti-tampering measures built in to WP Crontrol](https://wp-crontrol.com/docs/url-cron-events/).\n\n### Thanks\n\nThis issue was identified by [Jonas Benjamin Friedli](https://github.com/jFriedli) and reported to the Wordfence Intelligence Bug Bounty Program.\n\n[Security bugs should be reported through the official WP Crontrol Vulnerability Disclosure Program on Patchstack](https://patchstack.com/database/vdp/wp-crontrol). The Patchstack team helps validate, triage, and handle any security vulnerabilities.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-08-19T20:41:10Z",
    "Severity": "MODERATE",
    "Summary": "WP Crontrol Authenticated (Administrator+) plugin vulnerable to Blind Server-Side Request Forgery",
    "UpdatedAt": "2025-08-19T20:41:11Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.19.2"
      },
      "VulnerableVersionRange": "\u003e= 1.17.0, \u003c 1.19.2"
    }
  ]
}