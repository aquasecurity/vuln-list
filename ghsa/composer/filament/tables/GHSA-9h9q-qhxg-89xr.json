{
  "Severity": "CRITICAL",
  "UpdatedAt": "2024-09-27T20:51:02Z",
  "Package": {
    "Ecosystem": "COMPOSER",
    "Name": "filament/tables"
  },
  "Advisory": {
    "DatabaseId": 261529,
    "Id": "GSA_kwCzR0hTQS05aDlxLXFoeGctODl4cs4AA_2Z",
    "GhsaId": "GHSA-9h9q-qhxg-89xr",
    "References": [
      {
        "Url": "https://github.com/filamentphp/filament/security/advisories/GHSA-9h9q-qhxg-89xr"
      },
      {
        "Url": "https://github.com/filamentphp/filament/commit/df7989352464d08eda5837ef50f9997fad902316"
      },
      {
        "Url": "https://github.com/filamentphp/filament/releases/tag/v3.2.115"
      },
      {
        "Url": "https://github.com/advisories/GHSA-9h9q-qhxg-89xr"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-9h9q-qhxg-89xr"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-47186"
      }
    ],
    "Description": "### Summary\n\nIf values passed to a `ColorColumn` or `ColumnEntry` are not valid and contain a specific set of characters, applications are vulnerable to XSS attack against a user who opens a page on which a color column or entry is rendered.\n\nVersions of Filament from v3.0.0 through v3.2.114 are affected.\n\nPlease upgrade to Filament [v3.2.115](https://github.com/filamentphp/filament/releases/tag/v3.2.115).\n\n### PoC\n\nFor example, using a value such as:\n\n```html\nblue;\"\u003e\u003cscript\u003ealert('There\\'s a security problem here')\u003c/script style=\"\n```\n\nWould get passed into the `@style()` Blade directive from Laravel to render the correct background color, where `$state` contains the value:\n\n```blade\n\u003cdiv @style([\n    \"background-color: {$state}\" =\u003e $state,\n])\u003e\u003c/div\u003e\n```\n\nSince Laravel does not escape special characters within the `@style` Blade directive, the effective output HTML would be:\n\n```html\n\u003cdiv style=\"background-color: blue;\"\u003e\u003cscript\u003ealert('There\\'s a security problem here')\u003c/script style=\"\"\u003e\u003c/div\u003e\n```\n\nCreating the opportunity for arbitrary JS to run if it was stored in the database.\n\n### Response\n\nThis vulnerability (in `ColorColumn` only) was reported by @sv-LayZ, who reported the issue and patched the issue during the evening of 25/09/2024. Thank you Mattis.\n\nThe review process concluded on 27/09/2024, which revealed the issue was also present in `ColorEntry`. This was fixed the same day and Filament [v3.2.115](https://github.com/filamentphp/filament/releases/tag/v3.2.115) followed to escape any special characters while outputting inline styles like this:\n\n```blade\n\u003cdiv @style([\n    'background-color: ' . e($state) =\u003e $state,\n])\u003e\u003c/div\u003e\n```\n\nAlthough these components are no longer vulnerable to this type of XSS attack, it is good practice to validate colors, and since many Filament users may be accepting color input using the `ColorPicker` form component, [additional color validation documentation was published](https://filamentphp.com/docs/3.x/forms/fields/color-picker#color-picker-validation).",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-09-27T20:51:01Z",
    "Severity": "CRITICAL",
    "Summary": "Filament has unvalidated ColorColumn and ColorEntry values that can be used for Cross-site Scripting",
    "UpdatedAt": "2024-10-23T17:40:45Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "3.2.115"
      },
      "VulnerableVersionRange": "\u003e= 3.0.0, \u003c 3.2.115"
    }
  ]
}