{
  "Severity": "HIGH",
  "UpdatedAt": "2023-11-06T16:33:29Z",
  "Package": {
    "Ecosystem": "COMPOSER",
    "Name": "foodcoopshop/foodcoopshop"
  },
  "Advisory": {
    "DatabaseId": 224813,
    "Id": "GSA_kwCzR0hTQS1qaHd3LWZ4MmotM3JmN84AA24t",
    "GhsaId": "GHSA-jhww-fx2j-3rf7",
    "References": [
      {
        "Url": "https://github.com/foodcoopshop/foodcoopshop/security/advisories/GHSA-jhww-fx2j-3rf7"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2023-46725"
      },
      {
        "Url": "https://github.com/foodcoopshop/foodcoopshop/pull/972"
      },
      {
        "Url": "https://github.com/foodcoopshop/foodcoopshop/commit/0d5bec5c4c22e1affe7fd321a30e3f3a4d99e808"
      },
      {
        "Url": "https://pastebin.com/8K5Brwbq"
      },
      {
        "Url": "https://github.com/advisories/GHSA-jhww-fx2j-3rf7"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-jhww-fx2j-3rf7"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2023-46725"
      }
    ],
    "Description": "There is a potential SSRF vulnerability in foodcoopshop. Since there is no security policy on your Github, I tried to use the emails to contact you.\n\nThe potential issue is in the Network module, where a manufacturer account can use the /api/updateProducts.json endpoint to make the server send a request to arbitrary host.\nFor example, use\n```\ndata[data][0][remoteProductId]=352\u0026data[data][0][image]=http://localhost:8888/\n```\nwill make the server send a request to localhost:8888. This means that it can be used as a proxy into the internal network where the server is.\n\nTo make matters worse, the checks on valid image is not enough. There is time of check time of use issue there.\nFor example, by using a custom server that returns 200 on HEAD requests, then return a valid image on first GET request and then a 302 redirect to final target on second GET request, the server will copy whatever file\nat the redirect destination, making this a full SSRF.\n(An example python server that can do this is at https://pastebin.com/8K5Brwbq This will make the server download whatever at the redirect target)\n\nYou can check https://cheatsheetseries.owasp.org/cheatsheets/Server_Side_Request_Forgery_Prevention_Cheat_Sheet.html for more information on SSRF, their impact and how to properly fix it.\n\nRegards",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2023-11-02T20:53:19Z",
    "Severity": "HIGH",
    "Summary": "FoodCoopShop Server-Side Request Forgery vulnerability",
    "UpdatedAt": "2023-11-09T21:59:55Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 8.1,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "3.6.1"
      },
      "VulnerableVersionRange": "\u003e= 3.2.0, \u003c 3.6.1"
    }
  ]
}