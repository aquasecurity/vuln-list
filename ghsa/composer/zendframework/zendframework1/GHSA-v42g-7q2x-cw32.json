{
  "Severity": "CRITICAL",
  "UpdatedAt": "2024-06-07T22:25:46Z",
  "Package": {
    "Ecosystem": "COMPOSER",
    "Name": "zendframework/zendframework1"
  },
  "Advisory": {
    "DatabaseId": 249107,
    "Id": "GSA_kwCzR0hTQS12NDJnLTdxMngtY3czMs4AA80T",
    "GhsaId": "GHSA-v42g-7q2x-cw32",
    "References": [
      {
        "Url": "https://framework.zend.com/security/advisory/ZF2015-08"
      },
      {
        "Url": "https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2015-08.yaml"
      },
      {
        "Url": "https://github.com/advisories/GHSA-v42g-7q2x-cw32"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-v42g-7q2x-cw32"
      }
    ],
    "Description": "The PDO adapters of Zend Framework 1 do not filter null bytes values in SQL statements. A PDO adapter can treat null bytes in a query as a string terminator, allowing an attacker to add arbitrary SQL following a null byte, and thus create a SQL injection.\n\nWe tested and verified the null byte injection using pdo_dblib (FreeTDS) on a Linux environment to access a remote Microsoft SQL Server, and also tested against and noted the vector against pdo_sqlite.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-06-07T22:25:43Z",
    "Severity": "CRITICAL",
    "Summary": "Zendframework1 potential SQL injection vector using null byte for PDO (MsSql, SQLite)",
    "UpdatedAt": "2024-06-07T22:25:46Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 9.8,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.12.16"
      },
      "VulnerableVersionRange": "\u003e= 1.12.0, \u003c 1.12.16"
    }
  ]
}