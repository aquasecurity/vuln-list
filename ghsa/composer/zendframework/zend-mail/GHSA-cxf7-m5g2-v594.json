{
  "Severity": "HIGH",
  "UpdatedAt": "2024-06-07T21:19:24Z",
  "Package": {
    "Ecosystem": "COMPOSER",
    "Name": "zendframework/zend-mail"
  },
  "Advisory": {
    "DatabaseId": 249072,
    "Id": "GSA_kwCzR0hTQS1jeGY3LW01ZzItdjU5NM4AA8zw",
    "GhsaId": "GHSA-cxf7-m5g2-v594",
    "References": [
      {
        "Url": "https://github.com/zendframework/zend-mail/commit/0a92d0b3a8b7d7c7659aa569f1a66a23d4ad51af"
      },
      {
        "Url": "https://github.com/zendframework/zend-mail/commit/7260c9768bf27c84f994c48698493fd1fa62fca3"
      },
      {
        "Url": "https://github.com/zendframework/zend-mail/commit/8d18478b40fdeef7239fb7ea203e072edcadbe54"
      },
      {
        "Url": "https://framework.zend.com/security/advisory/ZF2016-04"
      },
      {
        "Url": "https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zend-mail/ZF2016-04.yaml"
      },
      {
        "Url": "https://github.com/advisories/GHSA-cxf7-m5g2-v594"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-cxf7-m5g2-v594"
      }
    ],
    "Description": "When using the zend-mail component to send email via the `Zend\\Mail\\Transport\\Sendmail` transport, a malicious user may be able to inject arbitrary parameters to the system sendmail program. The attack is performed by providing additional quote characters within an address; when unsanitized, they can be interpreted as additional command line arguments, leading to the vulnerability.\n\nThe following example demonstrates injecting additional parameters to the sendmail binary via the From address:\n```\nuse Zend\\Mail;\n\n$mail = new Mail\\Message();\n$mail-\u003esetBody('This is the text of the email.');\n\n// inject additional parameters to sendmail command line\n$mail-\u003esetFrom('\"AAA\\\" params injection\"@domain', 'Sender\\'s name');\n\n$mail-\u003eaddTo('hacker@localhost', 'Name of recipient');\n$mail-\u003esetSubject('TestSubject');\n\n$transport = new Mail\\Transport\\Sendmail();\n$transport-\u003esend($mail);\n```\nThe attack works because zend-mail filters the email addresses using the RFC 3696 specification, where the string \"AAA\\\" params injection\"@domain is considered a valid address. This validation is provided using the zend-validator component with the following parameters:\n```\nZend\\Validator\\EmailAddress(\n    Zend\\Validator\\Hostname::ALLOW_DNS | Zend\\Validator\\Hostname::ALLOW_LOCAL\n)\n```\nThe above accepts local domain with any string specified by double quotes as the local part. While this is valid per RFC 3696, due to the fact that sender email addresses are provided to the sendmail binary via the command line, they create the vulnerability described above.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-06-07T21:19:22Z",
    "Severity": "HIGH",
    "Summary": "Zend-Mail remote code execution in zend-mail via Sendmail adapter",
    "UpdatedAt": "2024-06-07T21:20:04Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 8.8,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "2.7.2"
      },
      "VulnerableVersionRange": "\u003e= 2.5.0, \u003c 2.7.2"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "2.4.11"
      },
      "VulnerableVersionRange": "\u003e= 2.0.0, \u003c 2.4.11"
    }
  ]
}