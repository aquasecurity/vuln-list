{
  "Severity": "MODERATE",
  "UpdatedAt": "2024-07-15T16:37:49Z",
  "Package": {
    "Ecosystem": "COMPOSER",
    "Name": "web-auth/webauthn-framework"
  },
  "Advisory": {
    "DatabaseId": 253528,
    "Id": "GSA_kwCzR0hTQS04NzV4LWc4cDctNXcyN84AA95Y",
    "GhsaId": "GHSA-875x-g8p7-5w27",
    "References": [
      {
        "Url": "https://github.com/web-auth/webauthn-framework/security/advisories/GHSA-875x-g8p7-5w27"
      },
      {
        "Url": "https://github.com/web-auth/webauthn-framework/commit/a9d1352897fba552e659e1445a771dec2d4ed05a"
      },
      {
        "Url": "https://github.com/web-auth/webauthn-lib/commit/b6798de27cdedd8681fe4c9b13ace0ff2456d18b"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-39912"
      },
      {
        "Url": "https://github.com/web-auth/webauthn-framework/commit/64de11f6cddc71e56c76e0cc4573bf94d02be045"
      },
      {
        "Url": "https://github.com/advisories/GHSA-875x-g8p7-5w27"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-875x-g8p7-5w27"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-39912"
      }
    ],
    "Description": "### Summary\n\nThe ProfileBasedRequestOptionsBuilder method returns allowedCredentials without any credentials if no username was found.\n\n### Details\n\nWhen WebAuthn is used as the first or only authentication method, an attacker can enumerate usernames based on the absence of the `allowedCredentials` property in the assertion options response. This allows enumeration of valid or invalid usernames.\n\n#### Proposal how to resolve it:\n \n```\nreturn $this-\u003epublicKeyCredentialRequestOptionsFactory-\u003ecreate(\n            $this-\u003eprofile,\n            count($allowedCredentials) \u003c= 0 ? self::getRandomCredentials(): $allowedCredentials,\n            $optionsRequest-\u003euserVerification,\n            $extensions\n);\n\nprivate static function getRandomCredentials(): array\n{\n        $credentialSources = [];\n        for ($i = 0; $i \u003c= rand(0,1); $i++) {\n            $credentialSources[] = new PublicKeyCredentialSource(\n                random_bytes(32),\n                \"public-key\",\n                [],\n                \"basic\",\n                new EmptyTrustPath(),\n                Uuid::v7(),\n                random_bytes(77),\n                Uuid::v7()-\u003e__toString(),\n                rand(0, 6000),\n                null\n            );\n        }\n        return array_map(\n            static fn (PublicKeyCredentialSource $credential): PublicKeyCredentialDescriptor =\u003e $credential-\u003egetPublicKeyCredentialDescriptor(),\n            $credentialSources\n        );\n}\n```\n\n### PoC\n\ncurl https://example.com/assertion/options \\\n  -H 'content-type: application/json' \\\n  --data-raw '{\"username\":\"NotMeRandomUsername123\"}'\n\n### Impact\n\nBy knowing which usernames are valid, attackers can focus their efforts on a smaller set of potential targets, increasing the efficiency and likelihood of successful attacks.\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-07-15T16:37:49Z",
    "Severity": "MODERATE",
    "Summary": "The FIDO2/Webauthn Support for PHP library allows enumeration of valid usernames ",
    "UpdatedAt": "2024-08-04T05:03:38Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 5.3,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "4.9.0"
      },
      "VulnerableVersionRange": "\u003e= 4.5.0, \u003c 4.9.0"
    }
  ]
}