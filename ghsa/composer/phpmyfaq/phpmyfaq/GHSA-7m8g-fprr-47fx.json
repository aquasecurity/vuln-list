{
  "Severity": "MODERATE",
  "UpdatedAt": "2024-02-05T20:22:07Z",
  "Package": {
    "Ecosystem": "COMPOSER",
    "Name": "phpmyfaq/phpmyfaq"
  },
  "Advisory": {
    "DatabaseId": 233763,
    "Id": "GSA_kwCzR0hTQS03bThnLWZwcnItNDdmeM4AA5Ej",
    "GhsaId": "GHSA-7m8g-fprr-47fx",
    "References": [
      {
        "Url": "https://github.com/thorsten/phpMyFAQ/security/advisories/GHSA-7m8g-fprr-47fx"
      },
      {
        "Url": "https://github.com/thorsten/phpMyFAQ/pull/2827"
      },
      {
        "Url": "https://github.com/thorsten/phpMyFAQ/commit/5479b4a4603cce71aa7eb4437f1c201153a1f1f5"
      },
      {
        "Url": "https://www.phpmyfaq.de/security/advisory-2024-02-05"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-24574"
      },
      {
        "Url": "https://github.com/advisories/GHSA-7m8g-fprr-47fx"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-7m8g-fprr-47fx"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-24574"
      }
    ],
    "Description": "### Summary\nUnsafe echo of filename in phpMyFAQ\\phpmyfaq\\admin\\attachments.php leading to allow execute JavaScript code in client side (XSS)\n\n### Details\nOn that snippet code of rendering the file attachments from user tables\n\n```\n\u003c?php foreach ($crumbs as $item) : ?\u003e\n        \u003ctr id=\"attachment_\u003c?= $item-\u003eid ?\u003e\" title=\"\u003c?= $item-\u003ethema ?\u003e\"\u003e\n          \u003ctd\u003e\u003c?= $item-\u003eid ?\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003c?= $item-\u003efilename ?\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003c?= $item-\u003erecord_lang ?\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003c?= Utils::formatBytes($item-\u003efilesize) ?\u003e\u003c/td\u003e\n          \u003ctd\u003e\u003c?= $item-\u003emime_type ?\u003e\u003c/td\u003e\n          \u003ctd\u003e\n```\n\nThe data directly rendering with short hand echo without any sanitation first, its recommend to use  existing class of `Strings::htmlentities` on use `phpMyFAQ\\Strings;`\n\n```\n\u003ctd\u003e\u003c?= Strings::htmlentities($item-\u003efilename); ?\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c?= Strings::htmlentities($item-\u003erecord_lang); ?\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c?= Utils::formatBytes($item-\u003efilesize) ?\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c?= Strings::htmlentities($item-\u003emime_type); ?\u003e\u003c/td\u003e\n```\n\nPropose fixing on that pull request https://github.com/thorsten/phpMyFAQ/pull/2827\n\n### PoC\n1. An attacker with permission will upload the attachments image on [http://{base_url}/admin/?action=editentry](http://{base_url}/admin/?action=editentry)\n2. On endpoint of ajax upload image POST /admin/index.php?action=ajax\u0026ajax=att\u0026ajaxaction=upload \n3. Change the originally name file on parameters  filename to a XSS payload \n4. The XSS will trigger on attachment pages /admin/?action=attachments\n\n- Trigger XSS\n![image](https://user-images.githubusercontent.com/37658579/301022211-81da265b-5dce-48bd-a043-8bae0991fe46.png)\n\n- Payload XSS\n\u003cimg width=\"1000\" alt=\"image\" src=\"https://user-images.githubusercontent.com/37658579/301022571-d6cdd166-b1f9-4062-87c5-c8bbb308cd5d.png\"\u003e\n\n\n\n\n### Impact\n\nThis vulnerability will allow an attacker with a permissions of uploading an attachment to storing the payload of XSS on database specific table `faqattachment` columns `filename.`\n\nThe XSS payload could be rendering on page that listing the file on tables, and impact to others user that on the hierarchy. \n\nThe payload XSS have several attack scenario such like \n\n1. Stealing the cookies (isnâ€™t possible since HttpOnly)\n2. Crashing the application with a looping javascript payload\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-02-05T20:22:05Z",
    "Severity": "MODERATE",
    "Summary": "phpMyFAQ vulnerable to stored XSS on attachments filename",
    "UpdatedAt": "2024-02-05T23:08:14Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 6.5,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:L"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "3.2.5"
      },
      "VulnerableVersionRange": "\u003c 3.2.5"
    }
  ]
}