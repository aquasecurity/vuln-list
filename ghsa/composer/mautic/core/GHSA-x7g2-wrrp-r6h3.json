{
  "Severity": "LOW",
  "UpdatedAt": "2021-08-30T18:02:41Z",
  "Package": {
    "Ecosystem": "COMPOSER",
    "Name": "mautic/core"
  },
  "Advisory": {
    "DatabaseId": 5468,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXg3ZzItd3JycC1yNmgz",
    "GhsaId": "GHSA-x7g2-wrrp-r6h3",
    "References": [
      {
        "Url": "https://github.com/mautic/mautic/security/advisories/GHSA-x7g2-wrrp-r6h3"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2021-27913"
      },
      {
        "Url": "https://github.com/mautic/mautic/commit/d1cad766a2de74e6c6b89d6d78c2a5f2e36ba91c"
      },
      {
        "Url": "https://github.com/advisories/GHSA-x7g2-wrrp-r6h3"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-x7g2-wrrp-r6h3"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2021-27913"
      }
    ],
    "Description": "## ‚úçÔ∏è Description\nThe function mt_rand is used to generate session tokens, this function is cryptographically flawed due to its nature being one pseudorandomness, an attacker can take advantage of the cryptographically insecure nature of this function to enumerate session tokens for accounts that are not under his/her control\n\n## üïµÔ∏è‚Äç‚ôÇÔ∏è Proof of Concept\nNumerous examples and attack implementations can be found in this paper . If you're looking for a practical tool that can crack your mt_rand implementation's seed value, see this project and run the following commands in a console with php5 and OpenWall's tool installed:\n\n`root$ php -r 'mt_srand(13333337); echo mt_rand( ), \"\\n\";'`\nAfter that, copy the output (1863134308) and execute the following commands:\n\n`root$ gcc php_mt_seed.c -o php_mt_seedroot$ ./php_mt_seed 1863134308`\nAfter waiting ~1 minute you should have a few possible seeds corresponding to their PHP versions, next to your installed PHP version you should see something akin to:\n\nseed = 0x00cb7359 = 13333337 (PHP 7.1.0+)\nHey, that's your seed!\n\n## üí• Impact\nAn attacker could takeover accounts at random by enumerating and using access tokens.\n\n## üìù References\n\n- https://openwall.com/php_mt_seedhttps://crypto.di.uoa.gr/CRYPTO.SEC/Randomness_Attacks_files/paper.pdf\n- https://github.com/mautic/mautic/blob/5213e320b4ef4d0c51bb84c1d46a1071e8e4f7fc/app/bundles/PointBundle/Controller/TriggerController.php#L187\n- https://github.com/mautic/mautic/releases/tag/3.3.4\n- https://github.com/mautic/mautic/releases/tag/4.0.0",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2021-09-01T18:41:06Z",
    "Severity": "LOW",
    "Summary": "Use of a Broken or Risky Cryptographic Algorithm",
    "UpdatedAt": "2023-05-01T22:18:03Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 3.5,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:N/A:L"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "3.3.4"
      },
      "VulnerableVersionRange": "\u003c 3.3.4"
    }
  ]
}