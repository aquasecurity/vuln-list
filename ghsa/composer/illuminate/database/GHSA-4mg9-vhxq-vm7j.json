{
  "Severity": "HIGH",
  "UpdatedAt": "2021-04-28T20:17:07Z",
  "Package": {
    "Ecosystem": "COMPOSER",
    "Name": "illuminate/database"
  },
  "Advisory": {
    "DatabaseId": 4011,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTRtZzktdmh4cS12bTdq",
    "GhsaId": "GHSA-4mg9-vhxq-vm7j",
    "References": [
      {
        "Url": "https://github.com/laravel/framework/security/advisories/GHSA-4mg9-vhxq-vm7j"
      },
      {
        "Url": "https://packagist.org/packages/illuminate/database"
      },
      {
        "Url": "https://packagist.org/packages/laravel/framework"
      },
      {
        "Url": "https://github.com/advisories/GHSA-4mg9-vhxq-vm7j"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-4mg9-vhxq-vm7j"
      }
    ],
    "Description": "### Impact\n\nThose using SQL Server with Laravel and allowing user input to be passed directly to the `limit` and `offset` functions are vulnerable to SQL injection. Other database drivers such as MySQL and Postgres are not affected by this vulnerability.\n\n### Patches\n\nThis problem has been patched on Laravel versions 6.20.26, 7.30.5, and 8.40.0.\n\n### Workarounds\n\nYou may workaround this vulnerability by ensuring that only integers are passed to the `limit` and `offset` functions, as well as the `skip` and `take` functions.\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2021-04-29T21:52:53Z",
    "Severity": "HIGH",
    "Summary": "SQL Server LIMIT / OFFSET SQL Injection in laravel/framework and illuminate/database",
    "UpdatedAt": "2023-01-09T05:04:39Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "6.20.26"
      },
      "VulnerableVersionRange": "\u003c 6.20.26"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "8.40.0"
      },
      "VulnerableVersionRange": "\u003e= 8.0.0, \u003c 8.40.0"
    }
  ]
}