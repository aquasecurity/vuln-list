{
  "Severity": "MODERATE",
  "UpdatedAt": "2023-01-11T23:54:47Z",
  "Package": {
    "Ecosystem": "COMPOSER",
    "Name": "phpxmlrpc/phpxmlrpc"
  },
  "Advisory": {
    "DatabaseId": 200356,
    "Id": "GSA_kwCzR0hTQS1tOTV4LW0yNWMtdzltcM4AAw6k",
    "GhsaId": "GHSA-m95x-m25c-w9mp",
    "References": [
      {
        "Url": "https://github.com/gggeek/phpxmlrpc/security/advisories/GHSA-m95x-m25c-w9mp"
      },
      {
        "Url": "https://github.com/gggeek/phpxmlrpc/issues/81"
      },
      {
        "Url": "https://github.com/gggeek/phpxmlrpc/commit/cf6e605e09d001ce520bfa8e7b168cfa514e663b"
      },
      {
        "Url": "https://github.com/advisories/GHSA-m95x-m25c-w9mp"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-m95x-m25c-w9mp"
      }
    ],
    "Description": "Abusing the `$method` argument of Client::send, it was possible to force the client to _access local files_ or _connect to undesired urls_ instead of the intended target server's url (the one used in the Client constructor).\n\nThis weakness only affects installations where all the following conditions apply, at the same time:\n\n- the xmlrpc Client is used, ie. not xmlrpc servers\n- untrusted data (eg. data from remote users) is used as value for the `$method` argument of method `Client::send()`, in conjunction with conditions which trigger usage of curl as http transport (ie. either using the https, http11 or http2 protocols, or calling `Client::setUseCurl()` beforehand)\n- either have set the Clients `return_type` property to 'xml', or make the resulting Response's object `httpResponse` member, which is intended to be used for debugging purposes only, available to 3rd parties, eg. by displaying it to the end user or serializing it in some storage (note that the same data can also be accessed via magic property `Response::raw_data`, and in the Request's `httpResponse` member)\n\nThis is most likely a very uncommon usage scenario, and as such the chances of exploitation of this issue may be low.\n\nIf it is not possible to upgrade to this release of the library at this time, a proactive security measure, to avoid the Client accessing any local file on the server which hosts it, is to add the following call to your code:\n\n      $client-\u003esetCurlOptions([CURLOPT_PROTOCOLS, CURLPROTO_HTTPS|CURLPROTO_HTTP]);\n\nOriginally reported as issue #81",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2023-01-11T23:54:47Z",
    "Severity": "MODERATE",
    "Summary": "XML-RPC for PHP allows access to local files via malicious argument to the Client::send method",
    "UpdatedAt": "2023-01-11T23:54:47Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "4.9.0"
      },
      "VulnerableVersionRange": "\u003c 4.9.0"
    }
  ]
}