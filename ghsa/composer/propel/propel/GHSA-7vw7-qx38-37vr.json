{
  "Severity": "CRITICAL",
  "UpdatedAt": "2024-05-20T17:34:34Z",
  "Package": {
    "Ecosystem": "COMPOSER",
    "Name": "propel/propel"
  },
  "Advisory": {
    "DatabaseId": 247155,
    "Id": "GSA_kwCzR0hTQS03dnc3LXF4MzgtMzd2cs4AA8Vz",
    "GhsaId": "GHSA-7vw7-qx38-37vr",
    "References": [
      {
        "Url": "https://github.com/propelorm/Propel2/issues/1463"
      },
      {
        "Url": "https://github.com/propelorm/Propel2/pull/1464"
      },
      {
        "Url": "https://github.com/propelorm/Propel2/commit/cd23d7384a15cfe203e23b3a835c8ab1d81d9246"
      },
      {
        "Url": "https://github.com/FriendsOfPHP/security-advisories/blob/master/propel/propel/2018-02-14.yaml"
      },
      {
        "Url": "https://github.com/advisories/GHSA-7vw7-qx38-37vr"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-7vw7-qx38-37vr"
      }
    ],
    "Description": "The limit() query method is susceptible to catastrophic SQL injection with MySQL.\n\nFor example, given a model User for a table users:\n```\nUserQuery::create()-\u003elimit('1;DROP TABLE users')-\u003efind();\n```\nThis will drop the users table!\n\nThe cause appears to be a lack of integer casting of the limit input in either Propel\\Runtime\\ActiveQuery\\Criteria::setLimit() or in Propel\\Runtime\\Adapter\\Pdo\\MysqlAdapter::applyLimit(). The code comments there seem to imply that casting was avoided due to overflow issues with 32-bit integers.\n\nThis is surprising behavior since one of the primary purposes of an ORM is to prevent basic SQL injection.\n\nThis affects all versions of Propel: 1.x, 2.x, and 3.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-05-20T17:34:33Z",
    "Severity": "CRITICAL",
    "Summary": "Propel2 SQL injection possible with limit() on MySQL",
    "UpdatedAt": "2024-05-20T17:34:34Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 9.8,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "2.0.0-alpha8"
      },
      "VulnerableVersionRange": "\u003e= 2.0.0-alpha1, \u003c= 2.0.0-alpha7"
    }
  ]
}