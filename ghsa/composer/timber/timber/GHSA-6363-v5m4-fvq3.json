{
  "Severity": "HIGH",
  "UpdatedAt": "2024-04-18T16:32:21Z",
  "Package": {
    "Ecosystem": "COMPOSER",
    "Name": "timber/timber"
  },
  "Advisory": {
    "DatabaseId": 241428,
    "Id": "GSA_kwCzR0hTQS02MzYzLXY1bTQtZnZxM84AA68U",
    "GhsaId": "GHSA-6363-v5m4-fvq3",
    "References": [
      {
        "Url": "https://github.com/timber/timber/security/advisories/GHSA-6363-v5m4-fvq3"
      },
      {
        "Url": "https://github.com/timber/timber/commit/13c6b0f60346304f2eed4da1e0bb51566518de4a"
      },
      {
        "Url": "https://github.com/timber/timber/issues/2971"
      },
      {
        "Url": "https://github.com/FriendsOfPHP/security-advisories/blob/master/timber/timber/CVE-2024-29800.yaml"
      },
      {
        "Url": "https://github.com/advisories/GHSA-6363-v5m4-fvq3"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-6363-v5m4-fvq3"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-29800"
      }
    ],
    "Description": "### Summary\nTimber is vulnerable to PHAR deserialization due to a lack of checking the input before passing it into the file_exists() function. If an attacker can upload files of any type to the server, he can pass in the phar:// protocol to unserialize the uploaded file and instantiate arbitrary PHP objects. This can lead to remote code execution especially when Timber is used with frameworks with documented POP chains like Wordpress/ vulnerable developer code.\n\n### Details\nThe vulnerability lies in the run function within the toJpg.php file. The two parameters passed into it are not checked or sanitized, hence an attacker could potentially inject malicious input leading to Deserialization of Untrusted Data, allowing for remote code execution:\n![image](https://github.com/timber/timber/assets/89630690/bcd6d031-33c6-4cc5-96b7-b72f0cf0e26c)\n\n### PoC\nSetup the following code in /var/www/html: vuln.php represents our use of Timber functions and phar-poc.php represents code with a vulnerable POP chain.\n![image](https://github.com/timber/timber/assets/89630690/967f0a16-3b7e-4b58-84cb-c1dee3291339)\n![image](https://github.com/timber/timber/assets/89630690/78bb98cf-0cd2-4635-aa01-a1eea571d0fc)\nAs an attacker, we generate our PHAR payload using the following exploit script:\n![image](https://github.com/timber/timber/assets/89630690/d823e76a-fb07-468e-aed1-97b304d53ee5)\nGenerate with:\n![image](https://github.com/timber/timber/assets/89630690/d3d57333-a113-468a-8b27-dc6bc1fca4e7)\nthen change extension file from .phar to valid extension as svg,jpg,...\n![image](https://github.com/timber/timber/assets/89630690/c4fdbd25-e828-4408-9feb-168f2e301d7a)\nand execute vuln.php with php vuln.php, you should see whoami being executed:\n![image](https://github.com/timber/timber/assets/89630690/e341de8d-555c-4390-86a1-469b11cf0ffc)\n![image](https://github.com/timber/timber/assets/89630690/17afdb95-10ed-4c52-a93d-95eb1f60a146)\n\n### Impact\nThis vulnerability is capable of remote code execution if Timber is used with frameworks or developer code with vulnerable POP chains.\n\n### Recommended Fix\nFilter the phar:// protocol.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-04-12T15:15:46Z",
    "Severity": "HIGH",
    "Summary": "timber/timber vulnerable to Deserialization of Untrusted Data",
    "UpdatedAt": "2024-04-18T16:32:21Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 8.1,
      "VectorString": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:C/C:H/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.23.1"
      },
      "VulnerableVersionRange": "\u003e= 0.16.6, \u003c 1.23.1"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "1.24.1"
      },
      "VulnerableVersionRange": "= 1.24.0"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "2.1.0"
      },
      "VulnerableVersionRange": "= 2.0.0"
    }
  ]
}