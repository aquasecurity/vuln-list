{
  "Severity": "MODERATE",
  "UpdatedAt": "2025-09-26T16:19:44Z",
  "Package": {
    "Ecosystem": "GO",
    "Name": "d7y.io/dragonfly/v2"
  },
  "Advisory": {
    "DatabaseId": 312577,
    "Id": "GSA_kwCzR0hTQS1oeDJoLXZqdzItOHI1NM4ABMUB",
    "GhsaId": "GHSA-hx2h-vjw2-8r54",
    "References": [
      {
        "Url": "https://github.com/dragonflyoss/dragonfly/security/advisories/GHSA-hx2h-vjw2-8r54"
      },
      {
        "Url": "https://github.com/dragonflyoss/dragonfly/blob/main/docs/security/dragonfly-comprehensive-report-2023.pdf"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-59354"
      },
      {
        "Url": "https://pkg.go.dev/vuln/GO-2025-3973"
      },
      {
        "Url": "https://github.com/advisories/GHSA-hx2h-vjw2-8r54"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-hx2h-vjw2-8r54"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-59354"
      }
    ],
    "Description": "### Impact\nThe DragonFly2 uses a variety of hash functions, including the MD5 hash. This algorithm does not provide collision resistance; it is secure only against preimage attacks. While these security guarantees may be enough for the DragonFly2 system, it is not completely clear if there are any scenarios where lack of the collision resistance would compromise the system. There are no clear benefits to keeping the MD5 hash function in the system.\n\n```golang\nvar pieceDigests []string\nfor i := int32(0); i \u003c t.TotalPieces; i++ {\n       pieceDigests = append(pieceDigests, t.Pieces[i].Md5)\n}\ndigest := digest.SHA256FromStrings(pieceDigests...)\nif digest != t.PieceMd5Sign {\n       t.Errorf(\"invalid digest, desired: %s, actual: %s\", t.PieceMd5Sign, digest)\n       t.invalid.Store(true)\n       return ErrInvalidDigest\n}\n```\n\nAlice, a peer in the DragonFly2 system, creates two images: an innocent one, and one with malicious code. Both images consist of two pieces, and Alice generates the pieces so that their respective MD5 hashes collide (are the same). Therefore, the PieceMd5Sign metadata of both images are equal. Alice shares the innocent image with other peers, who attest to their validity (i.e., that it works as expected and is not malicious). Bob wants to download the image and requests it from the peer-to-peer network. After downloading the image, Bob checks its integrity with a SHA256 hash that is known to him. Alice, who is participating in the network, had already provided Bob the other image, the malicious one. Bob unintentionally uses the malicious image.\n\n### Patches\n\n- Dragonfy v2.1.0 and above.\n\n### Workarounds\n\nThere are no effective workarounds, beyond upgrading.\n\n### References\n\nA third party security audit was performed by Trail of Bits, you can see the [full report](https://github.com/dragonflyoss/dragonfly/blob/main/docs/security/dragonfly-comprehensive-report-2023.pdf).\n\nIf you have any questions or comments about this advisory, please email us at [dragonfly-maintainers@googlegroups.com](mailto:dragonfly-maintainers@googlegroups.com).",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-09-17T20:11:58Z",
    "Severity": "MODERATE",
    "Summary": "DragonFly has weak integrity checks for downloaded files",
    "UpdatedAt": "2025-09-26T16:19:44Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "2.1.0"
      },
      "VulnerableVersionRange": "\u003c 2.1.0"
    }
  ]
}