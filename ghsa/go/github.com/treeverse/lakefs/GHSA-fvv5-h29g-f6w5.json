{
  "Severity": "MODERATE",
  "UpdatedAt": "2024-02-22T21:36:05Z",
  "Package": {
    "Ecosystem": "GO",
    "Name": "github.com/treeverse/lakefs"
  },
  "Advisory": {
    "DatabaseId": 235370,
    "Id": "GSA_kwCzR0hTQS1mdnY1LWgyOWctZjZ3Nc4AA5dq",
    "GhsaId": "GHSA-fvv5-h29g-f6w5",
    "References": [
      {
        "Url": "https://github.com/treeverse/lakeFS/security/advisories/GHSA-fvv5-h29g-f6w5"
      },
      {
        "Url": "https://github.com/treeverse/lakeFS/commit/56556ee5406fc5425b9302cd08a8d412635fdcd7"
      },
      {
        "Url": "https://github.com/advisories/GHSA-fvv5-h29g-f6w5"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-fvv5-h29g-f6w5"
      }
    ],
    "Description": "### Impact\n\nA bug in permissions validation allows a user with the `ci:ReadAction` permission to skip read checks when copying an object.  If they additionally have read and write permission to path in the repository, they can copy an otherwise unreadable object and read it.\n\nIn order to be affected and exploitable, the following conditions must ALL occur on the same user:\n1. `ci:ReadAction` enabled for the repository.  Predefined policies RepoManagementRead and RepoManagementFullAccess allow this action.\n2. `fs:ReadObject` and `fs:WriteObject` enabled for some path.\n3. `fs:ReadObject` _not_ available for some path\n\nSuch a user can use (1) to copy the unreadable object (3) to a path that they can read and write (2).  At that point they can read the object copy.\n\n### Patches\n\nReleases \u003e= 1.12.1 fix this issue in lakeFS.\n\n### Workarounds\n\nAs a workaround, use RBAC to deny `ci:*` permissions to all users, or to all users who have limited read access.\n\nMany installations are unaffected:\n\n* **Installations using ACLs are _not_ affected.** This includes all OSS installations that have not implemented an external authorization server.  We do not know of any OSS installations that have implemented such a server.  ACLs that allow ci:ReadAction also allow reading repositories, so no capabilities are granted.\n* **Installations using RBAC that use only predefined policies with \"all\" ARNs (\"*\") are _not_ affected.**  This includes **all installations that have not defined any new groups in RBAC.**\n\nIn order to be affected, **installations using RBAC** must define users and simultaneous allow `ci:ReadAction` and disallow `fs:ReadObject` for some path.  `ci:ReadAction` is available in policies RepoManagementReadAll and RepoManagementFullAccess.  By default these actions are configured for groups Developers and above, for all repositories and paths.\n\n\n### References\n\n* [lakeFS RBAC](https://docs.lakefs.io/reference/security/rbac.html)\n\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-02-22T21:36:04Z",
    "Severity": "MODERATE",
    "Summary": "User with ci:ReadAction permissions and write permissions to one path in a repository may copy objects from any path in the repository",
    "UpdatedAt": "2024-02-22T21:36:05Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 5.3,
      "VectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.12.1"
      },
      "VulnerableVersionRange": "\u003e= 0.90.0, \u003c= 1.12.0"
    }
  ]
}