{
  "Severity": "HIGH",
  "UpdatedAt": "2022-03-07T21:45:59Z",
  "Package": {
    "Ecosystem": "GO",
    "Name": "github.com/tharsis/evmos"
  },
  "Advisory": {
    "DatabaseId": 12429,
    "Id": "GSA_kwCzR0hTQS01amdxLXg4NTctcDh4d80wjQ",
    "GhsaId": "GHSA-5jgq-x857-p8xw",
    "References": [
      {
        "Url": "https://github.com/tharsis/evmos/security/advisories/GHSA-5jgq-x857-p8xw"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24738"
      },
      {
        "Url": "https://github.com/tharsis/evmos/commit/28870258d4ee9f1b8aeef5eba891681f89348f71"
      },
      {
        "Url": "https://github.com/tharsis/evmos/releases/tag/v2.0.1"
      },
      {
        "Url": "https://github.com/advisories/GHSA-5jgq-x857-p8xw"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-5jgq-x857-p8xw"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2022-24738"
      }
    ],
    "Description": "## Impact\n_What kind of vulnerability is it? Who is impacted?_\n\n### Classification\n\nThe vulnerability has been classified as `critical` with a score of `9.0` (highest). It has the potential to affect and drain unclaimed airdrop funds from Cosmos and Osmosis eligible user addresses.\n\n### Disclosure\n\nThe attack requires advanced knowledge of the internals of the core and application packages of IBC, IBC relayers, the Cosmos SDK `AnteHandler`,  and the Evmos `x/claims` module. The step-by-step attack is described below:\n\n1. An actor creates a malicious chain with a custom `AnteHandler` that skips signature verification for transactions, specifically IBC `MsgTransfer`. This allows the attacker to impersonate any account by setting a custom `sender` address field of the IBC transfer message.\n2.  The malicious actor then connects this newly created chain via IBC to Evmos and fills the `recipient` address from the transfer message with an address they control.\n3. Once the IBC packet containing the Transfer data is relayed to Evmos, it is processed by the claims module IBC middleware. Which migrates the claim records to the recipient address, which is owned by the attacker.\n4. The attacker then performs two airdrop Actions, claiming up to 75% of the total initial claimable amount.\n5. The Actor repeats steps 1., 2., and 3. for every address that has unclaimed funds from the airdrop. This automatically claims 75% of the unclaimable amount.\n6. The malicious actor performs the final Action, claiming 100% of all the user funds.\n7. Then, the attacker transfers the funds to another chain with a DEX (Osmosis, Cosmos Hub) via IBC. \n8. Finally, the attacker withdraws the total amount in fiat through a centralized exchange. \n\n### Users impacted\n\nNo users have suffered the loss of funds as no malicious chains have been connected to Evmos.\n\n## Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\nThe patch involves defining a list of authorized channels for chains that are connected to Evmos via IBC. This restricts the chains that have the capability of migrating users' claims records as per the specification. By default, the authorized destination channels are `\"channel-0\"` (Osmosis) and `\"channel-3\"` (Cosmos Hub).\n\nPlease upgrade your mainnet node and validator to [`v2.0.1`](https://github.com/tharsis/evmos/releases/tag/v2.0.1) **ASAP**.\n\n## Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nNo, the fix for the critical vulnerability is state machine breaking. An upgrade procedure must be coordinated with the nodes running the network.\n\n## References\n\n_Are there any links users can visit to find out more?_\n\n* Claims module spec: [evmos.dev/modules/claims](https://evmos.dev/modules/claims)\n* Cosmos SDK documentation: [docs.cosmos.network](https://docs.cosmos.network/)\n* IBC documentation: [ibc.cosmos.network](https://ibc.cosmos.network/)\n\n## For more information\n\nIf you have any questions or comments about this advisory:\n\n* Reach out to the Core Team in [Discord](https://discord.gg/evmos)\n* Open an issue in [tharsis/evmos](http://github.com/tharsis/evmos/issues)\n* Email us at [security@thars.is](security@thars.is)\n\nThanks to the Core IBC team at Interchain GmbH for the secure disclosure of this vulnerability",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2022-03-07T21:45:59Z",
    "Severity": "HIGH",
    "Summary": "Account compromise in Evmos",
    "UpdatedAt": "2023-02-03T05:06:48Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.4,
      "VectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "2.0.1"
      },
      "VulnerableVersionRange": "\u003c 2.0.1"
    }
  ]
}