{
  "Severity": "HIGH",
  "UpdatedAt": "2025-06-09T21:39:34Z",
  "Package": {
    "Ecosystem": "GO",
    "Name": "github.com/coredns/coredns"
  },
  "Advisory": {
    "DatabaseId": 298010,
    "Id": "GSA_kwCzR0hTQS1jdng3LXg4cGoteDJnd84ABIwa",
    "GhsaId": "GHSA-cvx7-x8pj-x2gw",
    "References": [
      {
        "Url": "https://github.com/coredns/coredns/security/advisories/GHSA-cvx7-x8pj-x2gw"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-47950"
      },
      {
        "Url": "https://github.com/coredns/coredns/commit/efaed02c6a480ec147b1f799aab7cf815b17dfe1"
      },
      {
        "Url": "https://datatracker.ietf.org/doc/html/rfc9250"
      },
      {
        "Url": "https://github.com/quic-go/quic-go"
      },
      {
        "Url": "https://www.usenix.org/conference/usenixsecurity23/presentation/botella"
      },
      {
        "Url": "https://github.com/advisories/GHSA-cvx7-x8pj-x2gw"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-cvx7-x8pj-x2gw"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-47950"
      }
    ],
    "Description": "### Summary\n\nA **Denial of Service (DoS)** vulnerability was discovered in the CoreDNS DNS-over-QUIC (DoQ) server implementation. The server previously created a new goroutine for every incoming QUIC stream without imposing any limits on the number of concurrent streams or goroutines. A remote, unauthenticated attacker could open a large number of streams, leading to uncontrolled memory consumption and eventually causing an Out Of Memory (OOM) crash â€” especially in containerized or memory-constrained environments.\n\n### Impact\n\n- **Component**: `server_quic.go`\n- **Attack Vector**: Remote, network-based\n- **Attack Complexity**: Low\n- **Privileges Required**: None\n- **User Interaction**: None\n- **Impact**: High availability loss (OOM kill or unresponsiveness)\n\nThis issue affects deployments with `quic://` enabled in the Corefile. A single attacker can cause the CoreDNS instance to become unresponsive using minimal bandwidth and CPU.\n\n### Patches\n\nThe patch introduces two key mitigation mechanisms:\n\n- **`max_streams`**: Caps the number of concurrent QUIC streams per connection. Default: `256`.\n- **`worker_pool_size`**: Introduces a server-wide, bounded worker pool to process incoming streams. Default: `1024`.\n\nThis eliminates the 1:1 stream-to-goroutine model and ensures that CoreDNS remains resilient under high concurrency. The new configuration options are exposed through the `quic` Corefile block:\n\n```\nquic {\n    max_streams 256\n    worker_pool_size 1024\n}\n```\n\nThese defaults are generous and aligned with typical DNS-over-QUIC client behavior.\n\n### Workarounds\n\nIf you're unable to upgrade immediately, you can:\n- Disable QUIC support by removing or commenting out the `quic://` block in your Corefile\n- Use container runtime resource limits to detect and isolate excessive memory usage\n- Monitor QUIC connection patterns and alert on anomalies\n\n### References\n\n- [RFC 9250 - DNS over Dedicated QUIC Connections](https://datatracker.ietf.org/doc/html/rfc9250)\n- [quic-go GitHub project](https://github.com/quic-go/quic-go)\n- [QUIC stream exhaustion class of vulnerabilities (related)](https://www.usenix.org/conference/usenixsecurity23/presentation/botella)\n\n### Credit\n\nThanks to [@thevilledev](https://github.com/thevilledev) for disclovering this vulnerability and contributing a high-quality fix.\n\n### For more information\n\nPlease consult our [security guide](https://github.com/coredns/coredns/blob/master/.github/SECURITY.md) for more information regarding our security process.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-06-06T21:27:27Z",
    "Severity": "HIGH",
    "Summary": "CoreDNS Vulnerable to DoQ Memory Exhaustion via Stream Amplification",
    "UpdatedAt": "2025-06-09T21:39:34Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.5,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.12.2"
      },
      "VulnerableVersionRange": "\u003c 1.12.2"
    }
  ]
}