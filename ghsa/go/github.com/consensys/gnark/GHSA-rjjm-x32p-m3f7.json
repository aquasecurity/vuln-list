{
  "Severity": "LOW",
  "UpdatedAt": "2023-11-12T15:56:49Z",
  "Package": {
    "Ecosystem": "GO",
    "Name": "github.com/consensys/gnark"
  },
  "Advisory": {
    "DatabaseId": 225461,
    "Id": "GSA_kwCzR0hTQS1yamptLXgzMnAtbTNmN84AA3C1",
    "GhsaId": "GHSA-rjjm-x32p-m3f7",
    "References": [
      {
        "Url": "https://github.com/Consensys/gnark/security/advisories/GHSA-rjjm-x32p-m3f7"
      },
      {
        "Url": "https://github.com/Consensys/gnark/issues/897"
      },
      {
        "Url": "https://github.com/Consensys/gnark/commit/f528807119e9443df94b8c01fe8ee65abe3c75d8"
      },
      {
        "Url": "https://github.com/advisories/GHSA-rjjm-x32p-m3f7"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-rjjm-x32p-m3f7"
      }
    ],
    "Description": "### Impact\n\ngnark provides a gadget in the standard library to allow optimized checking of the bitwidth of the inputs. The gadget works by constructing a fixed lookup table containing all valid entries, partitioning the input and checking that all parts are inside the lookup table. The range checker gadget did not take into account that the highest partition may be less than the width limit, allowing the inputs to be up to 16 bits wider than checked.\n\nRange checking gadget is extensively used in field emulation. Users using any dependant gadget (ECDSA verification, proof recursion etc.) is impacted.\n\nWe consider the impact of the vulnerability being low as the number of attacker-modifiable bits is significantly smaller compared to the bit-width of scalar field modulus and it won't be possible to construct inputs which would allow to overflow the scalar field.\n\n### Patches\n\nThe issue has been patched in the stable branch of gnark. \n\nDue to low severity of the issue no emergency release will be issued and we follow the existing release plan. Versions v0.9.2 and higher are patched.\n\n### Workarounds\n\nWe consider the issue very hard to exploit and do not recommend manual remediation. However, it is possible to perform manual bit decomposition using `std/math/bits` gadget.\n\n### References\n\nInitial issue https://github.com/Consensys/gnark/issues/897\n\n### Acknowledgement\n\nThe issue was reported by [@ultrainstinct30](https://github.com/ultrainstinct30).",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2023-11-12T15:56:48Z",
    "Severity": "LOW",
    "Summary": "gnark's range checker gadget allows wider inputs up to word alignment",
    "UpdatedAt": "2023-11-12T15:56:49Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 3.2,
      "VectorString": "CVSS:3.1/AV:L/AC:H/PR:N/UI:N/S:C/C:N/I:L/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.9.2"
      },
      "VulnerableVersionRange": "\u003c 0.9.2"
    }
  ]
}