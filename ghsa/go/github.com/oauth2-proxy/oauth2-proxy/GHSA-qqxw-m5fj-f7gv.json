{
  "Severity": "MODERATE",
  "UpdatedAt": "2021-05-24T21:20:17Z",
  "Package": {
    "Ecosystem": "GO",
    "Name": "github.com/oauth2-proxy/oauth2-proxy"
  },
  "Advisory": {
    "DatabaseId": 4632,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXFxeHctbTVmai1mN2d2",
    "GhsaId": "GHSA-qqxw-m5fj-f7gv",
    "References": [
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2020-5233"
      },
      {
        "Url": "https://blog.detectify.com/2019/05/16/the-real-impact-of-an-open-redirect/"
      },
      {
        "Url": "https://github.com/oauth2-proxy/oauth2-proxy/security/advisories/GHSA-qqxw-m5fj-f7gv"
      },
      {
        "Url": "https://github.com/oauth2-proxy/oauth2_proxy/commit/a316f8a06f3c0ca2b5fc5fa18a91781b313607b2"
      },
      {
        "Url": "https://github.com/oauth2-proxy/oauth2_proxy/releases/tag/v5.0.0"
      },
      {
        "Url": "https://github.com/advisories/GHSA-qqxw-m5fj-f7gv"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-qqxw-m5fj-f7gv"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2020-5233"
      }
    ],
    "Description": "### Impact\nAn open redirect vulnerability has been found in `oauth2_proxy`. Anyone who uses `oauth2_proxy` may potentially be impacted. \n\nFor a context [detectify] have an in depth blog post about the potential impact of an open redirect. Particularly see the OAuth section.\n\n**tl;dr**: People's authentication tokens could be silently harvested by an attacker. e.g:\n`facebook.com/oauth.php?clientid=123\u0026state=abc\u0026redirect_url=https://yourdomain.com/red.php?url%3dhttps://attacker.com/`\n\n### Patches\n\n@sauyon found the issue, and has submitted a patch. \n\n```\ndiff --git a/oauthproxy.go b/oauthproxy.go\nindex 72ab580..f420df6 100644\n--- a/oauthproxy.go\n+++ b/oauthproxy.go\n@@ -517,7 +517,7 @@ func (p *OAuthProxy) GetRedirect(req *http.Request) (redirect string, err error)\n // IsValidRedirect checks whether the redirect URL is whitelisted\n func (p *OAuthProxy) IsValidRedirect(redirect string) bool {\n \tswitch {\n-\tcase strings.HasPrefix(redirect, \"/\") \u0026\u0026 !strings.HasPrefix(redirect, \"//\"):\n+\tcase strings.HasPrefix(redirect, \"/\") \u0026\u0026 !strings.HasPrefix(redirect, \"//\") \u0026\u0026 !strings.HasPrefix(redirect, \"/\\\\\"):\n \t\treturn true\n \tcase strings.HasPrefix(redirect, \"http://\") || strings.HasPrefix(redirect, \"https://\"):\n \t\tredirectURL, err := url.Parse(redirect)\n```\n\nThis patch will be applied to the next release, which is scheduled for when this is publicly disclosed.\n\n### Workarounds\n\nAt this stage there is no work around.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2021-12-20T18:02:38Z",
    "Severity": "MODERATE",
    "Summary": "The pattern '/\\domain.com' is not disallowed when redirecting, allowing for open redirect",
    "UpdatedAt": "2023-01-09T05:05:06Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 5.9,
      "VectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:L/I:H/A:L"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "5.0.0"
      },
      "VulnerableVersionRange": "\u003c 5.0.0"
    }
  ]
}