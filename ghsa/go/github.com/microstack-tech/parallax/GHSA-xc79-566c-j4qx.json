{
  "Severity": "HIGH",
  "UpdatedAt": "2025-10-10T23:45:21Z",
  "Package": {
    "Ecosystem": "GO",
    "Name": "github.com/microstack-tech/parallax"
  },
  "Advisory": {
    "DatabaseId": 316480,
    "Id": "GSA_kwCzR0hTQS14Yzc5LTU2NmMtajRxeM4ABNRA",
    "GhsaId": "GHSA-xc79-566c-j4qx",
    "References": [
      {
        "Url": "https://github.com/microstack-tech/parallax/security/advisories/GHSA-xc79-566c-j4qx"
      },
      {
        "Url": "https://github.com/microstack-tech/parallax/commit/f759e9090aaf00a43c616d7cbd133c44bb1ed01e"
      },
      {
        "Url": "https://github.com/microstack-tech/parallax/releases/tag/v0.1.4"
      },
      {
        "Url": "https://github.com/advisories/GHSA-xc79-566c-j4qx"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-xc79-566c-j4qx"
      }
    ],
    "Description": "### Impact\n\nA vulnerable node can be made to consume very large amounts of memory when handling specially crafted p2p messages sent from an attacker node.\n\nIn order to carry out the attack, the attacker establishes a peer connections to the victim, and sends a malicious `GetBlockHeadersRequest` message with a `count` of `0`, using the `Parallax` protocol.\n\nIn `descendants := chain.GetHeadersFrom(num+count-1, count-1)`, the value of `count-1` is passed to the function `GetHeadersFrom(number, count uint64)` as parameter `count`. Due to integer overflow, `UINT64_MAX` value is then passed as the `count` argument to function `GetHeadersFrom(number, count uint64)`. This allows an attacker to bypass `maxHeadersServe` and request all headers from the latest block back to the genesis block.\n\n### Patches\n\nThe fix has been included in the Parallax client version `0.1.4` and onwards.\n\nThe vulnerability was patched in: https://github.com/microstack-tech/parallax/commit/f759e9090aaf00a43c616d7cbd133c44bb1ed01e\n\n### Workarounds\n\nNo workarounds have been made public.\n\n### Credit\n\nThis issue was disclosed responsibly by DongHan Kim via the Ethereum bug bounty program, the cooperation is appreciated.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-10-10T23:45:20Z",
    "Severity": "HIGH",
    "Summary": "Parallax is vulnerable to DoS via malicious p2p message",
    "UpdatedAt": "2025-10-10T23:45:21Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.5,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.1.4"
      },
      "VulnerableVersionRange": "\u003c 0.1.4"
    }
  ]
}