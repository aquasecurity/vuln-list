{
  "Severity": "HIGH",
  "UpdatedAt": "2025-04-21T16:17:39Z",
  "Package": {
    "Ecosystem": "GO",
    "Name": "github.com/traefik/traefik"
  },
  "Advisory": {
    "DatabaseId": 291083,
    "Id": "GSA_kwCzR0hTQS02cDY4LXc0NWctNDhqN84ABHEL",
    "GhsaId": "GHSA-6p68-w45g-48j7",
    "References": [
      {
        "Url": "https://github.com/traefik/traefik/security/advisories/GHSA-6p68-w45g-48j7"
      },
      {
        "Url": "https://github.com/traefik/traefik/releases/tag/v2.11.24"
      },
      {
        "Url": "https://github.com/traefik/traefik/releases/tag/v3.3.6"
      },
      {
        "Url": "https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-32431"
      },
      {
        "Url": "https://github.com/traefik/traefik/pull/11684"
      },
      {
        "Url": "https://github.com/advisories/GHSA-6p68-w45g-48j7"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-6p68-w45g-48j7"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-32431"
      }
    ],
    "Description": "## Impact\n\nThere is a potential vulnerability in Traefik managing the requests using a `PathPrefix`, `Path` or `PathRegex` matcher.\n\nWhen Traefik is configured to route the requests to a backend using a matcher based on the path, if the URL contains a `/../` in its path, it’s possible to target a backend, exposed using another router, by-passing the middlewares chain.\n\n## Example\n\n```yaml\napiVersion: traefik.io/v1alpha1\nkind: IngressRoute\nmetadata:\n  name: my-service\nspec:\n  routes:\n    - match: PathPrefix(‘/service’)\n      kind: Rule\n      services:\n        - name: service-a\n          port: 8080\n      middlewares:\n        - name: my-middleware-a\n    - match: PathPrefix(‘/service/sub-path’)\n      kind: Rule\n      services:\n        - name: service-a\n          port: 8080\n```\n\nIn such a case, the request `http://mydomain.example.com/service/sub-path/../other-path` will reach the backend `my-service-a` without operating the middleware `my-middleware-a` unless the computed path is `http://mydomain.example.com/service/other-path` and should be computes by the first router (operating `my-middleware-a`).\n\n## Patches\n\n- https://github.com/traefik/traefik/releases/tag/v2.11.24\n- https://github.com/traefik/traefik/releases/tag/v3.3.6\n- https://github.com/traefik/traefik/releases/tag/v3.4.0-rc2\n\n## Workaround\n\nAdd a `PathRegexp` rule to the matcher to prevent matching a route with a `/../` in the path.\n\nExample: \n\n```yaml\nmatch: PathPrefix(`/service`) \u0026\u0026 !PathRegexp(`(?:(/\\.\\./)+.*)`)\n```\n\n## For more information\n\nIf you have any questions or comments about this advisory, please [open an issue](https://github.com/traefik/traefik/issues).",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-04-21T16:17:38Z",
    "Severity": "HIGH",
    "Summary": "Traefik has a possible vulnerability with the path matchers",
    "UpdatedAt": "2025-04-25T14:41:50Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": ""
      },
      "VulnerableVersionRange": "\u003c= 1.7.34"
    }
  ]
}