{
  "Severity": "MODERATE",
  "UpdatedAt": "2025-07-29T19:56:24Z",
  "Package": {
    "Ecosystem": "GO",
    "Name": "github.com/docker/docker"
  },
  "Advisory": {
    "DatabaseId": 305640,
    "Id": "GSA_kwCzR0hTQS14NHJ4LTRndzMtNTNwNM4ABKno",
    "GhsaId": "GHSA-x4rx-4gw3-53p4",
    "References": [
      {
        "Url": "https://github.com/moby/moby/security/advisories/GHSA-x4rx-4gw3-53p4"
      },
      {
        "Url": "https://github.com/moby/moby/pull/50506"
      },
      {
        "Url": "https://github.com/moby/moby/commit/bea959c7b793b32a893820b97c4eadc7c87fabb0"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-54388"
      },
      {
        "Url": "https://github.com/advisories/GHSA-x4rx-4gw3-53p4"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-x4rx-4gw3-53p4"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-54388"
      }
    ],
    "Description": "Moby is an open source container framework developed by Docker Inc. that is distributed as Docker Engine, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (dockerd), which is developed as [moby/moby](https://github.com/moby/moby) is commonly referred to as Docker, or Docker Engine.\n\nFirewalld is a daemon used by some Linux distributions to provide a dynamically managed firewall. When Firewalld is running, Docker uses its iptables backend to create rules, including rules to isolate containers in one bridge network from containers in other bridge networks.\n\n### Impact\n\nThe iptables rules created by Docker are removed when firewalld is reloaded using, for example \"firewall-cmd --reload\", \"killall -HUP firewalld\", or \"systemctl reload firewalld\".\n\nWhen that happens, Docker must re-create the rules. However, in affected versions of Docker, the iptables rules that prevent packets arriving on a host interface from reaching container addresses are not re-created.\n\nOnce these rules have been removed, a remote host configured with a route to a Docker bridge network can access published ports, even when those ports were only published to a loopback address. Unpublished ports remain inaccessible.\n\nFor example, following a firewalld reload on a Docker host with address `192.168.0.10` and a bridge network with subnet `172.17.0.0/16`, running the following command on another host in the local network will give it access to published ports on container addresses in that network: `ip route add 172.17.0.0/16 via 192.168.0.10`.\n\nContainers running in networks created with `--internal` or equivalent have no access to other networks. Containers that are only connected to these networks remain isolated after a firewalld reload.\n\nWhere Docker Engine is not running in the host's network namespace, it is unaffected. Including, for example, Rootless Mode, and Docker Desktop.\n\n### Patches\n\nMoby releases older than 28.2.0 are not affected. A fix is available in moby release 28.3.3.\n\n### Workarounds\nAfter reloading firewalld, either:\n- Restart the docker daemon,\n- Re-create bridge networks, or\n- Use rootless mode.\n\n### References\nhttps://firewalld.org/\nhttps://firewalld.org/documentation/howto/reload-firewalld.html",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-07-29T19:56:22Z",
    "Severity": "MODERATE",
    "Summary": "Moby firewalld reload makes published container ports accessible from remote hosts ",
    "UpdatedAt": "2025-07-30T15:41:51Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "28.3.3"
      },
      "VulnerableVersionRange": "\u003e= 28.2.0, \u003c 28.3.3"
    }
  ]
}