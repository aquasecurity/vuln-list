{
  "Severity": "CRITICAL",
  "UpdatedAt": "2022-11-09T19:17:23Z",
  "Package": {
    "Ecosystem": "GO",
    "Name": "github.com/go-vela/server"
  },
  "Advisory": {
    "DatabaseId": 195695,
    "Id": "GSA_kwCzR0hTQS01bTdnLXBqOHctNzU5M84AAvxv",
    "GhsaId": "GHSA-5m7g-pj8w-7593",
    "References": [
      {
        "Url": "https://github.com/go-vela/server/security/advisories/GHSA-5m7g-pj8w-7593"
      },
      {
        "Url": "https://github.com/go-vela/worker/security/advisories/GHSA-2w78-ffv6-p46w"
      },
      {
        "Url": "https://github.com/go-vela/server/commit/05558ee99d70f7d6f83bed7c8f78ac0b35fa26f4"
      },
      {
        "Url": "https://docs.docker.com/engine/security/#docker-daemon-attack-surface"
      },
      {
        "Url": "https://github.com/go-vela/server/releases/tag/v0.16.0"
      },
      {
        "Url": "https://github.com/go-vela/ui/security/advisories/GHSA-xf39-98m2-889v"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2022-39395"
      },
      {
        "Url": "https://github.com/go-vela/ui/releases/tag/v0.17.0"
      },
      {
        "Url": "https://github.com/go-vela/worker/releases/tag/v0.16.0"
      },
      {
        "Url": "https://go-vela.github.io/docs/installation/server/reference/#vela_repo_allowlist"
      },
      {
        "Url": "https://go-vela.github.io/docs/installation/worker/reference/#vela_runtime_privileged_images"
      },
      {
        "Url": "https://github.com/advisories/GHSA-5m7g-pj8w-7593"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-5m7g-pj8w-7593"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2022-39395"
      }
    ],
    "Description": "### Impact\nSome current default configurations for Vela allow exploitation and container breakouts.\n\n#### Default Privileged Images\n\nRunning Vela plugins as privileged Docker containers allows a malicious user to easily break out of the container and gain access to the worker host operating system. On a fresh install of Vela without any additional configuration, the `target/vela-docker` plugin will run as a privileged container, even if the Vela administrators did not intend to allow for any privileged plugins, and even if the `vela.yml` configuration file does not use the `privileged = True` flag.\n\nPrivileged containers permit trivial breakouts, which can pose significant risk to the environment in which Vela is running.\n\n#### Default Allowed Repositories\n\nOn a fresh install of Vela, anyone with a GitHub account (or other enabled source control management solution) is allowed to enable a repository within Vela and run builds. This means that, if a Vela instance is accessible to the public, a third party could add their own malicious repos to the Vela instance and run arbitrary code.\n\nAn example of a publicly accessible Vela instance would be one not protected behind a VPN. Whether Vela is publicly accessible depends on how Vela is set up, NOT how it is connected to GitHub.\n\n#### Default Enabled Events allows Pull Requests\n\nBy default, Vela currently enables pull request events when a repository is Vela-enabled. Unless this default was changed when enabling each repository, anyone who can issue a pull request against a repository can trigger a Vela job.\n\nThis not only permits a third party to run arbitrary code in a Vela environment, but also poses an additional risk when secrets within Vela are configured to be available in pull requests, permitting anyone with access to create pull requests to access these secrets.\n\n### Patches\n\nUpgrade to 0.16.0 or later. After upgrading, Vela administrators will need to explicitly change the default settings to configure Vela as desired.\n\nSome of the fixes will interrupt existing workflows and will require Vela administrators to modify default settings (see release notes for more information). However, not applying the patch (or workarounds) will continue existing risk exposure.\n\n### Workarounds\n\n#### Default Privileged Images\n\nInstead of upgrading, the Vela administrators can adjust the worker's `VELA_RUNTIME_PRIVILEGED_IMAGES` setting to be explicitly empty:\n\n`VELA_RUNTIME_PRIVILEGED_IMAGES=\"\"`\n\nBy assigning `VELA_RUNTIME_PRIVILEGED_IMAGES` to an empty value it disallows any images from running as privileged containers in Vela.\n\n#### Default Allowed Repositories\n\nInstead of upgrading, the Vela administrators can leverage the `VELA_REPO_ALLOWLIST` setting on the server component to restrict access to a list of repositories that are allowed to be enabled.\n\nBy changing it from the default empty list (currently interpreted by Vela as \"all repositories\") to a list explicitly allowing specific repositories, Vela administrators can control what repositories are allowed to be enabled in Vela.\n\nVela's current default list of approved repositories that can be added to a Vela instance is an empty list. However this is currently interpreted as allowing all repositories.\n\nIn the updated version, a null value (the empty list) will be interpreted as permitting no repositories to be added to a Vela instance.\n\n#### Default Enabled Events allows Pull Requests\n\nAudit enabled repositories and disable `pull_requests` if they are not needed.\n\nInstead of upgrading, the pull request trigger can be disabled on a per-repository basis.\n\nAdditional protection can be provided by preventing unauthorized users from submitting pull requests in GitHub (or other source control management solution).\n\n### Residual Risk\n\n#### Default Privileged Images\n\nAfter applying the update, any repos that Vela administrators manually define as \"trusted repos\" will be able to run the manually-specified images that are allowed to run as privileged. Those repos will continue to be vulnerable to breakout, but applying the update will help protect against the risk of trivial breakout arising from an image running as a privileged container.\n\nThe recommendation is to utilize plugins that do not require privileged capabilities.\n\nFor example, utilize `target/vela-kaniko` instead of `target/vela-docker` as the Kaniko plugin does not require privileged access.\n\n#### Default Allowed Repositories\n\nApplying this update (or workaround) will protect against the risk of Vela interpreting the default empty list of approved repositories as \"all repositories\" rather than \"no repositories\" (the current default).\n\n#### Default Enabled Events allows Pull Requests\n\nSince this change only impacts newly enabled repositories, the update will not address the risk to existing enabled repositories resulting from Vela enabling pull request events when a repository is Vela-enabled.\n\nAdditionally, this change only impacts defaults; users can still configure their repositories to allow pull requests as triggering events.\n\nIn order to monitor risk going forward, refer to the `Workaround` section with the heading `Default Enabled Events allows Pull Requests`.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [vela@target.com](mailto:vela@target.com)\n\nAffected products: `go-vela/worker`, `go-vela/server`, `go-vela/ui`, `go-vela/documentation`",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2022-11-09T19:17:21Z",
    "Severity": "CRITICAL",
    "Summary": "Vela Insecure Defaults",
    "UpdatedAt": "2023-01-29T05:02:31Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 9.9,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.16.0"
      },
      "VulnerableVersionRange": "\u003c 0.16.0"
    }
  ]
}