{
  "Severity": "MODERATE",
  "UpdatedAt": "2025-05-14T14:56:28Z",
  "Package": {
    "Ecosystem": "GO",
    "Name": "github.com/justinas/nosurf"
  },
  "Advisory": {
    "DatabaseId": 294248,
    "Id": "GSA_kwCzR0hTQS13OWhmLTM1cTQtdmNqd84ABH1o",
    "GhsaId": "GHSA-w9hf-35q4-vcjw",
    "References": [
      {
        "Url": "https://github.com/justinas/nosurf/security/advisories/GHSA-w9hf-35q4-vcjw"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-46721"
      },
      {
        "Url": "https://github.com/justinas/nosurf/commit/ec9bb776d8e5ba9e906b6eb70428f4e7b009feee"
      },
      {
        "Url": "https://github.com/advisories/GHSA-rq77-p4h8-4crw"
      },
      {
        "Url": "https://github.com/justinas/nosurf-cve-2025-46721"
      },
      {
        "Url": "https://github.com/justinas/nosurf/releases/tag/v1.2.0"
      },
      {
        "Url": "https://github.com/advisories/GHSA-w9hf-35q4-vcjw"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-w9hf-35q4-vcjw"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-46721"
      }
    ],
    "Description": "### Impact\n\nThis vulnerability allows an attacker who controls content on the target site, or on a subdomain of the target site (either via XSS, or otherwise) to bypass Cross-Site Request Forgery checks and issue requests on user's behalf.\n\n### Details\n\nDue to misuse of the Go `net/http` library, nosurf categorizes all incoming requests as plain-text HTTP requests, in which case the `Referer` header is not checked to have the same origin as the target webpage.\n\nIf the attacker has control over HTML contents on either the target website (e.g. `example.com`), or on a website hosted on a subdomain of the target (e.g. `attacker.example.com`), they will also be able to manipulate cookies set for the target website. By acquiring the secret CSRF token from the cookie, or overriding the cookie with a new token known to the attacker, `attacker.example.com` is able to craft cross-site requests to `example.com`. \n\n### Patches\n\nA patch for the issue was released in nosurf 1.2.0.\n\n### Workarounds\n\nIn lieu of upgrading to a patched version of nosurf, users may additionally use another HTTP middleware to ensure that a non-safe HTTP request is coming from the same origin (e.g. by requiring a `Sec-Fetch-Site: same-origin` header in the request).\n\n### References\n\nhttps://github.com/advisories/GHSA-rq77-p4h8-4crw\nhttps://github.com/justinas/nosurf-cve-2025-46721\nhttps://www.cve.org/CVERecord?id=CVE-2025-46721\nhttps://github.com/justinas/nosurf/releases/tag/v1.2.0",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-05-14T14:56:27Z",
    "Severity": "MODERATE",
    "Summary": "nosurf vulnerable to CSRF due to non-functional same-origin request checks",
    "UpdatedAt": "2025-05-14T14:56:28Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.2.0"
      },
      "VulnerableVersionRange": "\u003c 1.2.0"
    }
  ]
}