{
  "Severity": "HIGH",
  "UpdatedAt": "2023-09-06T18:43:15Z",
  "Package": {
    "Ecosystem": "GO",
    "Name": "github.com/minio/minio"
  },
  "Advisory": {
    "DatabaseId": 220125,
    "Id": "GSA_kwCzR0hTQS13MjNxLTRodzMtMnBwNs4AA1vd",
    "GhsaId": "GHSA-w23q-4hw3-2pp6",
    "References": [
      {
        "Url": "https://github.com/minio/minio/security/advisories/GHSA-w23q-4hw3-2pp6"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2023-28433"
      },
      {
        "Url": "https://github.com/minio/minio/commit/8d6558b23649f613414c8527b58973fbdfa4d1b8"
      },
      {
        "Url": "https://github.com/minio/minio/commit/b3c54ec81e0a06392abfb3a1ffcdc80c6fbf6ebc"
      },
      {
        "Url": "https://github.com/minio/minio/releases/tag/RELEASE.2023-03-20T20-16-18Z"
      },
      {
        "Url": "https://github.com/advisories/GHSA-w23q-4hw3-2pp6"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-w23q-4hw3-2pp6"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2023-28433"
      }
    ],
    "Description": "### Impact\nAll users on Windows are impacted. MinIO fails to filter the `\\` character, which allows for arbitrary object placement across\nbuckets. As a result, a user with low privileges, such as an access key, service account, or STS credential, which only has permission to `PutObject` in a specific bucket, can create an admin user.\n\n### Patches\nThere are two patches that fix this problem comprehensively\n\n```\ncommit b3c54ec81e0a06392abfb3a1ffcdc80c6fbf6ebc\nAuthor: Harshavardhana \u003charsha@minio.io\u003e\nDate:   Mon Mar 20 13:16:00 2023 -0700\n\n    reject object names with '\\' on windows (#16856)\n```\n\n```\ncommit 8d6558b23649f613414c8527b58973fbdfa4d1b8\nAuthor: Harshavardhana \u003charsha@minio.io\u003e\nDate:   Mon Mar 20 00:35:25 2023 -0700\n\n    fix: convert '\\' to '/' on windows (#16852)\n```\n\n### Workarounds\nThere are no known workarounds\n\n### References\nThe vulnerable code:\n```go\n// minio/cmd/generic-handlers.go\n// Check if the incoming path has bad path components,\n// such as \"..\" and \".\"\n// SlashSeparator -\u003e /\n// dotdotComponent -\u003e ..\n// dotComponent -\u003e .\nfunc hasBadPathComponent(path string) bool {\n  path = strings.TrimSpace(path)\n  for _, p := range strings.Split(path, SlashSeparator) {\n    switch strings.TrimSpace(p) {\n    case dotdotComponent:\n      return true\n    case dotComponent:\n      return true\n    }\n  }\n  return false\n}\n```\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2023-09-06T18:43:13Z",
    "Severity": "HIGH",
    "Summary": "Minio vulnerable to Privilege Escalation on Windows via Path separator manipulation",
    "UpdatedAt": "2023-09-06T18:43:15Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 8.8,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.0.0-202303200735"
      },
      "VulnerableVersionRange": "\u003c 0.0.0-202303200735"
    }
  ]
}