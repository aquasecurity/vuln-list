{
  "Severity": "HIGH",
  "UpdatedAt": "2023-09-05T15:45:12Z",
  "Package": {
    "Ecosystem": "GO",
    "Name": "github.com/minio/minio"
  },
  "Advisory": {
    "DatabaseId": 219936,
    "Id": "GSA_kwCzR0hTQS0ycHh3LXI0N3ctNHA4Y84AA1sg",
    "GhsaId": "GHSA-2pxw-r47w-4p8c",
    "References": [
      {
        "Url": "https://github.com/minio/minio/security/advisories/GHSA-2pxw-r47w-4p8c"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2023-28434"
      },
      {
        "Url": "https://github.com/minio/minio/pull/16849"
      },
      {
        "Url": "https://github.com/minio/minio/commit/67f4ba154a27a1b06e48bfabda38355a010dfca5"
      },
      {
        "Url": "https://github.com/advisories/GHSA-2pxw-r47w-4p8c"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-2pxw-r47w-4p8c"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2023-28434"
      }
    ],
    "Description": "### Impact\nAn attacker can use crafted requests to bypass metadata bucket name checking and put an object into any bucket while processing `PostPolicyBucket`. To carry out this attack, the attacker requires credentials with `arn:aws:s3:::*` permission, as well as enabled Console API access.\n\n### Patches\n```\ncommit 67f4ba154a27a1b06e48bfabda38355a010dfca5\nAuthor: Aditya Manthramurthy \u003cdonatello@users.noreply.github.com\u003e\nDate:   Sun Mar 19 21:15:20 2023 -0700\n\n    fix: post policy request security bypass (#16849)\n```\n\n### Workarounds\nBrowser API access must be enabled turning off `MINIO_BROWSER=off` allows for this workaround.\n\n### References\nThe vulnerable code:\n```go\n// minio/cmd/generic-handlers.go\nfunc setRequestValidityHandler(h http.Handler) http.Handler {\n  return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n    // ...\n    // For all other requests reject access to reserved buckets\n    bucketName, _ := request2BucketObjectName(r)\n    if isMinioReservedBucket(bucketName) || isMinioMetaBucket(bucketName) {\n      if !guessIsRPCReq(r) \u0026\u0026 !guessIsBrowserReq(r) \u0026\u0026 !guessIsHealthCheckReq(r) \u0026\u0026 !guessIsMetricsReq(r) \u0026\u0026 !isAdminReq(r) \u0026\u0026 !isKMSReq(r) {\n        if ok {\n          tc.FuncName = \"handler.ValidRequest\"\n          tc.ResponseRecorder.LogErrBody = true\n        }\n        writeErrorResponse(r.Context(), w, errorCodes.ToAPIErr(ErrAllAccessDisabled), r.URL)\n        return\n      }\n    }\n    // ...\n```",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2023-09-05T15:45:10Z",
    "Severity": "HIGH",
    "Summary": "Privilege Escalation on Linux/MacOS",
    "UpdatedAt": "2023-09-05T15:45:12Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 8.8,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.0.0-202303200415"
      },
      "VulnerableVersionRange": "\u003c 0.0.0-202303200415"
    }
  ]
}