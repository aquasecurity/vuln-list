{
  "Severity": "LOW",
  "UpdatedAt": "2024-11-05T15:26:57Z",
  "Package": {
    "Ecosystem": "GO",
    "Name": "github.com/sigstore/gitsign"
  },
  "Advisory": {
    "DatabaseId": 266133,
    "Id": "GSA_kwCzR0hTQS04cG1wLTY3OHctYzh4eM4ABA-V",
    "GhsaId": "GHSA-8pmp-678w-c8xx",
    "References": [
      {
        "Url": "https://github.com/sigstore/gitsign/security/advisories/GHSA-8pmp-678w-c8xx"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-51746"
      },
      {
        "Url": "https://github.com/advisories/GHSA-8pmp-678w-c8xx"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-8pmp-678w-c8xx"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-51746"
      }
    ],
    "Description": "### Summary\n\ngitsign may select the wrong Rekor entry to use during online verification when multiple entries are returned by the log.\n\n### Details\n\ngitsign uses Rekor's search API to fetch entries that apply to a signature being verified. The parameters used for the search are the public key and the payload. The search API returns entries that match _either_ condition rather than _both_. When gitsign's credential cache is used, there can be multiple entries that use the same ephemeral keypair / signing certificate. As gitsign assumes both conditions are matched by Rekor, there is no additional validation that the entry's hash matches the payload being verified, meaning that the wrong entry can be used to successfully pass verification.\n\n### PoC\n\nEnable the credential cache and create commit signatures using the cached signing certificate. `gitsign verify` or `git log --show-signature` will demonstrate the use of the wrong entry index for the corresponding commit. Note that this depends on the order of matching entries in the response from the Rekor search API, so it may take a few attempts to trigger this.\n\n### Impact\n\nMinimal. While gitsign does not match the payload against the entry, it does ensure that the certificate matches. This would need to be exploited during the certificate validity window (10 minutes) by the key holder.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-11-05T15:26:57Z",
    "Severity": "LOW",
    "Summary": "gitsign may use incorrect Rekor entries during verification",
    "UpdatedAt": "2024-11-06T19:55:45Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.11.0"
      },
      "VulnerableVersionRange": "\u003c 0.11.0"
    }
  ]
}