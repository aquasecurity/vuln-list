{
  "Severity": "LOW",
  "UpdatedAt": "2024-12-10T16:55:36Z",
  "Package": {
    "Ecosystem": "GO",
    "Name": "github.com/CosmWasm/wasmd"
  },
  "Advisory": {
    "DatabaseId": 271262,
    "Id": "GSA_kwCzR0hTQS12bWcyLXIzeHYtcjN4Zs4ABCOe",
    "GhsaId": "GHSA-vmg2-r3xv-r3xf",
    "References": [
      {
        "Url": "https://github.com/CosmWasm/wasmd/security/advisories/GHSA-vmg2-r3xv-r3xf"
      },
      {
        "Url": "https://github.com/advisories/GHSA-vmg2-r3xv-r3xf"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-vmg2-r3xv-r3xf"
      }
    ],
    "Description": "# CWA-2024-009\n\n**Severity**\n\nLow (Marginal + Likely)[^1]\n\n**Affected versions:**\n\n- wasmd \u003c 0.53.1\n\n**Patched versions:**\n\n- wasmd 0.53.2 (please note that wasmd 0.53.1 is broken and must not be used)\n\n## Description of the bug\n\n(Blank for now. We'll add more detail once chains had a chance to upgrade.)\n\n## Mitigations\n\nApart from upgrading, it is recommended to **not** open the gRPC and REST APIs of _validator_ nodes to the public internet. Use isolated and resource-constrained environments for running separate public RPC nodes instead.\nThese can then easily be thrown away and replaced with new instances in case of problems.\n\n## Applying the patch\n\n### Official Wasmd patch\n\nThe patch will be shipped in a wasmd release. You will also have to update `libwasmvm` if you build statically.\nIf you already use the latest / close to latest wasmd, you can update more or less as follows:\n\n1. Check the current wasmd version: `go list -m github.com/CosmWasm/wasmd`\n2. Bump the `github.com/CosmWasm/wasmd` dependency in your go.mod to 0.53.2 (Cosmos SDK 0.50 compatible); `go mod tidy`; commit.\n3. If you use the static libraries `libwasmvm_muslc.aarch64.a`/`libwasmvm_muslc.x86_64.a`, make sure that you use the same version as your wasmvm version.\n4. Check the updated wasmd version: `go list -m github.com/CosmWasm/wasmd` and ensure you see 0.53.2.\n5. Follow your regular practices to deploy chain upgrades.\n\nTo double check if the correct library version is loaded at runtime, use this query:\n`\u003cappd\u003e query wasm libwasmvm-version`. It must show 2.1.4.\n\nThe patch is not consensus breaking _if you are already using wasmvm 2.1.3_.\nIf you are instead using wasmvm 2.1.2, then upgrading to 2.1.4 includes the consensus breaking changes of 2.1.3.\n\n### DIY Patch\n\nIf you are unable to upgrade to the latest version, you can backport the wasmd patch to your version. The patch is available at [Wasmd 0.53.2](https://github.com/CosmWasm/wasmd/compare/v0.53.0...v0.53.2).\nHowever, if you are on an older version of wasmd, you will also be using a different version of wasmvm. We provide the required patches for wasmvm in versions 2.1.4, 2.0.5, 1.5.6.\nTo upgrade using this method:\n\n1. Check the current wasmvm version: `go list -m github.com/CosmWasm/wasmvm` and upgrade\n   to the closest patched version.\n2. Bump the github.com/CosmWasm/wasmvm dependency in your go.mod to the closest compatible patched version (either 2.1.4, 2.0.5 or 1.5.6); go mod tidy; commit.\n3. Apply the patch linked above to your version of wasmd.\n4. If you use the static libraries `libwasmvm_muslc.aarch64.a`/`libwasmvm_muslc.x86_64.a`, make sure that you use the same version as your wasmvm version.\n5. Follow your regular practices to deploy chain upgrades.\n\nTo double check if the correct library version is loaded at runtime, use this query:\n`\u003cappd\u003e query wasm libwasmvm-version`. It must show 2.1.4, 2.0.5 or 1.5.6 and must be the same as the wasmvm version in your go.sum.\n\nThe patch is not consensus breaking as long as you were using the previous patch version of wasmvm before.\n\n## Acknowledgement\n\nThis issue was found by meadow101 who reported it to the Cosmos Bug Bounty Program on HackerOne.\n\nIf you believe you have found a bug in the Interchain Stack or would like to contribute to the\nprogram by reporting a bug, please see \u003chttps://hackerone.com/cosmos\u003e.\n\n## Timeline\n\n- 2024-09-25: Confio receives a report through the Cosmos bug bounty program maintained by Amulet.\n- 2024-09-30: Confio security contributors confirm the report.\n- 2024-11-21: Confio developed the patch internally.\n- 2024-12-06: Patch release is pre-announced through notification lists.\n- 2024-12-10: Patch released.\n\n[^1]: following Amulet's Severity Classification Framework ACMv1: https://github.com/interchainio/security/blob/e0227a1fb4059144aab4f6003eeee7f09912db3a/resources/CLASSIFICATION_MATRIX.md",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-12-10T16:55:35Z",
    "Severity": "LOW",
    "Summary": "Simulation of Wasmd message can cause crashing",
    "UpdatedAt": "2024-12-10T16:55:36Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.53.2"
      },
      "VulnerableVersionRange": "\u003c 0.53.2"
    }
  ]
}