{
  "Severity": "MODERATE",
  "UpdatedAt": "2021-05-20T20:13:37Z",
  "Package": {
    "Ecosystem": "GO",
    "Name": "github.com/opencontainers/umoci"
  },
  "Advisory": {
    "DatabaseId": 4501,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTltOTUtOGh4Ni03cDl2",
    "GhsaId": "GHSA-9m95-8hx6-7p9v",
    "References": [
      {
        "Url": "https://github.com/opencontainers/umoci/security/advisories/GHSA-9m95-8hx6-7p9v"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29136"
      },
      {
        "Url": "https://github.com/opencontainers/umoci/commit/d9efc31daf2206f7d3fdb839863cf7a576a2eb57"
      },
      {
        "Url": "http://www.openwall.com/lists/oss-security/2021/04/06/2"
      },
      {
        "Url": "https://github.com/advisories/GHSA-9m95-8hx6-7p9v"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-9m95-8hx6-7p9v"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2021-29136"
      }
    ],
    "Description": "### Impact\n\numoci 0.4.6 and earlier can be tricked into modifying host files by\ncreating a malicious layer that has a symlink with the name \".\" (or\n\"/\"). Because umoci deletes inodes if they change types, this results in\nthe rootfs directory being replaced with an attacker-controlled symlink.\nSubsequent image layers will then be applied on top of the target of the\nsymlink (which could be any directory on the host filesystem the user\nrunning umoci has access to).\n\nWhile umoci does have defences against symlink-based attacks, they are\nall implemented by resolving things relative to the rootfs directory --\nif the rootfs itself is a symlink, umoci resolves it first.\n\nThis vulnerability affects both \"umoci unpack\" and \"umoci raw unpack\".\n\n### Patches\nThis issue has been patched in umoci 0.4.7, see the references section\nfor the specific commit which fixed this vulnerability.\n\n### Workarounds\nNote that if you use umoci as an unprivileged user (using the --rootless\nflag) then umoci will not be able to overwrite any files that your user\ndoesn't have access to. Other possible mitigations are to run umoci\nunder an LSM profile such as AppArmor or SELinux to restrict the level\nof access it has outside of container image directories.\n\n### References\n* [oss-security public disclosure](https://www.openwall.com/lists/oss-security/2021/04/06/2)\n* [patch](https://github.com/opencontainers/umoci/commit/d9efc31daf2206f7d3fdb839863cf7a576a2eb57)\n\n### Credits\nThanks to Robin Peraglie from Cure53 for discovering and reporting this\nvulnerability.\n\n### For more information\n\nIf you have any questions or comments about this advisory\n* Open an issue in \u003chttps://github.com/opencontainers/umoci\u003e.\n* Email us at \u003csecurity@opencontainers.org\u003e.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2022-02-15T01:17:37Z",
    "Severity": "MODERATE",
    "Summary": "Improper input validation in umoci",
    "UpdatedAt": "2023-01-09T05:05:16Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 5.5,
      "VectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.4.7"
      },
      "VulnerableVersionRange": "\u003c 0.4.7"
    }
  ]
}