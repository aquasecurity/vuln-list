{
  "Severity": "MODERATE",
  "UpdatedAt": "2023-09-27T21:07:51Z",
  "Package": {
    "Ecosystem": "RUBYGEMS",
    "Name": "rails-html-sanitizer"
  },
  "Advisory": {
    "DatabaseId": 184220,
    "Id": "GSA_kwCzR0hTQS1wZzh2LWc0eHEtaHd3Oc4AAs-c",
    "GhsaId": "GHSA-pg8v-g4xq-hww9",
    "References": [
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2022-32209"
      },
      {
        "Url": "https://hackerone.com/reports/1530898"
      },
      {
        "Url": "https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rails-html-sanitizer/CVE-2022-32209.yml"
      },
      {
        "Url": "https://groups.google.com/g/rubyonrails-security/c/ce9PhUANQ6s"
      },
      {
        "Url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AGRLWBEB3S5AU3D4TTROIS7O6QPHDTRH/"
      },
      {
        "Url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NHDACMCLWE32BZZTSNWQPIFUAD5I6Q47/"
      },
      {
        "Url": "https://lists.debian.org/debian-lts-announce/2022/12/msg00012.html"
      },
      {
        "Url": "https://github.com/rails/rails-html-sanitizer/commit/45a5c10fed3d9aa141594c80afa06d748fa0967d"
      },
      {
        "Url": "https://github.com/advisories/GHSA-pg8v-g4xq-hww9"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-pg8v-g4xq-hww9"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2022-32209"
      }
    ],
    "Description": "Versions of Rails::Html::Sanitizer prior to version 1.4.3 are vulnerable to XSS with certain configurations of Rails::Html::Sanitizer which  allows an attacker to inject content when the application developer has overridden the sanitizer's allowed tags to allow both `select` and `style` elements. Code is only impacted if allowed tags are being overridden. \n\nThis may be done via application configuration: ```ruby# In config/application.rbconfig.action_view.sanitized_allowed_tags = [\"select\", \"style\"]```\n\nsee https://guides.rubyonrails.org/configuring.html#configuring-action-view\n\nOr it may be done with a `:tags` option to the Action View helper `sanitize`: ```\u003c%= sanitize @comment.body, tags: [\"select\", \"style\"] %\u003e``` \n\nsee https://api.rubyonrails.org/classes/ActionView/Helpers/SanitizeHelper.html#method-i-sanitize \n\nIt may also be done with Rails::Html::SafeListSanitizer directly: \n```ruby# class-level optionRails::Html::SafeListSanitizer.allowed_tags = [\"select\", \"style\"]```  or with\n```ruby# instance-level optionRails::Html::SafeListSanitizer.new.sanitize(@article.body, tags: [\"select\", \"style\"])```\n\nAll users overriding the allowed tags by any of the above mechanisms to include both \"select\" and \"style\" are recommended to upgrade immediately. A workaround for this issue can be applied by removing either `select` or `style` from the overridden allowed tags.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2022-06-25T00:00:54Z",
    "Severity": "MODERATE",
    "Summary": "Rails::Html::Sanitizer vulnerable to Cross-site Scripting",
    "UpdatedAt": "2023-09-27T21:07:51Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 6.1,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.4.3"
      },
      "VulnerableVersionRange": "\u003c 1.4.3"
    }
  ]
}