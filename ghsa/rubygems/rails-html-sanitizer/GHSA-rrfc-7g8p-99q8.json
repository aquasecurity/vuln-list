{
  "Severity": "MODERATE",
  "UpdatedAt": "2022-12-13T17:51:40Z",
  "Package": {
    "Ecosystem": "RUBYGEMS",
    "Name": "rails-html-sanitizer"
  },
  "Advisory": {
    "DatabaseId": 197794,
    "Id": "GSA_kwCzR0hTQS1ycmZjLTdnOHAtOTlxOM4AAwSi",
    "GhsaId": "GHSA-rrfc-7g8p-99q8",
    "References": [
      {
        "Url": "https://github.com/rails/rails-html-sanitizer/security/advisories/GHSA-rrfc-7g8p-99q8"
      },
      {
        "Url": "https://hackerone.com/reports/1654310"
      },
      {
        "Url": "https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rails-html-sanitizer/CVE-2022-23520.yml"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23520"
      },
      {
        "Url": "https://lists.debian.org/debian-lts-announce/2023/09/msg00012.html"
      },
      {
        "Url": "https://github.com/advisories/GHSA-rrfc-7g8p-99q8"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-rrfc-7g8p-99q8"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2022-23520"
      }
    ],
    "Description": "## Summary\n\nThere is a possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer. This is due to an incomplete fix of CVE-2022-32209.\n\n- Versions affected: ALL\n- Not affected: NONE\n- Fixed versions: 1.4.4\n\n\n## Impact\n\nA possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer may allow an attacker to inject content if the application developer has overridden the sanitizer's allowed tags to allow both \"select\" and \"style\" elements.\n\nCode is only impacted if allowed tags are being overridden using either of the following two mechanisms:\n\n1. Using the Rails configuration `config.action_view.sanitized_allow_tags=`:\n\n  ```ruby\n  # In config/application.rb\n  config.action_view.sanitized_allowed_tags = [\"select\", \"style\"]\n  ```\n\n  (see https://guides.rubyonrails.org/configuring.html#configuring-action-view)\n\n2. Using the class method `Rails::Html::SafeListSanitizer.allowed_tags=`:\n\n  ```ruby\n  # class-level option\n  Rails::Html::SafeListSanitizer.allowed_tags = [\"select\", \"style\"]\n  ```\n\nAll users overriding the allowed tags by either of the above mechanisms to include both \"select\" and \"style\" should either upgrade or use one of the workarounds immediately.\n\nNOTE: Code is _not_ impacted if allowed tags are overridden using either of the following mechanisms:\n\n- the `:tags` option to the Action View helper method `sanitize`.\n- the `:tags` option to the instance method `SafeListSanitizer#sanitize`.\n\n\n## Workarounds\n\nRemove either \"select\" or \"style\" from the overridden allowed tags.\n\n\n## References\n\n- [CWE - CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (4.9)](https://cwe.mitre.org/data/definitions/79.html)\n- https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-32209\n- https://hackerone.com/reports/1654310\n\n\n## Credit\n\nThis vulnerability was responsibly reported by Dominic Breuker.\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2022-12-13T17:51:40Z",
    "Severity": "MODERATE",
    "Summary": "Possible XSS vulnerability with certain configurations of rails-html-sanitizer",
    "UpdatedAt": "2023-09-14T16:22:41Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 6.1,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.4.4"
      },
      "VulnerableVersionRange": "\u003c 1.4.4"
    }
  ]
}