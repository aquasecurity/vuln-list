{
  "Severity": "HIGH",
  "UpdatedAt": "2025-05-08T14:45:49Z",
  "Package": {
    "Ecosystem": "RUBYGEMS",
    "Name": "rack"
  },
  "Advisory": {
    "DatabaseId": 293439,
    "Id": "GSA_kwCzR0hTQS1namg3LXAyZngtOTl2eM4ABHo_",
    "GhsaId": "GHSA-gjh7-p2fx-99vx",
    "References": [
      {
        "Url": "https://github.com/rack/rack/security/advisories/GHSA-gjh7-p2fx-99vx"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-46727"
      },
      {
        "Url": "https://github.com/rack/rack/commit/2bb5263b464b65ba4b648996a579dbd180d2b712"
      },
      {
        "Url": "https://github.com/rack/rack/commit/3f5a4249118d09d199fe480466c8c6717e43b6e3"
      },
      {
        "Url": "https://github.com/rack/rack/commit/cd6b70a1f2a1016b73dc906f924869f4902c2d74"
      },
      {
        "Url": "https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2025-46727.yml"
      },
      {
        "Url": "https://github.com/advisories/GHSA-gjh7-p2fx-99vx"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-gjh7-p2fx-99vx"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-46727"
      }
    ],
    "Description": "## Summary\n\n`Rack::QueryParser` parses query strings and `application/x-www-form-urlencoded` bodies into Ruby data structures without imposing any limit on the number of parameters, allowing attackers to send requests with extremely large numbers of parameters.\n\n## Details\n\nThe vulnerability arises because `Rack::QueryParser` iterates over each `\u0026`-separated key-value pair and adds it to a Hash without enforcing an upper bound on the total number of parameters. This allows an attacker to send a single request containing hundreds of thousands (or more) of parameters, which consumes excessive memory and CPU during parsing.\n\n## Impact\n\nAn attacker can trigger denial of service by sending specifically crafted HTTP requests, which can cause memory exhaustion or pin CPU resources, stalling or crashing the Rack server. This results in full service disruption until the affected worker is restarted.\n\n## Mitigation\n\n- Update to a version of Rack that limits the number of parameters parsed, or\n- Use middleware to enforce a maximum query string size or parameter count, or\n- Employ a reverse proxy (such as Nginx) to limit request sizes and reject oversized query strings or bodies.\n\nLimiting request body sizes and query string lengths at the web server or CDN level is an effective mitigation.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-05-08T14:45:48Z",
    "Severity": "HIGH",
    "Summary": "Rack has an Unbounded-Parameter DoS in Rack::QueryParser",
    "UpdatedAt": "2025-05-09T14:35:13Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.5,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "3.1.14"
      },
      "VulnerableVersionRange": "\u003e= 3.1, \u003c 3.1.14"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "3.0.16"
      },
      "VulnerableVersionRange": "\u003e= 3.0, \u003c 3.0.16"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "2.2.14"
      },
      "VulnerableVersionRange": "\u003c 2.2.14"
    }
  ]
}