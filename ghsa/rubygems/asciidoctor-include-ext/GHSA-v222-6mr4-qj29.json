{
  "Severity": "CRITICAL",
  "UpdatedAt": "2022-03-31T23:27:19Z",
  "Package": {
    "Ecosystem": "RUBYGEMS",
    "Name": "asciidoctor-include-ext"
  },
  "Advisory": {
    "DatabaseId": 14187,
    "Id": "GSA_kwCzR0hTQS12MjIyLTZtcjQtcWoyOc03aw",
    "GhsaId": "GHSA-v222-6mr4-qj29",
    "References": [
      {
        "Url": "https://github.com/jirutka/asciidoctor-include-ext/security/advisories/GHSA-v222-6mr4-qj29"
      },
      {
        "Url": "https://github.com/jirutka/asciidoctor-include-ext/commit/c7ea001a597c7033575342c51483dab7b87ae155"
      },
      {
        "Url": "https://github.com/jirutka/asciidoctor-include-ext/commit/cbaccf3de533cbca224bf61d0b74e4b84d41d8ee"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24803"
      },
      {
        "Url": "https://github.com/rubysec/ruby-advisory-db/blob/master/gems/asciidoctor-include-ext/CVE-2022-24803.yml"
      },
      {
        "Url": "https://github.com/advisories/GHSA-v222-6mr4-qj29"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-v222-6mr4-qj29"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2022-24803"
      }
    ],
    "Description": "### Impact\n\nApplications using [Asciidoctor (Ruby)](https://github.com/asciidoctor/asciidoctor) with [asciidoctor-include-ext](https://github.com/jirutka/asciidoctor-include-ext) (prior to version 0.4.0), which render user-supplied input in AsciiDoc markup, may allow an attacker to execute arbitrary system commands on the host operating system. ~~This attack is possible even when `allow-uri-read` is disabled!~~ (EDIT: itâ€™s not)\n\n\n### Patches\n\nThe vulnerability has been fixed in commit c7ea001 (and further improved in cbaccf3), which is included in version [0.4.0](https://rubygems.org/gems/asciidoctor-include-ext/versions/0.4.0).\n\n### Workarounds\n\n```rb\nrequire 'asciidoctor/include_ext'\n\nclass Asciidoctor::IncludeExt::IncludeProcessor\n  # Overrides superclass private method to mitigate Command Injection\n  # vulnerability in asciidoctor-include-ext \u003c0.4.0.\n  def target_uri?(target)\n    target.downcase.start_with?('http://', 'https://') \\\n      \u0026\u0026 URI.parse(target).is_a?(URI::HTTP)\n  rescue URI::InvalidURIError\n    false\n  end\nend\n```\n\n### References\n\n* https://sakurity.com/blog/2015/02/28/openuri.html\n\n### Credits\n\nThis vulnerability was discovered by Joern Schneeweisz from the GitLab Security Research Team.\n\n\n### For more information\n\nSee commit message c7ea001.\n\nIf you have any questions or comments about this advisory open an issue in [jirutka/asciidoctor-include-ext](https://github.com/jirutka/asciidoctor-include-ext/issues/).",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2022-03-31T23:27:15Z",
    "Severity": "CRITICAL",
    "Summary": "Command Injection vulnerability in asciidoctor-include-ext",
    "UpdatedAt": "2023-05-04T19:32:33Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 10,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.4.0"
      },
      "VulnerableVersionRange": "\u003c 0.4.0"
    }
  ]
}