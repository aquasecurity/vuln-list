{
  "Severity": "MODERATE",
  "UpdatedAt": "2024-12-30T16:46:44Z",
  "Package": {
    "Ecosystem": "RUBYGEMS",
    "Name": "pwpush"
  },
  "Advisory": {
    "DatabaseId": 273726,
    "Id": "GSA_kwCzR0hTQS00ZndqLW02MnEtcHA0N84ABC0-",
    "GhsaId": "GHSA-4fwj-m62q-pp47",
    "References": [
      {
        "Url": "https://github.com/pglombardo/PasswordPusher/security/advisories/GHSA-4fwj-m62q-pp47"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-56733"
      },
      {
        "Url": "https://github.com/rubysec/ruby-advisory-db/blob/master/gems/pwpush/CVE-2024-56733.yml"
      },
      {
        "Url": "https://github.com/advisories/GHSA-4fwj-m62q-pp47"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-4fwj-m62q-pp47"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-56733"
      }
    ],
    "Description": "### Impact\n\nA vulnerability has been reported in Password Pusher where an attacker can copy the session cookie before a user logs out, potentially allowing session hijacking.\n\nAlthough the session token is replaced and invalidated upon logout, if an attacker manages to capture the session cookie before this process, they can use the token to gain unauthorized access to the user's session until the token expires or is manually cleared.\n\nThis vulnerability hinges on the attacker's ability to access the session cookie during an active session, either through a man-in-the-middle attack, by exploiting another vulnerability like XSS, or via direct access to the victim's device.\n\n### Patches\n\nAlthough there is no direct resolution to this vulnerability, it is recommended to always use the latest version of Password Pusher to best mitigate risk.\n\n### Workarounds\n\nIf self-hosting, ensure Password Pusher is hosted exclusively over SSL connections to encrypt traffic and prevent session cookies from being intercepted in transit. Additionally, implement best practices in local security to safeguard user systems, browsers, and data against unauthorized access.\n\nTo further mitigate session hijacking risks, Password Pusher implements the following security measures:\n\n1. **Automatic Session Expiration**: Sessions are automatically expired after 2 hours of inactivity, reducing the window for potential exploitation.\n2. **Session Reset on Login and Logout**: Sessions are fully reset both when a user logs in and logs out, ensuring that session tokens are not reusable post-logout. This practice invalidates old session tokens and issues new ones, minimizing the risk of session hijacking.\n3. **Encrypted Cookies**: Cookies are encrypted using the value of SECRET_KEY_BASE from the application's configuration. This encryption adds a layer of protection against tampering or reading the session cookie's contents if intercepted, although it doesn't prevent the cookie from being used if stolen.\n\n**Note**: While these measures significantly enhance security, they are part of a broader security strategy.\n\n### References\n\n* https://edgeguides.rubyonrails.org/security.html#session-hijacking\n\n### Credits\n\nThank you to [Positive Technologies](https://www.ptsecurity.com/ww-en/) for reporting and working with me to bring this CVE to the community.\n\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-12-30T16:46:43Z",
    "Severity": "MODERATE",
    "Summary": "Password Pusher Allows Session Token Interception Leading to Potential Hijacking",
    "UpdatedAt": "2024-12-31T18:42:51Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 5.7,
      "VectorString": "CVSS:3.1/AV:L/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": ""
      },
      "VulnerableVersionRange": "\u003c= 1.50.3"
    }
  ]
}