{
  "Severity": "HIGH",
  "UpdatedAt": "2024-06-02T22:32:26Z",
  "Package": {
    "Ecosystem": "RUBYGEMS",
    "Name": "activeadmin"
  },
  "Advisory": {
    "DatabaseId": 248215,
    "Id": "GSA_kwCzR0hTQS05bWc2LXg0NXYtaGNmbc4AA8mX",
    "GhsaId": "GHSA-9mg6-x45v-hcfm",
    "References": [
      {
        "Url": "https://github.com/activeadmin/activeadmin/security/advisories/GHSA-9mg6-x45v-hcfm"
      },
      {
        "Url": "https://github.com/activeadmin/activeadmin/pull/8349"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-37031"
      },
      {
        "Url": "https://github.com/activeadmin/activeadmin/releases/tag/v3.2.2"
      },
      {
        "Url": "https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activeadmin/CVE-2024-37031.yml"
      },
      {
        "Url": "https://rubygems.org/gems/activeadmin/versions/3.2.2"
      },
      {
        "Url": "https://github.com/advisories/GHSA-9mg6-x45v-hcfm"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-9mg6-x45v-hcfm"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-37031"
      }
    ],
    "Description": "### Impact\n\nUsers settings their active admin form legends dynamically may be vulnerable to stored XSS, as long as its value can be injected directly by a malicious user.\n\nFor example:\n\n* A public web application allows users to create entities with arbitrary names.\n* Active Admin is used to administrate these entities through a private backend.\n* The form to edit these entities in the private backend has the following shape (note the dynamic `name` value dependent on an attribute of the `resource`):\n\n```ruby\n  form do |f|\n    f.inputs name: resource.name do\n      f.input :name\n      f.input :description\n    end\n\n    f.actions\n  end\n```\n\nThen a malicious user could create an entity with a payload that would get executed in the active admin administrator's browser.\n\nBoth `form` blocks with an implicit or explicit name (i.e., both `form resource.name` or `form name: resource.name` would suffer from the problem), where the value of the name can be arbitrarily set by non admin users.\n\n### Patches\n\nThe problem has been fixed in ActiveAdmin 3.2.2 and ActiveAdmin 4.0.0.beta7.\n\n### Workarounds\n\nUsers can workaround this problem without upgrading by explicitly escaping the form name using an HTML escaping utility. For example:\n\n```ruby\n  form do |f|\n    f.inputs name: ERB::Util.html_escape(resource.name) do\n      f.input :name\n      f.input :description\n    end\n\n    f.actions\n  end\n```\nUpgrading is of course recommended though.\n\n### References\nhttps://owasp.org/www-community/attacks/xss/#stored-xss-attacks",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-06-02T22:32:24Z",
    "Severity": "HIGH",
    "Summary": "activeadmin vulnerable to stored persistent cross-site scripting (XSS) in dynamic form legends",
    "UpdatedAt": "2024-10-28T12:37:01Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.2,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "4.0.0.beta7"
      },
      "VulnerableVersionRange": "\u003e= 4.0.0.beta1, \u003c 4.0.0.beta7"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "3.2.2"
      },
      "VulnerableVersionRange": "\u003c 3.2.2"
    }
  ]
}