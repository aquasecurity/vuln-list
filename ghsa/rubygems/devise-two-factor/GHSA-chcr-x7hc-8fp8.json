{
  "Severity": "MODERATE",
  "UpdatedAt": "2024-01-12T15:13:06Z",
  "Package": {
    "Ecosystem": "RUBYGEMS",
    "Name": "devise-two-factor"
  },
  "Advisory": {
    "DatabaseId": 231072,
    "Id": "GSA_kwCzR0hTQS1jaGNyLXg3aGMtOGZwOM4AA4ag",
    "GhsaId": "GHSA-chcr-x7hc-8fp8",
    "References": [
      {
        "Url": "https://github.com/devise-two-factor/devise-two-factor/security/advisories/GHSA-chcr-x7hc-8fp8"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-0227"
      },
      {
        "Url": "https://github.com/advisories/GHSA-chcr-x7hc-8fp8"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-chcr-x7hc-8fp8"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-0227"
      }
    ],
    "Description": "Devise-Two-Factor does not throttle or otherwise restrict login attempts at the server by default. When combined with the Time-based One Time Password algorithm's (TOTP) inherent entropy limitations, it's possible for an attacker to bypass the 2FA mechanism through brute-force attacks.\n\n### Impact\n\nIf a user's username and password have already been compromised an attacker would be able to try possible TOTP codes and see if they can hit a lucky collision to log in as that user. The user under attack would not necessarily know that their account has been compromised.\n\n### Patches\n\nDevise-Two-Factor has not released any fixes for this vulnerability. This library is open-ended by design and cannot solve this for all applications natively. It's recommended that any application leveraging Devise-Two-Factor implement controls at the application level to mitigate this threat. A non-exhaustive list of possible mitigations can be found below.\n\n#### Mitigations\n\n1. Use the `lockable` strategy from Devise to lock a user after a certain number of failed login attempts. See https://www.rubydoc.info/github/heartcombo/devise/main/Devise/Models/Lockable for more information.\n2. Configure a rate limit for your application, especially on the endpoints used to log in. One such library to accomplish this is [rack-attack](https://rubygems.org/gems/rack-attack).\n3. When displaying authentication errors hide whether validating a username/password combination failed or a two-factor code failed behind a more generic error message.\n\n### Acknowledgements\n\nChristian Reitter ([Radically Open Security](https://www.radicallyopensecurity.com/)) and Chris MacNaughton ([Centauri Solutions](https://centauri.solutions))",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-01-12T15:13:05Z",
    "Severity": "MODERATE",
    "Summary": "Devise-Two-Factor vulnerable to brute force attacks",
    "UpdatedAt": "2024-01-12T15:13:06Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 5,
      "VectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": ""
      },
      "VulnerableVersionRange": "\u003e= 1.0.0, \u003c= 5.0.0"
    }
  ]
}