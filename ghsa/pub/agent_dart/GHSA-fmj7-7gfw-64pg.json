{
  "Severity": "HIGH",
  "UpdatedAt": "2024-10-15T17:33:50Z",
  "Package": {
    "Ecosystem": "PUB",
    "Name": "agent_dart"
  },
  "Advisory": {
    "DatabaseId": 263259,
    "Id": "GSA_kwCzR0hTQS1mbWo3LTdnZnctNjRwZ84ABARb",
    "GhsaId": "GHSA-fmj7-7gfw-64pg",
    "References": [
      {
        "Url": "https://github.com/AstroxNetwork/agent_dart/security/advisories/GHSA-fmj7-7gfw-64pg"
      },
      {
        "Url": "https://github.com/AstroxNetwork/agent_dart/commit/0d200686aabcd9313c7bc3e675cbdc82f6b775cf"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-48915"
      },
      {
        "Url": "https://github.com/AstroxNetwork/agent_dart/blob/f50971dfae3f536c1720f0084f28afbcf5d99cb5/lib/agent/certificate.dart#L162"
      },
      {
        "Url": "https://github.com/AstroxNetwork/agent_dart/blob/main/lib/agent/certificate.dart"
      },
      {
        "Url": "https://github.com/advisories/GHSA-fmj7-7gfw-64pg"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-fmj7-7gfw-64pg"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-48915"
      }
    ],
    "Description": "Certificate verification (in [lib/agent/certificate.dart](https://github.com/AstroxNetwork/agent_dart/blob/main/lib/agent/certificate.dart)) has been found to contain two issues:\n   - During the delegation verification (in [_checkDelegation](https://github.com/AstroxNetwork/agent_dart/blob/f50971dfae3f536c1720f0084f28afbcf5d99cb5/lib/agent/certificate.dart#L162) function) the canister_ranges aren't verified. The impact of not checking the canister_ranges is that a subnet can sign canister responses in behalf of another subnet. You have more details in the IC specification [here](https://internetcomputer.org/docs/current/references/ic-interface-spec#certification-delegation). Also for reference you can check how is this implemented in [the agent-rs](https://github.com/dfinity/agent-rs/blob/608a3f4cfdcdfc5ca1ca74a1b9d33f2137a2d324/ic-agent/src/agent/mod.rs#L903-L914).\n    - The certificate’s timestamp, i.e /time path, is not verified, meaning that the certificate effectively has no expiration time. The [IC spec](https://internetcomputer.org/docs/current/references/ic-interface-spec#http-query) doesn’t specify an expiry times, it gives some suggestions, quoting: \"A reasonable expiry time for timestamps in R.signatures and the certificate Cert is 5 minutes (analogously to the maximum allowed ingress expiry enforced by the IC mainnet). Delegations require expiry times of at least a week since the IC mainnet refreshes the delegations only after replica upgrades which typically happen once a week\". For reference you can check how is this implemented in the agent-rs ([here](https://github.com/dfinity/agent-rs/blob/608a3f4cfdcdfc5ca1ca74a1b9d33f2137a2d324/ic-agent/src/agent/mod.rs#L820) and [here](https://github.com/dfinity/agent-rs/blob/608a3f4cfdcdfc5ca1ca74a1b9d33f2137a2d324/ic-agent/src/agent/mod.rs#L876-L887)).\n\n**Additionally**, seems [replica signed queries](https://internetcomputer.org/blog/features/replica-signed-queries) aren’t implemented",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-10-15T17:33:50Z",
    "Severity": "HIGH",
    "Summary": "Agent Dart is missing certificate verification checks",
    "UpdatedAt": "2025-01-23T09:40:22Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.0.0-dev.29"
      },
      "VulnerableVersionRange": "\u003c= 1.0.0-dev.28"
    }
  ]
}