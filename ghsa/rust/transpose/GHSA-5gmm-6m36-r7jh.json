{
  "Severity": "CRITICAL",
  "UpdatedAt": "2024-04-05T15:41:34Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "transpose"
  },
  "Advisory": {
    "DatabaseId": 240274,
    "Id": "GSA_kwCzR0hTQS01Z21tLTZtMzYtcjdqaM4AA6qS",
    "GhsaId": "GHSA-5gmm-6m36-r7jh",
    "References": [
      {
        "Url": "https://github.com/ejmahler/transpose/issues/11"
      },
      {
        "Url": "https://github.com/ejmahler/transpose/commit/c4bcd39fabca9a31a401d0cc42d4090869b5a37a"
      },
      {
        "Url": "https://rustsec.org/advisories/RUSTSEC-2023-0080.html"
      },
      {
        "Url": "https://github.com/advisories/GHSA-5gmm-6m36-r7jh"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-5gmm-6m36-r7jh"
      }
    ],
    "Description": "Given the function `transpose::transpose`:\n```rust\nfn transpose\u003cT: Copy\u003e(input: \u0026[T], output: \u0026mut [T], input_width: usize, input_height: usize)\n```\n\nThe safety check `input_width * input_height == output.len()` can fail due to `input_width * input_height` overflowing in such a way that it equals `output.len()`.\nAs a result of failing the safety check, memory past the end of `output` is written to. This only occurs in release mode since `*` panics on overflow in debug mode.\n\nExploiting this issue requires the caller to pass `input_width` and `input_height` arguments such that multiplying them overflows, and the overflown result equals the lengths of input and output slices.\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-04-05T15:41:34Z",
    "Severity": "CRITICAL",
    "Summary": "transpose: Buffer overflow due to integer overflow",
    "UpdatedAt": "2024-04-05T15:41:34Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 9.8,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.2.3"
      },
      "VulnerableVersionRange": "\u003e= 0.1.0, \u003c 0.2.3"
    }
  ]
}