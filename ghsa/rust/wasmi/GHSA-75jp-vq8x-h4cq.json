{
  "Severity": "HIGH",
  "UpdatedAt": "2024-03-07T17:26:28Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "wasmi"
  },
  "Advisory": {
    "DatabaseId": 236853,
    "Id": "GSA_kwCzR0hTQS03NWpwLXZxOHgtaDRjcc4AA501",
    "GhsaId": "GHSA-75jp-vq8x-h4cq",
    "References": [
      {
        "Url": "https://github.com/wasmi-labs/wasmi/security/advisories/GHSA-75jp-vq8x-h4cq"
      },
      {
        "Url": "https://github.com/wasmi-labs/wasmi/commit/f7b3200e9f3dc9e2cbca966cb255c228453c792f"
      },
      {
        "Url": "https://github.com/wasmi-labs/wasmi/releases/tag/v0.31.1"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-28123"
      },
      {
        "Url": "https://github.com/advisories/GHSA-75jp-vq8x-h4cq"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-75jp-vq8x-h4cq"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-28123"
      }
    ],
    "Description": "### Summary\n\nIn the WASMI Interpreter, an [Out-of-bounds Buffer Write](https://cwe.mitre.org/data/definitions/787.html) will arise arise if the host calls or resumes a Wasm function with more parameters than the default limit (128), as it will surpass the stack value. This doesnâ€™t affect calls from Wasm to Wasm, only from host to Wasm.\n\n### Impact\n\nAfter conducting an analysis of the dependent Polkadot systems of `wasmi`: [Pallet Contracts](https://github.com/paritytech/polkadot-sdk/tree/master/substrate/frame/contracts), [Parity Signer](https://github.com/paritytech/parity-signer), and [Smoldot](https://github.com/smol-dot/smoldot), we have found that none on those systems have been affected by the issue as they are calling host to Wasm function with a small limited amount of parameters always. \n\n### Mitigations\n\nIf you are using `wasmi` betwen version 0.15.0 and 0.31.0, please update it to the [0.31.1](https://github.com/paritytech/wasmi/releases/tag/v0.31.1) patch release that we just published.\n\n### Workarounds\n\nEnsure no more than 128 parameters can be pass in a call from the host to a Wasm function. \n\n### References\n\nPatch PR: \u003cPR\u003e\n\n### Special thanks\n\nSpecial thanks to Stellar Development Foundation for reporting this security vulnerability.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-03-07T17:26:27Z",
    "Severity": "HIGH",
    "Summary": "Wasmi Out-of-bounds Write for host to Wasm calls with more than 128 Parameters",
    "UpdatedAt": "2025-06-04T00:35:10Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.3,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.31.1"
      },
      "VulnerableVersionRange": "\u003e= 0.15.0, \u003c= 0.31.0"
    }
  ]
}