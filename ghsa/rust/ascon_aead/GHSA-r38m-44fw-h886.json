{
  "Severity": "MODERATE",
  "UpdatedAt": "2025-03-03T20:22:20Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "ascon_aead"
  },
  "Advisory": {
    "DatabaseId": 282702,
    "Id": "GSA_kwCzR0hTQS1yMzhtLTQ0ZnctaDg4Ns4ABFBO",
    "GhsaId": "GHSA-r38m-44fw-h886",
    "References": [
      {
        "Url": "https://github.com/RustCrypto/AEADs/security/advisories/GHSA-r38m-44fw-h886"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-27498"
      },
      {
        "Url": "https://github.com/RustCrypto/AEADs/commit/d1d749ba57e38e65b0e037cd744d0b17f7254037"
      },
      {
        "Url": "https://github.com/advisories/GHSA-r38m-44fw-h886"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-r38m-44fw-h886"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-27498"
      }
    ],
    "Description": "### Summary\nIn `decrypt_in_place_detached`, the decrypted ciphertext (which is the correct ciphertext) is exposed even if the tag is incorrect.\n\n### Details\nThis is because in [decrypt_inplace](https://github.com/RustCrypto/AEADs/blob/8cda109f1128c4c7953a0bb0f53e1056d537e462/ascon-aead/src/asconcore.rs#L350-L364) in asconcore.rs, tag verification causes an error to be returned with the plaintext contents still in `buffer`. The root cause of this vulnerability is similar to https://github.com/RustCrypto/AEADs/security/advisories/GHSA-423w-p2w9-r7vq\n\n### PoC\n```rust\nuse ascon_aead::Tag;\nuse ascon_aead::{Ascon128, Key, Nonce};\nuse ascon_aead::aead::{AeadInPlace, KeyInit};\n\nfn main() {\n\n    let key = Key::\u003cAscon128\u003e::from_slice(b\"very secret key.\");\n    let cipher = Ascon128::new(key);\n\n    let nonce = Nonce::\u003cAscon128\u003e::from_slice(b\"unique nonce 012\"); // 128-bits; unique per message\n\n    let mut buffer: Vec\u003cu8\u003e = Vec::new(); // Buffer needs 16-bytes overhead for authentication tag\n    buffer.extend_from_slice(b\"plaintext message\");\n\n    // Encrypt `buffer` in-place detached, replacing the plaintext contents with ciphertext\n    cipher.encrypt_in_place_detached(nonce, b\"\", \u0026mut buffer).expect(\"encryption failure!\");\n    \n    // Decrypt `buffer` in-place with the wrong tag, ignoring the decryption error\n    let _ = cipher.decrypt_in_place_detached(nonce, b\"\", \u0026mut buffer, Tag::\u003cAscon128\u003e::from_slice(b\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"));\n\n    assert_eq!(\u0026buffer, b\"plaintext message\");\n}\n```\n### Impact\nIf a program continues to use the result of `decrypt_in_place_detached` after a decryption failure, the result will be unauthenticated. This may permit some forms of chosen ciphertext attacks (CCAs).",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-03-03T20:22:19Z",
    "Severity": "MODERATE",
    "Summary": "AEADs/ascon-aead: Plaintext exposed in decrypt_in_place_detached even on tag verification failure",
    "UpdatedAt": "2025-03-03T20:22:20Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.4.3"
      },
      "VulnerableVersionRange": "\u003c= 0.4.2"
    }
  ]
}