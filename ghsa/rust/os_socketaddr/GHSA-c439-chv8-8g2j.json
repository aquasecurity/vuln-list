{
  "Severity": "HIGH",
  "UpdatedAt": "2022-09-02T22:29:41Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "os_socketaddr"
  },
  "Advisory": {
    "DatabaseId": 190869,
    "Id": "GSA_kwCzR0hTQS1jNDM5LWNodjgtOGcyas4AAumV",
    "GhsaId": "GHSA-c439-chv8-8g2j",
    "References": [
      {
        "Url": "https://github.com/a-ba/os_socketaddr/issues/3"
      },
      {
        "Url": "https://github.com/rust-lang/rust/pull/78802"
      },
      {
        "Url": "https://github.com/a-ba/os_socketaddr/commit/1bc7f71d40de069727993a18fdada33eb0b4c94f"
      },
      {
        "Url": "https://rustsec.org/advisories/RUSTSEC-2022-0052.html"
      },
      {
        "Url": "https://github.com/advisories/GHSA-c439-chv8-8g2j"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-c439-chv8-8g2j"
      }
    ],
    "Description": "The [`os_socketaddr`](https://crates.io/crates/os_socketaddr) crate has assumed `std::net::SocketAddrV4` and `std::net::SocketAddrV6` have the same memory layout as the system C representation `sockaddr`. It has simply casted the pointers to convert the socket addresses to the system representation.\n\nThese layout were [changed into idiomatic rust types](https://github.com/rust-lang/rust/pull/78802) in nightly `std`. Starting from rustc 1.64 the affected versions of this crate will have undefined behaviour.\n\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2022-09-02T22:29:41Z",
    "Severity": "HIGH",
    "Summary": "`os_socketaddr` invalidly assumes the memory layout of std::net::SocketAddr",
    "UpdatedAt": "2023-01-08T05:01:29Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.2.2"
      },
      "VulnerableVersionRange": "\u003c 0.2.2"
    }
  ]
}