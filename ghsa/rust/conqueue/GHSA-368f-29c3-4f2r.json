{
  "Severity": "HIGH",
  "UpdatedAt": "2021-08-10T17:36:55Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "conqueue"
  },
  "Advisory": {
    "DatabaseId": 5054,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTM2OGYtMjljMy00ZjJy",
    "GhsaId": "GHSA-368f-29c3-4f2r",
    "References": [
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36437"
      },
      {
        "Url": "https://rustsec.org/advisories/RUSTSEC-2020-0117.html"
      },
      {
        "Url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/conqueue/RUSTSEC-2020-0117.md"
      },
      {
        "Url": "https://github.com/longshorej/conqueue/commit/1e462c32e7933821ddb26dc49fd4ffa5aeca97b8"
      },
      {
        "Url": "https://github.com/advisories/GHSA-368f-29c3-4f2r"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-368f-29c3-4f2r"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2020-36437"
      }
    ],
    "Description": "Affected versions of this crate unconditionally implemented `Send`/`Sync` for `QueueSender\u003cT\u003e`, allowing to send non-Send `T` to other threads by invoking `(\u0026QueueSender\u003cT\u003e).send()`.\n\nThis fails to prevent users from creating data races by sending types like `Rc\u003cT\u003e` or `Arc\u003cCell\u003cT\u003e\u003e` to other threads, which can lead to memory corruption. The flaw was corrected in commit `1e462c3` by imposing `T: Send` to both `Send`/`Sync` impls for `QueueSender\u003cT\u003e`/`QueueReceiver\u003cT\u003e`.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2021-08-25T20:58:50Z",
    "Severity": "HIGH",
    "Summary": "Data race in conqueue",
    "UpdatedAt": "2023-06-22T05:03:24Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 8.1,
      "VectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.4.0"
      },
      "VulnerableVersionRange": "\u003c 0.4.0"
    }
  ]
}