{
  "Severity": "HIGH",
  "UpdatedAt": "2022-06-17T00:12:36Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "mopa"
  },
  "Advisory": {
    "DatabaseId": 178987,
    "Id": "GSA_kwCzR0hTQS04bXY1LTd4OTUtN3djZs4AArsr",
    "GhsaId": "GHSA-8mv5-7x95-7wcf",
    "References": [
      {
        "Url": "https://github.com/chris-morgan/mopa/issues/13"
      },
      {
        "Url": "https://rustsec.org/advisories/RUSTSEC-2021-0095.html"
      },
      {
        "Url": "https://github.com/advisories/GHSA-8mv5-7x95-7wcf"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-8mv5-7x95-7wcf"
      }
    ],
    "Description": "The `mopa` crate redefines the deprecated `TraitObject` struct from `core::raw` like so:\n```rust\n#[repr(C)]\n#[derive(Copy, Clone)]\n#[doc(hidden)]\npub struct TraitObject {\n    pub data: *mut (),\n    pub vtable: *mut (),\n}\n```\nThis is done to then transmute a reference to a trait object (`\u0026dyn Trait` for any trait `Trait`) into this struct and retrieve the `data` field for the purpose of downcasting. This is used to implement `downcast_ref_unchecked()`, in terms of which `downcast_ref()` is also implemented. Same goes for mutable reference downcasting and `Box` downcasting.\n\nThe Rust compiler explicitly reserves the right to change the memory layout of `\u0026dyn Trait` for any trait `Trait`. The worst case scenario is that it swaps `data` and `vtable`, making an executable location breach and compromisation of ASLR possible, since reads from `data` would read `vtable` instead. Likewise, arbitrary code execution is also theoretically possible if reads of `vtable` generated by the compiler read `data` instead.\n\nWhile, as of Rust 1.52, this unsound assumption still holds true, updating the compiler may silently create UB in a crate which previously compiled and run without issues, compromising the security of builds which are believed to be reproducible.\n\nA potential strategy to resolve this has already been suggested in an issue on the GitHub repository of the crate.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2022-06-17T00:12:33Z",
    "Severity": "HIGH",
    "Summary": "`mopa` is technically unsound",
    "UpdatedAt": "2023-06-13T18:35:52Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": ""
      },
      "VulnerableVersionRange": "\u003c= 0.2.2"
    }
  ]
}