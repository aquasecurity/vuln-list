{
  "Severity": "MODERATE",
  "UpdatedAt": "2024-11-12T20:53:55Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "simd-json-derive"
  },
  "Advisory": {
    "DatabaseId": 267258,
    "Id": "GSA_kwCzR0hTQS1wcXB3LTg5dzUtODJ2Nc4ABBP6",
    "GhsaId": "GHSA-pqpw-89w5-82v5",
    "References": [
      {
        "Url": "https://github.com/simd-lite/simd-json-derive/issues/67"
      },
      {
        "Url": "https://rustsec.org/advisories/RUSTSEC-2023-0087.html"
      },
      {
        "Url": "https://github.com/advisories/GHSA-pqpw-89w5-82v5"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-pqpw-89w5-82v5"
      }
    ],
    "Description": "An invalid use of `MaybeUninit::uninit().assume_init()` in `simd-json-derive`'s derive macro can cause undefined behavior. The original code used `MaybeUninit` to avoid initialisation of the struct and then set the fields using `ptr::write`. The undefined behavior triggered by this misuse of `MaybeUninit` can lead to invlaid memory access and panics in binaries compiled in release mode (aka simd-json-derive prior to version 0.12 has UB and optimizes into some nonsense)\n\nThe version `0.12.0` removes this section of code, avoiding the use of MaybeUninit alltogether.\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-11-12T20:53:54Z",
    "Severity": "MODERATE",
    "Summary": "`simd-json-derive` vulnerable to `MaybeUninit` misuse",
    "UpdatedAt": "2024-11-12T20:53:55Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.12.0"
      },
      "VulnerableVersionRange": "\u003c 0.12.0"
    }
  ]
}