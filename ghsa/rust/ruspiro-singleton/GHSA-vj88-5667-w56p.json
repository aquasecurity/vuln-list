{
  "Severity": "MODERATE",
  "UpdatedAt": "2021-08-06T19:10:18Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "ruspiro-singleton"
  },
  "Advisory": {
    "DatabaseId": 5031,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXZqODgtNTY2Ny13NTZw",
    "GhsaId": "GHSA-vj88-5667-w56p",
    "References": [
      {
        "Url": "https://github.com/RusPiRo/ruspiro-singleton/issues/10"
      },
      {
        "Url": "https://rustsec.org/advisories/RUSTSEC-2020-0115.html"
      },
      {
        "Url": "https://github.com/advisories/GHSA-vj88-5667-w56p"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-vj88-5667-w56p"
      }
    ],
    "Description": "`Singleton\u003cT\u003e` is meant to be a static object that can be initialized lazily. In\norder to satisfy the requirement that `static` items must implement `Sync`,\n`Singleton` implemented both `Sync` and `Send` unconditionally.\n\nThis allows for a bug where non-`Sync` types such as `Cell` can be used in\nsingletons and cause data races in concurrent programs.\n\nThe flaw was corrected in commit `b0d2bd20e` by adding trait bounds, requiring\nthe contaiend type to implement `Sync`.\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2021-08-25T21:00:11Z",
    "Severity": "MODERATE",
    "Summary": "Singleton lacks bounds on Send and Sync.",
    "UpdatedAt": "2023-01-09T05:05:05Z",
    "WithdrawnAt": "2021-08-24T17:44:58Z",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.4.1"
      },
      "VulnerableVersionRange": "\u003c 0.4.1"
    }
  ]
}