{
  "Severity": "MODERATE",
  "UpdatedAt": "2025-02-03T17:56:49Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "openssl"
  },
  "Advisory": {
    "DatabaseId": 278917,
    "Id": "GSA_kwCzR0hTQS1ycG1qLXJwZ2otcW1wbc4ABEGF",
    "GhsaId": "GHSA-rpmj-rpgj-qmpm",
    "References": [
      {
        "Url": "https://github.com/sfackler/rust-openssl/security/advisories/GHSA-rpmj-rpgj-qmpm"
      },
      {
        "Url": "https://github.com/sfackler/rust-openssl/pull/2360"
      },
      {
        "Url": "https://github.com/sfackler/rust-openssl/commit/f014afb230de4d77bc79dea60e7e58c2f47b60f2"
      },
      {
        "Url": "https://rustsec.org/advisories/RUSTSEC-2025-0004.html"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-24898"
      },
      {
        "Url": "https://crates.io/crates/openssl"
      },
      {
        "Url": "https://lists.debian.org/debian-lts-announce/2025/02/msg00009.html"
      },
      {
        "Url": "https://github.com/advisories/GHSA-rpmj-rpgj-qmpm"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-rpmj-rpgj-qmpm"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-24898"
      }
    ],
    "Description": "### Impact\n`ssl::select_next_proto` can return a slice pointing into the `server` argument's buffer but with a lifetime bound to the `client` argument. In situations where the `server` buffer's lifetime is shorter than the `client` buffer's, this can cause a use after free. This could cause the server to crash or to return arbitrary memory contents to the client.\n\n### Patches\n`openssl` 0.10.70 fixes the signature of `ssl::select_next_proto` to properly constrain the output buffer's lifetime to that of both input buffers.\n\n### Workarounds\nIn standard usage of `ssl::select_next_proto` in the callback passed to `SslContextBuilder::set_alpn_select_callback`, code is only affected if the `server` buffer is constructed *within* the callback. For example:\n\nNot vulnerable - the server buffer has a `'static` lifetime:\n```rust\nbuilder.set_alpn_select_callback(|_, client_protos| {\n    ssl::select_next_proto(b\"\\x02h2\", client_protos).ok_or_else(AlpnError::NOACK)\n});\n```\n\nNot vulnerable - the server buffer outlives the handshake:\n```rust\nlet server_protos = b\"\\x02h2\".to_vec();\nbuilder.set_alpn_select_callback(|_, client_protos| {\n    ssl::select_next_proto(\u0026server_protos, client_protos).ok_or_else(AlpnError::NOACK)\n});\n```\n\nVulnerable - the server buffer is freed when the callback returns:\n```rust\nbuilder.set_alpn_select_callback(|_, client_protos| {\n    let server_protos = b\"\\x02h2\".to_vec();\n    ssl::select_next_proto(\u0026server_protos, client_protos).ok_or_else(AlpnError::NOACK)\n});\n```\n\n### References\nhttps://github.com/sfackler/rust-openssl/pull/2360",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-02-03T17:56:46Z",
    "Severity": "MODERATE",
    "Summary": "rust-openssl ssl::select_next_proto use after free",
    "UpdatedAt": "2025-02-11T09:30:32Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.10.70"
      },
      "VulnerableVersionRange": "\u003e= 0.10.0, \u003c 0.10.70"
    }
  ]
}