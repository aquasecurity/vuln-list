{
  "Severity": "MODERATE",
  "UpdatedAt": "2022-06-17T00:18:09Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "rust-embed"
  },
  "Advisory": {
    "DatabaseId": 178997,
    "Id": "GSA_kwCzR0hTQS1jZ3c2LWYzbWotaDc0Ms4AArs1",
    "GhsaId": "GHSA-cgw6-f3mj-h742",
    "References": [
      {
        "Url": "https://github.com/pyros2097/rust-embed/issues/159"
      },
      {
        "Url": "https://rustsec.org/advisories/RUSTSEC-2021-0126.html"
      },
      {
        "Url": "https://github.com/advisories/GHSA-cgw6-f3mj-h742"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-cgw6-f3mj-h742"
      }
    ],
    "Description": "When running in debug mode and the `debug-embed` (off by default) feature is\nnot enabled, the generated `get` method does not check that the input path is\na child of the folder given. \n\nThis allows attackers to read arbitrary files in the file system if they have\ncontrol over the filename given. The following code will print the contents of\nyour `/etc/passwd` if adjusted with a correct number of `../`s depending on\nwhere it is run from.\n\n```rust\n#[derive(rust_embed::RustEmbed)]\n#[folder = \"src/\"]\npub struct Asset;\n\nfn main() {\n    let d = Asset::get(\"../../../etc/passwd\").unwrap().data;\n    println!(\"{}\", String::from_utf8_lossy(\u0026d));\n}\n```\n\nThe flaw was corrected by canonicalizing the input filename and ensuring that\nit starts with the canonicalized folder path.\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2022-06-17T00:18:08Z",
    "Severity": "MODERATE",
    "Summary": "RustEmbed generated `get` method allows for directory traversal when reading files from disk",
    "UpdatedAt": "2023-01-12T05:01:09Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "6.3.0"
      },
      "VulnerableVersionRange": "\u003c 6.3.0"
    }
  ]
}