{
  "Severity": "HIGH",
  "UpdatedAt": "2023-12-13T13:32:39Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "wasmer-cli"
  },
  "Advisory": {
    "DatabaseId": 228258,
    "Id": "GSA_kwCzR0hTQS00bXE0LTdydzMtdm01as4AA3ui",
    "GhsaId": "GHSA-4mq4-7rw3-vm5j",
    "References": [
      {
        "Url": "https://github.com/wasmerio/wasmer/security/advisories/GHSA-4mq4-7rw3-vm5j"
      },
      {
        "Url": "https://github.com/wasmerio/wasmer/issues/4267"
      },
      {
        "Url": "https://github.com/advisories/GHSA-4mq4-7rw3-vm5j"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-4mq4-7rw3-vm5j"
      }
    ],
    "Description": "### Summary\nAs of Wasmer version v4.2.3, Wasm programs can access the filesystem outside of the sandbox.\n\n### Details\nhttps://github.com/wasmerio/wasmer/issues/4267\n\n### PoC\nA minimal Rust program:\n\n```\nfn main() {\n    let f = std::fs::OpenOptions::new()\n        .write(true)\n        .create_new(true)\n        .open(\"abc\")\n        .unwrap();\n}\n```\n\nThis should be compiled with `cargo build --target wasm32-wasi`. The compiled program, when run with wasmer WITHOUT `--dir`, can still create a file in the working directory.\n\n### Impact\nService providers running untrusted Wasm code on Wasmer can unexpectedly expose the host filesystem.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2023-12-13T13:32:38Z",
    "Severity": "HIGH",
    "Summary": "Filesystem sandbox not enforced",
    "UpdatedAt": "2023-12-13T13:32:39Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 8.4,
      "VectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "4.2.4"
      },
      "VulnerableVersionRange": "\u003e= 3.0.0, \u003c 4.2.4"
    }
  ]
}