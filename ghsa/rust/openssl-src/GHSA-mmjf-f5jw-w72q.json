{
  "Severity": "HIGH",
  "UpdatedAt": "2022-06-17T15:16:50Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "openssl-src"
  },
  "Advisory": {
    "DatabaseId": 7012,
    "Id": "GSA_kwCzR0hTQS1tbWpmLWY1anctdzcycc0bZA",
    "GhsaId": "GHSA-mmjf-f5jw-w72q",
    "References": [
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2021-4044"
      },
      {
        "Url": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=758754966791c537ea95241438454aa86f91f256"
      },
      {
        "Url": "https://www.openssl.org/news/secadv/20211214.txt"
      },
      {
        "Url": "https://rustsec.org/advisories/RUSTSEC-2021-0129.html"
      },
      {
        "Url": "https://security.netapp.com/advisory/ntap-20211229-0003/"
      },
      {
        "Url": "https://git.openssl.org/gitweb/?p=openssl.git%3Ba=commitdiff%3Bh=758754966791c537ea95241438454aa86f91f256"
      },
      {
        "Url": "https://github.com/advisories/GHSA-mmjf-f5jw-w72q"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-mmjf-f5jw-w72q"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2021-4044"
      }
    ],
    "Description": "Internally libssl in OpenSSL calls X509_verify_cert() on the client side to verify a certificate supplied by a server. That function may return a negative return value to indicate an internal error (for example out of memory). Such a negative return value is mishandled by OpenSSL and will cause an IO function (such as SSL_connect() or SSL_do_handshake()) to not indicate success and a subsequent call to SSL_get_error() to return the value SSL_ERROR_WANT_RETRY_VERIFY. This return value is only supposed to be returned by OpenSSL if the application has previously called SSL_CTX_set_cert_verify_callback(). Since most applications do not do this the SSL_ERROR_WANT_RETRY_VERIFY return value from SSL_get_error() will be totally unexpected and applications may not behave correctly as a result. The exact behaviour will depend on the application but it could result in crashes, infinite loops or other similar incorrect responses. This issue is made more serious in combination with a separate bug in OpenSSL 3.0 that will cause X509_verify_cert() to indicate an internal error when processing a certificate chain. This will occur where a certificate does not include the Subject Alternative Name extension but where a Certificate Authority has enforced name constraints. This issue can occur even with valid chains. By combining the two issues an attacker could induce incorrect, application dependent behaviour. Fixed in OpenSSL 3.0.1 (Affected 3.0.0).",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2021-12-15T00:00:42Z",
    "Severity": "HIGH",
    "Summary": "Invalid handling of `X509_verify_cert()` internal errors in libssl",
    "UpdatedAt": "2023-11-09T16:44:21Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.5,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "300.0.4"
      },
      "VulnerableVersionRange": "\u003e= 300.0.0, \u003c 300.0.4"
    }
  ]
}