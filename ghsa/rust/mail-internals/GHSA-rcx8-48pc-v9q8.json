{
  "Severity": "MODERATE",
  "UpdatedAt": "2023-08-24T22:20:48Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "mail-internals"
  },
  "Advisory": {
    "DatabaseId": 219101,
    "Id": "GSA_kwCzR0hTQS1yY3g4LTQ4cGMtdjlxOM4AA1fd",
    "GhsaId": "GHSA-rcx8-48pc-v9q8",
    "References": [
      {
        "Url": "https://github.com/rustsec/advisory-db/blob/main/crates/mail-internals/RUSTSEC-2023-0054.md"
      },
      {
        "Url": "https://rustsec.org/advisories/RUSTSEC-2023-0054.html"
      },
      {
        "Url": "https://github.com/advisories/GHSA-rcx8-48pc-v9q8"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-rcx8-48pc-v9q8"
      }
    ],
    "Description": "Incorrect reallocation logic in the function [`vec_insert_bytes`](https://docs.rs/mail-internals/0.2.3/mail_internals/utils/fn.vec_insert_bytes.html) causes a use-after-free.\n\nThis function does not have to be called directly to trigger the vulnerability because many methods on [`EncodingWriter`](https://docs.rs/mail-internals/0.2.3/mail_internals/encoder/struct.EncodingWriter.html) call this function internally.\n\nThe mail-\\* suite is unmaintained and the upstream sources have been actively vandalised.\nA fixed `mail-internals-ng` (and `mail-headers-ng` and `mail-core-ng`) crate has been published which fixes this, and a dependency on another unsound crate.\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2023-08-24T22:20:47Z",
    "Severity": "MODERATE",
    "Summary": "mail-internals use-after-free vulnerability in `vec_insert_bytes`",
    "UpdatedAt": "2023-08-24T22:20:48Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": ""
      },
      "VulnerableVersionRange": "\u003e= 0.2.0, \u003c= 0.2.3"
    }
  ]
}