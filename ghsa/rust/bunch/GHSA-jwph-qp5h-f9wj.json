{
  "Severity": "HIGH",
  "UpdatedAt": "2021-08-09T21:34:28Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "bunch"
  },
  "Advisory": {
    "DatabaseId": 5041,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWp3cGgtcXA1aC1mOXdq",
    "GhsaId": "GHSA-jwph-qp5h-f9wj",
    "References": [
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36450"
      },
      {
        "Url": "https://rustsec.org/advisories/RUSTSEC-2020-0130.html"
      },
      {
        "Url": "https://github.com/krl/bunch/issues/1"
      },
      {
        "Url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/bunch/RUSTSEC-2020-0130.md"
      },
      {
        "Url": "https://github.com/advisories/GHSA-jwph-qp5h-f9wj"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-jwph-qp5h-f9wj"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2020-36450"
      }
    ],
    "Description": "An issue was discovered in the bunch crate through 2020-11-12 for Rust. \nAffected versions of this crate unconditionally implements `Send`/`Sync` for `Bunch\u003cT\u003e`.\nThis allows users to insert `T: !Sync` to `Bunch\u003cT\u003e`. It is possible to create a data race to a `T: !Sync` by invoking the `Bunch::get()` API (which returns `\u0026T`) from multiple threads. It is also possible to send `T: !Send` to other threads by inserting `T` inside `Bunch\u003cT\u003e` and sending `Bunch\u003cT\u003e` to another thread, allowing to create a data race by inserting types like `T = Rc\u003c_\u003e`.\n\nSuch data races can lead to memory corruption.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2021-08-25T20:59:18Z",
    "Severity": "HIGH",
    "Summary": "Data races in bunch",
    "UpdatedAt": "2023-02-01T05:06:12Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 8.1,
      "VectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": ""
      },
      "VulnerableVersionRange": "\u003c= 0.1.0"
    }
  ]
}