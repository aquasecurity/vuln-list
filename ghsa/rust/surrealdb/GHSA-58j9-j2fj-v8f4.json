{
  "Severity": "HIGH",
  "UpdatedAt": "2024-01-19T20:31:23Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "surrealdb"
  },
  "Advisory": {
    "DatabaseId": 231745,
    "Id": "GSA_kwCzR0hTQS01OGo5LWoyZmotdjhmNM4AA4lB",
    "GhsaId": "GHSA-58j9-j2fj-v8f4",
    "References": [
      {
        "Url": "https://github.com/surrealdb/surrealdb/security/advisories/GHSA-58j9-j2fj-v8f4"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2023-43669"
      },
      {
        "Url": "https://github.com/snapview/tungstenite-rs/issues/376"
      },
      {
        "Url": "https://github.com/surrealdb/surrealdb/pull/2807"
      },
      {
        "Url": "https://github.com/surrealdb/surrealdb/commit/87859158d3750b03564613de70b5ec4ae090549d"
      },
      {
        "Url": "https://rustsec.org/advisories/RUSTSEC-2023-0065.html"
      },
      {
        "Url": "https://github.com/advisories/GHSA-58j9-j2fj-v8f4"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-58j9-j2fj-v8f4"
      }
    ],
    "Description": "SurrealDB depends on the `tungstenite` and `tokio-tungstenite` crates used by the `axum` crate, which handles connections to the SurrealDB WebSocket interface. On versions before `0.20.1`, the `tungstenite` crate presented an issue which allowed the parsing of HTTP headers during the client handshake to continuously consume high CPU when the headers were very long. All affected crates have been updated in SurrealDB version `1.1.0`.\n\nFrom the original advisory for [CVE-2023-43669](https://nvd.nist.gov/vuln/detail/CVE-2023-43669):\n\"The Tungstenite crate through 0.20.0 for Rust allows remote attackers to cause a denial of service (minutes of CPU consumption) via an excessive length of an HTTP header in a client handshake. The length affects both how many times a parse is attempted (e.g., thousands of times) and the average amount of data for each parse attempt (e.g., millions of bytes).\"\n\n### Impact\n\nA remote unauthenticated attacker may cause a SurrealDB server that exposes its WebSocket interface to consume high CPU by sending an HTTP request with a very long header to the WebSocket interface, potentially leading to denial of service.\n\n### Patches\n\n- Version 1.1.0 and later are not affected by this issue.\n\n### Workarounds\n\nUsers unable to update may be able to limit access to the WebSocket interface (i.e. the `/rpc` endpoint) via reverse proxy if not in use or only used by a limited number of trusted clients. Alternatively, a reverse proxy may be used to strip or truncate request headers exceeding a reasonable length before reaching the SurrealDB server.\n\n### References\n\n- #2807\n- https://nvd.nist.gov/vuln/detail/CVE-2023-43669\n- https://rustsec.org/advisories/RUSTSEC-2023-0065.html\n- https://github.com/snapview/tungstenite-rs/issues/376",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-01-19T20:31:21Z",
    "Severity": "HIGH",
    "Summary": "SurrealDB vulnerable to Uncontrolled CPU Consumption via WebSocket Interface",
    "UpdatedAt": "2024-01-19T20:31:23Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.5,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.1.0"
      },
      "VulnerableVersionRange": "\u003c 1.1.0"
    }
  ]
}