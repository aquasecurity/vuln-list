{
  "Severity": "CRITICAL",
  "UpdatedAt": "2025-04-11T14:07:36Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "surrealdb"
  },
  "Advisory": {
    "DatabaseId": 289653,
    "Id": "GSA_kwCzR0hTQS1jY2ozLTVwOTMtOHA0Ms4ABGt1",
    "GhsaId": "GHSA-ccj3-5p93-8p42",
    "References": [
      {
        "Url": "https://github.com/surrealdb/surrealdb/security/advisories/GHSA-ccj3-5p93-8p42"
      },
      {
        "Url": "https://github.com/advisories/GHSA-ccj3-5p93-8p42"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-ccj3-5p93-8p42"
      }
    ],
    "Description": "The SurrealDB command-line tool allows exporting databases through the `export` command. It was discovered that table or field names are not properly sanitized in exports, leading to a SurrealQL injection when the backup is reimported.\n\nFor the injection to occur, an authenticated System User with `OWNER` or `EDITOR` roles needs to create tables or fields with malicious names containing SurrealQL, subsequently exported using the `export` operation\n\nThe attacker could achieve a privilege escalation and root level access to the SurrealDB instance if a higher privileged user subsequently performs the `import` operation. \n\nFurthermore, applications using SurrealDB that allow its users to define custom fields or tables are at risk of a universal second order SurrealQL injection, even if query parameters are properly sanitized. \n\nThis issue was discovered and patched during an code audit and penetration test of SurrealDB by cure53, the severity defined within cure53's preliminary finding is Critical, matched by our CVSS v4 assessment.\n\n### Impact\nThis attack can be used to perform privilege escalation and complete takeover (root access) of the SurrealDB instance, as well as being able to perform SurrealQL injection attacks against co-tenanted applications where SurrealDB is used as a shared backend for multiple applications.\n\n### Patches\nA patch has been created that addresses the issue by fixing the bugs in the exporter which failed to escape some characters properly.\n\n- Versions 2.0.5, 2.1.5, 2.2.2 and later are not affected by this issue.\n\n\n### Workarounds\nFor SurrealDB users that are unable to upgrade, users that are looking to perform `import` operations must manually inspect the exported data for injected statements, prior to importing. \n\n\n### References\n[SurrealDB Documentation - Export](https://surrealdb.com/docs/surrealdb/cli/export)\n[SurrealDB Documentation - Import](https://surrealdb.com/docs/surrealdb/cli/import)\n[SurrealDB Documentation - Authentication](https://surrealdb.com/docs/surrealdb/security/authentication)",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-04-11T14:07:34Z",
    "Severity": "CRITICAL",
    "Summary": "SurrealDB server-takeover via SurrealQL injection on backup import",
    "UpdatedAt": "2025-04-11T14:07:36Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "2.0.5"
      },
      "VulnerableVersionRange": "\u003c 2.0.5"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "2.1.5"
      },
      "VulnerableVersionRange": "\u003e= 2.1.0, \u003c 2.1.5"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "2.2.2"
      },
      "VulnerableVersionRange": "\u003e= 2.2.0, \u003c 2.2.2"
    }
  ]
}