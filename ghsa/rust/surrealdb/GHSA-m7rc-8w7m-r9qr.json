{
  "Severity": "MODERATE",
  "UpdatedAt": "2025-04-10T21:07:45Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "surrealdb"
  },
  "Advisory": {
    "DatabaseId": 289539,
    "Id": "GSA_kwCzR0hTQS1tN3JjLTh3N20tcjlxcs4ABGsD",
    "GhsaId": "GHSA-m7rc-8w7m-r9qr",
    "References": [
      {
        "Url": "https://github.com/surrealdb/surrealdb/security/advisories/GHSA-m7rc-8w7m-r9qr"
      },
      {
        "Url": "https://github.com/advisories/GHSA-m7rc-8w7m-r9qr"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-m7rc-8w7m-r9qr"
      }
    ],
    "Description": "In order to prevent DoS situations due to infinite recursions, SurrealDB implements a limit of nested calls for both native functions and embedded JavaScript functions.\n\nHowever, in SurrealDB instances with embedded scripting functions enabled, it was found that this limit can be circumvented by utilizing both at the same time. If a native function contains JavaScript which issues a new query that calls that function, the recursion limit is not triggered.\n\nOnce executed, SurrealDB will follow the path of infinite recursions until the system runs out of memory, prior to the recursion limit being triggered.\n\nThis vulnerability can only affect SurrealDB servers explicitly enabling the scripting capability with `--allow-scripting` or \n`--allow-all` and equivalent environment variables `SURREAL_CAPS_ALLOW_SCRIPT=true` and `SURREAL_CAPS_ALLOW_ALL=true`.\n\nThis issue was discovered and patched during an code audit and penetration test of SurrealDB by cure53, the severity defined within cure53's preliminary finding is Medium, matched by our CVSS v4 assessment.\n\n### Impact\nFor SurrealDB instances with embedded scripting functions enabled, this attack could be used to perform a DoS attack on the server by an authenticated user. \n\n### Patches\nA patch has been created that further limits scripting function call limit recursion depth and disallows multiple calls to `surreadb.query()` to run in parallel in a scripting function.\n\n- Versions 2.0.5, 2.1.5, 2.2.2 and later are not affected by this issue.\n\n### Workarounds\nDeny execution of embedded scripting functions through the configuration of [capabilities](https://surrealdb.com/docs/surrealdb/security/capabilities#capabilities) by starting SurrealDB with the `--deny-scripting` flag or the equivalent environment variable `SURREAL_CAPS_DENY_SCRIPT=true`. This has a usability implication, although scripting functions are disabled by default.\n\n### References\n[SurrealDB Documentation - Capabilities](https://surrealdb.com/docs/surrealdb/security/capabilities)\n[SurrealQL Documentation - Scripting Functions](https://surrealdb.com/docs/surrealql/functions/script)",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-04-10T21:07:44Z",
    "Severity": "MODERATE",
    "Summary": "SurrealDB vulnerable to memory exhaustion via nested functions and scripts",
    "UpdatedAt": "2025-04-10T21:08:01Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "2.0.5"
      },
      "VulnerableVersionRange": "\u003c 2.0.5"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "2.1.5"
      },
      "VulnerableVersionRange": "\u003e= 2.1.0, \u003c 2.1.5"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "2.2.2"
      },
      "VulnerableVersionRange": "\u003e= 2.2.0, \u003c 2.2.2"
    }
  ]
}