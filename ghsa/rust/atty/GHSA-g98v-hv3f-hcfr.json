{
  "Severity": "LOW",
  "UpdatedAt": "2023-06-30T20:22:03Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "atty"
  },
  "Advisory": {
    "DatabaseId": 213635,
    "Id": "GSA_kwCzR0hTQS1nOTh2LWh2M2YtaGNmcs4AA0KD",
    "GhsaId": "GHSA-g98v-hv3f-hcfr",
    "References": [
      {
        "Url": "https://github.com/softprops/atty/issues/50"
      },
      {
        "Url": "https://github.com/softprops/atty/pull/51"
      },
      {
        "Url": "https://rustsec.org/advisories/RUSTSEC-2021-0145.html"
      },
      {
        "Url": "https://github.com/advisories/GHSA-g98v-hv3f-hcfr"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-g98v-hv3f-hcfr"
      }
    ],
    "Description": "On windows, `atty` dereferences a potentially unaligned pointer.\n\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\n\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\n\n# atty is Unmaintained\n\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\n\nLast release of `atty` was almost 3 years ago.\n\n## Possible Alternative(s)\n\nThe below list has not been vetted in any way and may or may not contain alternatives;\n\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n \n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\"\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2023-06-30T20:21:59Z",
    "Severity": "LOW",
    "Summary": "atty potential unaligned read",
    "UpdatedAt": "2023-07-10T19:11:44Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": ""
      },
      "VulnerableVersionRange": "\u003c= 0.2.14"
    }
  ]
}