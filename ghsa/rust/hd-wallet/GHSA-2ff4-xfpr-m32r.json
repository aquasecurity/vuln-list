{
  "Severity": "MODERATE",
  "UpdatedAt": "2024-12-18T15:51:26Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "hd-wallet"
  },
  "Advisory": {
    "DatabaseId": 272588,
    "Id": "GSA_kwCzR0hTQS0yZmY0LXhmcHItbTMycs4ABCjM",
    "GhsaId": "GHSA-2ff4-xfpr-m32r",
    "References": [
      {
        "Url": "https://github.com/LFDT-Lockness/hd-wallet/security/advisories/GHSA-2ff4-xfpr-m32r"
      },
      {
        "Url": "https://github.com/LFDT-Lockness/hd-wallet/commit/a7e37704600ee7c737dbb02db08814dd2d15389d"
      },
      {
        "Url": "https://github.com/advisories/GHSA-2ff4-xfpr-m32r"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-2ff4-xfpr-m32r"
      }
    ],
    "Description": "### Impact\n\u003c!-- _What kind of vulnerability is it? Who is impacted?_ --\u003e\n\n**Impacted are the only ones who use [`hd_wallet::Slip10Like`](https://docs.rs/hd-wallet/0.5.1/hd_wallet/struct.Slip10Like.html) or [`slip_10`](https://docs.rs/slip-10/latest/slip_10/) derivation method instantiated with curves other than secp256k1 and secp256r1.**\n\n`hd_wallet` crate used to provide `Slip10Like` derivation method, which is also provided in `slip-10` crate as a default derivation method. It's based on [slip10](https://github.com/satoshilabs/slips/blob/master/slip-0010.md) method that searches for a valid child key in an infinite loop until it's found.\n\nTheoretically, this could be exploited by an attacker by finding a derivation path that would force someone to execute a lot of iterations of this loop to find a valid child key. This attack, however, requires the probability of getting an invalid scalar from random 32 bytes to be high. Slip10 is protected from this attack as it's only defined on secp256k1 and secp256r1 curves, for which such probability is very low:\n\n- For secp256k1, probability is $\u003c 2^{-127}$. This means that a loop with 2 or more iterations is vanishingly impossible.\n- For secp256r1, probability is $\u003c 2^{-32}$. This means that a loop with 5 or more iterations is vanishingly impossible.\n\nWhile standard curves are safe to use with slip10, we used to allow slip10-like derivation which can be instantiated with any curve. For instance, one could instantiate it with ed25519 or stark curves, for which probability of getting invalid scalar from random 32 bytes is \u003e90%, so theoretically, attacker could try to DoS such construction.\n\n### Patches\n\u003c!-- _Has the problem been patched? What versions should users upgrade to?_ --\u003e\n\n`hd_wallet v0.6.0` has been patched by removing slip10-like derivation from public API.\n\nIf you need HD derivation on other curves than secp256k1 and secp256r1, we suggest you to use:\n* [`hd_wallet::Edwards`](https://docs.rs/hd-wallet/latest/hd_wallet/edwards/struct.Edwards.html) derivation method available for ed25519 curve\n* [`hd_wallet::Stark`](https://docs.rs/hd-wallet/latest/hd_wallet/stark/struct.Stark.html) derivation method available for stark curve\n\nBoth derivation methods are non-standard, but secure and efficient.\n\n**If you're still using `slip_10`** and would like to migrate to patched version, please migrate to `hd_wallet v0.6`. You may first migrate from `slip_10 v0.4` to `hd_wallet v0.5` by following migration instructions available [in the docs](https://docs.rs/slip-10/latest/slip_10/), and then upgrade from `hd_wallet v0.5` to `hd_wallet v0.6`.\n\n### Workarounds\nTechnically, you don't need to upgrade if you don't use slip10-like derivation instantiated with other curves than secp256k1 or secp256r1.\n\nHowever, if you do, migrating to other derivation method might be required.\n\n### Reach out to us in Discord\n\nIf you want to reach out to us, feel free to write to [`#lockness` room in Discord](https://discordapp.com/channels/905194001349627914/1294284489635139585)\n\n### Credits\n\nThanks to Alessio Marziali \u003calessio.marziali@metaco.com\u003e for discovering and flagging this issue",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-12-18T15:51:24Z",
    "Severity": "MODERATE",
    "Summary": "`Slip10Like` derivation method instantiated with certain curves may allow attacker to find derivation path which results into very long derivation (possible DoS)",
    "UpdatedAt": "2024-12-18T15:51:26Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.6.0"
      },
      "VulnerableVersionRange": "\u003c 0.6.0"
    }
  ]
}