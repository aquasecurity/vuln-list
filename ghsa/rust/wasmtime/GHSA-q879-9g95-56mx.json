{
  "Severity": "MODERATE",
  "UpdatedAt": "2023-06-13T22:33:05Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "wasmtime"
  },
  "Advisory": {
    "DatabaseId": 5597,
    "Id": "GSA_kwCzR0hTQS1xODc5LTlnOTUtNTZteM0V3Q",
    "GhsaId": "GHSA-q879-9g95-56mx",
    "References": [
      {
        "Url": "https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-q879-9g95-56mx"
      },
      {
        "Url": "https://github.com/bytecodealliance/wasmtime/commit/b39f087414f27ae40c44449ed5d1154e03449bff"
      },
      {
        "Url": "https://crates.io/crates/wasmtime"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2021-39219"
      },
      {
        "Url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Z2Z33FTXFQ6EOINVEQIP4DFBG53G5XIY/"
      },
      {
        "Url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WAVBRYDDUIY2ZR3K3FO4BVYJKIMJ5TP7/"
      },
      {
        "Url": "https://rustsec.org/advisories/RUSTSEC-2021-0110.html"
      },
      {
        "Url": "https://github.com/advisories/GHSA-q879-9g95-56mx"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-q879-9g95-56mx"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2021-39219"
      }
    ],
    "Description": "### Impact\n\nAs a Rust library the `wasmtime` crate clearly marks which functions are safe and which are `unsafe`, guaranteeing that if consumers never use `unsafe` then it should not be possible to have memory unsafety issues in their embeddings of Wasmtime. An issue was discovered in the safe API of `Linker::func_*` APIs. These APIs were previously not sound when one `Engine` was used to create the `Linker` and then a different `Engine` was used to create a `Store` and then the `Linker` was used to instantiate a module into that `Store`. Cross-`Engine` usage of functions is not supported in Wasmtime and this can result in type confusion of function pointers, resulting in being able to safely call a function with the wrong type.\n\nTriggering this bug requires using at least two `Engine` values in an embedding and then additionally using two different values with a `Linker` (one at the creation time of the `Linker` and another when instantiating a module with the `Linker`).\n\nIt's expected that usage of more-than-one `Engine` in an embedding is relatively rare since an `Engine` is intended to be a globally shared resource, so the expectation is that the impact of this issue is relatively small.\n\nThe fix implemented is to change this behavior to `panic!()` in Rust instead of silently allowing it. Using different `Engine` instances with a `Linker` is a programmer bug that `wasmtime` catches at runtime.\n\n### Patches\n\nThis bug has been patched and users should upgrade to Wasmtime version 0.30.0.\n\n### Workarounds\n\nIf you cannot upgrade Wasmtime and are using more than one `Engine` in your embedding it's recommended to instead use only one `Engine` for the entire program if possible. An `Engine` is designed to be a globally shared resource that is suitable to have only one for the lifetime of an entire process. If using multiple `Engine`s is required then code should be audited to ensure that `Linker` is only used with one `Engine`.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Reach out to us on [the Bytecode Alliance Zulip chat](https://bytecodealliance.zulipchat.com/#narrow/stream/217126-wasmtime)\n* Open an issue in [the `bytecodealliance/wasmtime` repository](https://github.com/bytecodealliance/wasmtime/)",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2021-09-20T19:54:26Z",
    "Severity": "MODERATE",
    "Summary": "Wrong type for `Linker`-define functions when used across two `Engine`s",
    "UpdatedAt": "2023-06-13T22:33:05Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 6.3,
      "VectorString": "CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:N/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.30.0"
      },
      "VulnerableVersionRange": "\u003c 0.30.0"
    }
  ]
}