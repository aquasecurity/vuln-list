{
  "Severity": "LOW",
  "UpdatedAt": "2025-10-22T16:35:09Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "borrowck_sacrifices"
  },
  "Advisory": {
    "DatabaseId": 318299,
    "Id": "GSA_kwCzR0hTQS14Y3BtLTc2aGYtYzljY84ABNtb",
    "GhsaId": "GHSA-xcpm-76hf-c9cc",
    "References": [
      {
        "Url": "https://github.com/alexpyattaev/borrowck_sacrifices/issues/1"
      },
      {
        "Url": "https://github.com/alexpyattaev/borrowck_sacrifices/commit/1bdaa14da68a6e8207f9e81359116f53139800f2"
      },
      {
        "Url": "https://rustsec.org/advisories/RUSTSEC-2025-0107.html"
      },
      {
        "Url": "https://github.com/advisories/GHSA-xcpm-76hf-c9cc"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-xcpm-76hf-c9cc"
      }
    ],
    "Description": "The safe function `any_as_u8_slice` can create byte slices that reference uninitialized memory when used with types containing padding bytes.\n\nThe function uses `slice::from_raw_parts` to create a `\u0026[u8]` covering the entire size of a type, including padding bytes. According to Rust's documentation, `from_raw_parts` requires all bytes to be properly initialized, but padding bytes in structs are not guaranteed to be initialized. This violates the safety contract and causes undefined behavior.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-10-22T16:35:08Z",
    "Severity": "LOW",
    "Summary": "Borrowck Scarifices exposes uninitialized memory in any_as_u8_slice",
    "UpdatedAt": "2025-10-22T16:35:09Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.2.0"
      },
      "VulnerableVersionRange": "\u003c 0.2.0"
    }
  ]
}