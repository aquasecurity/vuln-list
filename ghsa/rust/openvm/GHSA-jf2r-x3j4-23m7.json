{
  "Severity": "HIGH",
  "UpdatedAt": "2025-05-05T19:57:09Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "openvm"
  },
  "Advisory": {
    "DatabaseId": 292774,
    "Id": "GSA_kwCzR0hTQS1qZjJyLXgzajQtMjNtN84ABHem",
    "GhsaId": "GHSA-jf2r-x3j4-23m7",
    "References": [
      {
        "Url": "https://github.com/openvm-org/openvm/security/advisories/GHSA-jf2r-x3j4-23m7"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-46723"
      },
      {
        "Url": "https://github.com/openvm-org/openvm/commit/68da4b50c033da5603517064aa0a08e1bbf70a01"
      },
      {
        "Url": "https://cantina.xyz/code/c486d600-bed0-4fc6-aed1-de759fd29fa2/findings/21"
      },
      {
        "Url": "https://github.com/openvm-org/openvm/blob/0f94c8a3dfa7536c1231465d1bdee5fc607a5993/extensions/rv32im/circuit/src/auipc/core.rs#L135"
      },
      {
        "Url": "https://github.com/openvm-org/openvm/releases/tag/v1.1.0"
      },
      {
        "Url": "https://github.com/advisories/GHSA-jf2r-x3j4-23m7"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-jf2r-x3j4-23m7"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-46723"
      }
    ],
    "Description": "The fix to https://cantina.xyz/code/c486d600-bed0-4fc6-aed1-de759fd29fa2/findings/21 has a typo that still results in the highest limb of `pc` being range checked to 8-bits instead of 6-bits.\n\nIn the AIR, we do https://github.com/openvm-org/openvm/blob/0f94c8a3dfa7536c1231465d1bdee5fc607a5993/extensions/rv32im/circuit/src/auipc/core.rs#L135\n```\n        for (i, limb) in pc_limbs.iter().skip(1).enumerate() {\n            if i == pc_limbs.len() - 1 {\n```\n\nIt should be\n```\n        for (i, limb) in pc_limbs.iter().enumerate().skip(1) {\n```\n\nRight now the if statement is never triggered because the enumeration gives `i=0,1,2` when we instead want `i=1,2,3`. What this means is that `pc_limbs[3]` is range checked to 8-bits instead of 6-bits.\n\nThis leads to a vulnerability where the `pc_limbs` decomposition differs from the true `pc`, which means a malicious prover can make the destination register take a different value than the AUIPC instruction dictates, by making the decomposition overflow the BabyBear field.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-05-05T19:57:09Z",
    "Severity": "HIGH",
    "Summary": "OpenVM allows the byte decomposition of pc in AUIPC chip to overflow",
    "UpdatedAt": "2025-05-05T19:57:10Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.1.0"
      },
      "VulnerableVersionRange": "= 1.0.0"
    }
  ]
}