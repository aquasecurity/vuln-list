{
  "Severity": "MODERATE",
  "UpdatedAt": "2021-08-18T20:39:11Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "cgc"
  },
  "Advisory": {
    "DatabaseId": 5090,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXB3aGYtNzQyNy05dnYy",
    "GhsaId": "GHSA-pwhf-7427-9vv2",
    "References": [
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36468"
      },
      {
        "Url": "https://github.com/playXE/cgc/issues/5"
      },
      {
        "Url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/cgc/RUSTSEC-2020-0148.md"
      },
      {
        "Url": "https://rustsec.org/advisories/RUSTSEC-2020-0148.html"
      },
      {
        "Url": "https://github.com/advisories/GHSA-pwhf-7427-9vv2"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-pwhf-7427-9vv2"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2020-36468"
      }
    ],
    "Description": "# Multiple soundness issues in `Ptr` in cgc\n\nAffected versions of this crate have the following issues:\n\n1. `Ptr` implements `Send` and `Sync` for all types, this can lead to data\n   races by sending non-thread safe types across threads.\n\n2. `Ptr::get` violates mutable alias rules by returning multiple mutable\n   references to the same object.\n\n3. `Ptr::write` uses non-atomic writes to the underlying pointer. This means\n   that when used across threads it can lead to data races.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2021-08-25T20:56:57Z",
    "Severity": "MODERATE",
    "Summary": "Non-atomic writes in cgc",
    "UpdatedAt": "2023-06-13T16:46:49Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 5.9,
      "VectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": ""
      },
      "VulnerableVersionRange": "\u003c= 0.4.0"
    }
  ]
}