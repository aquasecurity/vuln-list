{
  "Severity": "LOW",
  "UpdatedAt": "2025-02-14T17:31:17Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "fyrox-core"
  },
  "Advisory": {
    "DatabaseId": 280551,
    "Id": "GSA_kwCzR0hTQS1oN2g3LTZteDMtcjg5ds4ABEfn",
    "GhsaId": "GHSA-h7h7-6mx3-r89v",
    "References": [
      {
        "Url": "https://github.com/FyroxEngine/Fyrox/issues/630"
      },
      {
        "Url": "https://github.com/FyroxEngine/Fyrox/pull/662"
      },
      {
        "Url": "https://github.com/FyroxEngine/Fyrox/commit/474e3b01a884366cdb7d704f7456ef692e992232"
      },
      {
        "Url": "https://rustsec.org/advisories/RUSTSEC-2024-0435.html"
      },
      {
        "Url": "https://github.com/advisories/GHSA-h7h7-6mx3-r89v"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-h7h7-6mx3-r89v"
      }
    ],
    "Description": "The library provides a public safe API `transmute_vec_as_bytes`, which incorrectly assumes that any generic type `T` could have stable layout, causing to uninitialized memory exposure if the users pass any types with padding bytes as `T` and cast it to `u8` pointer.  \n\nIn the [issue](https://github.com/FyroxEngine/Fyrox/issues/630), we develop a PoC to show passing struct type to `transmute_vec_as_bytes` could lead to undefined behavior with `Vec::from_raw_parts`.  \n\nThe developers provide a patch by changing trait of `Copy` to `Pod`, which can make sure `T` should be plain data. This was patched in the latest version of [master](https://github.com/FyroxEngine/Fyrox/blob/3f9ad6f9667047dac051b0e97d544e5b38e5ae72/fyrox-core/src/lib.rs#L351-L360) branch, but still not on the latest release (0.28.1).",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-02-14T17:31:16Z",
    "Severity": "LOW",
    "Summary": "Fyrox has unsound usages of `Vec::from_raw_parts` ",
    "UpdatedAt": "2025-02-14T17:31:17Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.36"
      },
      "VulnerableVersionRange": "\u003e= 0.28.1, \u003c 0.36"
    }
  ]
}