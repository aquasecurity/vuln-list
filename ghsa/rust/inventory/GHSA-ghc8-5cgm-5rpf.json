{
  "Severity": "MODERATE",
  "UpdatedAt": "2023-09-11T20:44:11Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "inventory"
  },
  "Advisory": {
    "DatabaseId": 220367,
    "Id": "GSA_kwCzR0hTQS1naGM4LTVjZ20tNXJwZs4AA1zP",
    "GhsaId": "GHSA-ghc8-5cgm-5rpf",
    "References": [
      {
        "Url": "https://github.com/dtolnay/inventory/pull/43"
      },
      {
        "Url": "https://github.com/dtolnay/inventory/commit/b853350a3800e38d2cb9950355b80bc8b8d3959c"
      },
      {
        "Url": "https://rustsec.org/advisories/RUSTSEC-2023-0057.html"
      },
      {
        "Url": "https://github.com/advisories/GHSA-ghc8-5cgm-5rpf"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-ghc8-5cgm-5rpf"
      }
    ],
    "Description": "Affected versions allow arbitrary caller-provided code to execute before the lifetime of `main`.\n\nIf the caller-provided code accesses particular pieces of the standard library that require an initialized Rust runtime, such as `std::io` or `std::thread`, these may not behave as documented. Panics are likely; UB is possible.\n\nThe flaw was corrected by enforcing that only code written within the `inventory` crate, which is guaranteed not to access runtime-dependent parts of the standard library, runs before `main`. Caller-provided code is restricted to running at compile time.\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2023-09-11T20:43:17Z",
    "Severity": "MODERATE",
    "Summary": "Inventory fails to prohibit standard library access prior to initialization of Rust standard library runtime",
    "UpdatedAt": "2023-09-11T20:44:11Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.2.0"
      },
      "VulnerableVersionRange": "\u003c 0.2.0"
    }
  ]
}