{
  "Severity": "HIGH",
  "UpdatedAt": "2023-10-02T23:32:50Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "smallvec"
  },
  "Advisory": {
    "DatabaseId": 8111,
    "Id": "GSA_kwCzR0hTQS01NW01LXdoY3YtYzQ5Y80frw",
    "GhsaId": "GHSA-55m5-whcv-c49c",
    "References": [
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2018-25023"
      },
      {
        "Url": "https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/smallvec/RUSTSEC-2018-0018.md"
      },
      {
        "Url": "https://rustsec.org/advisories/RUSTSEC-2018-0018.html"
      },
      {
        "Url": "https://github.com/servo/rust-smallvec/issues/126"
      },
      {
        "Url": "https://github.com/servo/rust-smallvec/pull/162"
      },
      {
        "Url": "https://github.com/servo/rust-smallvec/commit/e64afc8c473d43e375ab42bd33db2d0d4ac4e41b"
      },
      {
        "Url": "https://github.com/advisories/GHSA-55m5-whcv-c49c"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-55m5-whcv-c49c"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2018-25023"
      }
    ],
    "Description": "Affected versions of this crate called mem::uninitialized() to create values of a user-supplied type T. This is unsound e.g. if T is a reference type (which must be non-null and thus may not remain uninitialized). The flaw was corrected by avoiding the use of mem::uninitialized(), using MaybeUninit instead.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2022-01-06T22:20:28Z",
    "Severity": "HIGH",
    "Summary": "Use of Uninitialized Resource in smallvec",
    "UpdatedAt": "2023-10-02T23:32:50Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.5,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.6.13"
      },
      "VulnerableVersionRange": "\u003c 0.6.13"
    }
  ]
}