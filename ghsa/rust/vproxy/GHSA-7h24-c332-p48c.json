{
  "Severity": "HIGH",
  "UpdatedAt": "2025-07-30T16:33:42Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "vproxy"
  },
  "Advisory": {
    "DatabaseId": 305804,
    "Id": "GSA_kwCzR0hTQS03aDI0LWMzMzItcDQ4Y84ABKqM",
    "GhsaId": "GHSA-7h24-c332-p48c",
    "References": [
      {
        "Url": "https://github.com/0x676e67/vproxy/security/advisories/GHSA-7h24-c332-p48c"
      },
      {
        "Url": "https://github.com/0x676e67/vproxy/commit/aa1bf64c5e7f1c471395f9f29175ffc1b16a1079"
      },
      {
        "Url": "https://github.com/0x676e67/vproxy/releases/tag/v2.4.0"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-54581"
      },
      {
        "Url": "https://github.com/advisories/GHSA-7h24-c332-p48c"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-7h24-c332-p48c"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-54581"
      }
    ],
    "Description": "### Summary\nUntrusted, user-controlled data from the HTTP Proxy-Authorization header can induce a denial of service state.\n\n### Details\nUntrusted data is extracted from the user-controlled HTTP Proxy-Authorization header and passed to Extension::try_from and flows into parse_ttl_extension where it is parsed as a TTL value. If an attacker supplies a TTL of zero (e.g. by using a username such as 'configuredUser-ttl-0'), the modulo operation 'timestamp % ttl' will cause a division by zero panic, causing the server to crash causing a denial-of-service.\n\nThe code assumed to be responsible for this can be found here: https://github.com/0x676e67/vproxy/blob/ab304c3854bf8480be577039ada0228907ba0923/src/extension.rs#L173-L183\n\n### PoC\n1. Download and run the latest version of vproxy\n2. Send a cUrl request like the following, adjusting address and port as necessary: ```curl -x \"http://test-ttl-0:test@127.0.0.1:8101\" https://google.com```\n3. Wait for a cUrl error indicating \"Proxy CONNECT aborted\"\n4. View logs from the vproxy server\n5. Observe that the vproxy server crashed due to a divide-by-zero panic\n\n### Impact\nThe resulting crash renders the proxy server unusable until it is reset.\n\nFinally, one last note: I'm reporting this on behalf of another researcher at Black Duck. Credit for discovery should be attributed to David Bohannon ([dbohannon](https://github.com/dbohannon))",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-07-30T16:33:41Z",
    "Severity": "HIGH",
    "Summary": "vproxy Divide by Zero DoS Vulnerability",
    "UpdatedAt": "2025-07-31T11:18:30Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.5,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "2.4.0"
      },
      "VulnerableVersionRange": "\u003c= 2.3.3"
    }
  ]
}