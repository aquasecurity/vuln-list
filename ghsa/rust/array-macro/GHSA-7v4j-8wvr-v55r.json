{
  "Severity": "MODERATE",
  "UpdatedAt": "2022-08-15T03:06:41Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "array-macro"
  },
  "Advisory": {
    "DatabaseId": 178866,
    "Id": "GSA_kwCzR0hTQS03djRqLTh3dnItdjU1cs4AArqy",
    "GhsaId": "GHSA-7v4j-8wvr-v55r",
    "References": [
      {
        "Url": "https://github.com/rustsec/advisory-db/blob/main/crates/array-macro/RUSTSEC-2022-0017.md"
      },
      {
        "Url": "https://gitlab.com/KonradBorowski/array-macro/-/issues/5"
      },
      {
        "Url": "https://rustsec.org/advisories/RUSTSEC-2022-0017.html"
      },
      {
        "Url": "https://github.com/xfix/array-macro/commit/d5b63f72090f3809c21ac28f9cfd84f12559bf7d"
      },
      {
        "Url": "https://github.com/advisories/GHSA-7v4j-8wvr-v55r"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-7v4j-8wvr-v55r"
      }
    ],
    "Description": "Affected versions of this crate did substitute the array length provided by an user at compile-time multiple times.\n\nWhen an impure constant expression is passed as an array length (such as a result of an impure procedural macro), this can result in the initialization of an array with uninitialized types, which in turn can allow an attacker to execute arbitrary code.\n\nThe flaw was corrected in commit [d5b63f72](https://github.com/xfix/array-macro/commit/d5b63f72090f3809c21ac28f9cfd84f12559bf7d) by making sure that array length is substituted just once.\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2022-06-16T23:40:38Z",
    "Severity": "MODERATE",
    "Summary": "`array!` macro is unsound when its length is impure constant",
    "UpdatedAt": "2023-01-12T05:00:57Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "2.1.2"
      },
      "VulnerableVersionRange": "\u003e= 2.1.0, \u003c 2.1.2"
    }
  ]
}