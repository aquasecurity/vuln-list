{
  "Severity": "HIGH",
  "UpdatedAt": "2025-04-07T19:00:32Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "apollo-router"
  },
  "Advisory": {
    "DatabaseId": 288836,
    "Id": "GSA_kwCzR0hTQS0zajQzLTl2OHYtY3AzZs4ABGhE",
    "GhsaId": "GHSA-3j43-9v8v-cp3f",
    "References": [
      {
        "Url": "https://github.com/apollographql/router/security/advisories/GHSA-3j43-9v8v-cp3f"
      },
      {
        "Url": "https://github.com/apollographql/router/commit/ab6675a63174715ea6ff50881fc957831d4e9564"
      },
      {
        "Url": "https://github.com/apollographql/router/commit/bba032e183b861348a466d3123c7137a1ae18952"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-32380"
      },
      {
        "Url": "https://github.com/advisories/GHSA-3j43-9v8v-cp3f"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-3j43-9v8v-cp3f"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-32380"
      }
    ],
    "Description": "# Impact\n\n## Summary\n\nA vulnerability in Apollo Router's usage of Apollo Compiler allowed queries with deeply nested and reused named fragments to be prohibitively expensive to validate. This could lead to excessive resource consumption and denial of service.\n\n## Details\n\nNamed fragments were being processed once per fragment spread in some cases during query validation, leading to exponential resource usage when deeply nested and reused fragments were involved.\n\n## Fix/Mitigation\n\nApollo Router's usage of Apollo Compiler has been updated so that validation logic processes each named fragment only once, preventing redundant traversal.\n\n# Patches\n\nThis has been remediated in `apollo-router` versions 1.61.2 and 2.1.1.\n\n# Workarounds\nThe only known workaround is \"Safelisting with IDs only\" per [Safelisting with Persisted Queries - Apollo GraphQL Docs](https://www.apollographql.com/docs/graphos/routing/security/persisted-queries#router-security-levels). The \"Safelisting\" security level is not sufficient, since that level allows freeform GraphQL queries to be sent to Apollo Router.\n\n# References \n[Query Planning Documentation](https://www.apollographql.com/docs/graphos/reference/federation/query-plans)\n\n## Acknowledgements\nWe appreciate the efforts of the security community in identifying and improving the performance and security of query validation mechanisms.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-04-07T19:00:30Z",
    "Severity": "HIGH",
    "Summary": "Apollo Router Query Validation Vulnerable to Excessive Resource Consumption via Named Fragment Processing",
    "UpdatedAt": "2025-04-09T19:53:50Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.5,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "2.1.1"
      },
      "VulnerableVersionRange": "\u003e= 2.0.0-alpha.0, \u003c 2.1.1"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "1.61.2"
      },
      "VulnerableVersionRange": "\u003c 1.61.2"
    }
  ]
}