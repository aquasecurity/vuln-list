{
  "Severity": "MODERATE",
  "UpdatedAt": "2022-06-17T00:13:07Z",
  "Package": {
    "Ecosystem": "RUST",
    "Name": "metrics-util"
  },
  "Advisory": {
    "DatabaseId": 178988,
    "Id": "GSA_kwCzR0hTQS0zaHhoLTdqeG0tNTl4NM4AArss",
    "GhsaId": "GHSA-3hxh-7jxm-59x4",
    "References": [
      {
        "Url": "https://github.com/metrics-rs/metrics/issues/190"
      },
      {
        "Url": "https://rustsec.org/advisories/RUSTSEC-2021-0113.html"
      },
      {
        "Url": "https://github.com/advisories/GHSA-3hxh-7jxm-59x4"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-3hxh-7jxm-59x4"
      }
    ],
    "Description": "In the affected versions of the crate, `AtomicBucket\u003cT\u003e` unconditionally implements `Send`/`Sync` traits. Therefore, users can create a data race to the inner\n`T: !Sync` by using the `AtomicBucket::data_with()` API.\nSuch data races can potentially cause memory corruption or other undefined behavior.\n\nThe flaw was fixed in commit 8e6daab by adding appropriate Send/Sync bounds to the Send/Sync impl of struct `Block\u003cT\u003e` (which is a data type contained inside `AtomicBucket\u003cT\u003e`).\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2022-06-17T00:13:03Z",
    "Severity": "MODERATE",
    "Summary": "AtomicBucket\u003cT\u003e unconditionally implements Send/Sync",
    "UpdatedAt": "2023-01-12T05:01:02Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.7.0"
      },
      "VulnerableVersionRange": "\u003c 0.7.0"
    }
  ]
}