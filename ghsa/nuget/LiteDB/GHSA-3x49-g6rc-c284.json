{
  "Severity": "CRITICAL",
  "UpdatedAt": "2023-02-24T16:22:52Z",
  "Package": {
    "Ecosystem": "NUGET",
    "Name": "LiteDB"
  },
  "Advisory": {
    "DatabaseId": 203989,
    "Id": "GSA_kwCzR0hTQS0zeDQ5LWc2cmMtYzI4NM4AAxzV",
    "GhsaId": "GHSA-3x49-g6rc-c284",
    "References": [
      {
        "Url": "https://github.com/mbdavid/LiteDB/security/advisories/GHSA-3x49-g6rc-c284"
      },
      {
        "Url": "https://github.com/mbdavid/LiteDB/commit/4382ff4dd0dd8b8b16a4e37dfd29727c5f70f93f"
      },
      {
        "Url": "https://github.com/mbdavid/LiteDB/commit/d72c6774e6a13de2cfcd7d477d3575efeb75c8f2"
      },
      {
        "Url": "https://github.com/mbdavid/LiteDB/releases/tag/v5.0.13"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23535"
      },
      {
        "Url": "https://github.com/advisories/GHSA-3x49-g6rc-c284"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-3x49-g6rc-c284"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2022-23535"
      }
    ],
    "Description": "### Impact\nLiteDB use a special field in JSON documents to cast diferent types from `BsonDocument` do POCO classes. When instance of an object are not the same of class, `BsonMapper` use a special field `_type` string info with full class name with assembly to be loaded and fit in your model.\nIf your end-user can send to your app a plain JSON string, deserialization can load an unsafe  object to fit in your model.\n\n### Patches\nVersion \u003e= 5.0.13 add some basic fixes to avoid this, but is not 100% guaranteed when using `Object` type\nNext major version will contains a allow-list to select what king of Assembly can be loaded\n\n### Workarounds\n- Avoid users send to your app a JSON string to be direct insert/update into database\n- Avoid use classes with `Object` type - try use an interface when possible\n\nIf your app send a plain JSON string to be insert/update into database, prefer this:\n```\n// Bad\npublic class Customer {\n    public int Id { get; set; }\n    public string Name { get; set; }\n    public Object AnyData { get; set; } // \u003c= Avoid use `Object` base type\n}\n\n// Good\npublic class Customer {\n    public int Id { get; set; }\n    public string Name { get; set; }\n    public IDictionary\u003cstring, string\u003e AnyData { get; set; } // Will accept only key/value strings\n}\n\n```\n\n### References\nSee this workaround fix on this commit:\n\nhttps://github.com/mbdavid/LiteDB/commit/4382ff4dd0dd8b8b16a4e37dfd29727c5f70f93f\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2023-02-24T16:22:50Z",
    "Severity": "CRITICAL",
    "Summary": "LiteDB may deserialize bad JSON on object type using _type",
    "UpdatedAt": "2023-03-06T22:00:25Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 9.8,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "5.0.13"
      },
      "VulnerableVersionRange": "\u003c 5.0.13"
    }
  ]
}