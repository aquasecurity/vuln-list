{
  "Severity": "HIGH",
  "UpdatedAt": "2024-03-25T19:36:26Z",
  "Package": {
    "Ecosystem": "NUGET",
    "Name": "PanelSwWix4.Sdk"
  },
  "Advisory": {
    "DatabaseId": 238675,
    "Id": "GSA_kwCzR0hTQS1nNHY2LTY5cDYtcTNwNM4AA6RT",
    "GhsaId": "GHSA-g4v6-69p6-q3p4",
    "References": [
      {
        "Url": "https://github.com/nirbar/wix4/security/advisories/GHSA-g4v6-69p6-q3p4"
      },
      {
        "Url": "https://github.com/nirbar/wix4/commit/0410df93a5f29e4235b4b78b90a1384ffafd062b"
      },
      {
        "Url": "https://github.com/advisories/GHSA-g4v6-69p6-q3p4"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-g4v6-69p6-q3p4"
      }
    ],
    "Description": "# Summary\n\nBurn uses an unprotected C:\\Windows\\Temp directory to copy binaries and run them from there. This directory is not entirely protected against low privilege users.\n\n# Details\n\nWhen a bundle runs as SYSTEM user, Burn uses GetTempPathW which points to an insecure directory C:\\Windows\\Temp to drop and load multiple binaries. Standard users can hijack the binary before it's loaded in the application resulting in elevation of privileges.\n\n```\nicacls c:\\windows\\temp\n\nBUILTIN\\Users:(CI)(S,WD,AD,X)\nBUILTIN\\Administrators:(F)\nBUILTIN\\Administrators:(OI)(CI)(IO)(F)\nNT AUTHORITY\\SYSTEM:(F)\nNT AUTHORITY\\SYSTEM:(OI)(CI)(IO)(F)\nCREATOR OWNER:(OI)(CI)(IO)(F)\n```\n\nBuilt in users(non-administrators) have special permissions to this folder and can create files and write to this directory. While they do not have explicit read permissions, there is a way they can monitor the changes to this directory using ReadDirectoryChangesW API and thus figure out randomized folder names created inside this directory as wel\n \n# PoC\n\nPoC works against the against visual studio enterprise with update 3 installer\n\n## Reproduction steps\n\nAs a standard user, run the poc.\nMount the iso and run visual studio [installer ](https://myvs.download.prss.microsoft.com/dbazure/en_visual_studio_enterprise_2015_with_update_3_x86_x64_dvd_8923288.iso?t=8132cd54-4b83-4478-8b73-fd9eb93437bf\u0026P1=1709239640\u0026P2=601\u0026P3=2\u0026P4=iorgKPv%2bG8n2NANTPUVoB92rr8t3W4XM594%2f9BtQQJrYrr8SwxGDxV%2fj%2f2F6Ulto0bXrIaFoZUr4yV37YAsOZVpM29IMtQEO0673AbDVuTe93qDb6wb7xdlpZSse0LZURUwwIFw5cwHQS2ZtvkunXE0osgXtEBT2IzVbPwVH39%2fum854xb4e2Dp61wgNrMZcOLLluBbeA3KX1sP3mm7WAWXBvlFiQWEnTfR5XH5mlLyPy2qfqCXWCjl84jNX7uY%2bpLR1IbfeD2JlcIQNeW2QrvmmqRrRbGvvaCA97IaSjM16XcDqVjvAEGW3sWXUc7y%2fEf68WZIyT7iilaEDUvaqqA%3d%3d\u0026su=1)as local system account.\nThe PoC should hijack the the binaries dropped by vs installer and a child process \"notepad.exe\" will be running.\n\n# Impact\n\nThis is an Elevation of Privilege Vulnerability where a low privileged user can hijack binaries in an unprotected path C:\\Windows\\Temp to elevate to the SYSTEM user privileges.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-03-25T19:36:25Z",
    "Severity": "HIGH",
    "Summary": "WiX Burn-based bundles are vulnerable to binary hijack when run as SYSTEM ",
    "UpdatedAt": "2024-03-25T19:36:26Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.3,
      "VectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "5.0.0-psw-wix.0265-49"
      },
      "VulnerableVersionRange": "\u003c= 5.0.0-psw-wix.0262-48"
    }
  ]
}