{
  "Severity": "CRITICAL",
  "UpdatedAt": "2021-05-19T19:38:22Z",
  "Package": {
    "Ecosystem": "NUGET",
    "Name": "Wire"
  },
  "Advisory": {
    "DatabaseId": 4451,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWhwdzctM3ZxMy1tbXY2",
    "GhsaId": "GHSA-hpw7-3vq3-mmv6",
    "References": [
      {
        "Url": "https://github.com/AsynkronIT/Wire/security/advisories/GHSA-hpw7-3vq3-mmv6"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29508"
      },
      {
        "Url": "https://www.nuget.org/packages/Wire/"
      },
      {
        "Url": "https://github.com/advisories/GHSA-hpw7-3vq3-mmv6"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-hpw7-3vq3-mmv6"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2021-29508"
      }
    ],
    "Description": "Due to how Wire handles type information in its serialization format, malicious payloads can be passed to a deserializer. e.g. using a surrogate on the sender end, an attacker can pass information about a different type for the receiving end. And by doing so allowing the serializer to create any type on the deserializing end.\n\n**This is the same issue that exists for .NET BinaryFormatter https://docs.microsoft.com/en-us/visualstudio/code-quality/ca2300?view=vs-2019**\n\nThis also applies to the fork of Wire, AkkaDotNet/Hyperion.\n\n\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2021-05-19T23:02:38Z",
    "Severity": "CRITICAL",
    "Summary": "Insecure deserialization in Wire",
    "UpdatedAt": "2023-02-01T05:05:45Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 9.1,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": ""
      },
      "VulnerableVersionRange": "\u003c= 1.0.0"
    }
  ]
}