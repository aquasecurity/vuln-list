{
  "Severity": "HIGH",
  "UpdatedAt": "2023-10-02T21:01:19Z",
  "Package": {
    "Ecosystem": "NUGET",
    "Name": "AjaxNetProfessional"
  },
  "Advisory": {
    "DatabaseId": 8373,
    "Id": "GSA_kwCzR0hTQS01cTdxLXFxdzItaGpxN80gtQ",
    "GhsaId": "GHSA-5q7q-qqw2-hjq7",
    "References": [
      {
        "Url": "https://github.com/michaelschwarz/Ajax.NET-Professional/security/advisories/GHSA-5q7q-qqw2-hjq7"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2021-43853"
      },
      {
        "Url": "https://github.com/michaelschwarz/Ajax.NET-Professional/commit/c89e39b9679fcb8ab6644fe21cc7e652cb615e2b"
      },
      {
        "Url": "https://github.com/michaelschwarz/Ajax.NET-Professional/releases/tag/v21.12.22.1"
      },
      {
        "Url": "https://github.com/advisories/GHSA-5q7q-qqw2-hjq7"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-5q7q-qqw2-hjq7"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2021-43853"
      }
    ],
    "Description": "### Overview\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data due to the possibility of deserialization of arbitrary JavaScript objects.\n\n### Description\n\nCross-Site Scripting (XSS) attacks are a type of injection, in which malicious scripts are injected into otherwise benign and trusted websites. XSS attacks occur when an attacker uses a web application to send malicious code, generally in the form of a browser side script, to a different end user. Flaws that allow these attacks to succeed are quite widespread and occur anywhere a web application uses input from a user within the output it generates without validating or encoding it.\n\nXSS effects vary in range from petty nuisance to significant security risk, depending on the sensitivity of the data handled by the vulnerable site and the nature of any security mitigation implemented by the site's owner network.\n\n### Releases\n\nReleases before version 21.12.22.1 are affected. Please be careful to download any binary DLL from other web sites, especially we found NuGet packages not owned by us that contain vulnerable versions.\n\n### Workarounds\n\nA workaround exists that replaces one of the core JavaScript files embedded in the library. Using a XML configuration allows to replace the default JavaScript code to be replaced with the version on GitHub.\n\n```xml\n\u003cconfiguration\u003e\n\t\u003cconfigSections\u003e\n\t\t\u003csectionGroup name=\"ajaxNet\"\u003e\n\t\t\t\u003csection name=\"ajaxSettings\" type=\"AjaxPro.AjaxSettingsSectionHandler,AjaxPro.2\" requirePermission=\"false\" restartOnExternalChanges=\"true\"/\u003e\n\t\t\u003c/sectionGroup\u003e\n\t\u003c/configSections\u003e\n\t\u003cajaxNet\u003e\n\t\t\u003cajaxSettings\u003e\n\t\t\t\u003ccoreScript\u003e~/ajaxpro-core-fixed.js\u003c/coreScript\u003e\n\t\t\u003c/ajaxSettings\u003e\n\t\u003c/ajaxNet\u003e\n\u003c/configuration\u003e\n```\n\nCopy the file core.js from the main project folder to your web server root folder and rename that ajaxpro-core-fixed.js.\n\nClients need to refresh the web page to download the changed JavaScript code.\n\n### References\n\nCommit fixing the issue: c89e39b9679fcb8ab6644fe21cc7e652cb615e2b\n\nNote: the official Ajax.NET Professional (AjaxPro) NuGet package is available here: https://www.nuget.org/packages/AjaxNetProfessional/\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue on this GitHub repository\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2022-01-06T18:32:24Z",
    "Severity": "HIGH",
    "Summary": "AjaxNetProfessional deserializes arbitrary JavaScript objects",
    "UpdatedAt": "2023-10-02T21:01:19Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 8.7,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "21.12.22.1"
      },
      "VulnerableVersionRange": "\u003c 21.12.22.1"
    }
  ]
}