{
  "Severity": "MODERATE",
  "UpdatedAt": "2025-05-05T14:56:01Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "mobsf"
  },
  "Advisory": {
    "DatabaseId": 292728,
    "Id": "GSA_kwCzR0hTQS1td2ZnLTk0OGYtMmNjNc4ABHd4",
    "GhsaId": "GHSA-mwfg-948f-2cc5",
    "References": [
      {
        "Url": "https://github.com/MobSF/Mobile-Security-Framework-MobSF/security/advisories/GHSA-mwfg-948f-2cc5"
      },
      {
        "Url": "https://github.com/MobSF/Mobile-Security-Framework-MobSF/commit/6987a946485a795f4fd38cebdb4860b368a1995d"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-46335"
      },
      {
        "Url": "https://github.com/advisories/GHSA-mwfg-948f-2cc5"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-mwfg-948f-2cc5"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-46335"
      }
    ],
    "Description": "**Vulnerable MobSF Versions:**  \u003c= v4.3.2\n\n**CVSS V4.0 Score:** 8.6 (CVSS:4.0/AV:N/AC:L/AT:N/PR:L/UI:P/VC:H/VI:H/VA:L/SC:N/SI:N/SA:N)\n\n**Details:**\nA Stored Cross-Site Scripting (XSS) vulnerability has been identified in MobSF versions â‰¤ 4.3.2. The vulnerability arises from improper sanitization of user-supplied SVG files during the Android APK analysis workflow.\n\nWhen an Android Studio project contains a malicious SVG file as an app icon (e.g path, /app/src/main/res/mipmap-hdpi/ic_launcher.svg), and the project is zipped and uploaded to MobSF, the tool processes and extracts the contents without validating or sanitizing the SVG. \n\nUpcon ZIP extraction this icon file is saved by MobSF to: user/.MobSF/downloads/\u003cfilename\u003e.svg\n\nThis file becomes publicly accessible via the web interface at:\n\nhttp://127.0.0.1:8081/download/filename.svg\n\nIf the SVG contains embedded JavaScript (e.g., an XSS payload), accessing this URL via a browser leads to the execution of the script in the context of the MobSF user session, resulting in stored XSS.\n\n**Proof Of Concept:**\n\n1. Create a malicious SVG file (ic_launcher.svg) with an embedded XSS payload.\n\n![01](https://github.com/user-attachments/assets/9a89dec2-0671-490d-aba6-f38470bd84ee)\n\n2. Place the file in the Android Studio project directory: /app/src/main/res/mipmap-hdpi/ic_launcher.svg\n\n![02](https://github.com/user-attachments/assets/fc66f659-9f90-4be8-92c3-c5f26e1e11de)\n\n3. Zip the project directory and upload it to MobSF.\n\n![03](https://github.com/user-attachments/assets/a8465037-3b7a-42b7-89cf-5102c27917e7)\n\n4. After the scan, navigate to the \"Recent Scans\" page in the MobSF web interface and click on the scan entry and open the icon file in a new browser tab.\n\n![04](https://github.com/user-attachments/assets/5355e4d3-89a2-403a-a1a7-f60389fdbb8d)\n\n5. The XSS payload is executed, confirming the vulnerability.\n\n![05](https://github.com/user-attachments/assets/bc1e3493-1ffc-4598-b122-85459a406748)",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-05-05T14:55:59Z",
    "Severity": "MODERATE",
    "Summary": "Mobile Security Framework (MobSF) Allows Stored Cross Site Scripting (XSS) via malicious SVG Icon Upload",
    "UpdatedAt": "2025-05-05T22:06:28Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "4.3.3"
      },
      "VulnerableVersionRange": "\u003c= 4.3.2"
    }
  ]
}