{
  "Severity": "MODERATE",
  "UpdatedAt": "2023-06-30T20:33:59Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "pypdf"
  },
  "Advisory": {
    "DatabaseId": 213641,
    "Id": "GSA_kwCzR0hTQS00dnZtLTR3M3YtNm1yOM4AA0KJ",
    "GhsaId": "GHSA-4vvm-4w3v-6mr8",
    "References": [
      {
        "Url": "https://github.com/py-pdf/pypdf/security/advisories/GHSA-4vvm-4w3v-6mr8"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2023-36464"
      },
      {
        "Url": "https://github.com/py-pdf/pypdf/pull/1828"
      },
      {
        "Url": "https://github.com/py-pdf/pypdf/pull/969"
      },
      {
        "Url": "https://github.com/py-pdf/pypdf/commit/b0e5c689df689ab173df84dacd77b6fc3c161932"
      },
      {
        "Url": "https://github.com/py-pdf/pypdf/releases/tag/3.9.0"
      },
      {
        "Url": "https://github.com/advisories/GHSA-4vvm-4w3v-6mr8"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-4vvm-4w3v-6mr8"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2023-36464"
      }
    ],
    "Description": "### Impact\nAn attacker who uses this vulnerability can craft a PDF which leads to an infinite loop if `__parse_content_stream` is executed. This infinite loop blocks the current process and can utilize a single core of the CPU by 100%. It does not affect memory usage. That is, for example, the case if the user extracted text from such a PDF.\n\nExample Code and a PDF that causes the issue:\n\n```python\nfrom pypdf import PdfReader\n\n# https://objects.githubusercontent.com/github-production-repository-file-5c1aeb/3119517/11367871?X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20230627%2Fus-east-1%2Fs3%2Faws4_request\u0026X-Amz-Date=20230627T201018Z\u0026X-Amz-Expires=300\u0026X-Amz-Signature=d71c8fd9181c4875f0c04d563b6d32f1d4da6e7b2e6be2f14479ce4ecdc9c8b2\u0026X-Amz-SignedHeaders=host\u0026actor_id=1658117\u0026key_id=0\u0026repo_id=3119517\u0026response-content-disposition=attachment%3Bfilename%3DMiFO_LFO_FEIS_NOA_Published.3.pdf\u0026response-content-type=application%2Fpdf\nreader = PdfReader(\"MiFO_LFO_FEIS_NOA_Published.3.pdf\")\npage = reader.pages[0]\npage.extract_text()\n```\n\nThe issue was introduced with https://github.com/py-pdf/pypdf/pull/969\n\n### Patches\n\nThe issue was fixed with https://github.com/py-pdf/pypdf/pull/1828\n\n### Workarounds\n\nIt is recommended to upgrade to `pypdf\u003e=3.9.0`. PyPDF2 users should migrate to pypdf.\n\nIf you cannot update your version of pypdf, you should modify `pypdf/generic/_data_structures.py`:\n\n```\nOLD: while peek not in (b\"\\r\", b\"\\n\"):\nNEW: while peek not in (b\"\\r\", b\"\\n\", b\"\"):\n```",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2023-06-30T20:33:57Z",
    "Severity": "MODERATE",
    "Summary": "pypdf and PyPDF2 possible Infinite Loop when a comment isn't followed by a character",
    "UpdatedAt": "2023-11-11T05:03:14Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 6.2,
      "VectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "3.9.0"
      },
      "VulnerableVersionRange": "\u003e= 3.1.0, \u003c 3.9.0"
    }
  ]
}