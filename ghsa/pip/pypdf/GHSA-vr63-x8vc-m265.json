{
  "Severity": "MODERATE",
  "UpdatedAt": "2025-10-22T19:40:48Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "pypdf"
  },
  "Advisory": {
    "DatabaseId": 318375,
    "Id": "GSA_kwCzR0hTQS12cjYzLXg4dmMtbTI2Nc4ABNun",
    "GhsaId": "GHSA-vr63-x8vc-m265",
    "References": [
      {
        "Url": "https://github.com/py-pdf/pypdf/security/advisories/GHSA-vr63-x8vc-m265"
      },
      {
        "Url": "https://github.com/py-pdf/pypdf/pull/3501"
      },
      {
        "Url": "https://github.com/advisories/GHSA-vr63-x8vc-m265"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-vr63-x8vc-m265"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-62707"
      }
    ],
    "Description": "### Impact\n\nAn attacker who uses this vulnerability can craft a PDF which leads to an infinite loop. This requires parsing the content stream of a page which has an inline image using the DCTDecode filter.\n\n### Patches\nThis has been fixed in [pypdf==6.1.3](https://github.com/py-pdf/pypdf/releases/tag/6.1.3).\n\n### Workarounds\nIf you cannot upgrade yet, consider applying the changes from PR [#3501](https://github.com/py-pdf/pypdf/pull/3501).",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-10-22T19:40:47Z",
    "Severity": "MODERATE",
    "Summary": "pypdf possibly loops infinitely when reading DCT inline images without EOF marker",
    "UpdatedAt": "2025-10-22T19:40:48Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "6.1.3"
      },
      "VulnerableVersionRange": "\u003c 6.1.3"
    }
  ]
}