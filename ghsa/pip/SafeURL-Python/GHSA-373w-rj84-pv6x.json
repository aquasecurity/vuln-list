{
  "Severity": "LOW",
  "UpdatedAt": "2023-06-29T15:02:18Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "SafeURL-Python"
  },
  "Advisory": {
    "DatabaseId": 213543,
    "Id": "GSA_kwCzR0hTQS0zNzN3LXJqODQtcHY2eM4AA0In",
    "GhsaId": "GHSA-373w-rj84-pv6x",
    "References": [
      {
        "Url": "https://github.com/IncludeSecurity/safeurl-python/security/advisories/GHSA-373w-rj84-pv6x"
      },
      {
        "Url": "https://github.com/IncludeSecurity/safeurl-python/pull/6"
      },
      {
        "Url": "https://github.com/IncludeSecurity/safeurl-python/commit/c4f9677f8790a58eaa1953bac286cca75a5f580e"
      },
      {
        "Url": "https://github.com/advisories/GHSA-373w-rj84-pv6x"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-373w-rj84-pv6x"
      }
    ],
    "Description": "### Description\nIf a hostname was blacklisted, it was possible to bypass the blacklist by requesting the FQDN of the host (e.g. adding `.` to the end).\n\n### Impact\nThe main purpose of this library is to block requests to internal/private IPs and these cannot be bypassed using this finding. But if a library user had specifically set certain hostnames as blocked, then an attacker would be able to circumvent that block to cause SSRFs to request those hostnames.\n\n### Patches\nFixed by https://github.com/IncludeSecurity/safeurl-python/pull/6\n\n### Credit\nhttps://github.com/Sim4n6\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2023-06-29T15:02:16Z",
    "Severity": "LOW",
    "Summary": "SafeURL-Python's hostname blocklist does not block FQDNs",
    "UpdatedAt": "2023-06-29T15:02:18Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.3"
      },
      "VulnerableVersionRange": "\u003c 1.3"
    }
  ]
}