{
  "Severity": "HIGH",
  "UpdatedAt": "2022-09-12T14:50:38Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "pyjwt"
  },
  "Advisory": {
    "DatabaseId": 73565,
    "Id": "GSA_kwCzR0hTQS1yOWp3LW13aHEtd3A2Ms4AAR9d",
    "GhsaId": "GHSA-r9jw-mwhq-wp62",
    "References": [
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2017-11424"
      },
      {
        "Url": "https://github.com/jpadilla/pyjwt/pull/277"
      },
      {
        "Url": "http://www.debian.org/security/2017/dsa-3979"
      },
      {
        "Url": "https://github.com/advisories/GHSA-r9jw-mwhq-wp62"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-r9jw-mwhq-wp62"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2017-11424"
      }
    ],
    "Description": "In PyJWT 1.5.0 and below the `invalid_strings` check in `HMACAlgorithm.prepare_key` does not account for all PEM encoded public keys. Specifically, the PKCS1 PEM encoded format would be allowed because it is prefaced with the string `-----BEGIN RSA PUBLIC KEY-----` which is not accounted for. This enables symmetric/asymmetric key confusion attacks against users using the PKCS1 PEM encoded public keys, which would allow an attacker to craft JWTs from scratch.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2022-05-13T01:42:19Z",
    "Severity": "HIGH",
    "Summary": "PyJWT vulnerable to key confusion attacks",
    "UpdatedAt": "2023-01-30T05:06:30Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.5,
      "VectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.5.1"
      },
      "VulnerableVersionRange": "\u003c 1.5.1"
    }
  ]
}