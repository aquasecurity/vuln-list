{
  "Severity": "LOW",
  "UpdatedAt": "2024-12-11T18:42:00Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "sigstore"
  },
  "Advisory": {
    "DatabaseId": 271510,
    "Id": "GSA_kwCzR0hTQS1oaGZnLWZ3cnctODd3N84ABCSW",
    "GhsaId": "GHSA-hhfg-fwrw-87w7",
    "References": [
      {
        "Url": "https://github.com/sigstore/sigstore-python/security/advisories/GHSA-hhfg-fwrw-87w7"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-55655"
      },
      {
        "Url": "https://github.com/sigstore/sigstore-python/commit/300b502ae99ebfaace124f1f4e422a6a669369cf"
      },
      {
        "Url": "https://github.com/sigstore/sigstore-python/releases/tag/v3.6.0"
      },
      {
        "Url": "https://github.com/advisories/GHSA-hhfg-fwrw-87w7"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-hhfg-fwrw-87w7"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-55655"
      }
    ],
    "Description": "### Summary\n\nVersions of sigstore-python newer than 2.0.0 but prior to 3.6.0 perform insufficient validation of the \"integration time\" present in \"v2\" and \"v3\" bundles during the verification flow: the \"integration time\" is verified *if* a source of signed time (such as an inclusion promise) is present, but is otherwise trusted if no source of signed time is present.\n\nThis does not affect \"v1\" bundles, as the \"v1\" bundle format always requires an inclusion promise.\n\n### Details\n\nSigstore uses signed time to support verification of signatures made against short-lived signing keys. \n\n### Impact\n\nThe impact and severity of this weakness is *low*, as Sigstore contains multiple other enforcing components that prevent an attacker who modifies the integration timestamp within a bundle from impersonating a valid signature. In particular, an attacker who modifies the integration timestamp can induce a Denial of Service, but in no different manner than already possible with bundle access (e.g. modifying the signature itself such that it fails to verify).\n\nSeparately, an attacker could upload a *new* entry to the transparency service, and substitute their new entry's time. However, this would still be rejected at validation time, as the new entry's (valid) signed time would be outside the validity window of the original signing certificate and would nonetheless render the attacker auditable.\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-12-11T18:42:00Z",
    "Severity": "LOW",
    "Summary": "sigstore has insufficient validation of integration timestamp during verification",
    "UpdatedAt": "2024-12-11T18:42:00Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "3.6.0"
      },
      "VulnerableVersionRange": "\u003e= 2.0.0, \u003c 3.6.0"
    }
  ]
}