{
  "Severity": "MODERATE",
  "UpdatedAt": "2024-01-08T15:29:56Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "pyload-ng"
  },
  "Advisory": {
    "DatabaseId": 230344,
    "Id": "GSA_kwCzR0hTQS1naG13LXJ3aDgtNnFtcs4AA4PI",
    "GhsaId": "GHSA-ghmw-rwh8-6qmr",
    "References": [
      {
        "Url": "https://github.com/pyload/pyload/security/advisories/GHSA-ghmw-rwh8-6qmr"
      },
      {
        "Url": "https://github.com/pyload/pyload/commit/4159a1191ec4fe6d927e57a9c4bb8f54e16c381d"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-21645"
      },
      {
        "Url": "https://github.com/advisories/GHSA-ghmw-rwh8-6qmr"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-ghmw-rwh8-6qmr"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-21645"
      }
    ],
    "Description": "### Summary\nA log injection vulnerability was identified in `pyload`. This vulnerability allows any unauthenticated actor to inject arbitrary messages into the logs gathered by `pyload`.\n\n### Details\n`pyload` will generate a log entry when attempting to sign in with faulty credentials. This entry will be in the form of `Login failed for user 'USERNAME'`. However, when supplied with a username containing a newline, this newline is not properly escaped. Newlines are also the delimiter between log entries. This allows the attacker to inject new log entries into the log file.\n\n### PoC\nRun `pyload` in the default configuration by running the following command\n```\npyload\n```\n\nWe can now sign in as the pyload user and view the logs at `http://localhost:8000/logs`.\n![Viewing the logs](https://user-images.githubusercontent.com/44903767/294433796-f2c96e39-8000-4649-99bb-9c50e786243d.png)\n\nAny unauthenticated attacker can now make the following request to inject arbitrary logs.\n\n```\ncurl 'http://localhost:8000/login?next=http://localhost:8000/' -X POST -H 'Content-Type: application/x-www-form-urlencoded' --data-raw $'do=login\u0026username=wrong\\'%0a[2024-01-05 02:49:19]  HACKER               PinkDraconian  THIS ENTRY HAS BEEN INJECTED\u0026password=wrong\u0026submit=Login'\n```\n\nIf we now were to look at the logs again, we see that the entry has successfully been injected.\n![PoC2](https://user-images.githubusercontent.com/44903767/294434785-2fc6dce4-3e2c-4da0-8e80-a6bba882f756.png)\n\n### Impact\nForged or otherwise, corrupted log files can be used to cover an attackerâ€™s tracks or even to implicate another party in the commission of a malicious act.\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-01-08T15:29:55Z",
    "Severity": "MODERATE",
    "Summary": "pyload Log Injection vulnerability",
    "UpdatedAt": "2024-01-08T15:56:30Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 5.3,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.5.0b3.dev77"
      },
      "VulnerableVersionRange": "\u003c 0.5.0b3.dev77"
    }
  ]
}