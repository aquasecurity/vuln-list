{
  "Severity": "MODERATE",
  "UpdatedAt": "2024-02-05T23:23:23Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "pyload-ng"
  },
  "Advisory": {
    "DatabaseId": 233775,
    "Id": "GSA_kwCzR0hTQS1nM2NtLXFnMnYtMmhqNc4AA5Ev",
    "GhsaId": "GHSA-g3cm-qg2v-2hj5",
    "References": [
      {
        "Url": "https://github.com/pyload/pyload/security/advisories/GHSA-g3cm-qg2v-2hj5"
      },
      {
        "Url": "https://github.com/pyload/pyload/commit/fe94451dcc2be90b3889e2fd9d07b483c8a6dccd"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-24808"
      },
      {
        "Url": "https://github.com/advisories/GHSA-g3cm-qg2v-2hj5"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-g3cm-qg2v-2hj5"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-24808"
      }
    ],
    "Description": "### Summary\nOpen redirect vulnerability due to incorrect validation of input values when redirecting users after login.\n\n### Details\npyload is validating URLs via the `get_redirect_url` function when redirecting users at login.\n![301715649-f533db41-d0bd-44f7-8735-be1887fbd06c](https://github.com/pyload/pyload/assets/114328108/7fbec2ed-05ed-46e6-847f-05132cf3f136)\n\n\nThe URL entered in the `next` variable goes through the `is_safe_url` function, where a lack of validation can redirect the user to an arbitrary domain.\n![301715667-2819b1d3-8a14-42f4-89c8-3d2fa84fc309](https://github.com/pyload/pyload/assets/114328108/613484f3-8097-4871-887d-8fa5eec817cc)\n\n\nThe documentation in the urllib library shows that improper URLs are recognized as relative paths when using the `urlparse` function. (https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlparse)\n\nFor example, When an unusual URL like `https:///example.com` is entered, `urlparse` interprets it as a relative path, but in the actual request it is converted to `https://example.com` due to url normalization.\n\n### PoC\n1. In the next variable, insert the URL to which you want to redirect the user.\n![301715949-bb1451eb-5e84-451d-83b4-5c3e204d1df7](https://github.com/pyload/pyload/assets/114328108/6fe639ea-1f85-4715-bf6c-c9c8c4ee9c94)\n\n\n\n2. Check that it is possible to bypass url validation and redirect users to an arbitrary url.\n![301715824-3de6584a-878d-4ec4-a3d5-a34d11c6c0ac](https://github.com/pyload/pyload/assets/114328108/902b3244-a4ef-4f8e-8319-c4b92764f15f)\n![301716107-ba5ab7b9-7aa8-4b7a-8924-eba82442b4c3](https://github.com/pyload/pyload/assets/114328108/35191d7b-50b9-4a46-8319-ebdebec20b41)\n\n\n\n### Impact\nAn attacker can use this vulnerability to redirect users to malicious websites, which can be used for phishing and similar attacks.\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-02-05T23:23:22Z",
    "Severity": "MODERATE",
    "Summary": "pyLoad open redirect vulnerability due to improper validation of the is_safe_url function",
    "UpdatedAt": "2024-02-14T14:51:15Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 6.1,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.5.0b3.dev79"
      },
      "VulnerableVersionRange": "\u003c 0.5.0b3.dev79"
    }
  ]
}