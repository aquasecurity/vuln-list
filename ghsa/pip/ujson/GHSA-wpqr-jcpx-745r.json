{
  "Severity": "HIGH",
  "UpdatedAt": "2022-07-05T21:06:02Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "ujson"
  },
  "Advisory": {
    "DatabaseId": 184758,
    "Id": "GSA_kwCzR0hTQS13cHFyLWpjcHgtNzQ1cs4AAtG2",
    "GhsaId": "GHSA-wpqr-jcpx-745r",
    "References": [
      {
        "Url": "https://github.com/ultrajson/ultrajson/security/advisories/GHSA-wpqr-jcpx-745r"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2022-31116"
      },
      {
        "Url": "https://github.com/ultrajson/ultrajson/commit/67ec07183342589d602e0fcf7bb1ff3e19272687"
      },
      {
        "Url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NAU5N4A7EUK2AMUCOLYDD5ARXAJYZBD2/"
      },
      {
        "Url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OPPU5FZP3LCTXYORFH7NHUMYA5X66IA7/"
      },
      {
        "Url": "https://github.com/advisories/GHSA-wpqr-jcpx-745r"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-wpqr-jcpx-745r"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2022-31116"
      }
    ],
    "Description": "### Impact\n_What kind of vulnerability is it? Who is impacted?_\n\nAnyone parsing JSON from an untrusted source is vulnerable.\n\nJSON strings that contain escaped surrogate characters not part of a proper surrogate pair were decoded incorrectly. Besides corrupting strings, this allowed for potential key confusion and value overwriting in dictionaries.\n\nExamples:\n\n```python\n# An unpaired high surrogate character is ignored.\n\u003e\u003e\u003e ujson.loads(r'\"\\uD800\"')\n''\n\u003e\u003e\u003e ujson.loads(r'\"\\uD800hello\"')\n'hello'\n\n# An unpaired low surrogate character is preserved.\n\u003e\u003e\u003e ujson.loads(r'\"\\uDC00\"')\n'\\udc00'\n\n# A pair of surrogates with additional non surrogate characters pair up in spite of being invalid.\n\u003e\u003e\u003e ujson.loads(r'\"\\uD800foo bar\\uDC00\"')\n'foo barêÄÄ'\n```\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\nUsers should upgrade to UltraJSON 5.4.0.\n\nFrom version 5.4.0, UltraJSON decodes lone surrogates in the same way as the standard library's `json` module does, preserving them in the parsed output:\n\n```python3\n\u003e\u003e\u003e ujson.loads(r'\"\\uD800\"')\n'\\ud800'\n\u003e\u003e\u003e ujson.loads(r'\"\\uD800hello\"')\n'\\ud800hello'\n\u003e\u003e\u003e ujson.loads(r'\"\\uDC00\"')\n'\\udc00'\n\u003e\u003e\u003e ujson.loads(r'\"\\uD800foo bar\\uDC00\"')\n'\\ud800foo bar\\udc00'\n```\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nShort of switching to an entirely different JSON library, there are no safe alternatives to upgrading.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [UltraJSON](http://github.com/ultrajson/ultrajson/issues)\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2022-07-05T21:06:00Z",
    "Severity": "HIGH",
    "Summary": "Incorrect handling of invalid surrogate pair characters",
    "UpdatedAt": "2023-01-27T05:05:12Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.5,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "5.4.0"
      },
      "VulnerableVersionRange": "\u003c 5.4.0"
    }
  ]
}