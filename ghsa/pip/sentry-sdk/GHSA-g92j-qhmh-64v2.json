{
  "Severity": "LOW",
  "UpdatedAt": "2025-06-06T22:27:44Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "sentry-sdk"
  },
  "Advisory": {
    "DatabaseId": 253931,
    "Id": "GSA_kwCzR0hTQS1nOTJqLXFobWgtNjR2Ms4AA9_r",
    "GhsaId": "GHSA-g92j-qhmh-64v2",
    "References": [
      {
        "Url": "https://github.com/getsentry/sentry-python/security/advisories/GHSA-g92j-qhmh-64v2"
      },
      {
        "Url": "https://github.com/getsentry/sentry-python/pull/3251"
      },
      {
        "Url": "https://github.com/getsentry/sentry-python/commit/763e40aa4cb57ecced467f48f78f335c87e9bdff"
      },
      {
        "Url": "https://docs.python.org/3/library/subprocess.html"
      },
      {
        "Url": "https://docs.sentry.io/platforms/python/integrations/default-integrations"
      },
      {
        "Url": "https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib"
      },
      {
        "Url": "https://github.com/getsentry/sentry-python/releases/tag/2.8.0"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-40647"
      },
      {
        "Url": "https://github.com/getsentry/sentry-python/releases/tag/1.45.1"
      },
      {
        "Url": "https://github.com/advisories/GHSA-g92j-qhmh-64v2"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-g92j-qhmh-64v2"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-40647"
      }
    ],
    "Description": "### Impact\n\nThe bug in Sentry's Python SDK \u003c2.8.0 results in the unintentional exposure of environment variables to subprocesses despite the `env={}` setting.\n\n### Details\n\nIn Python's `subprocess` calls, all environment variables are passed to subprocesses by default. However, if you specifically do not want them to be passed to subprocesses, you may use `env` argument in `subprocess` calls, like in this example:\n\n```\n\u003e\u003e\u003e subprocess.check_output([\"env\"], env={\"TEST\":\"1\"})\nb'TEST=1\\n'\n```\n\nIf you'd want to not pass any variables, you can set an empty dict:\n\n```\n\u003e\u003e\u003e subprocess.check_output([\"env\"], env={})\nb''\n```\n\nHowever, the bug in Sentry SDK \u003c2.8.0 causes **all environment variables** to be passed to the subprocesses when `env={}` is set, unless the Sentry SDK's [Stdlib](https://docs.sentry.io/platforms/python/integrations/default-integrations/#stdlib) integration is disabled. The Stdlib integration is enabled by default.\n\n### Patches\nThe issue has been patched in https://github.com/getsentry/sentry-python/pull/3251 and the fix released in [sentry-sdk==2.8.0](https://github.com/getsentry/sentry-python/releases/tag/2.8.0). The fix was also backported to [sentry-sdk==1.45.1](https://github.com/getsentry/sentry-python/releases/tag/1.45.1).\n\n### Workarounds\n\nWe strongly recommend upgrading to the latest SDK version. However, if it's not possible, and if passing environment variables to child processes poses a security risk for you, there are two options:\n\n1. In your application, replace `env={}` with the minimal dict `env={\"EMPTY_ENV\":\"1\"}` or similar.\n\nOR\n\n2. Disable Stdlib integration:\n```\nimport sentry_sdk\n\n# Should go before sentry_sdk.init\nsentry_sdk.integrations._DEFAULT_INTEGRATIONS.remove(\"sentry_sdk.integrations.stdlib.StdlibIntegration\")\n\nsentry_sdk.init(...)\n```\n\n### References\n* Sentry docs: [Default integrations](https://docs.sentry.io/platforms/python/integrations/default-integrations/)\n* Python docs: [subprocess module](https://docs.python.org/3/library/subprocess.html)\n* Patch https://github.com/getsentry/sentry-python/pull/3251",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-07-18T17:18:46Z",
    "Severity": "LOW",
    "Summary": "Sentry's Python SDK unintentionally exposes environment variables to subprocesses",
    "UpdatedAt": "2025-06-06T22:27:44Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 2.5,
      "VectorString": "CVSS:3.1/AV:L/AC:H/PR:H/UI:N/S:C/C:L/I:N/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.45.1"
      },
      "VulnerableVersionRange": "\u003c 1.45.1"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "2.8.0"
      },
      "VulnerableVersionRange": "\u003e= 2.0.0a1, \u003c 2.8.0"
    }
  ]
}