{
  "Severity": "HIGH",
  "UpdatedAt": "2024-02-21T18:04:43Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "cryptography"
  },
  "Advisory": {
    "DatabaseId": 235213,
    "Id": "GSA_kwCzR0hTQS02dnF3LTN2NWotNTR4NM4AA5bN",
    "GhsaId": "GHSA-6vqw-3v5j-54x4",
    "References": [
      {
        "Url": "https://github.com/pyca/cryptography/security/advisories/GHSA-6vqw-3v5j-54x4"
      },
      {
        "Url": "https://github.com/pyca/cryptography/pull/10423"
      },
      {
        "Url": "https://github.com/pyca/cryptography/commit/97d231672763cdb5959a3b191e692a362f1b9e55"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-26130"
      },
      {
        "Url": "https://github.com/advisories/GHSA-6vqw-3v5j-54x4"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-6vqw-3v5j-54x4"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-26130"
      }
    ],
    "Description": "If `pkcs12.serialize_key_and_certificates` is called with both:\n\n1. A certificate whose public key did not match the provided private key\n2. An `encryption_algorithm` with `hmac_hash` set (via `PrivateFormat.PKCS12.encryption_builder().hmac_hash(...)`\n\nThen a NULL pointer dereference would occur, crashing the Python process.\n\nThis has been resolved, and now a `ValueError` is properly raised.\n\nPatched in https://github.com/pyca/cryptography/pull/10423",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-02-21T18:04:40Z",
    "Severity": "HIGH",
    "Summary": "cryptography NULL pointer dereference with pkcs12.serialize_key_and_certificates when called with a non-matching certificate and private key and an hmac_hash override",
    "UpdatedAt": "2024-02-21T22:45:35Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.5,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "42.0.4"
      },
      "VulnerableVersionRange": "\u003e= 38.0.0, \u003c 42.0.4"
    }
  ]
}