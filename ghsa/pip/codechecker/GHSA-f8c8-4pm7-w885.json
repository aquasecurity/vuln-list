{
  "Severity": "HIGH",
  "UpdatedAt": "2025-01-21T20:25:05Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "codechecker"
  },
  "Advisory": {
    "DatabaseId": 277045,
    "Id": "GSA_kwCzR0hTQS1mOGM4LTRwbTctdzg4Nc4ABDo1",
    "GhsaId": "GHSA-f8c8-4pm7-w885",
    "References": [
      {
        "Url": "https://github.com/Ericsson/codechecker/security/advisories/GHSA-f8c8-4pm7-w885"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-53829"
      },
      {
        "Url": "https://github.com/pypa/advisory-database/tree/main/vulns/codechecker/PYSEC-2025-12.yaml"
      },
      {
        "Url": "https://github.com/advisories/GHSA-f8c8-4pm7-w885"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-f8c8-4pm7-w885"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-53829"
      }
    ],
    "Description": "### Summary\nCross-site request forgery allows an unauthenticated attacker to hijack the authentication of a logged in user, and use the web API with the same permissions.\n\n### Details\nSecurity attributes like HttpOnly and SameSite are missing from the session cookie, allowing its use from XHR requests and form submissions.\nThe CodeChecker API endpoints only require the session cookie, they do not require a CSRF token, and missing HTTP headers allow the form submission to succeed (but not XHR). This means that the attacker needs to know the ID of products to edit or delete them, but it does not need knowledge to create new products with the SQLite backend.\n\n### PoC\nWith a superuser logged into CodeChecker.\n\n```html\n\u003chtml\u003e\u003cbody\u003e\n    \u003cform action=\"https://codechecker.example.com/v6.58/Products\" method=\"POST\" enctype=\"text/plain\"\u003e\n        \u003cinput type=\"text\" name='[1,\"getProducts\",1,1,{}]' value=''\u003e\n    \u003c/form\u003e\n    \u003cscript\u003edocument.forms[0].submit()\u003c/script\u003e\n\u003c/body\u003e\u003c/html\u003e\n```\nOr the same form attack on any of the applicable endpoints.\n\n### Impact\nThe vulnerability allows an attacker to make requests to CodeChecker as the currently logged in user, including but not limited to adding, removing or editing products. The attacker needs to know the ID of the available products to modify or delete them. The attacker cannot directly exfiltrate data from CodeChecker, due to being limited to form-based CSRF.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-01-21T20:25:05Z",
    "Severity": "HIGH",
    "Summary": "Cross-Site Request Forgery in CodeChecker API",
    "UpdatedAt": "2025-04-08T17:52:38Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 8.2,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:H/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "6.24.5"
      },
      "VulnerableVersionRange": "\u003c 6.24.5"
    }
  ]
}