{
  "Severity": "MODERATE",
  "UpdatedAt": "2024-12-03T18:53:36Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "sentry"
  },
  "Advisory": {
    "DatabaseId": 268773,
    "Id": "GSA_kwCzR0hTQS12NWgyLXEydzQtZ3BjeM4ABBnl",
    "GhsaId": "GHSA-v5h2-q2w4-gpcx",
    "References": [
      {
        "Url": "https://github.com/getsentry/sentry/security/advisories/GHSA-v5h2-q2w4-gpcx"
      },
      {
        "Url": "https://github.com/getsentry/sentry/pull/79377"
      },
      {
        "Url": "https://github.com/getsentry/sentry/pull/81038"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-53253"
      },
      {
        "Url": "https://github.com/advisories/GHSA-v5h2-q2w4-gpcx"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-v5h2-q2w4-gpcx"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-53253"
      }
    ],
    "Description": "### Impact\nDuring routine testing, we identified a scenario where a specific error message generated by our platform could include a plaintext Client ID and Client Secret for an application integration. The Client ID and Client Secret would not be displayed in the UI, but would be returned in the underlying HTTP response to the end user. This could occur under the following conditions:\n- An app installation made use of a [Search UI component](https://docs.sentry.io/organization/integrations/integration-platform/ui-components/formfield/#select) with the `async` flag set to true (default: true),\n- A user types types into the Search Component which creates a request to the third-party for search or query results, and\n- That third-party response may then fail validation and Sentry would return the `select-requester.invalid-response` error code along with a serialized version of a Sentry application containing the integration Client Secret.\n\nShould this error be found, it's reasonable to assume the potential exposure of an integration Client Secret. However, an ID and Secret pair alone does not provide direct access to any data. For that secret to be abused an attacker would also need to obtain a valid API token for a Sentry application. \n\n#### Impact for SaaS Users\nFor Sentry SaaS users, we have confirmed that only a single application integration was impacted and the owner has rotated their Client Secret. We have also confirmed that no abuse of the leaked Client Secret has occurred. \n\n#### Potential Impact for Self-Hosted Users\nSentry self-hosted does not ship with any application integrations. This could only impact self-hosted users that maintain their own integrations. In that case, search for a `select-requester.invalid-response` event. Please note that this error was also shared with another event unrelated to this advisory so you will also need to review the parameters logged for each named event. You may review [select_requester.py](https://github.com/getsentry/sentry/blob/4a448fbb0d0b416fef9ee0ab26579e0dc16f21b7/src/sentry/sentry_apps/external_requests/select_requester.py#L78-L123) for the instances where these errors can be generated. With the security fix this is no longer a shared event type.\n\n### Patches\n- Sentry SaaS users do not need to take any action.\n- Sentry self-hosted users should upgrade to 24.11.1 or higher.\n\n### References\n- Bug introduced in https://github.com/getsentry/sentry/pull/79377\n- Security fix in https://github.com/getsentry/sentry/pull/81038\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-11-22T20:27:19Z",
    "Severity": "MODERATE",
    "Summary": "Sentry improper error handling leaks Application Integration Client Secret",
    "UpdatedAt": "2024-12-03T19:25:59Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 5.3,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "24.11.1"
      },
      "VulnerableVersionRange": "= 24.11.0"
    }
  ]
}