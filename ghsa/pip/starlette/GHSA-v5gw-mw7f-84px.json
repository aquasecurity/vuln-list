{
  "Severity": "LOW",
  "UpdatedAt": "2023-09-02T05:04:45Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "starlette"
  },
  "Advisory": {
    "DatabaseId": 210414,
    "Id": "GSA_kwCzR0hTQS12NWd3LW13N2YtODRweM4AAzXu",
    "GhsaId": "GHSA-v5gw-mw7f-84px",
    "References": [
      {
        "Url": "https://github.com/encode/starlette/security/advisories/GHSA-v5gw-mw7f-84px"
      },
      {
        "Url": "https://github.com/encode/starlette/commit/1797de464124b090f10cf570441e8292936d63e3"
      },
      {
        "Url": "https://github.com/encode/starlette/blob/4bab981d9e870f6cee1bd4cd59b87ddaf355b2dc/starlette/staticfiles.py#L172-L174"
      },
      {
        "Url": "https://github.com/encode/starlette/releases/tag/0.27.0"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2023-29159"
      },
      {
        "Url": "https://github.com/pypa/advisory-database/tree/main/vulns/starlette/PYSEC-2023-83.yaml"
      },
      {
        "Url": "https://jvn.jp/en/jp/JVN95981715/"
      },
      {
        "Url": "https://github.com/advisories/GHSA-v5gw-mw7f-84px"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-v5gw-mw7f-84px"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2023-29159"
      }
    ],
    "Description": "### Summary\nWhen using `StaticFiles`, if there's a file or directory that starts with the same name as the `StaticFiles` directory, that file or directory is also exposed via `StaticFiles` which is a path traversal vulnerability.\n\n### Details\nThe root cause of this issue is the usage of `os.path.commonprefix()`:\nhttps://github.com/encode/starlette/blob/4bab981d9e870f6cee1bd4cd59b87ddaf355b2dc/starlette/staticfiles.py#L172-L174\n\nAs stated in the Python documentation (https://docs.python.org/3/library/os.path.html#os.path.commonprefix) this function returns the longest prefix common to paths.\n\nWhen passing a path like `/static/../static1.txt`, `os.path.commonprefix([full_path, directory])` returns `./static` which is the common part of `./static1.txt` and `./static`, It refers to `/static/../static1.txt` because it is considered in the staticfiles directory. As a result, it becomes possible to view files that should not be open to the public.\n\nThe solution is to use `os.path.commonpath` as the Python documentation explains that `os.path.commonprefix` works a character at a time, it does not treat the arguments as paths.\n\n### PoC\nIn order to reproduce the issue, you need to create the following structure:\n\n```\n├── static\n│   ├── index.html\n├── static_disallow\n│   ├── index.html\n└── static1.txt\n```\n\nAnd run the `Starlette` app with:\n\n```py\nimport uvicorn\nfrom starlette.applications import Starlette\nfrom starlette.routing import Mount\nfrom starlette.staticfiles import StaticFiles\n\n\nroutes = [\n    Mount(\"/static\", app=StaticFiles(directory=\"static\", html=True), name=\"static\"),\n]\n\napp = Starlette(routes=routes)\n\n\nif __name__ == \"__main__\":\n    uvicorn.run(app, host=\"0.0.0.0\", port=8000)\n```\n\nAnd running the commands:\n\n```shell\ncurl --path-as-is 'localhost:8000/static/../static_disallow/'\ncurl --path-as-is 'localhost:8000/static/../static1.txt'\n```\nThe `static1.txt` and the directory `static_disallow` are exposed.\n\n### Impact\nConfidentiality is breached: An attacker may obtain files that should not be open to the public.\n\n### Credits\nSecurity researcher **Masashi Yamane of LAC Co., Ltd** reported this vulnerability to **JPCERT/CC Vulnerability Coordination Group** and they contacted us to coordinate a patch for the security issue.\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2023-05-17T03:49:14Z",
    "Severity": "LOW",
    "Summary": "Starlette has Path Traversal vulnerability in StaticFiles",
    "UpdatedAt": "2023-09-02T05:04:45Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 3.7,
      "VectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.27.0"
      },
      "VulnerableVersionRange": "\u003e= 0.13.5, \u003c 0.27.0"
    }
  ]
}