{
  "Severity": "HIGH",
  "UpdatedAt": "2025-02-14T15:26:57Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "label-studio"
  },
  "Advisory": {
    "DatabaseId": 280482,
    "Id": "GSA_kwCzR0hTQS1tMjM4LWZtY3ctd2g1OM4ABEei",
    "GhsaId": "GHSA-m238-fmcw-wh58",
    "References": [
      {
        "Url": "https://github.com/HumanSignal/label-studio/security/advisories/GHSA-m238-fmcw-wh58"
      },
      {
        "Url": "https://github.com/HumanSignal/label-studio/commit/06a2b29c1208e1878ccae66e6b84c8b24598fa79"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-25297"
      },
      {
        "Url": "https://github.com/advisories/GHSA-m238-fmcw-wh58"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-m238-fmcw-wh58"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-25297"
      }
    ],
    "Description": "## Description\nLabel Studio's S3 storage integration feature contains a Server-Side Request Forgery (SSRF) vulnerability in its endpoint configuration. When creating an S3 storage connection, the application allows users to specify a custom S3 endpoint URL via the s3_endpoint parameter. This endpoint URL is passed directly to the boto3 AWS SDK without proper validation or restrictions on the protocol or destination.\n\nThe vulnerability allows an attacker to make the application send HTTP requests to arbitrary internal services by specifying them as the S3 endpoint. When the storage sync operation is triggered, the application attempts to make S3 API calls to the specified endpoint, effectively making HTTP requests to the target service and returning the response in error messages.\n\nThis SSRF vulnerability enables attackers to bypass network segmentation and access internal services that should not be accessible from the external network. The vulnerability is particularly severe because error messages from failed requests contain the full response body, allowing data exfiltration from internal services.\n\n## Steps to reproduce\n1. Create an account in Label Studio\n\n2. Create a new project with basic configuration\n\n3. Create an S3 storage connection with the following configuration:\n   ```json\n   {\n     \"project\": 1,\n     \"title\": \"Test Storage\",\n     \"bucket\": \"\u003cfilename\u003e\",\n     \"s3_endpoint\": \"http://internal-web\",\n     \"use_blob_urls\": true,\n     \"aws_access_key_id\": \"test\",\n     \"aws_secret_access_key\": \"test\"\n   }\n   ```\n4. Trigger a storage sync operation by sending a POST request to `/api/storages/s3/[storage_id]/sync`\n\nThe application will attempt to connect to the specified endpoint URL as if it were an S3 service. When the request fails due to invalid S3 API responses, the error message will contain the raw response from the internal service, allowing access to internal resources.\n   \n## Mitigations\n- Implement strict validation of S3 endpoint URLs to allow only valid S3service endpoints\n- Add an allowlist of endpoint domains and protocols\n- Sanitize error messages to prevent leakage of sensitive information from failed requests\n- Consider implementing network-level controls to restrict outbound connections from the application server\n\n## Impact\nThis vulnerability has high severity as it allows authenticated users to make requests to arbitrary internal services from the application server, potentially exposing sensitive internal resources and bypassing network segmentation. The inclusion of response data in error messages makes this particularly effective for data exfiltration.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-02-14T15:26:56Z",
    "Severity": "HIGH",
    "Summary": "Label Studio allows Server-Side Request Forgery in the S3 Storage Endpoint",
    "UpdatedAt": "2025-02-14T22:18:11Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 8.6,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:N/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.16.0"
      },
      "VulnerableVersionRange": "\u003c 1.16.0"
    }
  ]
}