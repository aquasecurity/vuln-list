{
  "Severity": "LOW",
  "UpdatedAt": "2023-09-07T18:46:23Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "pydantic"
  },
  "Advisory": {
    "DatabaseId": 4246,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTVqcXAtcWdmNi0zcHZo",
    "GhsaId": "GHSA-5jqp-qgf6-3pvh",
    "References": [
      {
        "Url": "https://github.com/samuelcolvin/pydantic/security/advisories/GHSA-5jqp-qgf6-3pvh"
      },
      {
        "Url": "https://github.com/samuelcolvin/pydantic/commit/7e83fdd2563ffac081db7ecdf1affa65ef38c468"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29510"
      },
      {
        "Url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/S2HT266L6Q7H6ICP7DFGXOGBJHNNKMKB/"
      },
      {
        "Url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UEFWM7DYKD2ZHE7R5YT5EQWJPV4ZKYRB/"
      },
      {
        "Url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UMKAJX4O6IGBBCE32CO2G7PZQCCQSBLV/"
      },
      {
        "Url": "https://github.com/pydantic/pydantic/commit/1c24f1d74ba95ea985b50bdc001ce96c813229aa"
      },
      {
        "Url": "https://github.com/pydantic/pydantic/commit/80e0dd3f752bef145dce12f160d262bb40ec8d47"
      },
      {
        "Url": "https://github.com/pydantic/pydantic/commit/bdde15b7b947c94ca00fd6eb92da8db390a13520"
      },
      {
        "Url": "https://github.com/advisories/GHSA-5jqp-qgf6-3pvh"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-5jqp-qgf6-3pvh"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2021-29510"
      }
    ],
    "Description": "\nImpact\n\nPassing either 'infinity', 'inf' or float('inf') (or their negatives) to datetime or date fields causes validation to run forever with 100% CPU usage (on one CPU).\nPatches\n\nPydantic is be patched with fixes available in the following versions:\n\n    v1.8.2\n    v1.7.4\n    v1.6.2\n\nAll these versions are available on pypi, and will be available on conda-forge soon.\n\nSee the changelog for details.\nWorkarounds\n\nIf you absolutely can't upgrade, you can work around this risk using a validator to catch these values, brief demo:\n\nfrom datetime import date\nfrom pydantic import BaseModel, validator\n\nclass DemoModel(BaseModel):\n    date_of_birth: date\n\n    @validator('date_of_birth', pre=True)\n    def skip_infinite_values(cls, v):\n        try:\n            seconds = float(v)\n        except (ValueError, TypeError):\n            return v\n        else:\n            if seconds == float('inf'):\n                return date.max\n            elif seconds == float('-inf'):\n                return date.min\n            else:\n                return seconds\n\nNote: this is not an ideal solution (in particular you'll need a slightly different function for datetimes), instead of a hack like this you should upgrade pydantic.\n\nIf you are not using v1.8.x, v1.7.x or v1.6.x and are unable to upgrade to a fixed version of pydantic, please create an issue requesting a back-port, and we will endeavour to release a patch for earlier versions of pydantic.\nReferences\n\nThis was fixed in commit 7e83fdd.\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2021-05-13T20:23:17Z",
    "Severity": "LOW",
    "Summary": "Use of \"infinity\" as an input to datetime and date fields causes infinite loop in pydantic",
    "UpdatedAt": "2023-09-07T18:46:24Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 3.3,
      "VectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.6.2"
      },
      "VulnerableVersionRange": "\u003c 1.6.2"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "1.7.4"
      },
      "VulnerableVersionRange": "\u003e= 1.7.0, \u003c 1.7.4"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "1.8.2"
      },
      "VulnerableVersionRange": "\u003e= 1.8.0, \u003c 1.8.2"
    }
  ]
}