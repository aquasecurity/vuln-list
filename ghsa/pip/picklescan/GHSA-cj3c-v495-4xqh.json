{
  "Severity": "MODERATE",
  "UpdatedAt": "2025-08-26T18:37:52Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "picklescan"
  },
  "Advisory": {
    "DatabaseId": 309019,
    "Id": "GSA_kwCzR0hTQS1jajNjLXY0OTUtNHhxaM4ABLcb",
    "GhsaId": "GHSA-cj3c-v495-4xqh",
    "References": [
      {
        "Url": "https://github.com/mmaitre314/picklescan/security/advisories/GHSA-cj3c-v495-4xqh"
      },
      {
        "Url": "https://github.com/mmaitre314/picklescan/commit/aecd11be98702caa9ba9b12189d91ad596a36114"
      },
      {
        "Url": "https://github.com/advisories/GHSA-cj3c-v495-4xqh"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-cj3c-v495-4xqh"
      }
    ],
    "Description": "### Summary\n\nUsing code.InteractiveInterpreter.runcode, which is a built-in python library function to execute remote pickle file.\n\n### Details\n\nThe attack payload executes in the following steps:\n\nFirst, the attacker craft the payload by calling to code.InteractiveInterpreter.runcode function in reduce method\nThen when the victim after checking whether the pickle file is safe by using Picklescan library and this library doesn't dectect any dangerous functions, decide to pickle.load() this malicious pickle file, thus lead to remote code execution.\n\n### PoC\n\n```\nclass EvilCodeRuncode:\n    def __reduce__(self):\n        from code import InteractiveInterpreter\n        # InteractiveInterpreter().runcode(cmd) -\u003e exec(cmd)\n        return InteractiveInterpreter().runcode, (\"__import__('os').system('whoami')\",)\n```\n\n### Impact\n\nWho is impacted? Any organization or individual relying on picklescan to detect malicious pickle files inside PyTorch models.\nWhat is the impact? Attackers can embed malicious code in pickle file that remains undetected but executes when the pickle file is loaded.\nSupply Chain Attack: Attackers can distribute infected pickle files across ML models, APIs, or saved Python objects.\n\n### Corresponding\n\nhttps://github.com/FredericDT\nhttps://github.com/Qhaoduoyu",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-08-26T18:37:50Z",
    "Severity": "MODERATE",
    "Summary": "Picklescan has a missing detection when calling built-in python code.InteractiveInterpreter",
    "UpdatedAt": "2025-08-26T18:37:52Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.0.29"
      },
      "VulnerableVersionRange": "\u003c 0.0.29"
    }
  ]
}