{
  "Severity": "MODERATE",
  "UpdatedAt": "2023-01-27T01:04:27Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "safeurl-python"
  },
  "Advisory": {
    "DatabaseId": 201626,
    "Id": "GSA_kwCzR0hTQS1qZ2g4LXZjaHctcTNnN84AAxOa",
    "GhsaId": "GHSA-jgh8-vchw-q3g7",
    "References": [
      {
        "Url": "https://github.com/IncludeSecurity/safeurl-python/security/advisories/GHSA-jgh8-vchw-q3g7"
      },
      {
        "Url": "https://github.com/IncludeSecurity/safeurl-python/pull/5/commits/42dd0c8e5fc84e17e1d3578d18aaea169eece474"
      },
      {
        "Url": "https://github.com/advisories/GHSA-jgh8-vchw-q3g7"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-jgh8-vchw-q3g7"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2023-24622"
      }
    ],
    "Description": "### Description\nIn SafeURL it is possible to specify a list of domains that should be matched before a request is sent out. The regex used to compare domains did not work as intended.\n\n### Impact\nThe regex used was:\n\n`re.match(\"(?i)^%s\" % domain, value)`\n\nThis has two problems, first that only the beginning and not the end of the string is anchored. Second, that a dot in the domain matches any character as part of regex syntax.\n\nTherefore, an allowlist of [\"victim.com\"] could allow the domain \"victimacomattacker.com\" to be requested.\n\nThis has lower impact since the usual attacker aim in an SSRF is to request internal resources such as private IP addresses rather than an attacker's own domain. But, in a case where SafeURL had specifically been used to try to limit requests to a particular allowlist, say for example a PDF renderer, the finding would be more severe.\n\n### Patches\nFixed in https://github.com/IncludeSecurity/safeurl-python/pull/5\n\n### References\n[Server-side request forgery (SSRF)](https://portswigger.net/web-security/ssrf)",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2023-01-27T01:04:27Z",
    "Severity": "MODERATE",
    "Summary": "safeurl-python contains Server-Side Request Forgery",
    "UpdatedAt": "2023-02-02T18:27:22Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.2"
      },
      "VulnerableVersionRange": "\u003c 1.2"
    }
  ]
}