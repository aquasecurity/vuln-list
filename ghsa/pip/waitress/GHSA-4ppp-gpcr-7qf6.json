{
  "Severity": "CRITICAL",
  "UpdatedAt": "2023-09-05T20:45:23Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "waitress"
  },
  "Advisory": {
    "DatabaseId": 1852,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTRwcHAtZ3Bjci03cWY2",
    "GhsaId": "GHSA-4ppp-gpcr-7qf6",
    "References": [
      {
        "Url": "https://github.com/Pylons/waitress/security/advisories/GHSA-4ppp-gpcr-7qf6"
      },
      {
        "Url": "https://github.com/Pylons/waitress/commit/575994cd42e83fd772a5f7ec98b2c56751bd3f65"
      },
      {
        "Url": "https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes"
      },
      {
        "Url": "https://github.com/advisories/GHSA-j7j6-7hfx-5522"
      },
      {
        "Url": "https://github.com/pypa/advisory-database/tree/main/vulns/waitress/PYSEC-2020-178.yaml"
      },
      {
        "Url": "https://github.com/advisories/GHSA-4ppp-gpcr-7qf6"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-4ppp-gpcr-7qf6"
      }
    ],
    "Description": "### Impact\n\nWaitress would header fold a double `Content-Length` header and due to being unable to cast the now comma separated value to an integer would set the `Content-Length` to 0 internally.\n\nSo a request with:\n\n```\nContent-Length: 10\nContent-Length: 10\n```\n\nwould get transformed to:\n\n```\nContent-Length: 10, 10\n```\n\nWhich would Waitress would then internally set to `Content-Lenght: 0`.\n\nWaitress would then treat the request as having no body, thereby treating the body of the request as a new request in HTTP pipelining.\n\n### Patches\n\nThis issue is fixed in Waitress 1.4.0. This brings a range of changes to harden Waitress against potential HTTP request confusions, and may change the behaviour of Waitress behind non-conformist proxies. \n\nThe Pylons Project recommends upgrading as soon as possible, while validating that the changes in Waitress don't cause any changes in behavior.\n\n### Workarounds\n\nVarious reverse proxies may have protections against sending potentially bad HTTP requests to the backend, and or hardening against potential issues like this. If the reverse proxy doesn't use HTTP/1.1 for connecting to the backend issues are also somewhat mitigated, as HTTP pipelining does not exist in HTTP/1.0 and Waitress will close the connection after every single request (unless the Keep Alive header is explicitly sent... so this is not a fool proof security method).\n\n### Issues/more security issues:\n\n* open an issue at https://github.com/Pylons/waitress/issues (if not sensitive or security related)\n* email the Pylons Security mailing list: pylons-project-security@googlegroups.com (if security related)",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2019-12-20T23:04:35Z",
    "Severity": "CRITICAL",
    "Summary": "HTTP Request Smuggling: Content-Length Sent Twice in Waitress",
    "UpdatedAt": "2023-09-05T20:45:23Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.4.0"
      },
      "VulnerableVersionRange": "\u003c 1.4.0"
    }
  ]
}