{
  "Severity": "HIGH",
  "UpdatedAt": "2023-09-05T21:00:24Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "waitress"
  },
  "Advisory": {
    "DatabaseId": 1851,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWcyeGMtMzVqdy1jNjNw",
    "GhsaId": "GHSA-g2xc-35jw-c63p",
    "References": [
      {
        "Url": "https://github.com/Pylons/waitress/security/advisories/GHSA-g2xc-35jw-c63p"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16786"
      },
      {
        "Url": "https://github.com/Pylons/waitress/commit/f11093a6b3240fc26830b6111e826128af7771c3"
      },
      {
        "Url": "https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes"
      },
      {
        "Url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GVDHR2DNKCNQ7YQXISJ45NT4IQDX3LJ7/"
      },
      {
        "Url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYEOTGWJZVKPRXX2HBNVIYWCX73QYPM5/"
      },
      {
        "Url": "https://access.redhat.com/errata/RHSA-2020:0720"
      },
      {
        "Url": "https://www.oracle.com/security-alerts/cpuapr2022.html"
      },
      {
        "Url": "https://lists.debian.org/debian-lts-announce/2022/05/msg00011.html"
      },
      {
        "Url": "https://github.com/advisories/GHSA-g2xc-35jw-c63p"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-g2xc-35jw-c63p"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2019-16786"
      }
    ],
    "Description": "### Impact\n\nWaitress would parse the `Transfer-Encoding` header and only look for a single string value, if that value was not `chunked` it would fall through and use the `Content-Length` header instead.\n\nAccording to the HTTP standard `Transfer-Encoding` should be a comma separated list, with the inner-most encoding first, followed by any further transfer codings, ending with `chunked`.\n\nRequests sent with:\n\n```\nTransfer-Encoding: gzip, chunked\n```\n\nWould incorrectly get ignored, and the request would use a `Content-Length` header instead to determine the body size of the HTTP message.\n\nThis could allow for Waitress to treat a single request as multiple requests in the case of HTTP pipelining.\n\n### Patches\n\nThis issue is fixed in Waitress 1.4.0. This brings a range of changes to harden Waitress against potential HTTP request confusions, and may change the behaviour of Waitress behind non-conformist proxies. \n\nWaitress will now return a 501 Not Implemented error if the `Transfer-Encoding` is not `chunked` or contains multiple elements. Waitress does not support any transfer codings such as `gzip` or `deflate`.\n\nThe Pylons Project recommends upgrading as soon as possible, while validating that the changes in Waitress don\u0026#39;t cause any changes in behavior.\n\n### Workarounds\n\nVarious reverse proxies may have protections against sending potentially bad HTTP requests to the backend, and or hardening against potential issues like this. If the reverse proxy doesn\u0026#39;t use HTTP/1.1 for connecting to the backend issues are also somewhat mitigated, as HTTP pipelining does not exist in HTTP/1.0 and Waitress will close the connection after every single request (unless the Keep Alive header is explicitly sent... so this is not a fool proof security method).\n\n### Issues/more security issues:\n\n* open an issue at https://github.com/Pylons/waitress/issues (if not sensitive or security related)\n* email the Pylons Security mailing list: pylons-project-security@googlegroups.com (if security related)",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2019-12-20T23:04:18Z",
    "Severity": "HIGH",
    "Summary": "HTTP Request Smuggling: Invalid Transfer-Encoding in Waitress",
    "UpdatedAt": "2023-09-05T21:00:24Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.1,
      "VectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.4.0"
      },
      "VulnerableVersionRange": "\u003c 1.4.0"
    }
  ]
}