{
  "Severity": "CRITICAL",
  "UpdatedAt": "2023-09-03T05:06:06Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "matrix-sydent"
  },
  "Advisory": {
    "DatabaseId": 216976,
    "Id": "GSA_kwCzR0hTQS1wNmh3LXdtNTktM2c1Z84AA0-Q",
    "GhsaId": "GHSA-p6hw-wm59-3g5g",
    "References": [
      {
        "Url": "https://github.com/matrix-org/sydent/security/advisories/GHSA-p6hw-wm59-3g5g"
      },
      {
        "Url": "https://github.com/python/cpython/issues/91826"
      },
      {
        "Url": "https://github.com/matrix-org/sydent/pull/574"
      },
      {
        "Url": "https://github.com/matrix-org/sydent/commit/1cd748307c6b168b66154e6c4db715d4b9551261"
      },
      {
        "Url": "https://docs.python.org/3/library/ssl.html?highlight=ssl#security-considerations"
      },
      {
        "Url": "https://github.com/matrix-org/sydent/releases/tag/v2.5.6"
      },
      {
        "Url": "https://peps.python.org/pep-0476/"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2023-38686"
      },
      {
        "Url": "https://github.com/pypa/advisory-database/tree/main/vulns/matrix-sydent/PYSEC-2023-139.yaml"
      },
      {
        "Url": "https://github.com/advisories/GHSA-p6hw-wm59-3g5g"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-p6hw-wm59-3g5g"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2023-38686"
      }
    ],
    "Description": "## Impact\n\nIf configured to send emails using TLS, Sydent does not verify SMTP servers' certificates. This makes  Sydent's emails vulnerable to interception via a [man-in-the-middle (MITM) attack](https://en.wikipedia.org/wiki/Man-in-the-middle_attack). Attackers with privileged access to the network can intercept room invitations and address confirmation emails.\n\nCVSS 3.1 overall score: 3.3 - [AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N](https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N/CR:L/IR:L/AR:X/MAV:A/MAC:H/MPR:N/MUI:N/MS:C/MC:L/MI:L/MA:N\u0026version=3.1)\n\n_Reported by Martin Schobert, [Pentagrid AG](https://pentagrid.ch/)._\n\n### Details\n\nSydent can be configured to send emails over a TLS-encrypted socket by setting\n\n```yaml\nemail:\n    tlsmode: \"TLS\"  # or the legacy value \"SSL\"\n```\n\nin its config file. Alternatively it can be configured to use [Opportunistic TLS](https://en.wikipedia.org/wiki/Opportunistic_TLS) by setting\n\n```yaml\nemail:\n    tlsmode: \"STARTTLS\"\n```\n\nIn both situations, Sydent will encrypt its communication with the SMTP server when sending emails. **In affected versions, Sydent will not verify the destination server's certificate.**\n\n### Vulnerability \n\nSydent sends email for two purposes:\n- to inform a third party that they have been invited to a Matrix room by their email address; and\n- to verify that a given Matrix user controls an email address.\n\nTherefore, attackers capable of running a MITM attack can\n\n1. Intercept room invitations sent to an email address. The invitation includes \n   - the room ID and its avatar, and\n   - the inviter's username, displayname and their avatar, and\n   - credentials for a guest Matrix account on the inviter's homeserver.\n2. Intercept address ownership confirmation emails. This would allow the attacker to falsely claim ownership of the indented recipient's Matrix account, if that account was permitted to log in using an email address and no other authentication factors.\n\n\n### Patches\n\nThis is patched in [Sydent 2.5.6](https://github.com/matrix-org/sydent/releases/tag/v2.5.6), see PR https://github.com/matrix-org/sydent/pull/574.\n\nWhen patching, make sure that Sydent trusts the certificate of the server it is connecting to. This should happen automatically when using properly issued certificates. If you are using self-signed certificates, make sure to copy your Certification Authority certificate, or your self signed certificate if using only one, to the trust store of your operating system.\n\n### Workarounds\n\nOne can ensure Sydent's emails fail to send by setting the configured SMTP server to a loopback or [non-routable](https://datatracker.ietf.org/doc/html/rfc1918#section-3) address under your control which does not have a listening SMTP server. For example:\n\n```yaml\nemail:\n    smtphost: \"localhost\"  # Assuming there is no SMTP server listening on localhost\n```\n\n### References\n\n- https://github.com/matrix-org/sydent/pull/574 implements the fix.\n- https://github.com/matrix-org/sydent/releases/tag/v2.5.6 is the release including this fix.\n- https://docs.python.org/3/library/ssl.html?highlight=ssl#security-considerations details the best-practice advice on how to use the standard library `smtp` module safely.\n- https://peps.python.org/pep-0476/ (accepted) proposed enabling TLS certificate verification by default  in standard library HTTP clients.\n- https://github.com/python/cpython/issues/91826 discusses enabling TLS certificate verification by default in the Python standard library, for SMTP and other protocols.\n\n## For more information\n\nIf you have any questions or comments about this advisory, e-mail us at [security@matrix.org](mailto:security@matrix.org).",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2023-07-31T22:03:44Z",
    "Severity": "CRITICAL",
    "Summary": "Sydent does not verify email server certificates",
    "UpdatedAt": "2023-11-10T05:06:11Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 9.3,
      "VectorString": "CVSS:3.1/AV:A/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "2.5.6"
      },
      "VulnerableVersionRange": "\u003c 2.5.6"
    }
  ]
}