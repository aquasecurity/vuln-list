{
  "Severity": "MODERATE",
  "UpdatedAt": "2025-07-31T19:21:36Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "OpenEXR"
  },
  "Advisory": {
    "DatabaseId": 305962,
    "Id": "GSA_kwCzR0hTQS1xaHBtLTg2djctcGhtbc4ABKsq",
    "GhsaId": "GHSA-qhpm-86v7-phmm",
    "References": [
      {
        "Url": "https://github.com/AcademySoftwareFoundation/openexr/security/advisories/GHSA-qhpm-86v7-phmm"
      },
      {
        "Url": "https://github.com/ShielderSec/poc/tree/main/CVE-2025-48073"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-48073"
      },
      {
        "Url": "https://github.com/advisories/GHSA-qhpm-86v7-phmm"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-qhpm-86v7-phmm"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-48073"
      }
    ],
    "Description": "### Summary\n\nWhen reading a deep scanline image with a large sample count in `reduceMemory` mode, it is possible to crash a target application with a NULL pointer dereference in a write operation.\n\n### Details\n\nIn the `ScanLineProcess::run_fill` function, implemented in `src/lib/OpenEXR/ImfDeepScanLineInputFile.cpp`, the following code is used to write the `fillValue` in the sample buffer:\n\n```cpp\n                switch (fills.type)\n                {\n                    case OPENEXR_IMF_INTERNAL_NAMESPACE::UINT:\n                    {\n                        unsigned int fillVal = (unsigned int) (fills.fillValue);\n                        unsigned int* fillptr = static_cast\u003cunsigned int*\u003e (dest);\n\n                        for ( int32_t s = 0; s \u003c samps; ++s )\n                            fillptr[s] = fillVal; // \u003c--- POTENTIAL CRASH HERE\n                        break;\n                    }\n```\n\nHowever, when `reduceMemory` mode is enabled in the `readDeepScanLine` function in `src/lib/OpenEXRUtil/ImfCheckFile.cpp`, with large sample counts, the sample data will not be read, as shown below:\n\n```cpp\n            // limit total number of samples read in reduceMemory mode\n            //\n            if (!reduceMemory ||\n                fileBufferSize + bufferSize \u003c gMaxBytesPerDeepScanline) // \u003c--- CHECK ON LARGE SAMPLE COUNTS AND reduceMemory\n            {\n            // SNIP...\n            try\n                {\n                    in.readPixels (y);\n                }\n```\n\nTherefore, in those cases, the sample buffer would not be allocated, resulting in a potential write operation on a NULL pointer.\n\n### PoC\n\nNOTE: please download the `runfill_crash.exr` file from the following link:\n \nhttps://github.com/ShielderSec/poc/tree/main/CVE-2025-48073\n\n1. Compile the `exrcheck` binary in a macOS or GNU/Linux machine with ASAN.\n2. Open the `runfill_crash.exr` file with the following command:\n\n```\nexrcheck -m runfill_crash.exr\n```\n\n3. Notice that `exrcheck` crashes with ASAN stack-trace.\n\n### Impact\nAn attacker may cause a denial of service by crashing the application.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-07-31T19:21:35Z",
    "Severity": "MODERATE",
    "Summary": "OpenEXR ScanLineProcess::run_fill NULL Pointer Write In \"reduceMemory\" Mode",
    "UpdatedAt": "2025-08-01T13:29:09Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "3.3.3"
      },
      "VulnerableVersionRange": "= 3.3.2"
    }
  ]
}