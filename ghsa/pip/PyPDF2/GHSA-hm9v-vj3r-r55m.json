{
  "Severity": "MODERATE",
  "UpdatedAt": "2023-09-07T05:02:28Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "PyPDF2"
  },
  "Advisory": {
    "DatabaseId": 213658,
    "Id": "GSA_kwCzR0hTQS1obTl2LXZqM3ItcjU1bc4AA0Ka",
    "GhsaId": "GHSA-hm9v-vj3r-r55m",
    "References": [
      {
        "Url": "https://github.com/py-pdf/pypdf/security/advisories/GHSA-hm9v-vj3r-r55m"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2023-36807"
      },
      {
        "Url": "https://github.com/py-pdf/pypdf/issues/1329"
      },
      {
        "Url": "https://github.com/py-pdf/pypdf/pull/1331"
      },
      {
        "Url": "https://github.com/py-pdf/pypdf/commit/e6531a25325e7e0174b6a1ba03b57320b5227f6b"
      },
      {
        "Url": "https://github.com/advisories/GHSA-hm9v-vj3r-r55m"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-hm9v-vj3r-r55m"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2023-36807"
      }
    ],
    "Description": "### Impact\nAn attacker who uses this vulnerability can craft a PDF which leads to an infinite loop.\nThis infinite loop blocks the current process and can utilize a single core of the CPU by 100%. It does not affect memory usage. That is, for example, the case if the user extracted metadata from such a malformed PDF.\n\n### Patches\nThe issue was fixed with https://github.com/py-pdf/pypdf/pull/1331\n\n### Workarounds\nIf you cannot update your version of `PyPDF2` (preferably to `pypdf\u003e3.1.0` as PyPDF2 is deprecated), you should modify `PyPDF2/generic/_data_structures.py::read_object`.\n\nReplace:\n\n```python\n    else:\n        # number object OR indirect reference\n        peek = stream.read(20)\n        stream.seek(-len(peek), 1)  # reset to start\n        if IndirectPattern.match(peek) is not None:\n            return IndirectObject.read_from_stream(stream, pdf)\n        else:\n            return NumberObject.read_from_stream(stream)\n```\n\nby\n\n```python\n    elif tok in b\"0123456789+-.\":\n        # number object OR indirect reference\n        peek = stream.read(20)\n        stream.seek(-len(peek), 1)  # reset to start\n        if IndirectPattern.match(peek) is not None:\n            return IndirectObject.read_from_stream(stream, pdf)\n        else:\n            return NumberObject.read_from_stream(stream)\n    else:\n        raise PdfReadError(\n            f\"Invalid Elementary Object starting with {tok} @{stream.tell()}\"\n        )\n```\n\n### References\n* [pypdf issue #1329](https://github.com/py-pdf/pypdf/issues/1329)\n* [pypdf PR #1331](https://github.com/py-pdf/pypdf/pull/1331)",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2023-06-30T22:19:39Z",
    "Severity": "MODERATE",
    "Summary": "PyPDF2 vulnerable to possible Infinite Loop when reading malformed objects",
    "UpdatedAt": "2023-11-05T05:06:44Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 6.2,
      "VectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "2.10.6"
      },
      "VulnerableVersionRange": "= 2.10.5"
    }
  ]
}