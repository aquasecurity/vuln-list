{
  "Severity": "HIGH",
  "UpdatedAt": "2022-05-26T20:17:55Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "vyper"
  },
  "Advisory": {
    "DatabaseId": 14374,
    "Id": "GSA_kwCzR0hTQS03dnJtLTNqYzgtNXd3bc04Jg",
    "GhsaId": "GHSA-7vrm-3jc8-5wwm",
    "References": [
      {
        "Url": "https://github.com/vyperlang/vyper/security/advisories/GHSA-7vrm-3jc8-5wwm"
      },
      {
        "Url": "https://github.com/vyperlang/vyper/commit/2c73f8352635c0a433423a5b94740de1a118e508"
      },
      {
        "Url": "https://github.com/pypa/advisory-database/tree/main/vulns/vyper/PYSEC-2022-196.yaml"
      },
      {
        "Url": "https://github.com/advisories/GHSA-7vrm-3jc8-5wwm"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-7vrm-3jc8-5wwm"
      }
    ],
    "Description": "### Impact\nbytestrings can have dirty bytes in them, resulting in the word-for-word comparison to give incorrect results, e.g.\n```vyper\nb1: Bytes[32] = b\"abcdef\"\nb1 = slice(b1, 0, 1)\nb2: Bytes[32] = b\"abcdef\"\nt: bool = b1 == b2  # incorrectly evaluates to True\n```\neven without dirty nonzero bytes, because there is no comparison of the length, two bytestrings can compare to equal if one ends with `\"\\x00\"`.\n```vyper\nb1: Bytes[32] = b\"abc\\0\"\nb2: Bytes[32] = b\"abc\"\nt: bool = b1 == b2  # incorrectly evaluates to True\n```\n\n### Patches\nfixed in https://github.com/vyperlang/vyper/commit/2c73f8352635c0a433423a5b94740de1a118e508",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2022-04-04T21:40:45Z",
    "Severity": "HIGH",
    "Summary": "Incorrect Comparison in Vyper",
    "UpdatedAt": "2023-01-11T05:06:19Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.5,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.3.2"
      },
      "VulnerableVersionRange": "\u003c 0.3.2"
    }
  ]
}