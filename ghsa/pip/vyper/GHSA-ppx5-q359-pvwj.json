{
  "Severity": "MODERATE",
  "UpdatedAt": "2024-04-25T19:53:45Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "vyper"
  },
  "Advisory": {
    "DatabaseId": 242954,
    "Id": "GSA_kwCzR0hTQS1wcHg1LXEzNTktcHZ3as4AA7UK",
    "GhsaId": "GHSA-ppx5-q359-pvwj",
    "References": [
      {
        "Url": "https://github.com/vyperlang/vyper/security/advisories/GHSA-ppx5-q359-pvwj"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-32481"
      },
      {
        "Url": "https://github.com/vyperlang/vyper/commit/3de1415ee77a9244eb04bdb695e249d3ec9ed868"
      },
      {
        "Url": "https://github.com/vyperlang/vyper/commit/5319cfbe14951e007ccdb323257e5ada869b35d5"
      },
      {
        "Url": "https://github.com/vyperlang/vyper/blob/9136169468f317a53b4e7448389aa315f90b95ba/vyper/codegen/stmt.py#L286-L287"
      },
      {
        "Url": "https://github.com/advisories/GHSA-ppx5-q359-pvwj"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-ppx5-q359-pvwj"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-32481"
      }
    ],
    "Description": "### Summary\n\nWhen looping over a `range` of the form `range(start, start + N)`, if `start` is negative, the execution will always revert.\n \n### Details\n\nThis issue is caused by an incorrect assertion inserted by the code generation of the range (`stmt.parse_For_range()`):\n\nhttps://github.com/vyperlang/vyper/blob/9136169468f317a53b4e7448389aa315f90b95ba/vyper/codegen/stmt.py#L286-L287\n\nThis assertion was introduced in https://github.com/vyperlang/vyper/commit/3de1415ee77a9244eb04bdb695e249d3ec9ed868 to fix https://github.com/advisories/GHSA-6r8q-pfpv-7cgj. The issue arises when `start` is signed, instead of using `sle`, `le` is used and `start` is interpreted as an unsigned integer for the comparison. If it is a negative number, its 255th bit is set to `1` and is hence interpreted as a very large unsigned integer making the assertion always fail. \n### PoC\n\n```Vyper\n@external\ndef foo():\n    x:int256 = min_value(int256)\n    # revert when it should not since we have the following assertion that fails:\n    # [assert, [le, min_value(int256), max_value(int256) + 1 - 10]],\n    for i in range(x, x + 10):\n        pass\n```\n\n### Patches\n\npatched in v0.4.0, specifically, https://github.com/vyperlang/vyper/pull/3679 disallows this form of `range()`.\n\n### Impact\n\nAny contract having a `range(start, start + N)` where `start` is a signed integer with the possibility for `start` to be negative is affected. If a call goes through the loop while supplying a negative `start` the execution will revert.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-04-25T19:53:43Z",
    "Severity": "MODERATE",
    "Summary": "vyper's range(start, start + N) reverts for negative numbers",
    "UpdatedAt": "2024-04-25T19:53:45Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 5.3,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.4.0"
      },
      "VulnerableVersionRange": "\u003e= 0.3.8, \u003c 0.4.0"
    }
  ]
}