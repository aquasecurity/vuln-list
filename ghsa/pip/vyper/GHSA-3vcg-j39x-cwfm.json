{
  "Severity": "LOW",
  "UpdatedAt": "2025-05-16T14:13:32Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "vyper"
  },
  "Advisory": {
    "DatabaseId": 294870,
    "Id": "GSA_kwCzR0hTQS0zdmNnLWozOXgtY3dmbc4ABH_W",
    "GhsaId": "GHSA-3vcg-j39x-cwfm",
    "References": [
      {
        "Url": "https://github.com/vyperlang/vyper/security/advisories/GHSA-3vcg-j39x-cwfm"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-47774"
      },
      {
        "Url": "https://github.com/vyperlang/vyper/pull/4645"
      },
      {
        "Url": "https://github.com/vyperlang/vyper/blob/68b68c4b30c5ef2f312b4674676170b8a6eaa316/vyper/builtins/functions.py#L315-L319"
      },
      {
        "Url": "https://github.com/vyperlang/vyper/blob/68b68c4b30c5ef2f312b4674676170b8a6eaa316/vyper/codegen/core.py#L189-L191"
      },
      {
        "Url": "https://github.com/advisories/GHSA-3vcg-j39x-cwfm"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-3vcg-j39x-cwfm"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-47774"
      }
    ],
    "Description": "### Impact\nthe `slice()` builtin can elide side effects when the output length is 0, and the source bytestring is a builtin (`msg.data` or `\u003caddress\u003e.code`). the reason is that for these source locations, the check that `length \u003e= 1` is skipped:\nhttps://github.com/vyperlang/vyper/blob/68b68c4b30c5ef2f312b4674676170b8a6eaa316/vyper/builtins/functions.py#L315-L319\n\nthe result is that a 0-length bytestring constructed with slice can be passed to `make_byte_array_copier`, which elides evaluation of its source argument when the max length is 0:\nhttps://github.com/vyperlang/vyper/blob/68b68c4b30c5ef2f312b4674676170b8a6eaa316/vyper/codegen/core.py#L189-L191\n\nthe impact is that side effects in the `start` argument may be elided when the `length` argument is 0, e.g. `slice(msg.data, self.do_side_effect(), 0)`.\n\nthe following example illustrates how the issue would look in user code\n```vyper\ncounter: public(uint256)\n\n@external\ndef test() -\u003e Bytes[10]:\n    b: Bytes[10] = slice(msg.data, self.side_effect(), 0)\n    return b\n\ndef side_effect() -\u003e uint256:\n    self.counter += 1\n    return 0\n```\n\nthe severity assigned is low, since this is not a very useful pattern and unlikely to be found in user code.\n\n### Patches\n\nthe fix is tracked in https://github.com/vyperlang/vyper/pull/4645, which disallows any invocation of `slice()` with length 0, including for the ad hoc locations discussed in this advisory.\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\n### References\n_Are there any links users can visit to find out more?_",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-05-16T14:13:29Z",
    "Severity": "LOW",
    "Summary": "Vyper's `slice()` may elide side-effects when output length is 0",
    "UpdatedAt": "2025-05-21T00:59:20Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": ""
      },
      "VulnerableVersionRange": "\u003c= 0.4.2rc1"
    }
  ]
}