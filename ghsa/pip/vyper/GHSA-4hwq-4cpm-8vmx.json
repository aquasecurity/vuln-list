{
  "Severity": "LOW",
  "UpdatedAt": "2024-02-26T20:11:38Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "vyper"
  },
  "Advisory": {
    "DatabaseId": 235563,
    "Id": "GSA_kwCzR0hTQS00aHdxLTRjcG0tOHZteM4AA5gr",
    "GhsaId": "GHSA-4hwq-4cpm-8vmx",
    "References": [
      {
        "Url": "https://github.com/vyperlang/vyper/security/advisories/GHSA-4hwq-4cpm-8vmx"
      },
      {
        "Url": "https://github.com/vyperlang/vyper/blob/10564dcc37756f3d3684b7a91fd8f4325a38c4d8/vyper/builtins/functions.py#L916-L918"
      },
      {
        "Url": "https://github.com/vyperlang/vyper/blob/10564dcc37756f3d3684b7a91fd8f4325a38c4d8/vyper/builtins/functions.py#L920-L922"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-24564"
      },
      {
        "Url": "https://github.com/advisories/GHSA-4hwq-4cpm-8vmx"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-4hwq-4cpm-8vmx"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-24564"
      }
    ],
    "Description": "### Summary\n\nWhen using the built-in `extract32(b, start)`, if the `start` index provided has for side effect to update `b`, the byte array to extract `32` bytes from, it could be that some dirty memory is read and returned by `extract32`.\n\n### Details\n\nBefore evaluating `start`, the function `Extract32.build_IR` caches only:\n\n- The pointer in memory/storage to `b`: https://github.com/vyperlang/vyper/blob/10564dcc37756f3d3684b7a91fd8f4325a38c4d8/vyper/builtins/functions.py#L916-L918\n- The length of `b`: https://github.com/vyperlang/vyper/blob/10564dcc37756f3d3684b7a91fd8f4325a38c4d8/vyper/builtins/functions.py#L920-L922\n\nbut do not cache the actual content of `b`. This means that if the evaluation of `start` changes `b`'s content and length, an outdated length will be used with the new content when extracting 32 bytes from `b`.\n\n### PoC\n\nCalling the function `foo` of the following contract returns `b'uuuuuuuuuuuuuuuuuuuuuuuuuuu\\x00\\x00789'` meaning that `extract32` accessed some dirty memory.\n\n```Vyper\nvar:Bytes[96]\n\n@internal\ndef bar() -\u003e uint256:\n    self.var = b'uuuuuuuuuuuuuuuuuuuuuuuuuuuuuu'\n    self.var = b''\n    return 3\n\n@external\ndef foo() -\u003e bytes32:\n    self.var = b'abcdefghijklmnopqrstuvwxyz123456789'\n    return extract32(self.var, self.bar(), output_type=bytes32)\n    # returns b'uuuuuuuuuuuuuuuuuuuuuuuuuuu\\x00\\x00789'\n```\n\n### Impact\n\nFor contracts that are affected, it means that calling `extract32` returns dirty memory bytes instead of some expected output.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-02-26T20:11:35Z",
    "Severity": "LOW",
    "Summary": "Vyper's `extract32` can ready dirty memory",
    "UpdatedAt": "2024-02-26T22:06:40Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 3.7,
      "VectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": ""
      },
      "VulnerableVersionRange": "\u003c= 0.3.10"
    }
  ]
}