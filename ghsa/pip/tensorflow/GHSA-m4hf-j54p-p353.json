{
  "Severity": "MODERATE",
  "UpdatedAt": "2022-02-03T19:01:10Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "tensorflow"
  },
  "Advisory": {
    "DatabaseId": 10353,
    "Id": "GSA_kwCzR0hTQS1tNGhmLWo1NHAtcDM1M80ocQ",
    "GhsaId": "GHSA-m4hf-j54p-p353",
    "References": [
      {
        "Url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m4hf-j54p-p353"
      },
      {
        "Url": "https://github.com/tensorflow/tensorflow/commit/08d7b00c0a5a20926363849f611729f53f3ec022"
      },
      {
        "Url": "https://github.com/tensorflow/tensorflow/blob/5100e359aef5c8021f2e71c7b986420b85ce7b3d/tensorflow/core/framework/common_shape_fns.cc#L1961-L2059"
      },
      {
        "Url": "https://github.com/tensorflow/tensorflow/blob/5100e359aef5c8021f2e71c7b986420b85ce7b3d/tensorflow/core/framework/shape_inference.cc#L345-L358"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2022-21731"
      },
      {
        "Url": "https://github.com/advisories/GHSA-m4hf-j54p-p353"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-m4hf-j54p-p353"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2022-21731"
      }
    ],
    "Description": "### Impact \nThe [implementation of shape inference for `ConcatV2`](https://github.com/tensorflow/tensorflow/blob/5100e359aef5c8021f2e71c7b986420b85ce7b3d/tensorflow/core/framework/common_shape_fns.cc#L1961-L2059) can be used to trigger a denial of service attack via a segfault caused by a type confusion:\n\n```python\nimport tensorflow as tf\n\n@tf.function\ndef test():\n  y = tf.raw_ops.ConcatV2(\n    values=[[1,2,3],[4,5,6]],\n    axis = 0xb500005b)\n  return y\n\ntest()\n```\n\nThe `axis` argument is translated into `concat_dim` in the `ConcatShapeHelper` helper function. Then, a value for `min_rank` is computed based on `concat_dim`. This is then used to validate that the `values` tensor has at least the required rank:\n\n```cc\n  int64_t concat_dim;\n  if (concat_dim_t-\u003edtype() == DT_INT32) {\n    concat_dim = static_cast\u003cint64_t\u003e(concat_dim_t-\u003eflat\u003cint32\u003e()(0));\n  } else {\n    concat_dim = concat_dim_t-\u003eflat\u003cint64_t\u003e()(0);\n  }\n\n  // Minimum required number of dimensions.\n  const int min_rank = concat_dim \u003c 0 ? -concat_dim : concat_dim + 1;\n\n  // ...\n  ShapeHandle input = c-\u003einput(end_value_index - 1);\n  TF_RETURN_IF_ERROR(c-\u003eWithRankAtLeast(input, min_rank, \u0026input));\n```\n\nHowever, [`WithRankAtLeast`](https://github.com/tensorflow/tensorflow/blob/5100e359aef5c8021f2e71c7b986420b85ce7b3d/tensorflow/core/framework/shape_inference.cc#L345-L358) receives the lower bound as a 64-bits value and then compares it against the maximum 32-bits integer value that could be represented:\n\n```cc\nStatus InferenceContext::WithRankAtLeast(ShapeHandle shape, int64_t rank,\n                                         ShapeHandle* out) {\n  if (rank \u003e kint32max) {\n    return errors::InvalidArgument(\"Rank cannot exceed kint32max\");\n  }\n  // ...\n}\n```\n\nDue to the fact that `min_rank` is a 32-bits value and the value of `axis`, the `rank` argument is a [negative value](https://godbolt.org/z/Gcr5haMob), so the error check is bypassed.\n\n### Patches\nWe have patched the issue in GitHub commit [08d7b00c0a5a20926363849f611729f53f3ec022](https://github.com/tensorflow/tensorflow/commit/08d7b00c0a5a20926363849f611729f53f3ec022).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yu Tian of Qihoo 360 AIVul Team.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2022-02-10T00:19:50Z",
    "Severity": "MODERATE",
    "Summary": "Type confusion leading to segfault in Tensorflow",
    "UpdatedAt": "2023-02-03T05:05:29Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 6.5,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "2.7.1"
      },
      "VulnerableVersionRange": "= 2.7.0"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "2.6.3"
      },
      "VulnerableVersionRange": "\u003e= 2.6.0, \u003c 2.6.3"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "2.5.3"
      },
      "VulnerableVersionRange": "\u003c 2.5.3"
    }
  ]
}