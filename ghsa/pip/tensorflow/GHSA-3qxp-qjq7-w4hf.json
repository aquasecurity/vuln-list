{
  "Severity": "LOW",
  "UpdatedAt": "2021-05-18T23:00:54Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "tensorflow"
  },
  "Advisory": {
    "DatabaseId": 4412,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTNxeHAtcWpxNy13NGhm",
    "GhsaId": "GHSA-3qxp-qjq7-w4hf",
    "References": [
      {
        "Url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-3qxp-qjq7-w4hf"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29531"
      },
      {
        "Url": "https://github.com/tensorflow/tensorflow/commit/26eb323554ffccd173e8a79a8c05c15b685ae4d1"
      },
      {
        "Url": "https://github.com/advisories/GHSA-3qxp-qjq7-w4hf"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-3qxp-qjq7-w4hf"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2021-29531"
      }
    ],
    "Description": "### Impact\nAn attacker can trigger a `CHECK` fail in PNG encoding by providing an empty input tensor as the pixel data:\n\n```python\nimport tensorflow as tf\n\nimage = tf.zeros([0, 0, 3])\nimage = tf.cast(image, dtype=tf.uint8) \ntf.raw_ops.EncodePng(image=image) \n```\n\nThis is because the [implementation](https://github.com/tensorflow/tensorflow/blob/e312e0791ce486a80c9d23110841525c6f7c3289/tensorflow/core/kernels/image/encode_png_op.cc#L57-L60) only validates that the total number of pixels in the image does not overflow. Thus, an attacker can send an empty matrix for encoding. However, if the tensor is empty, then the associated buffer is `nullptr`. Hence, when [calling `png::WriteImageToBuffer`](https://github.com/tensorflow/tensorflow/blob/e312e0791ce486a80c9d23110841525c6f7c3289/tensorflow/core/kernels/image/encode_png_op.cc#L79-L93), the first argument (i.e., `image.flat\u003cT\u003e().data()`) is `NULL`. This then triggers the `CHECK_NOTNULL` in the [first line of `png::WriteImageToBuffer`](https://github.com/tensorflow/tensorflow/blob/e312e0791ce486a80c9d23110841525c6f7c3289/tensorflow/core/lib/png/png_io.cc#L345-L349).\n\n```cc\ntemplate \u003ctypename T\u003e\nbool WriteImageToBuffer(\n    const void* image, int width, int height, int row_bytes, int num_channels,\n    int channel_bits, int compression, T* png_string,\n    const std::vector\u003cstd::pair\u003cstd::string, std::string\u003e \u003e* metadata) {\n  CHECK_NOTNULL(image);\n  ...\n}\n```\n\nSince `image` is null, this results in `abort` being called after printing the stacktrace. Effectively, this allows an attacker to mount a denial of service attack.\n\n### Patches\nWe have patched the issue in GitHub commit [26eb323554ffccd173e8a79a8c05c15b685ae4d1](https://github.com/tensorflow/tensorflow/commit/26eb323554ffccd173e8a79a8c05c15b685ae4d1).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2021-05-21T14:22:13Z",
    "Severity": "LOW",
    "Summary": "CHECK-fail in tf.raw_ops.EncodePng",
    "UpdatedAt": "2023-02-01T05:05:40Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 2.5,
      "VectorString": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:L"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "2.4.2"
      },
      "VulnerableVersionRange": "\u003e= 2.4.0, \u003c 2.4.2"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "2.3.3"
      },
      "VulnerableVersionRange": "\u003e= 2.3.0, \u003c 2.3.3"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "2.2.3"
      },
      "VulnerableVersionRange": "\u003e= 2.2.0, \u003c 2.2.3"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "2.1.4"
      },
      "VulnerableVersionRange": "\u003c 2.1.4"
    }
  ]
}