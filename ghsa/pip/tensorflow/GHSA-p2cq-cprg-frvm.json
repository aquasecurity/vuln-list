{
  "Severity": "HIGH",
  "UpdatedAt": "2020-09-25T18:25:06Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "tensorflow"
  },
  "Advisory": {
    "DatabaseId": 3112,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXAyY3EtY3ByZy1mcnZt",
    "GhsaId": "GHSA-p2cq-cprg-frvm",
    "References": [
      {
        "Url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2cq-cprg-frvm"
      },
      {
        "Url": "https://github.com/tensorflow/tensorflow/commit/204945b19e44b57906c9344c0d00120eeeae178a"
      },
      {
        "Url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2020-15214"
      },
      {
        "Url": "https://github.com/advisories/GHSA-p2cq-cprg-frvm"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-p2cq-cprg-frvm"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2020-15214"
      }
    ],
    "Description": "### Impact\nIn TensorFlow Lite models using segment sum can trigger a write out bounds / segmentation fault if the segment ids are not sorted. Code assumes that the segment ids are in increasing order, using the last element of the tensor holding them to determine the dimensionality of output tensor:\nhttps://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/segment_sum.cc#L39-L44\n\nThis results in allocating insufficient memory for the output tensor and in a write outside the bounds of the output array:\nhttps://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/lite/kernels/internal/reference/reference_ops.h#L2625-L2631\n\nThis usually results in a segmentation fault, but depending on runtime conditions it can provide for a write gadget to be used in future memory corruption-based exploits.\n\n### Patches\nWe have patched the issue in 204945b and will release patch releases for all affected versions.\n\nWe recommend users to upgrade to TensorFlow 2.2.1, or 2.3.1.\n\n### Workarounds\nA potential workaround would be to add a custom `Verifier` to the model loading code to ensure that the segment ids are sorted, although this only handles the case when the segment ids are stored statically in the model.\n\nA similar validation could be done if the segment ids are generated at runtime between inference steps.\n\nIf the segment ids are generated as outputs of a tensor during inference steps, then there are no possible workaround and users are advised to upgrade to patched code.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2020-09-25T18:28:56Z",
    "Severity": "HIGH",
    "Summary": "Out of bounds write in tensorflow-lite",
    "UpdatedAt": "2023-02-01T05:04:54Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 8.1,
      "VectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:L/I:L/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "2.3.1"
      },
      "VulnerableVersionRange": "= 2.3.0"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "2.2.1"
      },
      "VulnerableVersionRange": "= 2.2.0"
    }
  ]
}