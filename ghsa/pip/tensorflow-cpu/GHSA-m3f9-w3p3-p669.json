{
  "Severity": "LOW",
  "UpdatedAt": "2021-05-18T22:38:56Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "tensorflow-cpu"
  },
  "Advisory": {
    "DatabaseId": 4408,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLW0zZjktdzNwMy1wNjY5",
    "GhsaId": "GHSA-m3f9-w3p3-p669",
    "References": [
      {
        "Url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m3f9-w3p3-p669"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2021-29535"
      },
      {
        "Url": "https://github.com/tensorflow/tensorflow/commit/efea03b38fb8d3b81762237dc85e579cc5fc6e87"
      },
      {
        "Url": "https://github.com/advisories/GHSA-m3f9-w3p3-p669"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-m3f9-w3p3-p669"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2021-29535"
      }
    ],
    "Description": "### Impact\nAn attacker can cause a heap buffer overflow in `QuantizedMul` by passing in invalid thresholds for the quantization:\n\n```python\nimport tensorflow as tf\n\nx = tf.constant([256, 328], shape=[1, 2], dtype=tf.quint8)\ny = tf.constant([256, 328], shape=[1, 2], dtype=tf.quint8)\nmin_x = tf.constant([], dtype=tf.float32)\nmax_x = tf.constant([], dtype=tf.float32)\nmin_y = tf.constant([], dtype=tf.float32)\nmax_y = tf.constant([], dtype=tf.float32)\n\ntf.raw_ops.QuantizedMul(x=x, y=y, min_x=min_x, max_x=max_x, min_y=min_y, max_y=max_y)\n```\n\nThis is because the [implementation](https://github.com/tensorflow/tensorflow/blob/87cf4d3ea9949051e50ca3f071fc909538a51cd0/tensorflow/core/kernels/quantized_mul_op.cc#L287-L290) assumes that the 4 arguments are always valid scalars and tries to access the numeric value directly:\n\n```cc \nconst float min_x = context-\u003einput(2).flat\u003cfloat\u003e()(0);\nconst float max_x = context-\u003einput(3).flat\u003cfloat\u003e()(0);\nconst float min_y = context-\u003einput(4).flat\u003cfloat\u003e()(0);\nconst float max_y = context-\u003einput(5).flat\u003cfloat\u003e()(0);\n```\n\nHowever, if any of these tensors is empty, then `.flat\u003cT\u003e()` is an empty buffer and accessing the element at position 0 results in overflow.\n\n### Patches\nWe have patched the issue in GitHub commit [efea03b38fb8d3b81762237dc85e579cc5fc6e87](https://github.com/tensorflow/tensorflow/commit/efea03b38fb8d3b81762237dc85e579cc5fc6e87).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2021-05-21T14:22:28Z",
    "Severity": "LOW",
    "Summary": "Heap buffer overflow in `QuantizedMul`",
    "UpdatedAt": "2023-02-01T05:05:40Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 2.5,
      "VectorString": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:L"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "2.4.2"
      },
      "VulnerableVersionRange": "\u003e= 2.4.0, \u003c 2.4.2"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "2.3.3"
      },
      "VulnerableVersionRange": "\u003e= 2.3.0, \u003c 2.3.3"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "2.2.3"
      },
      "VulnerableVersionRange": "\u003e= 2.2.0, \u003c 2.2.3"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "2.1.4"
      },
      "VulnerableVersionRange": "\u003c 2.1.4"
    }
  ]
}