{
  "Severity": "HIGH",
  "UpdatedAt": "2021-11-08T22:49:53Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "tensorflow-cpu"
  },
  "Advisory": {
    "DatabaseId": 5906,
    "Id": "GSA_kwCzR0hTQS1qODZ2LXAyN2MtNzNmbc0XEg",
    "GhsaId": "GHSA-j86v-p27c-73fm",
    "References": [
      {
        "Url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-j86v-p27c-73fm"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2021-41201"
      },
      {
        "Url": "https://github.com/tensorflow/tensorflow/commit/f09caa532b6e1ac8d2aa61b7832c78c5b79300c6"
      },
      {
        "Url": "https://github.com/advisories/GHSA-j86v-p27c-73fm"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-j86v-p27c-73fm"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2021-41201"
      }
    ],
    "Description": "### Impact\nDuring execution, [`EinsumHelper::ParseEquation()`](https://github.com/tensorflow/tensorflow/blob/e0b6e58c328059829c3eb968136f17aa72b6c876/tensorflow/core/kernels/linalg/einsum_op_impl.h#L126-L181) is supposed to set the flags in `input_has_ellipsis` vector and `*output_has_ellipsis` boolean to indicate whether there is ellipsis in the corresponding inputs and output.\n\nHowever, the code only changes these flags to `true` and never assigns `false`.\n\n```cc\nfor (int i = 0; i \u003c num_inputs; ++i) {\n  input_label_counts-\u003eat(i).resize(num_labels);\n  for (const int label : input_labels-\u003eat(i)) {\n    if (label != kEllipsisLabel)\n      input_label_counts-\u003eat(i)[label] += 1;\n    else\n      input_has_ellipsis-\u003eat(i) = true;\n  }\n}\noutput_label_counts-\u003eresize(num_labels);\nfor (const int label : *output_labels) {\n  if (label != kEllipsisLabel)\n    output_label_counts-\u003eat(label) += 1;\n  else\n    *output_has_ellipsis = true;\n}\n```\n\nThis results in unitialized variable access if callers assume that `EinsumHelper::ParseEquation()` always sets these flags.\n\n\n### Patches\nWe have patched the issue in GitHub commit [f09caa532b6e1ac8d2aa61b7832c78c5b79300c6](https://github.com/tensorflow/tensorflow/commit/f09caa532b6e1ac8d2aa61b7832c78c5b79300c6).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2021-11-10T19:17:43Z",
    "Severity": "HIGH",
    "Summary": "Unitialized access in `EinsumHelper::ParseEquation`",
    "UpdatedAt": "2023-02-01T05:06:26Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.8,
      "VectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "2.4.4"
      },
      "VulnerableVersionRange": "\u003c 2.4.4"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "2.5.2"
      },
      "VulnerableVersionRange": "\u003e= 2.5.0, \u003c 2.5.2"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "2.6.1"
      },
      "VulnerableVersionRange": "\u003e= 2.6.0, \u003c 2.6.1"
    }
  ]
}