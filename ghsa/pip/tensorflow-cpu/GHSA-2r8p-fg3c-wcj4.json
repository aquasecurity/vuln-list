{
  "Severity": "HIGH",
  "UpdatedAt": "2021-08-24T12:46:02Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "tensorflow-cpu"
  },
  "Advisory": {
    "DatabaseId": 5359,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTJyOHAtZmczYy13Y2o0",
    "GhsaId": "GHSA-2r8p-fg3c-wcj4",
    "References": [
      {
        "Url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-2r8p-fg3c-wcj4"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2021-37654"
      },
      {
        "Url": "https://github.com/tensorflow/tensorflow/commit/bc9c546ce7015c57c2f15c168b3d9201de679a1d"
      },
      {
        "Url": "https://github.com/advisories/GHSA-2r8p-fg3c-wcj4"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-2r8p-fg3c-wcj4"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2021-37654"
      }
    ],
    "Description": "### Impact\nAn attacker can trigger a crash via a `CHECK`-fail in debug builds of TensorFlow using `tf.raw_ops.ResourceGather` or a read from outside the bounds of heap allocated data in the same API in a release build:\n\n```python\nimport tensorflow as tf\n\ntensor = tf.constant(value=[[1,2],[3,4],[5,6]],shape=(3,2),dtype=tf.uint32)\nv = tf.Variable(tensor)\ntf.raw_ops.ResourceGather(\n  resource=v.handle,\n  indices=[0],\n  dtype=tf.uint32,\n  batch_dims=10,\n  validate_indices=False)\n```\n\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/resource_variable_ops.cc#L660-L668) does not check that the `batch_dims` value that the user supplies is less than the rank of the input tensor.\n\nSince the implementation uses several for loops over the dimensions of `tensor`, this results in reading data from outside the bounds of heap allocated buffer backing the tensor:\n\n```cc\n    // batch_dims_ = \u003e params.dims() (10 \u003e 2)\n    for (int i = 0; i \u003c batch_dims_; ++i) {\n      result_shape.AddDim(params.dim_size(i));\n    }\n    for (int i = batch_dims_; i \u003c indices.dims(); ++i) {\n      result_shape.AddDim(indices.dim_size(i));\n    }\n    for (int i = batch_dims_ + 1; i \u003c params.dims(); ++i) {\n      result_shape.AddDim(params.dim_size(i));\n    }\n```\n\nIn debug mode, `.dim_size(i)` validates that the argument is less than `.dims()` using a `DCHECK`. But the `DCHECK` is a no-op in release builds.\n\n### Patches\nWe have patched the issue in GitHub commit [bc9c546ce7015c57c2f15c168b3d9201de679a1d](https://github.com/tensorflow/tensorflow/commit/bc9c546ce7015c57c2f15c168b3d9201de679a1d).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2021-08-25T14:43:01Z",
    "Severity": "HIGH",
    "Summary": "Heap OOB and CHECK fail in `ResourceGather`",
    "UpdatedAt": "2023-02-01T05:06:21Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.3,
      "VectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:L/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "2.5.1"
      },
      "VulnerableVersionRange": "= 2.5.0"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "2.4.3"
      },
      "VulnerableVersionRange": "\u003e= 2.4.0, \u003c 2.4.3"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "2.3.4"
      },
      "VulnerableVersionRange": "\u003c 2.3.4"
    }
  ]
}