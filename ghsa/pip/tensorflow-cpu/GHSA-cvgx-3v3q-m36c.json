{
  "Severity": "HIGH",
  "UpdatedAt": "2021-11-08T22:32:47Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "tensorflow-cpu"
  },
  "Advisory": {
    "DatabaseId": 5896,
    "Id": "GSA_kwCzR0hTQS1jdmd4LTN2M3EtbTM2Y80XCA",
    "GhsaId": "GHSA-cvgx-3v3q-m36c",
    "References": [
      {
        "Url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-cvgx-3v3q-m36c"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2021-41211"
      },
      {
        "Url": "https://github.com/tensorflow/tensorflow/commit/a0d64445116c43cf46a5666bd4eee28e7a82f244"
      },
      {
        "Url": "https://github.com/advisories/GHSA-cvgx-3v3q-m36c"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-cvgx-3v3q-m36c"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2021-41211"
      }
    ],
    "Description": "### Impact\nThe [shape inference code for `QuantizeV2`](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/framework/common_shape_fns.cc#L2509-L2530) can trigger a read outside of bounds of heap allocated array:\n\n```python\nimport tensorflow as tf\n\n@tf.function\ndef test():\n  data=tf.raw_ops.QuantizeV2(\n    input=[1.0,1.0],\n    min_range=[1.0,10.0],\n    max_range=[1.0,10.0],\n    T=tf.qint32,\n    mode='MIN_COMBINED',\n    round_mode='HALF_TO_EVEN',\n    narrow_range=False,\n    axis=-100,\n    ensure_minimum_range=10)\n  return data\n\ntest()\n```\n\nThis occurs whenever `axis` is a negative value less than `-1`. In this case, we are accessing data before the start of a heap buffer:\n    \n```cc\nint axis = -1;\nStatus s = c-\u003eGetAttr(\"axis\", \u0026axis);\nif (!s.ok() \u0026\u0026 s.code() != error::NOT_FOUND) {\n  return s;\n}   \n... \nif (axis != -1) {\n  ...\n  TF_RETURN_IF_ERROR(\n      c-\u003eMerge(c-\u003eDim(minmax, 0), c-\u003eDim(input, axis), \u0026depth));\n}\n```\n\nThe code allows `axis` to be an optional argument (`s` would contain an `error::NOT_FOUND` error code). Otherwise, it assumes that `axis` is a valid index into the dimensions of the `input` tensor. If `axis` is less than `-1` then this results in a heap OOB read.\n    \n### Patches\nWe have patched the issue in GitHub commit [a0d64445116c43cf46a5666bd4eee28e7a82f244](https://github.com/tensorflow/tensorflow/commit/a0d64445116c43cf46a5666bd4eee28e7a82f244).\n    \nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, as this version is the only one that is also affected.\n  \n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2021-11-10T19:01:03Z",
    "Severity": "HIGH",
    "Summary": "Heap OOB in shape inference for `QuantizeV2`",
    "UpdatedAt": "2023-02-01T05:06:15Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.1,
      "VectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "2.6.1"
      },
      "VulnerableVersionRange": "= 2.6.0"
    }
  ]
}