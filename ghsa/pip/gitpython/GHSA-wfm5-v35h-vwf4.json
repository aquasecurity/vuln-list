{
  "Severity": "HIGH",
  "UpdatedAt": "2023-09-06T15:23:39Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "gitpython"
  },
  "Advisory": {
    "DatabaseId": 219351,
    "Id": "GSA_kwCzR0hTQS13Zm01LXYzNWgtdndmNM4AA1jX",
    "GhsaId": "GHSA-wfm5-v35h-vwf4",
    "References": [
      {
        "Url": "https://github.com/gitpython-developers/GitPython/security/advisories/GHSA-wfm5-v35h-vwf4"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2023-40590"
      },
      {
        "Url": "https://docs.python.org/3/library/subprocess.html#popen-constructor"
      },
      {
        "Url": "https://github.com/gitpython-developers/GitPython/issues/1635"
      },
      {
        "Url": "https://github.com/gitpython-developers/GitPython/pull/1636"
      },
      {
        "Url": "https://github.com/gitpython-developers/GitPython/commit/8b75434e2c8a082cdeb4971cc6f0ee2bafec45bc"
      },
      {
        "Url": "https://github.com/gitpython-developers/GitPython/releases/tag/3.1.33"
      },
      {
        "Url": "https://github.com/pypa/advisory-database/tree/main/vulns/gitpython/PYSEC-2023-161.yaml"
      },
      {
        "Url": "https://github.com/advisories/GHSA-wfm5-v35h-vwf4"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-wfm5-v35h-vwf4"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2023-40590"
      }
    ],
    "Description": "### Summary\n\nWhen resolving a program, Python/Windows look for the current working directory, and after that the PATH environment (see big warning in https://docs.python.org/3/library/subprocess.html#popen-constructor). GitPython defaults to use the `git` command, if a user runs GitPython from a repo has a `git.exe` or `git` executable, that program will be run instead of the one in the user's `PATH`.\n\n### Details\n\nThis is more of a problem on how Python interacts with Windows systems, Linux and any other OS aren't affected by this. But probably people using GitPython usually run it from the CWD of a repo.\n\nThe execution of the `git` command happens in\n\nhttps://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/cmd.py#L277 \n\nhttps://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/cmd.py#L983-L996\n\nAnd there are other commands executed that should probably be aware of this problem.\n\n### PoC\n\nOn a Windows system, create a `git.exe` or `git` executable in any directory, and import or run GitPython from that directory\n\n```\npython -c \"import git\"\n```\n\nThe git executable from the current directory will be run.\n\n### Impact\n\nAn attacker can trick a user to download a repository with a malicious `git` executable, if the user runs/imports GitPython from that directory, it allows the attacker to run any arbitrary commands.\n\n### Possible solutions\n \n- Default to an absolute path for the git program on Windows, like `C:\\\\Program Files\\\\Git\\\\cmd\\\\git.EXE` (default git path installation).\n- Require users to set the `GIT_PYTHON_GIT_EXECUTABLE` environment variable on Windows systems.\n- Make this problem prominent in the documentation and advise users to never run GitPython from an untrusted repo, or set the `GIT_PYTHON_GIT_EXECUTABLE` env var to an absolute path.\n- Resolve the executable manually by only looking into the `PATH` environment variable (suggested by @Byron)\n\n---\n\n\u003e [!NOTE]\n\u003e This vulnerability was reported via email, and it was decided to publish it here and make it public, so the community is aware of it, and a fix can be provided.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2023-08-29T23:33:53Z",
    "Severity": "HIGH",
    "Summary": "GitPython untrusted search path on Windows systems leading to arbitrary code execution",
    "UpdatedAt": "2024-09-20T20:14:21Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.8,
      "VectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "3.1.33"
      },
      "VulnerableVersionRange": "\u003c= 3.1.32"
    }
  ]
}