{
  "Severity": "HIGH",
  "UpdatedAt": "2020-09-25T17:08:14Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "tensorflow-gpu"
  },
  "Advisory": {
    "DatabaseId": 3096,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXJqamctaGd2Ni1oNjl2",
    "GhsaId": "GHSA-rjjg-hgv6-h69v",
    "References": [
      {
        "Url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rjjg-hgv6-h69v"
      },
      {
        "Url": "https://github.com/tensorflow/tensorflow/commit/22e07fb204386768e5bcbea563641ea11f96ceb8"
      },
      {
        "Url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2020-15193"
      },
      {
        "Url": "http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00065.html"
      },
      {
        "Url": "https://github.com/advisories/GHSA-rjjg-hgv6-h69v"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-rjjg-hgv6-h69v"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2020-15193"
      }
    ],
    "Description": "### Impact\nThe implementation of `dlpack.to_dlpack` can be made to use uninitialized memory resulting in further memory corruption. This is because the pybind11 glue code assumes that the argument is a tensor:\nhttps://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/python/tfe_wrapper.cc#L1361\n\nHowever, there is nothing stopping users from passing in a Python object instead of a tensor.\n```python\nIn [2]: tf.experimental.dlpack.to_dlpack([2])                                                                                                                                            \n==1720623==WARNING: MemorySanitizer: use-of-uninitialized-value                                                                                                                            \n    #0 0x55b0ba5c410a in tensorflow::(anonymous namespace)::GetTensorFromHandle(TFE_TensorHandle*, TF_Status*) third_party/tensorflow/c/eager/dlpack.cc:46:7\n    #1 0x55b0ba5c38f4 in tensorflow::TFE_HandleToDLPack(TFE_TensorHandle*, TF_Status*) third_party/tensorflow/c/eager/dlpack.cc:252:26\n... \n```\n\nThe uninitialized memory address is due to a `reinterpret_cast`\nhttps://github.com/tensorflow/tensorflow/blob/0e68f4d3295eb0281a517c3662f6698992b7b2cf/tensorflow/python/eager/pywrap_tensor.cc#L848-L850\n\nSince the `PyObject` is a Python object, not a TensorFlow Tensor, the cast to `EagerTensor` fails. \n\n### Patches\nWe have patched the issue in 22e07fb204386768e5bcbea563641ea11f96ceb8 and will release a patch release for all affected versions.\n\nWe recommend users to upgrade to TensorFlow 2.2.1 or 2.3.1.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2020-09-25T18:28:27Z",
    "Severity": "HIGH",
    "Summary": "Memory corruption in Tensorflow",
    "UpdatedAt": "2023-02-01T05:04:58Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.1,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:L"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "2.3.1"
      },
      "VulnerableVersionRange": "= 2.3.0"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "2.2.1"
      },
      "VulnerableVersionRange": "= 2.2.0"
    }
  ]
}