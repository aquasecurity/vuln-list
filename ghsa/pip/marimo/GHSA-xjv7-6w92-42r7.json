{
  "Severity": "MODERATE",
  "UpdatedAt": "2025-10-01T21:20:13Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "marimo"
  },
  "Advisory": {
    "DatabaseId": 314795,
    "Id": "GSA_kwCzR0hTQS14anY3LTZ3OTItNDJyN84ABM2r",
    "GhsaId": "GHSA-xjv7-6w92-42r7",
    "References": [
      {
        "Url": "https://github.com/marimo-team/marimo/security/advisories/GHSA-xjv7-6w92-42r7"
      },
      {
        "Url": "https://github.com/marimo-team/marimo/commit/0312706d5e594acdb405209b2c8d87c98f46b22b"
      },
      {
        "Url": "https://github.com/marimo-team/marimo/releases/tag/0.16.4"
      },
      {
        "Url": "https://marimo-team.notion.site/cve-proxy-without-authentication"
      },
      {
        "Url": "https://github.com/advisories/GHSA-xjv7-6w92-42r7"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-xjv7-6w92-42r7"
      }
    ],
    "Description": "### Summary\nThe  `/mpl/\u003cport\u003e/\u003croute\u003e` endpoint, which is accessible without authentication on default Marimo installations allows for external attackers to reach internal services and arbitrary ports. \n\n### Details\nThis route is used internally to provide access to interactive matplotlib visualizations.\n[marimo/marimo/_server/main.py at main · marimo-team/marimo](https://github.com/marimo-team/marimo/blob/main/marimo/_server/main.py) \nThis endpoint functions as an unauthenticated proxy, allowing an attacker to connect to any service running on the local machine via the specified `\u003cport\u003e` and `\u003croute\u003e`.\n\nThe existence of this proxy is visible in the application's code (marimo/_server/main.py), but there's no official documentation or warning about its behavior or potential risks.\n\n\n### Impact\nCWE-441: Proxying Without Authentication\n\nThis vulnerability, as it can be used to bypass firewalls and access internal services that are intended to be local-only. The level of impact depends entirely on what services are running and accessible on the local machine.\n\nFull Local Access: An attacker can use this proxy to connect to local services that answer to web sockets, HTTP or ASGI protocol, effectively gaining a foothold on the machine. Depending on the service, this can lead to remote code execution, data exfiltration, or further network penetration.\n\nExposure of Sensitive Services: Our scans of public-facing Marimo servers have shown that many are exposing sensitive internal services, including:\n\nOld CUPS Servers: Could allow an attacker to view print jobs or configuration or depending on old vulnerabilities, allow RCE.\n\nphpMyAdmin: Provides a web interface to a MySQL database, potentially exposing sensitive data.\n\nRPCMapper: Can be used for network reconnaissance and enumerating services.\n\nWhile you’d hope people wouldn’t expose marimo instances to the internet, we found numerous public Marimo instances using tools like Shodan. Many of these servers, some even hosted on cloud platforms like AWS GovCloud, were found to be vulnerable. This means the vulnerability isn't limited to a few isolated cases but is a widespread issue affecting production environments.\n\n===\n\nNotes, this was discovered by [devgi](https://github.com/devgi). I ([acepace](https://github.com/acepace)) followed up and also created this report.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-10-01T21:20:11Z",
    "Severity": "MODERATE",
    "Summary": "marimo vulnerable to proxy abuse of /mpl/{port}/",
    "UpdatedAt": "2025-10-01T21:20:13Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.16.4"
      },
      "VulnerableVersionRange": "\u003e 0.9.20, \u003c 0.16.4"
    }
  ]
}