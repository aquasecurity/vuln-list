{
  "Severity": "HIGH",
  "UpdatedAt": "2021-10-19T16:09:35Z",
  "Package": {
    "Ecosystem": "PIP",
    "Name": "tuf"
  },
  "Advisory": {
    "DatabaseId": 5785,
    "Id": "GSA_kwCzR0hTQS13anc2LTJjcXItajRxcs0WmQ",
    "GhsaId": "GHSA-wjw6-2cqr-j4qr",
    "References": [
      {
        "Url": "https://github.com/theupdateframework/python-tuf/security/advisories/GHSA-wjw6-2cqr-j4qr"
      },
      {
        "Url": "https://github.com/theupdateframework/python-tuf/issues/1527"
      },
      {
        "Url": "https://github.com/theupdateframework/python-tuf/commit/4ad7ae48fda594b640139c3b7eae21ed5155a102"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2021-41131"
      },
      {
        "Url": "https://github.com/advisories/GHSA-wjw6-2cqr-j4qr"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-wjw6-2cqr-j4qr"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2021-41131"
      }
    ],
    "Description": "### Impact\nIn both clients (`tuf/client` and `tuf/ngclient`), there is a path traversal vulnerability that in the worst case can overwrite files ending in `.json` anywhere on the client system on a call to `get_one_valid_targetinfo()`. It occurs because the rolename is used to form the filename, and may contain path traversal characters (ie `../../name.json`).\n\nThe impact is mitigated by a few facts:\n* It only affects implementations that allow arbitrary rolename selection for delegated targets metadata\n* The attack requires the ability to A) insert new metadata for the path-traversing role and B) get the role delegated by an existing targets metadata\n* The written file content is heavily restricted since it needs to be a valid, signed targets file. The file extension is always .json.\n\n### Patches\nA fix is available in version 0.19 or newer.\n\n### Workarounds\nNone that do not require code changes. Clients can restrict the allowed character set for rolenames, or they can store metadata in files named in a way that is not vulnerable: neither of these approaches is possible without modifying python-tuf.\n\n### References\n- [The issue where this was discovered](https://github.com/theupdateframework/python-tuf/issues/1527)\n- [Proof of Concept demonstrating the flaw](https://github.com/jku/path-traversal-poc)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [python-tuf](https://github.com/theupdateframework/python-tuf/issues)\n* Contact the maintainers by email or Slack\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2021-10-19T20:14:36Z",
    "Severity": "HIGH",
    "Summary": "Client metadata path-traversal",
    "UpdatedAt": "2023-02-01T05:06:13Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.5,
      "VectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:L/I:H/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.19"
      },
      "VulnerableVersionRange": "\u003c 0.19"
    }
  ]
}