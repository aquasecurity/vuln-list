{
  "Severity": "MODERATE",
  "UpdatedAt": "2024-06-12T19:38:25Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "@strapi/plugin-upload"
  },
  "Advisory": {
    "DatabaseId": 249795,
    "Id": "GSA_kwCzR0hTQS1wbTlxLXhqOXAtOTZwbc4AA8_D",
    "GhsaId": "GHSA-pm9q-xj9p-96pm",
    "References": [
      {
        "Url": "https://github.com/strapi/strapi/security/advisories/GHSA-pm9q-xj9p-96pm"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-31217"
      },
      {
        "Url": "https://github.com/strapi/strapi/commit/a0da7e73e1496d835fe71a2febb14f70170135c7"
      },
      {
        "Url": "https://github.com/advisories/GHSA-pm9q-xj9p-96pm"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-pm9q-xj9p-96pm"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-31217"
      }
    ],
    "Description": "### Summary\nA Denial-of-Service was found in the media upload process causing the server to crash without restarting, affecting either development and production environments.\n\n### Details\nUsually, errors in the application cause it to log the error and keep it running for other clients. This behavior, in contrast, stops the server execution, making it unavailable for any clients until it's manually restarted. \n\n### PoC\nDue to a bug in what we believe to be Burp’s decoding system, we couldn’t produce a valid file to easily reproduce the vulnerability. Instead, the issue can be reproduced by following these steps:\n1. Configure Burp’s proxy between a browser and a Strapi server\n2. Log in and upload an image through the Media Library page while having Burp’s interceptor turned on\n3. After capturing the upload POST request in Burp, add `%00` at the end of the file extension from the `Content-Disposition`, in the filename parameter (See reference image 1 below)\n4. Using the cursor, select the added `%00` and right-click it. Click in Convert selection \u003e URL \u003e URL decode to transform the selected text into a null byte\n5. Forward the modified request. The server should print an error and crash with the error `ERR_INVALID_ARG_VALUE` (See reference log 1 below)\n\nBy following the data flow, we reached the [line of code](https://github.com/strapi/strapi/blob/f1dd5cc8eef574bac6679aab6f93276e57497328/packages/providers/upload-local/src/index.ts#L86) where we believe the DoS is being caused.\nThe simpler way of fixing this vulnerability seems to be avoiding the error thrown by whitelisting the characters used in the extension.\n\n#### Reference Image 1\n![image](https://github.com/strapi/strapi/assets/8593673/c95278a1-1727-485e-b6f8-276074d9dd42)\n\n#### Reference Log 1\n```\n[2024-03-22 10:23:42.629] http: POST /upload (22 ms) 400\nnode:internal/fs/utils:379\n  const err = new ERR_INVALID_ARG_VALUE(\n              ^\n\nTypeError [ERR_INVALID_ARG_VALUE]: The argument 'path' must be a string, Uint8Array, or URL without null bytes. Received '/mnt/storage/Development/GHSA-pm9q-xj9p-96pm/public/uploads/replaceme_png_88efe6a165.png\\x00'\n    at new WriteStream (node:internal/fs/streams:340:5)\n    at Object.createWriteStream (node:fs:3123:10)\n    at /mnt/storage/Development/GHSA-pm9q-xj9p-96pm/node_modules/@strapi/provider-upload-local/dist/index.js:71:33\n    at new Promise (\u003canonymous\u003e)\n    at Object.uploadStream (/mnt/storage/Development/GHSA-pm9q-xj9p-96pm/node_modules/@strapi/provider-upload-local/dist/index.js:68:16)\n    at Object.uploadStream (/mnt/storage/Development/GHSA-pm9q-xj9p-96pm/node_modules/@strapi/plugin-upload/server/register.js:80:35)\n    at Object.upload (/mnt/storage/Development/GHSA-pm9q-xj9p-96pm/node_modules/@strapi/plugin-upload/server/services/provider.js:16:46)\n    at Object.uploadImage (/mnt/storage/Development/GHSA-pm9q-xj9p-96pm/node_modules/@strapi/plugin-upload/server/services/upload.js:220:48) {\n  code: 'ERR_INVALID_ARG_VALUE'\n}\n```\n\n### Impact\nDenial-of-Service occurs when a service becomes unavailable for users or other services.\nBy sending a specially-crafted request, the server crashes without restarting. The entire server crashes with the thrown error instead of crashing only the single request and returning error 500 to the user.\nAny user with access to the file upload functionality is able to exploit this vulnerability, affecting applications running in both development mode and production mode as well.\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-06-12T19:38:24Z",
    "Severity": "MODERATE",
    "Summary": "@strapi/plugin-upload  has a Denial-of-Service via Improper Exception Handling",
    "UpdatedAt": "2024-06-12T19:38:25Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 5.3,
      "VectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "4.22.0"
      },
      "VulnerableVersionRange": "\u003c 4.22.0"
    }
  ]
}