{
  "Severity": "HIGH",
  "UpdatedAt": "2023-11-29T22:26:30Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "tar"
  },
  "Advisory": {
    "DatabaseId": 5500,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTU5NTUtOXdwci0zN2po",
    "GhsaId": "GHSA-5955-9wpr-37jh",
    "References": [
      {
        "Url": "https://github.com/npm/node-tar/security/advisories/GHSA-5955-9wpr-37jh"
      },
      {
        "Url": "https://www.npmjs.com/package/tar"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2021-37713"
      },
      {
        "Url": "https://www.oracle.com/security-alerts/cpuoct2021.html"
      },
      {
        "Url": "https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf"
      },
      {
        "Url": "https://github.com/isaacs/node-tar/commit/52b09e309bcae0c741a7eb79a17ef36e7828b946"
      },
      {
        "Url": "https://github.com/isaacs/node-tar/commit/82eac952f7c10765969ed464e549375854b26edc"
      },
      {
        "Url": "https://github.com/isaacs/node-tar/commit/875a37e3ec031186fc6599f6807341f56c584598"
      },
      {
        "Url": "https://github.com/advisories/GHSA-5955-9wpr-37jh"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-5955-9wpr-37jh"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2021-37713"
      }
    ],
    "Description": "### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\nnode-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory.\n\nThis logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`.  If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory.\n\nAdditionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path.\n\nThis only affects users of `node-tar` on Windows systems.\n\n### Patches\n\n4.4.18 || 5.0.10 || 6.1.9\n\n### Workarounds\n\nThere is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does.\n\nUsers are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves.\n\n### Fix\n\nThe fixed versions strip path roots from all paths prior to being resolved against the extraction target folder, even if such paths are not \"absolute\".\n\nAdditionally, a path starting with a drive letter and then two dots, like `c:../`, would bypass the check for `..` path portions.  This is checked properly in the patched versions.\n\nFinally, a defense in depth check is added, such that if the `entry.absolute` is outside of the extraction taret, and we are not in preservePaths:true mode, a warning is raised on that entry, and it is skipped.  Currently, it is believed that this check is redundant, but it did catch some oversights in development.\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2021-08-31T16:05:05Z",
    "Severity": "HIGH",
    "Summary": "Arbitrary File Creation/Overwrite on Windows via insufficient relative path sanitization",
    "UpdatedAt": "2023-11-29T22:26:30Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 8.2,
      "VectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "6.1.9"
      },
      "VulnerableVersionRange": "\u003e= 6.0.0, \u003c 6.1.9"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "5.0.10"
      },
      "VulnerableVersionRange": "\u003e= 5.0.0, \u003c 5.0.10"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "4.4.18"
      },
      "VulnerableVersionRange": "\u003c 4.4.18"
    }
  ]
}