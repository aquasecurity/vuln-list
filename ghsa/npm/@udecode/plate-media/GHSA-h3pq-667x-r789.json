{
  "Severity": "HIGH",
  "UpdatedAt": "2024-07-15T18:33:23Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "@udecode/plate-media"
  },
  "Advisory": {
    "DatabaseId": 253551,
    "Id": "GSA_kwCzR0hTQS1oM3BxLTY2N3gtcjc4Oc4AA95v",
    "GhsaId": "GHSA-h3pq-667x-r789",
    "References": [
      {
        "Url": "https://github.com/udecode/plate/security/advisories/GHSA-h3pq-667x-r789"
      },
      {
        "Url": "https://github.com/udecode/plate/commit/1bc0971774fbfb770780c9bdb94746a6f0f196a0"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-40631"
      },
      {
        "Url": "https://stackoverflow.com/a/43467144"
      },
      {
        "Url": "https://github.com/advisories/GHSA-h3pq-667x-r789"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-h3pq-667x-r789"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-40631"
      }
    ],
    "Description": "### Impact\nEditors that use `MediaEmbedElement` and pass custom `urlParsers` to the `useMediaState` hook may be vulnerable to XSS if a custom parser allows `javascript:`, `data:` or `vbscript:` URLs to be embedded. Editors that do not use `urlParsers` and instead consume the `url` property directly may also be vulnerable if the URL is not sanitised.\n\nThe default parsers `parseTwitterUrl` and `parseVideoUrl` are not affected.\n\nExamples of vulnerable code:\n\n```tsx\nconst { embed } = useMediaState({\n  urlParsers: [\n    // Custom parser that does not use an allowlist or validate the URL protocol\n    (url) =\u003e ({ url }),\n  ],\n});\n\nreturn (\n  \u003ciframe\n    src={embed!.url}\n    // ...\n  /\u003e\n);\n```\n\n```tsx\nconst { url } = useMediaState();\n\nreturn (\n  \u003ciframe\n    // url property used directly from useMediaState() with no sanitisation\n    src={url}\n    // ...\n  /\u003e\n);\n```\n\n\n```tsx\nconst { url } = element;\n\nreturn (\n  \u003ciframe\n    // url property used directly from element with no sanitisation\n    src={url}\n    // ...\n  /\u003e\n);\n```\n\n### Patches\n`@udecode/plate-media` 36.0.10 resolves this issue by only allowing HTTP and HTTPS URLs during parsing. This affects only the `embed` property returned from `useMediaState`.\n\nIn addition, the `url` property returned from `useMediaState` has been renamed to `unsafeUrl` to indicate that it has not been sanitised. The `url` property on `element` is also unsafe, but has not been renamed. If you're using either of these properties directly, you will still need to validate the URL yourself.\n\n### Workarounds\nEnsure that any custom `urlParsers` do not allow `javascript:`, `data:` or `vbscript:` URLs to be returned in the `url` property of their return values.\n\nIf `url` is consumed directly, validate the URL protocol before passing it to the `iframe` element.\n\n### References\nHow to verify the protocol of a URL: https://stackoverflow.com/a/43467144",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-07-15T18:33:22Z",
    "Severity": "HIGH",
    "Summary": "Plate media plugins has a XSS in media embed element when using custom URL parsers",
    "UpdatedAt": "2024-08-04T05:03:38Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 8.1,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "36.0.10"
      },
      "VulnerableVersionRange": "\u003c 36.0.10"
    }
  ]
}