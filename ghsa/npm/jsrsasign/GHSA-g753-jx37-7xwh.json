{
  "Severity": "MODERATE",
  "UpdatedAt": "2020-06-29T19:33:18Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "jsrsasign"
  },
  "Advisory": {
    "DatabaseId": 2202,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWc3NTMtangzNy03eHdo",
    "GhsaId": "GHSA-g753-jx37-7xwh",
    "References": [
      {
        "Url": "https://github.com/kjur/jsrsasign/security/advisories/GHSA-g753-jx37-7xwh"
      },
      {
        "Url": "https://github.com/kjur/jsrsasign/issues/411"
      },
      {
        "Url": "https://github.com/kjur/jsrsasign/commit/9dcb89c57408a3d4b5b66aa9138426bd92819e73"
      },
      {
        "Url": "https://minerva.crocs.fi.muni.cz/"
      },
      {
        "Url": "https://www.npmjs.com/advisories/1505"
      },
      {
        "Url": "https://github.com/kjur/jsrsasign/releases/tag/8.0.13"
      },
      {
        "Url": "https://snyk.io/vuln/SNYK-JS-JSRSASIGN-561755"
      },
      {
        "Url": "https://github.com/advisories/GHSA-g753-jx37-7xwh"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-g753-jx37-7xwh"
      }
    ],
    "Description": "### Impact\nECDSA side-channel attack named [Minerava](https://minerva.crocs.fi.muni.cz/) have been found and it was found that it affects to jsrsasign.\n\nExecution time of thousands signature generation have been observed then EC private key which is scalar value may be recovered since point and scalar multiplication time depends on bits of scalar. In jsrsasign 8.0.13 or later, execution time of EC point and scalar multiplication is almost constant and fixed for the issue.\n\n- Minerva is one of timing attack or side channel attack for EC.\n- If you don't use ECDSA class, you are not affected the vulnerability.\n- The vulnerability is that attacker may guess private key by checking processing time of EC key generation or ECDSA signing.\n- The cause issue is that point multiplication processing time in ECDSA signing is depends on private key value.\n- After 8.0.13, processing time of point multiplication in ECDSA signing have become constant for key value in theory.\n\n### Patches\nUsers using ECDSA signature generation should upgrade to 8.0.13 or later.\n\n### Workarounds\nThere is no workarounds in jsrsasign. Update jsrsasign or use other ECDSA library.\n\n### ACKNOWLEDGEMENT\nThanks to Jan Jancar @J08nY, Petr Svenda and Vladimir Sedlacek of Masaryk University in Czech Republic to find and report this vulnerability.\n\n### References\nhttps://minerva.crocs.fi.muni.cz/\nhttps://www.npmjs.com/advisories/1505\nhttps://github.com/kjur/jsrsasign/issues/411",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2020-06-30T16:05:08Z",
    "Severity": "MODERATE",
    "Summary": "ECDSA signature vulnerability of Minerva timing attack in jsrsasign",
    "UpdatedAt": "2023-01-09T05:03:31Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 5.9,
      "VectorString": "CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:H/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "8.0.13"
      },
      "VulnerableVersionRange": "\u003e= 4.0.0, \u003c 8.0.13"
    }
  ]
}