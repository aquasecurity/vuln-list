{
  "Severity": "HIGH",
  "UpdatedAt": "2022-02-11T16:20:04Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "@openzeppelin/contracts"
  },
  "Advisory": {
    "DatabaseId": 10468,
    "Id": "GSA_kwCzR0hTQS04OGc4LWY1bWYtZjVyas0o5A",
    "GhsaId": "GHSA-88g8-f5mf-f5rj",
    "References": [
      {
        "Url": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-9c22-pwxw-p6hx"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2021-46320"
      },
      {
        "Url": "https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3006"
      },
      {
        "Url": "https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.4.1"
      },
      {
        "Url": "https://github.com/advisories/GHSA-88g8-f5mf-f5rj"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-88g8-f5mf-f5rj"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2021-46320"
      }
    ],
    "Description": "In OpenZeppelin \u003c=v4.4.0, initializer functions that are invoked separate from contract creation (the most prominent example being minimal proxies) may be reentered if they make an untrusted non-view external call. Once an initializer has finished running it can never be re-executed. However, an exception put in place to support multiple inheritance made reentrancy possible, breaking the expectation that there is a single execution.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2022-02-05T00:00:31Z",
    "Severity": "HIGH",
    "Summary": "Improper Initialization in OpenZeppelin",
    "UpdatedAt": "2023-02-03T05:05:40Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.5,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "4.4.1"
      },
      "VulnerableVersionRange": "\u003c 4.4.1"
    }
  ]
}