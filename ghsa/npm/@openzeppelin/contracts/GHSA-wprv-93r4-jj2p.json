{
  "Severity": "MODERATE",
  "UpdatedAt": "2023-06-19T19:46:38Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "@openzeppelin/contracts"
  },
  "Advisory": {
    "DatabaseId": 212774,
    "Id": "GSA_kwCzR0hTQS13cHJ2LTkzcjQtamoycM4AAz8m",
    "GhsaId": "GHSA-wprv-93r4-jj2p",
    "References": [
      {
        "Url": "https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-wprv-93r4-jj2p"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2023-34459"
      },
      {
        "Url": "https://github.com/OpenZeppelin/openzeppelin-contracts/commit/4d2383e17186be3e8ccf5a442e9686ecc7de1c55"
      },
      {
        "Url": "https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.9.2"
      },
      {
        "Url": "https://github.com/advisories/GHSA-wprv-93r4-jj2p"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-wprv-93r4-jj2p"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2023-34459"
      }
    ],
    "Description": "### Impact\n\nWhen the `verifyMultiProof`, `verifyMultiProofCalldata`, `processMultiProof`, or `processMultiProofCalldata` functions are in use, it is possible to construct merkle trees that allow forging a valid multiproof for an arbitrary set of leaves.\n\nA contract may be vulnerable if it uses multiproofs for verification and the merkle tree that is processed includes a node with value 0 at depth 1 (just under the root). This could happen inadvertently for balanced trees with 3 leaves or less, if the leaves are not hashed. This could happen deliberately if a malicious tree builder includes such a node in the tree.\n\nA contract is not vulnerable if it uses single-leaf proving (`verify`, `verifyCalldata`, `processProof`, or `processProofCalldata`), or if it uses multiproofs with a known tree that has hashed leaves. Standard merkle trees produced or validated with the [@openzeppelin/merkle-tree](https://github.com/OpenZeppelin/merkle-tree) library are safe.\n\n### Patches\n\nThe problem has been patched in 4.9.2.\n\n### Workarounds\n\nIf you are using multiproofs: When constructing merkle trees hash the leaves and do not insert empty nodes in your trees. Using the [@openzeppelin/merkle-tree](https://www.npmjs.com/package/@openzeppelin/merkle-tree) package eliminates this issue. Do not accept user-provided merkle roots without reconstructing at least the first level of the tree. Verify the merkle tree structure by reconstructing it from the leaves.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2023-06-19T19:46:37Z",
    "Severity": "MODERATE",
    "Summary": "OpenZeppelin Contracts using MerkleProof multiproofs may allow proving arbitrary leaves for specific trees",
    "UpdatedAt": "2023-11-08T05:04:00Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 5.3,
      "VectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:H/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "4.9.2"
      },
      "VulnerableVersionRange": "\u003e= 4.7.0, \u003c 4.9.2"
    }
  ]
}