{
  "Severity": "HIGH",
  "UpdatedAt": "2024-07-09T17:48:23Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "electron-updater"
  },
  "Advisory": {
    "DatabaseId": 252651,
    "Id": "GSA_kwCzR0hTQS05anhjLXFqcjktdmp4cc4AA9rr",
    "GhsaId": "GHSA-9jxc-qjr9-vjxq",
    "References": [
      {
        "Url": "https://github.com/electron-userland/electron-builder/security/advisories/GHSA-9jxc-qjr9-vjxq"
      },
      {
        "Url": "https://github.com/electron-userland/electron-builder/pull/8295"
      },
      {
        "Url": "https://github.com/electron-userland/electron-builder/commit/ac2e6a25aa491c1ef5167a552c19fc2085cd427f"
      },
      {
        "Url": "https://github.com/electron-userland/electron-builder/blob/140e2f0eb0df79c2a46e35024e96d0563355fc89/packages/electron-updater/src/windowsExecutableCodeSignatureVerifier.ts#L35-L41"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-39698"
      },
      {
        "Url": "https://github.com/advisories/GHSA-9jxc-qjr9-vjxq"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-9jxc-qjr9-vjxq"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-39698"
      }
    ],
    "Description": "### Observations\nThe file `packages/electron-updater/src/windowsExecutableCodeSignatureVerifier.ts` implements the signature validation routine for Electron applications on Windows. It executes the following command in a new shell (`process.env.ComSpec` on Windows, usually `C:\\Windows\\System32\\cmd.exe`):\n\nhttps://github.com/electron-userland/electron-builder/blob/140e2f0eb0df79c2a46e35024e96d0563355fc89/packages/electron-updater/src/windowsExecutableCodeSignatureVerifier.ts#L35-L41\n\nBecause of the surrounding shell, a first pass by `cmd.exe` expands any environment variable found in command-line above.\n\n### Exploitation\n\nThis creates a situation where `verifySignature()` can be tricked into validating the certificate of a different file than the one that was just downloaded. If the step is successful, the malicious update will be executed even if its signature is invalid. \n\n### Impact\n\nThis attack assumes a compromised update manifest (server compromise, Man-in-the-Middle attack if fetched over HTTP, Cross-Site Scripting to point the application to a malicious updater server, etc.).\n\n### Patch\n\nThis vulnerability was patched in #8295, by comparing the path in the output of `Get-AuthenticodeSignature` with the intended one. The patch is available starting from 6.3.0-alpha.6.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-07-09T17:48:21Z",
    "Severity": "HIGH",
    "Summary": "electron-updater Code Signing Bypass on Windows",
    "UpdatedAt": "2024-08-07T11:51:28Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.5,
      "VectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "6.3.0-alpha.6"
      },
      "VulnerableVersionRange": "\u003c= 6.3.0-alpha.5"
    }
  ]
}