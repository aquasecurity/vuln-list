{
  "Severity": "HIGH",
  "UpdatedAt": "2019-08-23T21:41:41Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "openpgp"
  },
  "Advisory": {
    "DatabaseId": 1647,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWhmbWYtcTQzdi0yZmZq",
    "GhsaId": "GHSA-hfmf-q43v-2ffj",
    "References": [
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2019-9154"
      },
      {
        "Url": "https://github.com/openpgpjs/openpgpjs/pull/797"
      },
      {
        "Url": "https://github.com/openpgpjs/openpgpjs/pull/797/commits/47138eed61473e13ee8f05931119d3e10542c5e1"
      },
      {
        "Url": "https://github.com/openpgpjs/openpgpjs/releases/tag/v4.2.0"
      },
      {
        "Url": "https://sec-consult.com/en/blog/advisories/multiple-vulnerabilities-in-openpgp-js/"
      },
      {
        "Url": "https://www.bsi.bund.de/SharedDocs/Downloads/EN/BSI/Publications/Studies/Mailvelope_Extensions/Mailvelope_Extensions_pdf.html#download=1"
      },
      {
        "Url": "https://snyk.io/vuln/SNYK-JS-OPENPGP-460247"
      },
      {
        "Url": "https://www.npmjs.com/advisories/1161"
      },
      {
        "Url": "http://packetstormsecurity.com/files/154191/OpenPGP.js-4.2.0-Signature-Bypass-Invalid-Curve-Attack.html"
      },
      {
        "Url": "https://github.com/advisories/GHSA-hfmf-q43v-2ffj"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-hfmf-q43v-2ffj"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2019-9154"
      }
    ],
    "Description": "Versions of `openpgp` prior to 4.2.0 are vulnerable to Improper Key Verification. The OpenPGP standard allows signature packets to have subpackets which may be hashed or unhashed. Unhashed subpackets are not cryptographically protected and cannot be trusted. The `openpgp` package does not verify whether a subpacket is hashed. Furthermore, due to the order of parsing a signature packet information from unhashed subpackets overwrites information from hashed subpackets. This may allow an attacker to modify the contents of a key certification signature or revocation signature. Doing so could convince a victim to use an obsolete key for encryption. An attack require a victim to import a manipulated key or update an existing key with a manipulated version.\n\n\n## Recommendation\n\nUpgrade to version 4.2.0 or later. \nIf you are upgrading from a version \u003c4.0.0 it is highly recommended to read the `High-Level API Changes` section of the `openpgp` 4.0.0 release: https://github.com/openpgpjs/openpgpjs/releases/tag/v4.0.0",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2019-08-23T21:42:18Z",
    "Severity": "HIGH",
    "Summary": "Improper Key Verification in openpgp",
    "UpdatedAt": "2023-01-09T05:02:03Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.5,
      "VectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "4.2.0"
      },
      "VulnerableVersionRange": "\u003c= 4.1.2"
    }
  ]
}