{
  "Severity": "MODERATE",
  "UpdatedAt": "2022-10-25T20:22:02Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "@dependencytrack/frontend"
  },
  "Advisory": {
    "DatabaseId": 194723,
    "Id": "GSA_kwCzR0hTQS1jMzN3LXBtNTItbXF2Zs4AAvij",
    "GhsaId": "GHSA-c33w-pm52-mqvf",
    "References": [
      {
        "Url": "https://github.com/DependencyTrack/frontend/security/advisories/GHSA-c33w-pm52-mqvf"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2022-39350"
      },
      {
        "Url": "https://docs.dependencytrack.org/changelog/"
      },
      {
        "Url": "https://github.com/showdownjs/showdown/wiki/Markdown's-XSS-Vulnerability-(and-how-to-mitigate-it)"
      },
      {
        "Url": "https://github.com/advisories/GHSA-c33w-pm52-mqvf"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-c33w-pm52-mqvf"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2022-39350"
      }
    ],
    "Description": "### Description\n\nDue to the common practice of providing vulnerability details in markdown format, the Dependency-Track frontend renders them using the JavaScript library [Showdown](https://github.com/showdownjs/showdown). Showdown [does not have any XSS countermeasures built in](https://github.com/showdownjs/showdown/wiki/Markdown's-XSS-Vulnerability-(and-how-to-mitigate-it)), and versions before 4.6.1 of the Dependency-Track frontend did not encode or sanitize Showdown's output. This made it possible for arbitrary JavaScript included in vulnerability details via HTML attributes to be executed in context of the frontend.\n\n### Impact\n\nActors with the `VULNERABILITY_MANAGEMENT` permission can exploit this weakness by creating or editing a custom vulnerability and providing XSS payloads in any of the following fields:\n\n* Description\n* Details\n* Recommendation\n* References\n\nThe payload will be executed for users with the `VIEW_PORTFOLIO` permission when browsing to the modified vulnerability's page, for example: \n\n```\nhttps://dtrack.example.com/vulnerabilities/INTERNAL/INT-jd8u-e8tl-8lwu\n```\n\nAlternatively, malicious JavaScript could be introduced via any of the vulnerability databases mirrored by Dependency-Track (NVD, GitHub Advisories, OSV, OSS Index, VulnDB). However, this attack vector is highly unlikely, and the team is not aware of any occurrence of this happening.\n\n\u003e **Note**\n\u003e The *Vulnerability Details* element of the *Audit Vulnerabilities* tab in the project view is **not** affected.\n\n### Patches\n\nThe issue has been fixed in frontend version 4.6.1.\n\n### Credit\n\nThanks to GitHub user **Waterstraal** for finding and responsibly disclosing the issue.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2022-10-25T20:22:01Z",
    "Severity": "MODERATE",
    "Summary": "@dependencytrack/frontend vulnerable to  Persistent Cross-Site-Scripting via Vulnerability Details",
    "UpdatedAt": "2023-01-30T05:02:58Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 5.4,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "4.6.1"
      },
      "VulnerableVersionRange": "\u003c 4.6.1"
    }
  ]
}