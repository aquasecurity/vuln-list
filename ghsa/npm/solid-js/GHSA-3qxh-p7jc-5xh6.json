{
  "Severity": "HIGH",
  "UpdatedAt": "2025-02-25T17:49:41Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "solid-js"
  },
  "Advisory": {
    "DatabaseId": 281652,
    "Id": "GSA_kwCzR0hTQS0zcXhoLXA3amMtNXhoNs4ABEw0",
    "GhsaId": "GHSA-3qxh-p7jc-5xh6",
    "References": [
      {
        "Url": "https://github.com/solidjs/solid/security/advisories/GHSA-3qxh-p7jc-5xh6"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-27109"
      },
      {
        "Url": "https://github.com/solidjs/solid/commit/b93956f28ed75469af6976a98728e313d0edd236"
      },
      {
        "Url": "https://github.com/advisories/GHSA-3qxh-p7jc-5xh6"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-3qxh-p7jc-5xh6"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-27109"
      }
    ],
    "Description": "Inserts/JSX expressions inside illegal inlined JSX fragments lacked escaping, allowing user input to be rendered as HTML when put directly inside JSX fragments.\n\nFor instance, `?text=\u003csvg/onload=alert(1)\u003e` would trigger XSS here.\n```js\n  const [text] = createResource(() =\u003e {\n    return new URL(getRequestEvent().request.url).searchParams.get(\"text\");\n  });\n\n  return (\n    \u003c\u003e\n      Text: {text()}\n    \u003c/\u003e\n  );\n  ```",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-02-25T17:49:40Z",
    "Severity": "HIGH",
    "Summary": "Solid Lacks Escaping of HTML in JSX Fragments allows for Cross-Site Scripting (XSS)",
    "UpdatedAt": "2025-02-25T17:49:41Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.3,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.9.4"
      },
      "VulnerableVersionRange": "\u003c 1.9.4"
    }
  ]
}