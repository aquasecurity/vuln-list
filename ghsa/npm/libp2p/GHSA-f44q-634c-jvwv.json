{
  "Severity": "HIGH",
  "UpdatedAt": "2022-12-07T23:24:01Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "libp2p"
  },
  "Advisory": {
    "DatabaseId": 197433,
    "Id": "GSA_kwCzR0hTQS1mNDRxLTYzNGMtanZ3ds4AAwM5",
    "GhsaId": "GHSA-f44q-634c-jvwv",
    "References": [
      {
        "Url": "https://github.com/libp2p/js-libp2p/security/advisories/GHSA-f44q-634c-jvwv"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23487"
      },
      {
        "Url": "https://github.com/advisories/GHSA-f44q-634c-jvwv"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-f44q-634c-jvwv"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2022-23487"
      }
    ],
    "Description": "### Impact\nVersions older than `v0.38.0` of js-libp2p are vulnerable to targeted resource exhaustion attacks. These attacks target libp2p’s connection, stream, peer, and memory management. An attacker can cause the allocation of large amounts of memory, ultimately leading to the process getting killed by the host’s operating system. While a connection manager tasked with keeping the number of connections within manageable limits has been part of js-libp2p, this component was designed to handle the regular churn of peers, not a targeted resource exhaustion attack.\n\n### Patches (What to do as a js-libp2p consumer:)\nUpdate your js-libp2p dependency to `v0.38.0` or greater.\n\n### Workarounds\nThere are no workarounds, and so we recommend to upgrade your js-libp2p version.\nSome range of attacks can be mitigated using OS tools (like manually blocking malicious peers using iptables or ufw ) or making use of a load balancer in front of libp2p nodes.\nYou can also use the [allow deny list in js-libp2p](https://docs.libp2p.io/concepts/security/dos-mitigation/#deny-specific-peers-or-create-an-allow-list-of-trusted-peers) to deny specific peers.\n\nHowever these require direct action \u0026 responsibility on your part and are no substitutes for upgrading js-libp2p. Therefore, we highly recommend upgrading your js-libp2p version for the way it enables tighter scoped limits and provides visibility into and easier reasoning about js-libp2p resource utilization.\n\n### References\n* DoS Mitigation page for more information on how to incorporate mitigation strategies, monitor your application, and respond to attacks: https://docs.libp2p.io/reference/dos-mitigation/. \n* Documentation on how to configure limits to prevent excessive resource consumption: https://github.com/libp2p/js-libp2p/blob/master/doc/LIMITS.md\n* Documentation on how to configure metrics: https://github.com/libp2p/js-libp2p/blob/master/doc/METRICS.md\n\nPlease see the related disclosure for go-libp2p: https://github.com/libp2p/go-libp2p/security/advisories/GHSA-j7qp-mfxf-8xjw and rust-libp2p: https://github.com/libp2p/rust-libp2p/security/advisories/GHSA-jvgw-gccv-q5p8 \n\n#### For more information\n\nIf you have any questions or comments about this advisory, please email us at [security@libp2p.io](mailto:security@libp2p.io).",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2022-12-07T23:23:59Z",
    "Severity": "HIGH",
    "Summary": "libp2p DoS vulnerability from lack of resource management",
    "UpdatedAt": "2023-07-14T21:52:57Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.5,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.38.0"
      },
      "VulnerableVersionRange": "\u003c 0.38.0"
    }
  ]
}