{
  "Severity": "HIGH",
  "UpdatedAt": "2025-04-07T19:03:17Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "@apollo/gateway"
  },
  "Advisory": {
    "DatabaseId": 288838,
    "Id": "GSA_kwCzR0hTQS1wMnE2LXB3aDUtbTZqcs4ABGhG",
    "GhsaId": "GHSA-p2q6-pwh5-m6jr",
    "References": [
      {
        "Url": "https://github.com/apollographql/federation/security/advisories/GHSA-p2q6-pwh5-m6jr"
      },
      {
        "Url": "https://github.com/apollographql/federation/pull/3236"
      },
      {
        "Url": "https://github.com/apollographql/federation/releases/tag/%40apollo%2Fgateway%402.10.1"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-32031"
      },
      {
        "Url": "https://github.com/advisories/GHSA-p2q6-pwh5-m6jr"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-p2q6-pwh5-m6jr"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-32031"
      }
    ],
    "Description": "# Impact\n\n## Summary\n\nA vulnerability in Apollo Gateway allowed queries with deeply nested and reused named fragments to be prohibitively expensive to query plan, specifically due to internal optimizations being frequently bypassed. This could lead to excessive resource consumption and denial of service.\n\n## Details\n\nThe query planner includes an optimization that significantly speeds up planning for applicable GraphQL selections. However, queries with deeply nested and reused named fragments can generate many selections where this optimization does not apply, leading to significantly longer planning times. Because the query planner does not enforce a timeout, a small number of such queries can render gateway inoperable.\n\n## Fix/Mitigation\n\n- A new **Query Optimization Limit** metric has been added:\n  - This metric approximates the number of selections that cannot be skipped by the existing optimization.\n  - The metric is checked against a limit to prevent excessive computation.\n\nGiven the complexity of query planning optimizations, we will continue refining these solutions based on real-world performance and accuracy tests.\n\n# Patches\n\nThis has been remediated in `@apollo/gateway` version 2.10.1.\n\n# Workarounds\n\nNo known direct workarounds exist.\n\n# References\n\n[Query Planning Documentation](https://www.apollographql.com/docs/graphos/reference/federation/query-plans)\n\n## Acknowledgements\n\nWe appreciate the efforts of the security community in identifying and improving the performance and security of query planning mechanisms.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-04-07T19:03:16Z",
    "Severity": "HIGH",
    "Summary": "Apollo Gateway Query Planner Vulnerable to Excessive Resource Consumption via Optimization Bypass",
    "UpdatedAt": "2025-04-08T17:51:03Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.5,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "2.10.1"
      },
      "VulnerableVersionRange": "\u003c 2.10.1"
    }
  ]
}