{
  "Severity": "HIGH",
  "UpdatedAt": "2025-04-04T14:06:35Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "generator-jhipster-entity-audit"
  },
  "Advisory": {
    "DatabaseId": 288424,
    "Id": "GSA_kwCzR0hTQS03cm1wLTNnOWYtY3ZxOM4ABGao",
    "GhsaId": "GHSA-7rmp-3g9f-cvq8",
    "References": [
      {
        "Url": "https://github.com/jhipster/generator-jhipster-entity-audit/security/advisories/GHSA-7rmp-3g9f-cvq8"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-31119"
      },
      {
        "Url": "https://github.com/jhipster/generator-jhipster-entity-audit/blob/e21e83135d10c77d92203c89cb0b0063914e8fe0/generators/spring-boot-javers/templates/src/main/java/_package_/web/rest/JaversEntityAuditResource.java.ejs#L88"
      },
      {
        "Url": "https://github.com/advisories/GHSA-7rmp-3g9f-cvq8"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-7rmp-3g9f-cvq8"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-31119"
      }
    ],
    "Description": "### Summary\nCWE-470 (Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection') when having Javers selected as Entity Audit Framework\n\n### Details\nIn the following two occurences, user input directly leads to class loading without checking against e.g. a whitelist of allowed classes. This is also known as CWE-470\nhttps://github.com/jhipster/generator-jhipster-entity-audit/blob/e21e83135d10c77d92203c89cb0b0063914e8fe0/generators/spring-boot-javers/templates/src/main/java/_package_/web/rest/JaversEntityAuditResource.java.ejs#L88\nhttps://github.com/jhipster/generator-jhipster-entity-audit/blob/e21e83135d10c77d92203c89cb0b0063914e8fe0/generators/spring-boot-javers/templates/src/main/java/_package_/web/rest/JaversEntityAuditResource.java.ejs#L124\n\nSo, if an attacker manages to place some malicious classes into the classpath and also has access to these REST interface for calling the mentioned REST endpoints, using these lines of code can lead to unintended remote code execution.\n\n### PoC\n\n1. Place an arbitrary class with the right package name (starting with JHIpster applications path name) and make it available in class path\n2. Gain access to view entity's audit changelogs (Role: ADMIN)\n3. pass in the malicious class name part as `entityType` (first mentioned part) // `qualifiedName` (second mentioned occurence)\n4. class gets loaded and static code blocks in there get executed\n\n--\u003e Should be limited to the already existing whitelist of classes (see first method in that mentioned class)\n\n### Impact\nRemote Code execution. You need to have some access to place malicious classes into the class path and you need to have a user with ADMIN role on the system.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-04-04T14:06:35Z",
    "Severity": "HIGH",
    "Summary": "generator-jhipster-entity-audit vulnerable to Unsafe Reflection when having Javers selected as Entity Audit Framework",
    "UpdatedAt": "2025-04-04T14:06:35Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.7,
      "VectorString": "CVSS:3.1/AV:N/AC:H/PR:H/UI:R/S:C/C:H/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "5.9.1"
      },
      "VulnerableVersionRange": "\u003c 5.9.1"
    }
  ]
}