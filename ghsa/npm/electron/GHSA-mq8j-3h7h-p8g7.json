{
  "Severity": "LOW",
  "UpdatedAt": "2022-06-16T23:14:34Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "electron"
  },
  "Advisory": {
    "DatabaseId": 178860,
    "Id": "GSA_kwCzR0hTQS1tcThqLTNoN2gtcDhnN84AArqs",
    "GhsaId": "GHSA-mq8j-3h7h-p8g7",
    "References": [
      {
        "Url": "https://github.com/electron/electron/security/advisories/GHSA-mq8j-3h7h-p8g7"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2022-29247"
      },
      {
        "Url": "https://github.com/advisories/GHSA-mq8j-3h7h-p8g7"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-mq8j-3h7h-p8g7"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2022-29247"
      }
    ],
    "Description": "### Impact\nThis vulnerability allows a renderer with JS execution to obtain access to a new renderer process with `nodeIntegrationInSubFrames` enabled which in turn allows effective access to `ipcRenderer`.\n\nPlease note the misleadingly named `nodeIntegrationInSubFrames` option does not implicitly grant Node.js access rather it depends on the existing `sandbox` setting.  If your application is sandboxed then `nodeIntegrationInSubFrames` just gives access to the sandboxed renderer APIs (which includes `ipcRenderer`).\n\nIf your application then additionally exposes IPC messages without IPC `senderFrame` validation that perform privileged actions or return confidential data this access to `ipcRenderer` can in turn compromise your application / user even with the sandbox enabled.\n\n### Patches\nThis has been patched and the following Electron versions contain the fix:\n\n* `18.0.0-beta.6`\n* `17.2.0`\n* `16.2.6`\n* `15.5.5`\n\n### Workarounds\nEnsure that all IPC message handlers appropriately validate `senderFrame` as per our [security tutorial here](https://github.com/electron/electron/blob/main/docs/tutorial/security.md#17-validate-the-sender-of-all-ipc-messages).\n\n### For more information\n\nIf you have any questions or comments about this advisory, email us at [security@electronjs.org](mailto:security@electronjs.org).",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2022-06-16T23:14:33Z",
    "Severity": "LOW",
    "Summary": "Compromised child renderer processes could obtain IPC access without nodeIntegrationInSubFrames being enabled",
    "UpdatedAt": "2023-01-27T05:04:57Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 2.2,
      "VectorString": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:L/I:N/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "18.0.0-beta.6"
      },
      "VulnerableVersionRange": "\u003e= 18.0.0-beta.1, \u003c= 18.0.0-beta.5"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "17.2.0"
      },
      "VulnerableVersionRange": "\u003e= 17.0.0, \u003c 17.2.0"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "16.2.6"
      },
      "VulnerableVersionRange": "\u003e= 16.0.0, \u003c 16.2.6"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "15.5.5"
      },
      "VulnerableVersionRange": "\u003c 15.5.5"
    }
  ]
}