{
  "Severity": "LOW",
  "UpdatedAt": "2024-10-10T21:00:05Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "elliptic"
  },
  "Advisory": {
    "DatabaseId": 262738,
    "Id": "GSA_kwCzR0hTQS00MzRnLTI2MzctcW1xcs4ABAJS",
    "GhsaId": "GHSA-434g-2637-qmqr",
    "References": [
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-48949"
      },
      {
        "Url": "https://github.com/indutny/elliptic/commit/7ac5360118f74eb02da73bdf9f24fd0c72ff5281"
      },
      {
        "Url": "https://github.com/indutny/elliptic/compare/v6.5.5...v6.5.6"
      },
      {
        "Url": "https://security.netapp.com/advisory/ntap-20241227-0003"
      },
      {
        "Url": "https://github.com/advisories/GHSA-434g-2637-qmqr"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-434g-2637-qmqr"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-48949"
      }
    ],
    "Description": "The Elliptic package 6.5.5 for Node.js for EDDSA implementation does not perform the required check if the signature proof(s) is within the bounds of the order n of the base point of the elliptic curve, leading to signature malleability. Namely, the `verify` function in `lib/elliptic/eddsa/index.js` omits `sig.S().gte(sig.eddsa.curve.n) || sig.S().isNeg()` validation.\n\nThis vulnerability could have a security-relevant impact if an application relies on the uniqueness of a signature.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-10-10T03:30:44Z",
    "Severity": "LOW",
    "Summary": "Elliptic's verify function omits uniqueness validation",
    "UpdatedAt": "2024-12-27T18:31:27Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 5.3,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "6.5.6"
      },
      "VulnerableVersionRange": "\u003c 6.5.6"
    }
  ]
}