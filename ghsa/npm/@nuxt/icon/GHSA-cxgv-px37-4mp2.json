{
  "Severity": "HIGH",
  "UpdatedAt": "2024-08-05T19:49:56Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "@nuxt/icon"
  },
  "Advisory": {
    "DatabaseId": 255519,
    "Id": "GSA_kwCzR0hTQS1jeGd2LXB4MzctNG1wMs4AA-Yf",
    "GhsaId": "GHSA-cxgv-px37-4mp2",
    "References": [
      {
        "Url": "https://github.com/nuxt/icon/security/advisories/GHSA-cxgv-px37-4mp2"
      },
      {
        "Url": "https://github.com/nuxt/icon/commit/4564518c2b2ed8235a7715056ccdfce96ca3d0ff"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-42352"
      },
      {
        "Url": "https://github.com/advisories/GHSA-cxgv-px37-4mp2"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-cxgv-px37-4mp2"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-42352"
      }
    ],
    "Description": "### Summary\n`nuxt/icon` provides an API to allow client side icon lookup. This endpoint is at `/api/_nuxt_icon/[name]`.\n\nThe proxied request path is improperly parsed, allowing an attacker to change the scheme and host of the request. This leads to SSRF, and could potentially lead to sensitive data exposure.\n\n### Details\nThe `new URL` constructor is used to parse the final path. This constructor can be passed a relative scheme or path in order to change the host the request is sent to. This constructor is also very tolerant of poorly formatted URLs.\n\nAs a result we can pass a path prefixed with the string `http:`. This has the effect of changing the scheme to HTTP. We can then subsequently pass a new host, for example `http:127.0.0.1:8080`. This would allow us to send requests to a local server. \n\n### PoC\nMake a request to `/api/_nuxt_icon/http:example.com`, observe the data returned has been fetched from a different resource than intended. \n\nI typically try to find an example within Nuxt infrastructure that is vulnerable to these types of bugs, but I could not identify any with this endpoint enabled.\n\n### Impact\n+ SSRF, potential sensitive data exposure.\n+ I do not believe this can be chained into an XSS, but it may be possible.\n+ Does not have a security impact on services deployed on Cloudflare Workers.\n+ Does not impact certain builds and modes (like static builds).\n+ Can be mitigated using by disabling the `fallbackToApi` option.\n\n### Fix\n+ Ensure the host has not been changed after the path is parsed.\n+ Alternatively, prefix the path with `./`.\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-08-05T19:49:55Z",
    "Severity": "HIGH",
    "Summary": "Nuxt Icon affected by a Server-Side Request Forgery (SSRF)",
    "UpdatedAt": "2024-08-06T14:41:55Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 8.6,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:N/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.4.5"
      },
      "VulnerableVersionRange": "\u003c= 1.4.4"
    }
  ]
}