{
  "Severity": "CRITICAL",
  "UpdatedAt": "2024-02-01T21:04:21Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "dset"
  },
  "Advisory": {
    "DatabaseId": 159804,
    "Id": "GSA_kwCzR0hTQS1xNHhjLTdjdzgtY2dmas4AAnA8",
    "GhsaId": "GHSA-q4xc-7cw8-cgfj",
    "References": [
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2020-28277"
      },
      {
        "Url": "https://github.com/lukeed/dset/blob/50a6ead172d1466a96035eff00f8eb465ccd050a/src/index.js#L6"
      },
      {
        "Url": "https://github.com/lukeed/dset/issues/11"
      },
      {
        "Url": "https://github.com/lukeed/dset/commit/2b9ec49e231107b1a83b04a1bc1a66a8d14cea1c"
      },
      {
        "Url": "https://web.archive.org/web/20210104204657/https://www.whitesourcesoftware.com/vulnerability-database/CVE-2020-28277"
      },
      {
        "Url": "https://github.com/advisories/GHSA-q4xc-7cw8-cgfj"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-q4xc-7cw8-cgfj"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2020-28277"
      }
    ],
    "Description": "### Overview\nPrototype pollution vulnerability in 'dset' versions 1.0.0 through 2.0.1 allows attacker to cause a denial of service and may lead to remote code execution.\n\n### Details\nThe NPM module 'dset' can be abused by Prototype Pollution vulnerability since the function â€˜export ()' did not check for the type of object before assigning value to the property. Due to this flaw an attacker could create a non-existent property or able to manipulate the property which leads to Denial of Service or potentially Remote code execution.\n\n### PoC\nThe export function accepts three arguments `obj, keys, val`. Due to the absence of validation, at values passed into `keys, val` arguments, an attacker can supply a malicious value by adjusting the `keys` value to include the `__proto__` property. Since there is no validation before assigning property to check whether the assigned `keys` is the Object's own property or not, the property `isAdmin` will be directly be assigned to the empty obj({}) thereby polluting the Object prototype. Later in the code, if there is a check to validate `isAdmin` the valued would be substituted as \"true\" as it had been polluted.\n\n```js\nconst dset = require('dset');\nvar obj = {}\nconsole.log(\"Before : \" + obj.isAdmin);\ndset(obj, '__proto__.polluted', true);\nconsole.log(\"After : \" + obj.polluted);\n```\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2022-05-24T17:37:26Z",
    "Severity": "CRITICAL",
    "Summary": "dset vulnerable to prototype pollution",
    "UpdatedAt": "2024-02-01T21:04:21Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 9.8,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "2.0.1"
      },
      "VulnerableVersionRange": "\u003e= 1.0.0, \u003c 2.0.1"
    }
  ]
}