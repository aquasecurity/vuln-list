{
  "Severity": "MODERATE",
  "UpdatedAt": "2024-05-13T19:59:40Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "directus"
  },
  "Advisory": {
    "DatabaseId": 245295,
    "Id": "GSA_kwCzR0hTQS1nNjVoLTM1ZjMteDJ3M84AA74v",
    "GhsaId": "GHSA-g65h-35f3-x2w3",
    "References": [
      {
        "Url": "https://github.com/directus/directus/security/advisories/GHSA-g65h-35f3-x2w3"
      },
      {
        "Url": "https://github.com/directus/directus/commit/a6172f8a6a0f31a6bf4305a090de172ebfb63bcf"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-34709"
      },
      {
        "Url": "https://github.com/advisories/GHSA-g65h-35f3-x2w3"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-g65h-35f3-x2w3"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-34709"
      }
    ],
    "Description": "### Summary\nCurrently session tokens function like the other JWT tokens where they are not actually invalidated when logging out. The `directus_session` gets destroyed and the cookie gets deleted but if you captured the cookie value it will still work for the entire expiry time which is set to 1 day by default. Making it effectively a long lived unrevokable stateless token instead of the stateful session token it was meant to be.\nWhen authenticating a session token JWT, Directus should also check whether the associated `directus_session` both still exists and has not expired (although the token should expire at the same time or before the session) to ensure leaked tokens are not valid indefinitely.\n\n## Steps to reproduce\n- Copy the current session token from the cookie\n- Refresh and or log out\n- Use the saved session token to check if it is still valid\n\n### Impact\nThe lack of proper session expiration may improve the likely success of certain attacks. For example, a user might access a web site from a shared computer (such as at a library, Internet cafe, or open work environment). Incorrect token invalidation could allow an attacker to use the browser's history to access a Directus instance session previously accessed by the victim.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-05-13T19:59:39Z",
    "Severity": "MODERATE",
    "Summary": "Directus Lacks Session Tokens Invalidation",
    "UpdatedAt": "2024-05-14T20:04:31Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 5.4,
      "VectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:H/I:L/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "10.11.0"
      },
      "VulnerableVersionRange": "\u003e= 10.10.0, \u003c 10.11.0"
    }
  ]
}