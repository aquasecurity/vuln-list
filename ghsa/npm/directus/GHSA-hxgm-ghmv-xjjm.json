{
  "Severity": "HIGH",
  "UpdatedAt": "2024-07-08T18:37:54Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "directus"
  },
  "Advisory": {
    "DatabaseId": 252446,
    "Id": "GSA_kwCzR0hTQS1oeGdtLWdobXYteGpqbc4AA9oe",
    "GhsaId": "GHSA-hxgm-ghmv-xjjm",
    "References": [
      {
        "Url": "https://github.com/directus/directus/security/advisories/GHSA-hxgm-ghmv-xjjm"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2024-39701"
      },
      {
        "Url": "https://github.com/advisories/GHSA-hxgm-ghmv-xjjm"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-hxgm-ghmv-xjjm"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2024-39701"
      }
    ],
    "Description": "### Summary\nDirectus \u003e=9.23.0, \u003c=v10.5.3 improperly handles _in, _nin operators.\nIt evaluates empty arrays as valid so expressions like {\"role\": {\"_in\": $CURRENT_USER.some_field}} would evaluate to true allowing the request to pass.\n\n### Details\nThis results in Broken Access Control because the rule fails to do what it was intended to do: Pass rule if **field** matches any of the **values**. ref: https://docs.directus.io/reference/filter-rules.html#filter-operators\nIn my example this would translate to \"Pass rule if **\u003ccollection\u003e.role** matches any of **[]**\". Which should fail. This instead passes in Directus \u003c= v10.5.3, \u003e=v9.23.0\n\n### PoC\n{\"role\": {\"_in\": $CURRENT_USER.some_field}} field validation would pass if $CURRENT_USER.some_field is null.\n\nReal scenario: Using https://github.com/u12206050/directus-extension-role-chooser with the specified versions of Directus (I tested on 10.0.0) allows users with access to this feature set their role to whatever role if they don't have any roles assigned (user_roles.role is left with the default value, null) despite the validation rule being \n```yaml\nvalidation:\n    role:\n      _in: $CURRENT_USER.user_roles.role\n```\nLatest version of Directus (v10.8.3 and above) handles the above validation rule correctly.\n\n### Impact\nPermissions fail to open for setups relying on this filter and can lead to users getting access to things they're not supposed to.\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2024-07-08T18:37:54Z",
    "Severity": "HIGH",
    "Summary": "Directus incorrectly handles `_in` filter",
    "UpdatedAt": "2024-11-18T16:26:50Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 6.3,
      "VectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "10.6.0"
      },
      "VulnerableVersionRange": "\u003e= 9.23.0, \u003c= 10.5.3"
    }
  ]
}