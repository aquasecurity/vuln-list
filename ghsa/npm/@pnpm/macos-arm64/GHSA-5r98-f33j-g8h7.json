{
  "Severity": "HIGH",
  "UpdatedAt": "2023-08-01T17:00:56Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "@pnpm/macos-arm64"
  },
  "Advisory": {
    "DatabaseId": 217023,
    "Id": "GSA_kwCzR0hTQS01cjk4LWYzM2otZzhoN84AA0-_",
    "GhsaId": "GHSA-5r98-f33j-g8h7",
    "References": [
      {
        "Url": "https://github.com/pnpm/pnpm/security/advisories/GHSA-5r98-f33j-g8h7"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2023-37478"
      },
      {
        "Url": "https://github.com/pnpm/pnpm/releases/tag/v7.33.4"
      },
      {
        "Url": "https://github.com/pnpm/pnpm/releases/tag/v8.6.8"
      },
      {
        "Url": "https://github.com/advisories/GHSA-5r98-f33j-g8h7"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-5r98-f33j-g8h7"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2023-37478"
      }
    ],
    "Description": "### Summary\nIt is possible to construct a tarball that, when installed via npm or parsed by the registry is safe, but when installed via pnpm is malicious, due to how pnpm parses tar archives.\n\n### Details\nThe TAR format is an append-only archive format, and as such, the specification for how to update a file is to add a new record to the end with the updated version of the file. This means that it is completely valid for an archive to contain multiple copies of, say, `package.json`, and the expected behavior when extracting is that all versions other than the last get ignored.\n\nThis is further complicated by that during tarball extraction, all package managers are configured to drop the first path component, so collisions can be created simply by using multiple root folders in the archive, even without performing updates.\n\nWhen pnpm extracts a tar archive via tar-stream, it appears to extract only the _first_ file of a given name and discards all subsequent files with the same name.\n\n### PoC\nCreate a root folder with the following layout:\n- `a/package.json`\n- `package/package.json`\n- `z/package.json`\n\nFile contents:\n#### a/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^15\"\n    }\n}\n```\n#### package/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is a bad version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^16\"\n    }\n}\n```\n#### z/package.json\n```json\n{\n    \"name\": \"test-package\",\n    \"version\": \"0.1.0\",\n    \"description\": \"This is the good version of a test package\",\n    \"dependencies\": {\n        \"react\": \"^17\"\n    }\n}\n```\n\nThen use the tar binary to produce a tarball (working directory is the root folder):\n`tar -c -z --format ustar -f package.tgz a package z`\nThe order of the folders at the end matters; whichever one is last will end up being the package.json that wins when extracted by npm; the one that is first will be the one that wins when extracted by pnpm.\n\nInstall the tarball via the `file:` protocol.\n\nObserve that with npm, the lockfile has `react@17`, while with pnpm it has `react@15`.\n\n### Impact\nThis can result in a package that appears safe on the npm registry or when installed via npm being replaced with a compromised or malicious version when installed via pnpm.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2023-08-01T17:00:55Z",
    "Severity": "HIGH",
    "Summary": "pnpm incorrectly parses tar archives relative to specification",
    "UpdatedAt": "2023-11-11T05:04:04Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 7.5,
      "VectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "8.6.8"
      },
      "VulnerableVersionRange": "\u003e= 8.0.0, \u003c 8.6.8"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "7.33.4"
      },
      "VulnerableVersionRange": "\u003c 7.33.4"
    }
  ]
}