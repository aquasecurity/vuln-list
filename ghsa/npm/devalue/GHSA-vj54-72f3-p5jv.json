{
  "Severity": "HIGH",
  "UpdatedAt": "2025-08-26T22:33:17Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "devalue"
  },
  "Advisory": {
    "DatabaseId": 309046,
    "Id": "GSA_kwCzR0hTQS12ajU0LTcyZjMtcDVqds4ABLc2",
    "GhsaId": "GHSA-vj54-72f3-p5jv",
    "References": [
      {
        "Url": "https://github.com/sveltejs/devalue/security/advisories/GHSA-vj54-72f3-p5jv"
      },
      {
        "Url": "https://github.com/sveltejs/devalue/commit/0623a47c9555b639c03ff1baea82951b2d9d1132"
      },
      {
        "Url": "https://github.com/advisories/GHSA-vj54-72f3-p5jv"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-vj54-72f3-p5jv"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-57820"
      }
    ],
    "Description": "## 1. `devalue.parse` allows `__proto__` to be set\n\nA string passed to `devalue.parse` could represent an object with a `__proto__` property, which would assign a prototype to an object while allowing properties to be overwritten:\n\n```js\nclass Vector {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  get magnitude() {\n    return (this.x ** 2 + this.y ** 2) ** 0.5;\n  }\n}\n\nconst payload = `[{\"x\":1,\"y\":2,\"magnitude\":3,\"__proto__\":4},3,4,\"nope\",[\"Vector\",5],[6,7],8,9]`;\n\nconst vector = devalue.parse(payload, {\n  Vector: ([x, y]) =\u003e new Vector(x, y)\n});\n\nconsole.log(\"Is vector\", vector instanceof Vector); // true\nconsole.log(vector.x) // 3\nconsole.log(vector.y) // 4\nconsole.log(vector.magnitude); // \"nope\" instead of 5\n```\n\n## 2. `devalue.parse` allows array prototype methods to be assigned to object\n\nIn a payload constructed with `devalue.stringify`, values are represented as array indices, where the array contains the 'hydrated' values:\n\n```js\ndevalue.stringify({ message: 'hello' }); // [{\"message\":1},\"hello\"]\n```\n\n`devalue.parse` does not check that an index is numeric, which means that it could assign an array prototype method to a property instead:\n\n```js\nconst object = devalue.parse('[{\"toString\":\"push\"}]');\nobject.toString(); // 0\n```\n\nThis could be used by a creative attacker to bypass server-side validation.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-08-26T22:33:14Z",
    "Severity": "HIGH",
    "Summary": "devalue prototype pollution vulnerability",
    "UpdatedAt": "2025-08-26T22:33:17Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "5.3.2"
      },
      "VulnerableVersionRange": "\u003c 5.3.2"
    }
  ]
}