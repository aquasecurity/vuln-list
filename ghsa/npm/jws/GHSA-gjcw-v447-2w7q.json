{
  "Severity": "HIGH",
  "UpdatedAt": "2020-08-31T18:10:26Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "jws"
  },
  "Advisory": {
    "DatabaseId": 2348,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWdqY3ctdjQ0Ny0ydzdx",
    "GhsaId": "GHSA-gjcw-v447-2w7q",
    "References": [
      {
        "Url": "https://github.com/brianloveswords/node-jws/commit/585d0e1e97b6747c10cf5b7689ccc5618a89b299#diff-4ac32a78649ca5bdd8e0ba38b7006a1e"
      },
      {
        "Url": "https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/"
      },
      {
        "Url": "https://www.npmjs.com/advisories/88"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2016-1000223"
      },
      {
        "Url": "https://snyk.io/vuln/npm:jws:20160726"
      },
      {
        "Url": "https://github.com/advisories/GHSA-gjcw-v447-2w7q"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-gjcw-v447-2w7q"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2016-1000223"
      }
    ],
    "Description": "Affected versions of the `jws` package allow users to select what algorithm the server will use to verify a provided JWT. A malicious actor can use this behaviour to arbitrarily modify the contents of a JWT while still passing verification. For the common use case of the JWT as a bearer token, the end result is a complete authentication bypass with minimal effort.\n\n\n\n\n## Recommendation\n\nUpdate to version 3.0.0 or later.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2020-09-01T15:23:18Z",
    "Severity": "HIGH",
    "Summary": "Forgeable Public/Private Tokens in jws",
    "UpdatedAt": "2023-01-09T05:03:42Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 8.7,
      "VectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "3.0.0"
      },
      "VulnerableVersionRange": "\u003c 3.0.0"
    }
  ]
}