{
  "Severity": "CRITICAL",
  "UpdatedAt": "2020-08-31T18:34:00Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "flatmap-stream"
  },
  "Advisory": {
    "DatabaseId": 2515,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTl4NjQtNXI3eC0ycTUz",
    "GhsaId": "GHSA-9x64-5r7x-2q53",
    "References": [
      {
        "Url": "https://github.com/dominictarr/event-stream/issues/116"
      },
      {
        "Url": "https://www.npmjs.com/advisories/737"
      },
      {
        "Url": "https://github.com/advisories/GHSA-9x64-5r7x-2q53"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-9x64-5r7x-2q53"
      }
    ],
    "Description": "Version 0.1.1 of `flatmap-stream` is considered malicious.\n\nThis module runs an encrypted payload targeting a very specific application, `copay` and because they shared the same description it would have likely worked for `copay-dash`.\n\nThe injected code:\n\n- Read in AES encrypted data from a file disguised as a test fixture\n- Grabbed the npm package description of the module that imported it, using an automatically set environment variable\n- Used the package description as a key to decrypt a chunk of data pulled in from the disguised file\n\nThe decrypted data was part of a module, which was then compiled in memory and executed.\n\nThis module performed the following actions:\n\n- Decrypted another chunk of data from the disguised file\n- Concatenated a small, commented prefix from the first decrypted chunk to the end of the second decrypted chunk\n- Performed minor decoding tasks to transform the concatenated block of code from invalid JS to valid JS (we believe this was done to evade detection by dynamic analysis tools)\n- Wrote this processed block of JS out to a file stored in a dependency that would be packaged by the build scripts: \n\nThe chunk of code that was written out was the actual malicious code, intended to be run on devices owned by the end users of Copay.\n\nThis code would do the following:\n\n- Detect the current environment: Mobile/Cordova/Electron\n- Check the Bitcoin and Bitcoin Cash balances on the victim's copay account\n- If the current balance was greater than 100 Bitcoin, or 1000 Bitcoin Cash:\n  - Harvest the victim's account data in full\n  - Harvest the victim's copay private keys\n  - Send the victim's account data/private keys off to a collection\n\n\n## Recommendation\n\nIf you find this module in your environment it's best to remove it. The malicious version of event-stream and flatmap-stream have been removed from the npm Registry.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2020-09-01T21:21:32Z",
    "Severity": "CRITICAL",
    "Summary": "Malicious Package in flatmap-stream",
    "UpdatedAt": "2023-01-09T05:03:54Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 9.8,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": ""
      },
      "VulnerableVersionRange": "= 0.1.1"
    }
  ]
}