{
  "Severity": "CRITICAL",
  "UpdatedAt": "2023-09-11T22:29:54Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "immer"
  },
  "Advisory": {
    "DatabaseId": 5516,
    "Id": "GSA_kwCzR0hTQS0zM2Y5LWo4MzktcmY4aM0VjA",
    "GhsaId": "GHSA-33f9-j839-rf8h",
    "References": [
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2021-23436"
      },
      {
        "Url": "https://github.com/immerjs/immer/commit/fa671e55ee9bd42ae08cc239102b665a23958237"
      },
      {
        "Url": "https://snyk.io/vuln/SNYK-JS-IMMER-1540542"
      },
      {
        "Url": "https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1579266"
      },
      {
        "Url": "https://github.com/advisories/GHSA-33f9-j839-rf8h"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-33f9-j839-rf8h"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2021-23436"
      }
    ],
    "Description": "This affects the package immer before 9.0.6. A type confusion vulnerability can lead to a bypass of CVE-2020-28477 when the user-provided keys used in the path parameter are arrays. In particular, this bypass is possible because the condition `(p === \"__proto__\" || p === \"constructor\")` in `applyPatches_` returns false if `p` is `['__proto__']` (or `['constructor']`). The `===` operator (strict equality operator) returns false if the operands have different type.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2021-09-02T17:17:37Z",
    "Severity": "CRITICAL",
    "Summary": "Prototype Pollution in immer",
    "UpdatedAt": "2023-09-11T22:29:54Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 9.8,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "9.0.6"
      },
      "VulnerableVersionRange": "\u003c 9.0.6"
    }
  ]
}