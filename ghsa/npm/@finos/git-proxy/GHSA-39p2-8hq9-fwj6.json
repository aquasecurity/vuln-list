{
  "Severity": "HIGH",
  "UpdatedAt": "2025-07-30T16:40:39Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "@finos/git-proxy"
  },
  "Advisory": {
    "DatabaseId": 305806,
    "Id": "GSA_kwCzR0hTQS0zOXAyLThocTktZndqNs4ABKqO",
    "GhsaId": "GHSA-39p2-8hq9-fwj6",
    "References": [
      {
        "Url": "https://github.com/finos/git-proxy/security/advisories/GHSA-39p2-8hq9-fwj6"
      },
      {
        "Url": "https://github.com/finos/git-proxy/commit/a620a2f33c39c78e01783a274580bf822af3cc3a"
      },
      {
        "Url": "https://github.com/finos/git-proxy/commit/f99fe42082eab0970e4cd0acdc3421a527a7e531"
      },
      {
        "Url": "https://github.com/finos/git-proxy/releases/tag/v1.19.2"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-54585"
      },
      {
        "Url": "https://github.com/advisories/GHSA-39p2-8hq9-fwj6"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-39p2-8hq9-fwj6"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-54585"
      }
    ],
    "Description": "### Summary\nAn attacker can exploit the way GitProxy handles new branch creation to bypass the approval of prior commits on the parent branch.\n\nBecause it can greatly affect system integrity, we classify this as a High impact vulnerability.\n\n### Details\nGitProxy checks for the `0000000000000000000000000000000000000000` hash to detect new branches. This is used to process the commit accordingly in both `getDiff.ts` and `parsePush.ts`. However, the logic can be exploited as follows:\n\n1. Make a commit in branch `a` (could be `main`)\n2. Make a new branch `b` from that commit\n3. Make a new commit in `b`, then approve it/get it approved\n4. Go back to `a`, and attempt to push this commit to the proxy\n\nThe unapproved commit from `a` will be pushed to the remote.\n\n### PoC\nTo reproduce this vulnerability:\n\n1. Clone the target repository and make an unapproved commit on a mainline branch (e.g. main):\n\n```bash\ngit checkout -b a origin/main\necho \"DEBUG=true\" \u003e config.env\ngit add config.env\ngit commit -m \"Sensitive debug config\"\ngit push proxy a\n```\n\n2. Without approving/getting the commit approved on branch `a`, create a new branch `b` based on it:\n\n```bash\ngit checkout -b b\necho \"feature x implemented\" \u003e feature.txt\ngit add feature.txt\ngit commit -m \"Feature implementation\"\ngit push proxy b\n```\n\n3. Approve/get approval for the push to branch `b`.\n\n4. Now attempt to push the original unapproved commit from branch `a`:\n\n```bash\ngit checkout a\ngit push proxy a\n```\n\nPrior to `1.19.2`, this results in unapproved commits from `a` getting pushed without any policy checks or explicit approval.\n\nFrom `1.19.2` onwards, this flow will allow pushing all commits to branch `b` (and explicit approval will be asked for the changes on `b` only). However, commits on branch `a` now require approval on push. If merging branch `b` into `a`, this also requires explicit approval of the (previously unapproved) commits originating from `a` to prevent loopholes.\n\n### Impact\nThe vulnerability impacts all users or organizations relying on GitProxy to enforce policy and prevent unapproved changes. It requires no elevated privileges beyond regular push access, and no extra user interaction. It does however, require a GitProxy administrator or designated user (`canUserApproveRejectPush`) to approve pushes to the child branch.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-07-30T16:40:35Z",
    "Severity": "HIGH",
    "Summary": "GitProxy New Branch Approval Exploit",
    "UpdatedAt": "2025-08-13T23:21:42Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.19.2"
      },
      "VulnerableVersionRange": "\u003c= 1.19.1"
    }
  ]
}