{
  "Severity": "HIGH",
  "UpdatedAt": "2025-07-30T16:34:51Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "@finos/git-proxy"
  },
  "Advisory": {
    "DatabaseId": 305805,
    "Id": "GSA_kwCzR0hTQS1xcjkzLTh3d2YtMjJnNM4ABKqN",
    "GhsaId": "GHSA-qr93-8wwf-22g4",
    "References": [
      {
        "Url": "https://github.com/finos/git-proxy/security/advisories/GHSA-qr93-8wwf-22g4"
      },
      {
        "Url": "https://github.com/finos/git-proxy/commit/a620a2f33c39c78e01783a274580bf822af3cc3a"
      },
      {
        "Url": "https://github.com/finos/git-proxy/commit/bd2ecb2099cba21bca3941ee4d655d2eb887b3a9"
      },
      {
        "Url": "https://github.com/finos/git-proxy/releases/tag/v1.19.2"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-54583"
      },
      {
        "Url": "https://github.com/advisories/GHSA-qr93-8wwf-22g4"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-qr93-8wwf-22g4"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-54583"
      }
    ],
    "Description": "### Summary\nThis vulnerability allows a user to push to the remote repository while bypassing policies and explicit approval. Since checks and plugins are skipped, code containing secrets or unwanted changes could be pushed into a repository.\n\nBecause it can allow policy violations to go undetected, we classify this as a High impact vulnerability.\n\n### Details\nThe source of the vulnerability is the push parser action `parsePush.ts`. It reads the first branch and parses it, while ignoring subsequent branches (silently letting them go through).\n\nAlthough the fix involves multiple improvements to the commit and push parsing logic, the core solution is to prevent multiple branch pushes from going through in the first place:\n\n```ts\nif (refUpdates.length !== 1) {\n  step.log('Invalid number of branch updates.');\n  step.log(`Expected 1, but got ${refUpdates.length}`);\n  step.setError('Your push has been blocked. Please make sure you are pushing to a single branch.');\n  action.addStep(step);\n  return action;\n}\n```\n\n### PoC\n\n1. Make a commit on a branch:\n\n```bash\ngit checkout -b safe-branch\necho \"Approved code\" \u003e file.txt\ngit add .\ngit commit -m \"Approved code\"\ngit push proxy safe-branch\n```\n\n2. Wait for approval of `safe-branch`.\n\n3. Make a commit on a separate branch with a secret, for example:\n\n```bash\ngit checkout -b bad-branch\necho \"SECRET=abc123\" \u003e .env\ngit add .\ngit commit -m \"Bad code\"\n```\n\n4. Push both at the same time:\n\n`git push proxy safe-branch bad-branch`\n\n#### Expected Result\nIdeally, this would force checks to run for the second branch while sending it out for approval. Meanwhile, the first branch would be pushed to the remote. A simpler solution is to simply prevent multiple branch pushes.\n\n#### Actual Result\nBoth branches get pushed to the remote, and second branch bypasses the proxy.\n\n### Impact\nAttackers with push access can bypass review policies, potentially inserting unwanted/malicious code into a GitProxy-protected repository.\n\nThe vulnerability impacts all users or organizations relying on GitProxy to enforce policies and prevent unapproved changes. It requires no elevated privileges beyond regular push access, and no extra user interaction. It does however, require a GitProxy administrator or designated user (`canUserApproveRejectPush`) to approve the first push. It is much more likely that a well-meaning user would trigger this accidentally.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-07-30T16:34:50Z",
    "Severity": "HIGH",
    "Summary": "GitProxy Approval Bypass When Pushing Multiple Branches",
    "UpdatedAt": "2025-08-01T07:39:30Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.19.2"
      },
      "VulnerableVersionRange": "\u003c= 1.19.1"
    }
  ]
}