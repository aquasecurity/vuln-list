{
  "Severity": "MODERATE",
  "UpdatedAt": "2025-08-26T18:42:38Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "@escape.tech/graphql-armor-max-depth"
  },
  "Advisory": {
    "DatabaseId": 309022,
    "Id": "GSA_kwCzR0hTQS1obWZyLXJ4NDYtNGp4Ms4ABLce",
    "GhsaId": "GHSA-hmfr-rx46-4jx2",
    "References": [
      {
        "Url": "https://github.com/Escape-Technologies/graphql-armor/security/advisories/GHSA-hmfr-rx46-4jx2"
      },
      {
        "Url": "https://github.com/Escape-Technologies/graphql-armor/pull/823"
      },
      {
        "Url": "https://github.com/Escape-Technologies/graphql-armor/commit/1f923bc09f5f053f60b6ba2bd419d4b94cbe1db3"
      },
      {
        "Url": "https://github.com/advisories/GHSA-hmfr-rx46-4jx2"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-hmfr-rx46-4jx2"
      }
    ],
    "Description": "### Summary\nA query depth restriction using the `max-depth` property can be bypassed if `ignoreIntrospection` is enabled (which is the default configuration) by naming your query/fragment `__schema`.\n\n### Details\nAt the start of the `countDepth` function, we have the following check for the `ignoreIntrospection` option:\n\n```typescript\n    if (this.config.ignoreIntrospection \u0026\u0026 'name' in node \u0026\u0026 node.name?.value === '__schema') {\n        return 0;\n    }\n```\n\nHowever, the `node` can be one of: `FieldNode`, `FragmentDefinitionNode`, `InlineFragmentNode`, `OperationDefinitionNode`, `FragmentSpreadNode`.\n\nFor example, consider sending the following query:\n\n```graphql\nquery hello {\n  books {\n    title\n  }\n}\n```\n\nThis would create an `OperationDefinitionNode` where `node.name.value == 'hello'`\n\nThe proper way to handle this is to check explicitly for the `__schema` field, which corresponds to a `FieldNode`.\n\nThe fix is\n\n```typescript\n    if (\n      this.config.ignoreIntrospection \u0026\u0026\n      'name' in node \u0026\u0026\n      node.name?.value === '__schema' \u0026\u0026\n      node.kind === Kind.FIELD\n    ) {\n      return 0;\n    }\n```\n\nThis ensures that the node is explicitly a `FieldNode`.\n\n### PoC\n\nMax depth: `6`\n\n```graphql\nquery {\n  books {\n    author {\n      books {\n        author {\n          ...__schema\n        }\n      }\n    }\n  }\n}\nfragment __schema on Author {\n  books {\n    title\n  }\n}\n```\n\n### Impact\n\nThis issue affects applications using the GraphQL Armor Depth Limit plugin with `ignoreIntrospection` enabled.\n\n### Fix\n\nThis is fixed in [PR#823](https://github.com/Escape-Technologies/graphql-armor/pull/823)",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-08-26T18:42:37Z",
    "Severity": "MODERATE",
    "Summary": "GraphQL Armor Max-Depth Plugin Bypass via Introspection Query Obfuscation",
    "UpdatedAt": "2025-08-26T18:42:38Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 5.3,
      "VectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "2.4.2"
      },
      "VulnerableVersionRange": "\u003c= 2.4.1"
    }
  ]
}