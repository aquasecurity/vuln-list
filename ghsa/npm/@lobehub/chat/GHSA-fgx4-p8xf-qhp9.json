{
  "Severity": "LOW",
  "UpdatedAt": "2025-10-17T17:46:10Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "@lobehub/chat"
  },
  "Advisory": {
    "DatabaseId": 317496,
    "Id": "GSA_kwCzR0hTQS1mZ3g0LXA4eGYtcWhwOc4ABNg4",
    "GhsaId": "GHSA-fgx4-p8xf-qhp9",
    "References": [
      {
        "Url": "https://github.com/lobehub/lobe-chat/security/advisories/GHSA-fgx4-p8xf-qhp9"
      },
      {
        "Url": "https://github.com/lobehub/lobe-chat/commit/8d59583dca16f218b99213d641733d8ba77f182c"
      },
      {
        "Url": "https://github.com/lobehub/lobe-chat/blob/d942a635b36a231156c60d824afa573af8032572/packages/web-crawler/src/crawImpl/naive.ts#L39-L45"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-62505"
      },
      {
        "Url": "https://github.com/advisories/GHSA-fgx4-p8xf-qhp9"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-fgx4-p8xf-qhp9"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-62505"
      }
    ],
    "Description": "### Vulnerability Description\n---\n\nVulnerability Overview\n \n- When the client sends an arbitrary URL array and impl: [\"naive\"] to the tRPC endpoint tools.search.crawlPages, the server issues outbound HTTP requests directly to those URLs. There is no defensive logic that restricts or validates requests to internal networks (127.0.0.1, localhost, private ranges) or metadata endpoints (169.254.169.254).\n\n- Flow: client input (urls, impls) → service invocation in the tRPC router → the service passes the URLs to Crawler.crawl → the Crawler prioritizes the user-specified impls (naive) → the naive implementation performs a server-side fetch(url) as-is (SSRF) → the server collects responses from internal resources.\n\n- In the dev environment, authentication can be bypassed using the lobe-auth-dev-backend-api: 1 header (production requires a valid token). In the PoC, this was used to successfully retrieve the internal API at localhost:8889 from the server side.\n\nVulnerable Code\n \n\nhttps://github.com/lobehub/lobe-chat/blob/d942a635b36a231156c60d824afa573af8032572/packages/web-crawler/src/crawImpl/naive.ts#L39-L45\n\n\n### PoC\n---\n\nPoC Description\n\n- In dev mode, we made a single tRPC call using the auth-bypass header lobe-auth-dev-backend-api: 1. Since tRPC requires the body to be in the form {\"json\": { ... }}, we placed urls and impls: [\"naive\"] inside json to induce the server to request the internal URL (http://localhost:8889/internel-api).\n\n- The response follows tRPC’s wrapping structure, so the actual body of the internal API is included as a string (JSON string) at result.data.json.results[0].data.content. We post-process it with jq for readability.\n\ncurl Example \n\n```bash\ncurl -sS -X POST 'http://localhost:3010/trpc/tools/search.crawlPages' \\\n  -H 'Content-Type: application/json' \\\n  -H 'lobe-auth-dev-backend-api: 1' \\\n  --data '{\"json\":{\"urls\":[\"http://localhost:8889/internal-api\"],\"impls\":[\"naive\"]}}' | jq -r '.result.data.json.results[0].data.content' | jq .\n```\n\u003cimg width=\"1916\" height=\"851\" alt=\"poc\" src=\"https://github.com/user-attachments/assets/f3ad34da-f8ac-4e29-9360-3cf1d1f706d8\" /\u003e\n\n\n### Impact\n---\n\n- Since the server performs outbound requests to internal networks, localhost, and metadata endpoints, an attacker can abuse the server’s network position to access internal resources (internal APIs, management ports, cloud metadata, etc.).\n\n- As a result, this can lead to exposure of internal system information, leakage of authentication tokens/secret keys (e.g., IMDSv1/v2), misuse of internal admin interfaces, and provide a foothold for further lateral movement.\n\n- By leveraging user-supplied impls to force the unfiltered naive implementation, SSRF defenses—such as blocking private/metadata IPs, DNS re-validation/re-resolution, and redirect restrictions—can be bypassed.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-10-17T17:46:09Z",
    "Severity": "LOW",
    "Summary": "Lobe Chat vulnerable to Server-Side Request Forgery with native web fetch module",
    "UpdatedAt": "2025-10-17T21:32:50Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 3,
      "VectorString": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:C/C:L/I:N/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "1.136.2"
      },
      "VulnerableVersionRange": "\u003c= 1.136.1"
    }
  ]
}