{
  "Severity": "MODERATE",
  "UpdatedAt": "2025-08-19T15:40:32Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "astro"
  },
  "Advisory": {
    "DatabaseId": 308021,
    "Id": "GSA_kwCzR0hTQS14Zjh4LWo0cDItZjc0Oc4ABLM1",
    "GhsaId": "GHSA-xf8x-j4p2-f749",
    "References": [
      {
        "Url": "https://github.com/withastro/astro/security/advisories/GHSA-xf8x-j4p2-f749"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-55303"
      },
      {
        "Url": "https://github.com/withastro/astro/commit/4d16de7f95db5d1ec1ce88610d2a95e606e83820"
      },
      {
        "Url": "https://github.com/advisories/GHSA-xf8x-j4p2-f749"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-xf8x-j4p2-f749"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-55303"
      }
    ],
    "Description": "### Summary\n\nIn affected versions of `astro`, the image optimization endpoint in projects deployed with on-demand rendering allows images from unauthorized third-party domains to be served.\n\n### Details\n\nOn-demand rendered sites built with Astro include an `/_image` endpoint which returns optimized versions of images.\n\nThe `/_image` endpoint is restricted to processing local images bundled with the site and also supports remote images from domains the site developer has manually authorized (using the [`image.domains`](https://docs.astro.build/en/reference/configuration-reference/#imagedomains) or [`image.remotePatterns`](https://docs.astro.build/en/reference/configuration-reference/#imageremotepatterns) options).\n\nHowever, a bug in impacted versions of `astro` allows an attacker to bypass the third-party domain restrictions by using a protocol-relative URL as the image source, e.g. `/_image?href=//example.com/image.png`.\n\n### Proof of Concept\n\n1. Create a new minimal Astro project (`astro@5.13.0`).\n\n2. Configure it to use the Node adapter (`@astrojs/node@9.1.0` — newer versions are not impacted):\n\n   ```js\n   // astro.config.mjs\n   import { defineConfig } from 'astro/config';\n   import node from '@astrojs/node';\n\n   export default defineConfig({\n   \tadapter: node({ mode: 'standalone' }),\n   });\n   ```\n\n3. Build the site by running `astro build`.\n\n4. Run the server, e.g. with `astro preview`.\n\n5. Append `/_image?href=//placehold.co/600x400` to the preview URL, e.g. \u003chttp://localhost:4321/_image?href=//placehold.co/600x400\u003e\n\n6. The site will serve the image from the unauthorized `placehold.co` origin.\n\n### Impact\n\nAllows a non-authorized third-party to create URLs on an impacted site’s origin that serve unauthorized image content.\nIn the case of SVG images, this could include the risk of cross-site scripting (XSS) if a user followed a link to a maliciously crafted SVG.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-08-19T15:40:31Z",
    "Severity": "MODERATE",
    "Summary": "Astro allows unauthorized third-party images in _image endpoint",
    "UpdatedAt": "2025-08-19T21:41:48Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "4.16.19"
      },
      "VulnerableVersionRange": "\u003c= 4.16.18"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "5.13.2"
      },
      "VulnerableVersionRange": "\u003e= 5.0.0-alpha.0, \u003c= 5.13.0"
    }
  ]
}