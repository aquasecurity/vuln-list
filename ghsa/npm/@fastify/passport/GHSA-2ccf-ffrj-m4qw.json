{
  "Severity": "MODERATE",
  "UpdatedAt": "2023-04-21T22:32:50Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "@fastify/passport"
  },
  "Advisory": {
    "DatabaseId": 208574,
    "Id": "GSA_kwCzR0hTQS0yY2NmLWZmcmotbTRxd84AAy6-",
    "GhsaId": "GHSA-2ccf-ffrj-m4qw",
    "References": [
      {
        "Url": "https://github.com/fastify/fastify-passport/security/advisories/GHSA-2ccf-ffrj-m4qw"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2023-29020"
      },
      {
        "Url": "https://github.com/fastify/fastify-passport/commit/07c90feab9cba0dd4779e47cfb0717a7e2f01d3d"
      },
      {
        "Url": "https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#synchronizer-token-pattern"
      },
      {
        "Url": "https://owasp.org/www-community/attacks/csrf"
      },
      {
        "Url": "https://github.com/advisories/GHSA-2ccf-ffrj-m4qw"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-2ccf-ffrj-m4qw"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2023-29020"
      }
    ],
    "Description": "The [CSRF](https://owasp.org/www-community/attacks/csrf) protection enforced by the `@fastify/csrf-protection` library, when combined with `@fastify/passport`, can be bypassed by network and same-site attackers.\n\n## Details\n`fastify/csrf-protection` implements the [synchronizer token pattern](https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#synchronizer-token-pattern) (using plugins `@fastify/session` and `@fastify/secure-session`) by storing a random value used for CSRF token generation in the `_csrf` attribute of a user's session.\n\nThe `@fastify/passport` library does not clear the session object upon authentication, preserving the `_csrf` attribute between pre-login and authenticated sessions. Consequently, CSRF tokens generated before authentication are still valid. Network and [same-site attackers](https://canitakeyoursubdomain.name/) can thus obtain a CSRF token for their pre-session, fixate that pre-session in the victim's browser via cookie tossing, and then perform a CSRF attack after the victim authenticates.\n\n## Fix\nAs a solution, newer versions of `@fastify/passport` include the configuration options\n\n* `clearSessionOnLogin (default: true)` and\n* `clearSessionIgnoreFields (default: ['session'])`\n\nto clear all the session attributes by default, preserving those explicitly defined in `clearSessionIgnoreFields`.\n\n## Credits\n* Pedro Adão (@pedromigueladao), [Instituto Superior Técnico, University of Lisbon](https://tecnico.ulisboa.pt/)\n* Marco Squarcina (@lavish), [Security \u0026 Privacy Research Unit, TU Wien](https://secpriv.wien/)",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2023-04-21T22:32:47Z",
    "Severity": "MODERATE",
    "Summary": "CSRF token fixation in fastify-passport",
    "UpdatedAt": "2023-11-09T05:00:59Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 6.5,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "2.3.0"
      },
      "VulnerableVersionRange": "\u003e= 2.0.0, \u003c 2.3.0"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "1.1.0"
      },
      "VulnerableVersionRange": "\u003c 1.1.0"
    }
  ]
}