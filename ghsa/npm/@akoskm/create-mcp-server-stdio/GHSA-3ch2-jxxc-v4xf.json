{
  "Severity": "CRITICAL",
  "UpdatedAt": "2025-09-08T19:42:35Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "@akoskm/create-mcp-server-stdio"
  },
  "Advisory": {
    "DatabaseId": 310548,
    "Id": "GSA_kwCzR0hTQS0zY2gyLWp4eGMtdjR4Zs4ABL0U",
    "GhsaId": "GHSA-3ch2-jxxc-v4xf",
    "References": [
      {
        "Url": "https://github.com/akoskm/create-mcp-server-stdio/security/advisories/GHSA-3ch2-jxxc-v4xf"
      },
      {
        "Url": "https://github.com/akoskm/create-mcp-server-stdio/pull/1"
      },
      {
        "Url": "https://github.com/akoskm/create-mcp-server-stdio/commit/48c26bbe1f8c62764e4592f33c8300d1cadd2eac"
      },
      {
        "Url": "https://github.com/akoskm/create-mcp-server-stdio/blob/main/src/index.ts#L24-L40"
      },
      {
        "Url": "https://github.com/advisories/GHSA-3ch2-jxxc-v4xf"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-3ch2-jxxc-v4xf"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-54994"
      }
    ],
    "Description": "# Command Injection in MCP Server\n\nThe MCP Server at https://github.com/akoskm/create-mcp-server-stdio is written in a way that is vulnerable to command injection vulnerability attacks as part of some of its MCP Server tool definition and implementation.\n\n## Vulnerable tool\n\nThe MCP Server exposes the tool `which-app-on-port` which relies on Node.js child process API `exec` which is an unsafe and vulnerable API if concatenated with untrusted user input.\n\nVulnerable line of code: https://github.com/akoskm/create-mcp-server-stdio/blob/main/src/index.ts#L24-L40\n\n```js\nserver.tool(\"which-app-on-port\", { port: z.number() }, async ({ port }) =\u003e {\n  const result = await new Promise\u003cProcessInfo\u003e((resolve, reject) =\u003e {\n    exec(`lsof -t -i tcp:${port}`, (error, pidStdout) =\u003e {\n      if (error) {\n        reject(error);\n        return;\n      }\n      const pid = pidStdout.trim();\n      exec(`ps -p ${pid} -o comm=`, (error, stdout) =\u003e {\n        if (error) {\n          reject(error);\n          return;\n        }\n        resolve({ command: stdout.trim(), pid });\n      });\n    });\n  });\n```\n\n## Exploitation\n\nWhen LLMs are tricked through prompt injection (and other techniques and attack vectors) to call the tool with input that uses special shell characters such as `; rm -rf /tmp;#` (be careful actually executing this payload) and other payload variations, the full command-line text will be interepted by the shell and result in other commands except of `ps` executing on the host running the MCP Server.\n\nReference example from prior security research on this topic:\n\n![Cursor defined MCP Server vulnerable to command injection](https://res.cloudinary.com/snyk/image/upload/f_auto,w_2560,q_auto/v1747081395/Screenshot_2025-05-07_at_9.22.11_AM_d76kvm.png)\n\n## Impact\n\nUser initiated and remote command injection on a running MCP Server.\n\n## Recommendation\n\n- Don't use `exec`. Use `execFile` instead, which pins the command and provides the arguments as array elements.\n- If the user input is not a command-line flag, use the `--` notation to terminate command and command-line flag, and indicate that the text after the `--` double dash notation is benign value.\n\n## References and Prior work\n\n1. [Exploiting MCP Servers Vulnerable to Command Injection](https://snyk.io/articles/exploiting-mcp-servers-vulnerable-to-command-injection/)\n2. Liran's [Node.js Secure Coding: Defending Against Command Injection Vulnerabilities](https://www.nodejs-security.com/book/command-injection)\n\n##\n\nDisclosed by [Liran Tal](https://lirantal.com)",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-09-08T19:42:34Z",
    "Severity": "CRITICAL",
    "Summary": "@akoskm/create-mcp-server-stdio is vulnerable to MCP Server Command Injection through `exec` API",
    "UpdatedAt": "2025-09-08T19:42:35Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.0.13"
      },
      "VulnerableVersionRange": "\u003c 0.0.13"
    }
  ]
}