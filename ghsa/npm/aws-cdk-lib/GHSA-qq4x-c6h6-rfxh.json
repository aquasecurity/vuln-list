{
  "Severity": "MODERATE",
  "UpdatedAt": "2025-03-31T22:37:43Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "aws-cdk-lib"
  },
  "Advisory": {
    "DatabaseId": 287350,
    "Id": "GSA_kwCzR0hTQS1xcTR4LWM2aDYtcmZ4aM4ABGJ2",
    "GhsaId": "GHSA-qq4x-c6h6-rfxh",
    "References": [
      {
        "Url": "https://github.com/aws/aws-cdk/security/advisories/GHSA-qq4x-c6h6-rfxh"
      },
      {
        "Url": "https://github.com/aws/aws-cdk/commit/d02e64aac18a72195ddcdb973defea7f32382c33"
      },
      {
        "Url": "https://github.com/advisories/GHSA-qq4x-c6h6-rfxh"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-qq4x-c6h6-rfxh"
      }
    ],
    "Description": "### Summary\nThe [AWS Cloud Development Kit (CDK)](https://aws.amazon.com/cdk/) is an open-source framework for defining cloud infrastructure using code. Customers use it to create their own applications which are converted to AWS CloudFormation templates during deployment to a customer’s AWS account. CDK contains pre-built components called \"[constructs](https://docs.aws.amazon.com/cdk/v2/guide/constructs.html)\" that are higher-level abstractions providing defaults and best practices. This approach enables developers to use familiar programming languages to define complex cloud infrastructure more efficiently than writing raw CloudFormation templates.\n\nThe CDK [Cognito UserPool](https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_cognito.UserPool.html) construct deploys an AWS cognito user pool. An [Amazon Cognito user pool](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools.html) is a user directory for web and mobile app authentication and authorization. Customers can deploy a client under this user pool through construct ‘[UserPoolClient](https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_cognito.UserPoolClient.html)’ or through helper method '[addClient](https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_cognito.UserPool.html#addwbrclientid-options)'. A user pool client resource represents an Amazon [Cognito user pool client](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-client-apps.html) which is a configuration within a user pool that interacts with one mobile or web application authenticating with Amazon Cognito. \n\n\nWhen users of the 'cognito.UserPoolClient' construct generate a secret value for the application client in AWS CDK, they can then reference the generated secrets in their stack. The CDK had an issue where, when the custom resource performed an SDK API call to 'DescribeCognitoUserPoolClient' to retrieve the generated secret, the full response was logged in the associated lambda function's log group. Any user authenticated in the account where logs of the custom resource are accessible and who has read-only permission could view the secret written to those logs. \n\nThis issue does not affect customers who are generating the secret value outside of the CDK as the secret is not referenced or logged.\n\n### Impact\nTo leverage this issue, an actor has to be authenticated in the account where logs of the custom resource Custom::DescribeCognitoUserPoolClient are accessible and have read-only permission for lambda function logs. \n\nUsers can review access to their log group through AWS CloudTrail logs to detect any unexpected access to read the logs.\n\n**Impacted versions: \u003e2.37.0 and \u003c=2.187.0**\n\n### Patches\nThe patches are included in the AWS CDK Library release v2.187.0. We recommend upgrading to the latest version and ensuring any forked or derivative code is patched to incorporate the new fixes. To fully address this issue, users should rotate the secret by generating a new secret stored in AWS Secrets Manager. References to the secret will use the new secret on update. \n\nWhen new CDK applications using the latest version are initialized, they will use the new behavior with updated logging. \n\nExisting applications must upgrade to the latest version, change the [feature flag](https://github.com/aws/aws-cdk/blob/main/packages/aws-cdk-lib/cx-api/FEATURE_FLAGS.md) (@aws-cdk/cognito:logUserPoolClientSecretValue) to false, redeploy the application to apply this fix and use the new implementation with updated logging behavior.\n\n### Workarounds\nUsers can override the implementation changing Logging to be Logging.withDataHidden(). For example define class CustomUserPoolClient extends UserPoolClient and  in the new class define get userPoolClientSecret() to use Logging.withDataHidden().\n\n\n\nExample\n\n    export class CustomUserPoolClient extends UserPoolClient {\n\n      private readonly customUserPool : UserPool;\n      private readonly customuserPoolClientId : string;\n      constructor(scope: Construct, id: string, props: UserPoolClientProps) {\n        super(scope, id, props);\n\n        this.customUserPool = new UserPool(this, 'pool', {\n          removalPolicy: RemovalPolicy.DESTROY,\n        });\n\n        const client = this.customUserPool.addClient('client', { generateSecret: true });\n      }\n\n\n\n      // Override the userPoolClientSecret getter to always return the secret\n      public get userPoolClientSecret(): SecretValue {\n        // Create the Custom Resource that assists in resolving the User Pool Client secret\n        const secretValue = SecretValue.resourceAttribute(new AwsCustomResource(\n          this,\n          'DescribeCognitoUserPoolClient',\n          {\n        resourceType: 'Custom::DescribeCognitoUserPoolClient',\n        onUpdate: {\n          region: cdk.Stack.of(this).region,\n          service: 'CognitoIdentityServiceProvider',\n          action: 'describeUserPoolClient',\n          parameters: {\n            UserPoolId: this.customUserPool.userPoolId,\n            ClientId: this.customUserPool,\n          },\n          physicalResourceId: PhysicalResourceId.of(this.userPoolClientId),\n          // Disable logging of sensitive data\n          logging: Logging.withDataHidden(),\n        },\n        policy: AwsCustomResourcePolicy.fromSdkCalls({\n          resources: [this.customUserPool.userPoolArn],\n        }),\n        installLatestAwsSdk: false,\n          },\n        ).getResponseField('UserPoolClient.ClientSecret'));\n        \n        return secretValue;\n      }\n    }\n\n\n\n### References\nIf you have any questions or comments about this advisory please contact AWS/Amazon Security via our [vulnerability reporting page](https://aws.amazon.com/security/vulnerability-reporting) or directly via email to [aws-security@amazon.com](mailto:aws-security@amazon.com). Please do not create a public GitHub issue.",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2025-03-31T22:37:42Z",
    "Severity": "MODERATE",
    "Summary": "aws-cdk-lib has Insertion of Sensitive Information into Log File vulnerability when using Cognito UserPoolClient Construct",
    "UpdatedAt": "2025-03-31T22:37:43Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 6.5,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "2.187.0"
      },
      "VulnerableVersionRange": "\u003e= 2.37.0, \u003c 2.187.0"
    }
  ]
}