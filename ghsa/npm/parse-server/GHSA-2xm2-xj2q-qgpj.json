{
  "Severity": "MODERATE",
  "UpdatedAt": "2021-09-21T16:34:16Z",
  "Package": {
    "Ecosystem": "NPM",
    "Name": "parse-server"
  },
  "Advisory": {
    "DatabaseId": 3149,
    "Id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTJ4bTIteGoycS1xZ3Bq",
    "GhsaId": "GHSA-2xm2-xj2q-qgpj",
    "References": [
      {
        "Url": "https://github.com/parse-community/parse-server/security/advisories/GHSA-2xm2-xj2q-qgpj"
      },
      {
        "Url": "https://github.com/parse-community/parse-server/commit/78b59fb26b1c36e3cdbd42ba9fec025003267f58"
      },
      {
        "Url": "https://nvd.nist.gov/vuln/detail/CVE-2020-15270"
      },
      {
        "Url": "https://github.com/advisories/GHSA-2xm2-xj2q-qgpj"
      }
    ],
    "Identifiers": [
      {
        "Type": "GHSA",
        "Value": "GHSA-2xm2-xj2q-qgpj"
      },
      {
        "Type": "CVE",
        "Value": "CVE-2020-15270"
      }
    ],
    "Description": "Original Message:\nHi,\n\nI create objects with one client with an ACL of all users with a specific column value. Thats working so far.\n\nThen I deleted the session object from one user to look if he can receive subscription objects and he can receive them.\nThe client with the deleted session cant create new objects, which Parse restricts right.\n\nThe LiveQueryServer doesnt detect deleted sessions after the websocket connection was established.\nThere should be a mechanism that checks in an specific interval if the session exists.\nI dont know if its true with expired sessions.\n\nAny solutions?\n\nParse version: 4.3.0\nParse js SDK version: 2.17\n\nSolution:\nHi guys.\n\nI've found and fixed the problem. It happens because there are two caches in place for the session token:\n\n- at Parse Server level, which, according with the docs, should be changed via cacheTTL option and defaults to 5 seconds;\n- at Parse Live Query level, which, according with the docs, should be changed via liveQueryServerOptions.cacheTimeout and defaults to 30 days.\n\nBut there are three problems:\n\n- cacheTTL has currently no effect over Live Query Server;\n- cacheTimeout also has currently no effect over Live Query Server;\n- cacheTimeout actually defaults to 1h.\n\nSo, currently, if you wait 1 hour after the session token was invalidated, the clients using the old session token are not able to receive the events.\n\nWhat I did:\n\n- Added a test case for the problem;\n- Fixed cacheTTL for Live Query Server;\n- Fixed cacheTimeout for Live Query Server;\n- Changed the cacheTimeout to default 5s;\n- Changed the docs to reflect the actual 5s default for cacheTimeout.\n\n",
    "Origin": "UNSPECIFIED",
    "PublishedAt": "2020-10-27T19:15:19Z",
    "Severity": "MODERATE",
    "Summary": "receiving subscription objects with deleted session",
    "UpdatedAt": "2023-02-01T05:04:50Z",
    "WithdrawnAt": "",
    "CVSS": {
      "Score": 4.3,
      "VectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"
    }
  },
  "Versions": [
    {
      "FirstPatchedVersion": {
        "Identifier": "4.4.0"
      },
      "VulnerableVersionRange": "\u003c 4.4.0"
    }
  ]
}