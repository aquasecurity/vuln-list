{
  "PublicDateAtUSN": "0001-01-01T00:00:00Z",
  "CRD": "0001-01-01T00:00:00Z",
  "Candidate": "CVE-2020-6080",
  "PublicDate": "2020-03-24T21:15:00Z",
  "References": [
    "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-6080",
    "https://talosintelligence.com/vulnerability_reports/TALOS-2020-1002"
  ],
  "Description": "An exploitable denial-of-service vulnerability exists in the resource allocation handling of Videolabs libmicrodns 0.1.0. When encountering errors while parsing mDNS messages, some allocated data is not freed, possibly leading to a denial-of-service condition via resource exhaustion. An attacker can send one mDNS message repeatedly to trigger this vulnerability through the function rr_read_RR [5] reads the current resource record, except for the RDATA section. This is read by the loop at in rr_read. For each RR type, a different function is called. When the RR type is 0x10, the function rr_read_TXT is called at [6].",
  "UbuntuDescription": "",
  "Notes": null,
  "Bugs": null,
  "Priority": "medium",
  "DiscoveredBy": "",
  "AssignedTo": "",
  "Patches": {
    "libmicrodns": {
      "bionic": {
        "Status": "ignored",
        "Note": "end of standard support, was needs-triage"
      },
      "devel": {
        "Status": "DNE",
        "Note": ""
      },
      "eoan": {
        "Status": "ignored",
        "Note": "end of life"
      },
      "esm-apps/bionic": {
        "Status": "needs-triage",
        "Note": ""
      },
      "focal": {
        "Status": "DNE",
        "Note": ""
      },
      "groovy": {
        "Status": "DNE",
        "Note": ""
      },
      "hirsute": {
        "Status": "DNE",
        "Note": ""
      },
      "impish": {
        "Status": "DNE",
        "Note": ""
      },
      "jammy": {
        "Status": "DNE",
        "Note": ""
      },
      "kinetic": {
        "Status": "DNE",
        "Note": ""
      },
      "lunar": {
        "Status": "DNE",
        "Note": ""
      },
      "mantic": {
        "Status": "DNE",
        "Note": ""
      },
      "precise/esm": {
        "Status": "DNE",
        "Note": ""
      },
      "trusty": {
        "Status": "ignored",
        "Note": "end of standard support"
      },
      "trusty/esm": {
        "Status": "DNE",
        "Note": ""
      },
      "upstream": {
        "Status": "needs-triage",
        "Note": ""
      },
      "xenial": {
        "Status": "DNE",
        "Note": ""
      }
    },
    "vlc": {
      "bionic": {
        "Status": "ignored",
        "Note": "end of standard support, was needs-triage"
      },
      "devel": {
        "Status": "needs-triage",
        "Note": ""
      },
      "esm-apps/bionic": {
        "Status": "needs-triage",
        "Note": ""
      },
      "esm-apps/focal": {
        "Status": "needs-triage",
        "Note": ""
      },
      "esm-apps/jammy": {
        "Status": "needs-triage",
        "Note": ""
      },
      "esm-apps/xenial": {
        "Status": "needs-triage",
        "Note": ""
      },
      "focal": {
        "Status": "needs-triage",
        "Note": ""
      },
      "groovy": {
        "Status": "ignored",
        "Note": "end of life"
      },
      "hirsute": {
        "Status": "ignored",
        "Note": "end of life"
      },
      "impish": {
        "Status": "ignored",
        "Note": "end of life"
      },
      "jammy": {
        "Status": "needs-triage",
        "Note": ""
      },
      "kinetic": {
        "Status": "ignored",
        "Note": "end of life, was needs-triage"
      },
      "lunar": {
        "Status": "needs-triage",
        "Note": ""
      },
      "mantic": {
        "Status": "needs-triage",
        "Note": ""
      },
      "precise/esm": {
        "Status": "DNE",
        "Note": ""
      },
      "trusty": {
        "Status": "ignored",
        "Note": "end of standard support"
      },
      "upstream": {
        "Status": "needs-triage",
        "Note": ""
      },
      "xenial": {
        "Status": "ignored",
        "Note": "end of standard support, was needs-triage"
      }
    }
  },
  "UpstreamLinks": {}
}