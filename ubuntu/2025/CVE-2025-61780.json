{
  "PublicDateAtUSN": "0001-01-01T00:00:00Z",
  "CRD": "0001-01-01T00:00:00Z",
  "Candidate": "CVE-2025-61780",
  "PublicDate": "2025-10-13T00:00:00Z",
  "References": [
    "https://www.cve.org/CVERecord?id=CVE-2025-61780",
    "https://github.com/rack/rack/security/advisories/GHSA-r657-rxjc-j557",
    "https://github.com/rack/rack/commit/57277b7741581fa827472c5c666f6e6a33abd784 (v3.2.3)",
    "https://github.com/rack/rack/commit/7e69f65eefe9cd2868df9f9f3b0977b86f93523a (v3.1.18)",
    "https://github.com/rack/rack/commit/fba2c8bc63eb787ff4b19bc612d315fda6126d85 (v2.2.20)",
    "https://github.com/rack/rack/commit/57277b7741581fa827472c5c666f6e6a33abd784",
    "https://github.com/rack/rack/commit/7e69f65eefe9cd2868df9f9f3b0977b86f93523a",
    "https://github.com/rack/rack/commit/fba2c8bc63eb787ff4b19bc612d315fda6126d85"
  ],
  "Description": "Rack is a modular Ruby web server interface. Prior to versions 2.2.20, 3.1.18, and 3.2.3, a possible information disclosure vulnerability existed in `Rack::Sendfile` when running behind a proxy that supports `x-sendfile` headers (such as Nginx). Specially crafted headers could cause `Rack::Sendfile` to miscommunicate with the proxy and trigger unintended internal requests, potentially bypassing proxy-level access restrictions. When `Rack::Sendfile` received untrusted `x-sendfile-type` or `x-accel-mapping` headers from a client, it would interpret them as proxy configuration directives. This could cause the middleware to send a \"redirect\" response to the proxy, prompting it to reissue a new internal request that was not subject to the proxy's access controls. An attacker could exploit this by setting a crafted `x-sendfile-type: x-accel-redirect` header, setting a crafted `x-accel-mapping` header, and requesting a path that qualifies for proxy-based acceleration. Attackers could bypass proxy-enforced restrictions and access internal endpoints intended to be protected (such as administrative pages). The vulnerability did not allow arbitrary file reads but could expose sensitive application routes. This issue only affected systems meeting all of the following conditions: The application used `Rack::Sendfile` with a proxy that supports `x-accel-redirect` (e.g., Nginx); the proxy did **not** always set or remove the `x-sendfile-type` and `x-accel-mapping` headers; and the application exposed an endpoint that returned a body responding to `.to_path`. Users should upgrade to Rack versions 2.2.20, 3.1.18, or 3.2.3, which require explicit configuration to enable `x-accel-redirect`. Alternatively, configure the proxy to always set or strip the header, or in Rails applications, disable sendfile completely.",
  "UbuntuDescription": "",
  "Notes": null,
  "Bugs": [
    "http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1117855"
  ],
  "Priority": "medium",
  "DiscoveredBy": "",
  "AssignedTo": "",
  "Tags": null,
  "Patches": {
    "ruby-rack": {
      "devel": {
        "Status": "needs-triage",
        "Note": ""
      },
      "esm-apps/bionic": {
        "Status": "needs-triage",
        "Note": ""
      },
      "esm-apps/focal": {
        "Status": "needs-triage",
        "Note": ""
      },
      "esm-apps/jammy": {
        "Status": "needs-triage",
        "Note": ""
      },
      "esm-apps/xenial": {
        "Status": "needs-triage",
        "Note": ""
      },
      "esm-infra-legacy/trusty": {
        "Status": "needs-triage",
        "Note": ""
      },
      "jammy": {
        "Status": "needs-triage",
        "Note": ""
      },
      "noble": {
        "Status": "needs-triage",
        "Note": ""
      },
      "plucky": {
        "Status": "needs-triage",
        "Note": ""
      },
      "questing": {
        "Status": "needs-triage",
        "Note": ""
      },
      "upstream": {
        "Status": "needs-triage",
        "Note": ""
      }
    }
  },
  "UpstreamLinks": {}
}