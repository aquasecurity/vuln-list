{
  "PublicDateAtUSN": "0001-01-01T00:00:00Z",
  "CRD": "0001-01-01T00:00:00Z",
  "Candidate": "CVE-2025-47928",
  "PublicDate": "2025-05-15T20:16:00Z",
  "References": [
    "https://www.cve.org/CVERecord?id=CVE-2025-47928",
    "https://github.com/spotipy-dev/spotipy/commit/4f5759dbfb4506c7b6280572a4db1aabc1ac778d",
    "https://github.com/spotipy-dev/spotipy/commit/9dfb7177b8d7bb98a5a6014f8e6436812a47576f",
    "https://github.com/spotipy-dev/spotipy/security/advisories/GHSA-h25v-8c87-rvm8"
  ],
  "Description": "Spotipy is a Python library for the Spotify Web API. As of commit 4f5759dbfb4506c7b6280572a4db1aabc1ac778d, using `pull_request_target` on `.github/workflows/integration_tests.yml` followed by the checking out the head.sha of a forked PR can be exploited by attackers, since untrusted code can be executed having full access to secrets (from the base repo). By exploiting the vulnerability is possible to exfiltrate `GITHUB_TOKEN` and secrets `SPOTIPY_CLIENT_ID`,  `SPOTIPY_CLIENT_SECRET`. In particular `GITHUB_TOKEN` which can be used to completely overtake the repo since the token has content write privileges. The `pull_request_target` in GitHub Actions is a major security concern—especially in public repositories—because it executes untrusted code from a PR, but with the context of the base repository, including access to its secrets. Commit 9dfb7177b8d7bb98a5a6014f8e6436812a47576f reverted the change that caused the issue.",
  "UbuntuDescription": "",
  "Notes": null,
  "Bugs": null,
  "Priority": "medium",
  "DiscoveredBy": "",
  "AssignedTo": "",
  "Tags": null,
  "Patches": {
    "spotipy": {
      "devel": {
        "Status": "needs-triage",
        "Note": ""
      },
      "esm-infra/focal": {
        "Status": "DNE",
        "Note": ""
      },
      "focal": {
        "Status": "DNE",
        "Note": ""
      },
      "jammy": {
        "Status": "DNE",
        "Note": ""
      },
      "noble": {
        "Status": "DNE",
        "Note": ""
      },
      "oracular": {
        "Status": "ignored",
        "Note": "end of life, was needs-triage"
      },
      "plucky": {
        "Status": "needs-triage",
        "Note": ""
      },
      "questing": {
        "Status": "needs-triage",
        "Note": ""
      },
      "upstream": {
        "Status": "needs-triage",
        "Note": ""
      }
    }
  },
  "UpstreamLinks": {}
}