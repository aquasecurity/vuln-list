{
  "PublicDateAtUSN": "0001-01-01T00:00:00Z",
  "CRD": "0001-01-01T00:00:00Z",
  "Candidate": "CVE-2023-40590",
  "PublicDate": "2023-08-28T18:15:00Z",
  "References": [
    "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-40590",
    "https://docs.python.org/3/library/subprocess.html#popen-constructor",
    "https://github.com/gitpython-developers/GitPython/security/advisories/GHSA-wfm5-v35h-vwf4"
  ],
  "Description": "GitPython is a python library used to interact with Git repositories. When resolving a program, Python/Windows look for the current working directory, and after that the PATH environment. GitPython defaults to use the `git` command, if a user runs GitPython from a repo has a `git.exe` or `git` executable, that program will be run instead of the one in the user's `PATH`. This is more of a problem on how Python interacts with Windows systems, Linux and any other OS aren't affected by this. But probably people using GitPython usually run it from the CWD of a repo. An attacker can trick a user to download a repository with a malicious `git` executable, if the user runs/imports GitPython from that directory, it allows the attacker to run any arbitrary commands. There is no fix currently available for windows users, however there are a few mitigations. 1: Default to an absolute path for the git program on Windows, like `C:\\\\Program Files\\\\Git\\\\cmd\\\\git.EXE` (default git path installation). 2: Require users to set the `GIT_PYTHON_GIT_EXECUTABLE` environment variable on Windows systems. 3: Make this problem prominent in the documentation and advise users to never run GitPython from an untrusted repo, or set the `GIT_PYTHON_GIT_EXECUTABLE` env var to an absolute path. 4: Resolve the executable manually by only looking into the `PATH` environment variable.",
  "UbuntuDescription": "",
  "Notes": [
    "alexmurray\u003e Only affects GitPython on Windows"
  ],
  "Bugs": null,
  "Priority": "negligible",
  "DiscoveredBy": "",
  "AssignedTo": "",
  "Patches": {
    "python-git": {
      "bionic": {
        "Status": "ignored",
        "Note": "end of standard support"
      },
      "devel": {
        "Status": "ignored",
        "Note": "only affects GitPython on Windows"
      },
      "esm-apps/bionic": {
        "Status": "ignored",
        "Note": "only affects GitPython on Windows"
      },
      "esm-apps/focal": {
        "Status": "ignored",
        "Note": "only affects GitPython on Windows"
      },
      "esm-apps/jammy": {
        "Status": "ignored",
        "Note": "only affects GitPython on Windows"
      },
      "esm-apps/xenial": {
        "Status": "ignored",
        "Note": "only affects GitPython on Windows"
      },
      "focal": {
        "Status": "ignored",
        "Note": "only affects GitPython on Windows"
      },
      "jammy": {
        "Status": "ignored",
        "Note": "only affects GitPython on Windows"
      },
      "lunar": {
        "Status": "ignored",
        "Note": "only affects GitPython on Windows"
      },
      "trusty": {
        "Status": "ignored",
        "Note": "end of standard support"
      },
      "trusty/esm": {
        "Status": "ignored",
        "Note": "only affects GitPython on Windows"
      },
      "upstream": {
        "Status": "needs-triage",
        "Note": ""
      },
      "xenial": {
        "Status": "ignored",
        "Note": "end of standard support"
      }
    }
  },
  "UpstreamLinks": {}
}