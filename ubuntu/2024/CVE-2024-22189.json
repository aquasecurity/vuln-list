{
  "PublicDateAtUSN": "0001-01-01T00:00:00Z",
  "CRD": "0001-01-01T00:00:00Z",
  "Candidate": "CVE-2024-22189",
  "PublicDate": "2024-04-04T15:15:00Z",
  "References": [
    "https://github.com/quic-go/quic-go/security/advisories/GHSA-c33x-xqrf-c478",
    "https://github.com/quic-go/quic-go/commit/4a99b816ae3ab03ae5449d15aac45147c85ed47a (v0.42.0)",
    "https://seemann.io/posts/2024-03-19-exploiting-quics-connection-id-management",
    "https://github.com/quic-go/quic-go/commit/4a99b816ae3ab03ae5449d15aac45147c85ed47a",
    "https://www.youtube.com/watch?v=JqXtYcZAtIA\u0026t=3683s",
    "https://www.cve.org/CVERecord?id=CVE-2024-22189"
  ],
  "Description": "quic-go is an implementation of the QUIC protocol in Go. Prior to version 0.42.0, an attacker can cause its peer to run out of memory sending a large number of `NEW_CONNECTION_ID` frames that retire old connection IDs. The receiver is supposed to respond to each retirement frame with a `RETIRE_CONNECTION_ID` frame. The attacker can prevent the receiver from sending out (the vast majority of) these `RETIRE_CONNECTION_ID` frames by collapsing the peers congestion window (by selectively acknowledging received packets) and by manipulating the peer's RTT estimate. Version 0.42.0 contains a patch for the issue. No known workarounds are available.",
  "UbuntuDescription": "",
  "Notes": null,
  "Bugs": null,
  "Priority": "medium",
  "DiscoveredBy": "",
  "AssignedTo": "",
  "Patches": {
    "golang-github-lucas-clemente-quic-go": {
      "devel": {
        "Status": "not-affected",
        "Note": "0.38.2-1"
      },
      "esm-apps/jammy": {
        "Status": "needs-triage",
        "Note": ""
      },
      "focal": {
        "Status": "DNE",
        "Note": ""
      },
      "jammy": {
        "Status": "needs-triage",
        "Note": ""
      },
      "mantic": {
        "Status": "needs-triage",
        "Note": ""
      },
      "upstream": {
        "Status": "released",
        "Note": "0.38.2-1"
      }
    }
  },
  "UpstreamLinks": {}
}